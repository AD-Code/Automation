swagger: '2.0'
info:
  version: 'v2.0'
  title: Swagger API
host: any_cvm_ip:9440
basePath: /PrismGateway/services/rest/v2.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /authconfig/:
    get:
      description: Get Auth configuration.
      summary: getAuthConfig
      operationId: AuthconfigGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update Auth configuration.
      summary: updateAuthConfig
      operationId: AuthconfigPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: an AuthConfigDTO instance
        schema:
          $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete Auth config.
      summary: deleteAuthConfig
      operationId: AuthconfigDelete
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify Auth configuration.
      summary: patchAuthConfig
      operationId: AuthconfigPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: an AuthConfigDTO instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.authconfig.authconfigdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/add_auth_types:
    post:
      description: Add Auth types.
      summary: addAuthTypes
      operationId: AuthconfigAddAuthTypesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/auth_types:
    get:
      description: Get Auth types.
      summary: getAuthTypes
      operationId: AuthconfigAuthTypesGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update Auth types.
      summary: setAuthTypes
      operationId: AuthconfigAuthTypesPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/client_auth/:
    get:
      description: Get client authentication status.
      summary: getClientAuth
      operationId: AuthconfigClientAuthGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.clientauthdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update client authentication.
      summary: updateClientAuth
      operationId: AuthconfigClientAuthPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Client auth updates
        schema:
          $ref: '#/definitions/Update.dto.authconfig.clientauthdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.clientauthdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Enable/disable client authentication.
      summary: setClientAuthState
      operationId: AuthconfigClientAuthPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enable client auth
        schema:
          $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.boolean&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.authconfig.cachaindto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/client_auth/{name}:
    delete:
      description: Delete client chain certificate for authentication.
      summary: deleteClientAuthChain
      operationId: AuthconfigClientAuthByNameDelete
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Certificate
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/:
    get:
      description: Get the list of Directories.
      summary: getAllDirectoryConfigs
      operationId: AuthconfigDirectoriesGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.authconfig.directoryconfigdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Edit Directory.
      summary: updateDirectoryConfig
      operationId: AuthconfigDirectoriesPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add Directory.
      summary: addDirectoryConfig
      operationId: AuthconfigDirectoriesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Create.dto.authconfig.directoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify Directory.
      summary: patchDirectoryConfig
      operationId: AuthconfigDirectoriesPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.authconfig.directoryconfigdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/connection_status:
    post:
      description: Test LDAP directory connection status
      summary: testConnection
      operationId: AuthconfigDirectoriesConnectionStatusPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Username, active directory name and password to authenticate
        schema:
          $ref: '#/definitions/Create.dto.authconfig.testdirectoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/{name}:
    get:
      description: Get Directory.
      summary: getDirectoryConfig
      operationId: AuthconfigDirectoriesByNameGet
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Directory
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete Directory.
      summary: deleteDirectoryConfig
      operationId: AuthconfigDirectoriesByNameDelete
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Directory
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/remove_auth_types:
    post:
      description: Remove Auth types.
      summary: deleteAuthTypes
      operationId: AuthconfigRemoveAuthTypesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  Create.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Create.dto.authconfig.cachaindto:
    title: create.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
      name:
        description: The name of the CA Chain certificate.
        type: string
  ConnectionType:
    title: connection_type
    example: LDAP
    x-enum-elements:
    - name: LDAP
      description: ''
    type: string
    enum:
    - LDAP
  DirectoryType:
    title: directory_type
    example: ACTIVE_DIRECTORY
    x-enum-elements:
    - name: ACTIVE_DIRECTORY
      description: ''
    - name: OPEN_LDAP
      description: ''
    type: string
    enum:
    - ACTIVE_DIRECTORY
    - OPEN_LDAP
  GroupSearchType:
    title: group_search_type
    example: RECURSIVE
    x-enum-elements:
    - name: RECURSIVE
      description: ''
    - name: NON_RECURSIVE
      description: ''
    type: string
    enum:
    - RECURSIVE
    - NON_RECURSIVE
  Create.dto.authconfig.directoryconfigdto:
    title: create.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      name:
        description: Name of directory.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Create.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - connection_type
    - directory_type
    - directory_url
    - domain
    - name
  Create.dto.authconfig.openldapconfigdto:
    title: create.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Create.dto.authconfig.testdirectoryconfigdto:
    title: create.dto.authconfig.TestDirectoryConfigDTO
    type: object
    properties:
      directory_name:
        description: Directory name to test LDAP configuration.
        type: string
      password:
        description: Password to test LDAP configuration.
        type: string
      username:
        description: Username to test LDAP configuration.
        type: string
    required:
    - directory_name
    - password
    - username
  Delete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.base.entitycollection&lt;get.dto.authconfig.directoryconfigdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.authconfig.DirectoryConfigDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.errorinfo:
    title: get.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  Get.base.metadata:
    title: get.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  Get.dto.authconfig.authconfigdto:
    title: get.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
  Get.dto.authconfig.autologininfodto:
    title: get.dto.authconfig.AutoLoginInfoDTO
    type: object
    properties:
      enabled:
        description: Whether auto login is enabled or not.
        type: boolean
      service_account_d_t_o:
        $ref: '#/definitions/Get.dto.authconfig.serviceaccountdto'
  Get.dto.authconfig.cachaindto:
    title: get.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
      name:
        description: The name of the CA Chain certificate.
        type: string
  Get.dto.authconfig.clientauthdto:
    title: get.dto.authconfig.ClientAuthDTO
    type: object
    properties:
      auto_login_info:
        $ref: '#/definitions/Get.dto.authconfig.autologininfodto'
      ca_chain_info:
        $ref: '#/definitions/Get.dto.authconfig.cachaindto'
  Get.dto.authconfig.directoryconfigdto:
    title: get.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      name:
        description: Name of directory.
        type: string
      open_ldap_config:
        $ref: '#/definitions/Get.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
  Get.dto.authconfig.openldapconfigdto:
    title: get.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Get.dto.authconfig.serviceaccountdto:
    title: get.dto.authconfig.ServiceAccountDTO
    type: object
    properties:
      directory_config_name:
        description: The name of the Active Directory Config name to use for this service account.
        type: string
      password:
        description: The password to use for the service account.
        type: string
      username:
        description: The username to use with the service account.
        type: string
  Patch.dto.requestdto&lt;patch.dto.authconfig.authconfigdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.authconfig.AuthConfigDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.authconfig.authconfigdto'
      operation:
        description: ''
        type: string
  Patch.dto.requestdto&lt;patch.dto.authconfig.directoryconfigdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.authconfig.DirectoryConfigDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
      operation:
        description: ''
        type: string
  Patch.dto.authconfig.authconfigdto:
    title: patch.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
    required:
    - auth_type_list
  Patch.dto.authconfig.directoryconfigdto:
    title: patch.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      name:
        description: Name of directory.
        type: string
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Patch.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - name
  Patch.dto.authconfig.openldapconfigdto:
    title: patch.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Update.dto.authconfig.authconfigdto:
    title: update.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
    required:
    - auth_type_list
  Update.dto.authconfig.autologininfodto:
    title: update.dto.authconfig.AutoLoginInfoDTO
    type: object
    properties:
      enabled:
        description: Whether auto login is enabled or not.
        type: boolean
      service_account_d_t_o:
        $ref: '#/definitions/Update.dto.authconfig.serviceaccountdto'
  Update.dto.authconfig.cachaindto:
    title: update.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      name:
        description: The name of the CA Chain certificate.
        type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
    required:
    - ca_chain
    - name
  Update.dto.authconfig.clientauthdto:
    title: update.dto.authconfig.ClientAuthDTO
    type: object
    properties:
      auto_login_info:
        $ref: '#/definitions/Update.dto.authconfig.autologininfodto'
      ca_chain_info:
        $ref: '#/definitions/Update.dto.authconfig.cachaindto'
  Update.dto.authconfig.directoryconfigdto:
    title: update.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      name:
        description: Name of directory.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Update.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - connection_type
    - directory_type
    - directory_url
    - domain
    - name
  Update.dto.authconfig.openldapconfigdto:
    title: update.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Update.dto.authconfig.serviceaccountdto:
    title: update.dto.authconfig.ServiceAccountDTO
    type: object
    properties:
      directory_config_name:
        description: The name of the Active Directory Config name to use for this service account.
        type: string
      password:
        description: The password to use for the service account.
        type: string
      username:
        description: The username to use with the service account.
        type: string
