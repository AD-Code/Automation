swagger: '2.0'
info:
  version: 'v2.0'
  title: Swagger API
host: any_cvm_ip:9440
basePath: /PrismGateway/services/rest/v2.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /tasks/list:
    post:
      description: Get a list of tasks.
      summary: getTasks
      operationId: TasksListPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: Request for fetching tasks
        schema:
          $ref: '#/definitions/Create.dto.ergon.taskrequestdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.base.entitycollection&lt;create.dto.ergon.taskdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /tasks/poll:
    post:
      description: Poll a task.
      summary: pollTask
      operationId: TasksPollPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: Task poll request
        schema:
          $ref: '#/definitions/Create.dto.ergon.taskpollrequestdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.ergon.taskpollresponsedto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /tasks/{uuid}:
    get:
      description: Get details of the specified task.
      summary: getTask
      operationId: TasksByUuidGet
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: UUID of the task
      - name: include_subtasks_info
        in: query
        required: false
        type: boolean
        description: Whether to include a detailed information of the immediate subtasks. Default value is false.
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.ergon.taskdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  Create.base.entitycollection&lt;create.dto.ergon.taskdto&gt;:
    title: create.base.EntityCollection&lt;create.dto.ergon.TaskDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Create.dto.ergon.taskdto'
      error_info:
        $ref: '#/definitions/Create.base.errorinfo'
      metadata:
        $ref: '#/definitions/Create.base.metadata'
  Create.base.errorinfo:
    title: create.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  Create.base.metadata:
    title: create.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  Create.dto.acropolis.tasks.metarequestdto:
    title: create.dto.acropolis.tasks.MetaRequestDTO
    type: object
    properties:
      method_name:
        description: The method name for which the task was created
        type: string
    required:
    - method_name
  EntityType:
    title: entity_type
    example: NODE
    x-enum-elements:
    - name: NODE
      description: ''
    - name: VM
      description: ''
    - name: SNAPSHOT
      description: ''
    - name: DISK
      description: ''
    - name: PROTECTION_DOMAIN
      description: ''
    - name: CONSISTENCY_GROUP
      description: ''
    - name: PACKAGE
      description: ''
    - name: REMOTE_SITE
      description: ''
    - name: VOLUME_GROUP
      description: ''
    - name: IMAGE
      description: ''
    - name: CLUSTER
      description: ''
    - name: TAG
      description: ''
    - name: ALERT_CHECK_SCHEMA
      description: ''
    - name: ALERT_CHECK_SCHEMA_OVERRIDE
      description: ''
    - name: FILE_SERVER
      description: ''
    - name: FILE_SERVER_SHARE
      description: ''
    - name: VIRTUAL_NETWORK
      description: ''
    - name: VM_GROUP
      description: ''
    - name: LCM_ENTITY
      description: ''
    - name: MANAGEMENT_SERVER_INFO
      description: ''
    - name: REMOTE_CONNECTION
      description: ''
    - name: AFFINITY_INFO
      description: ''
    - name: REPORT_CONFIG
      description: ''
    - name: REPORT_INSTANCE
      description: ''
    - name: COMMON_REPORT_CONFIG
      description: ''
    - name: SUPPORT_CASE_UPLOAD
      description: ''
    type: string
    enum:
    - NODE
    - VM
    - SNAPSHOT
    - DISK
    - PROTECTION_DOMAIN
    - CONSISTENCY_GROUP
    - PACKAGE
    - REMOTE_SITE
    - VOLUME_GROUP
    - IMAGE
    - CLUSTER
    - TAG
    - ALERT_CHECK_SCHEMA
    - ALERT_CHECK_SCHEMA_OVERRIDE
    - FILE_SERVER
    - FILE_SERVER_SHARE
    - VIRTUAL_NETWORK
    - VM_GROUP
    - LCM_ENTITY
    - MANAGEMENT_SERVER_INFO
    - REMOTE_CONNECTION
    - AFFINITY_INFO
    - REPORT_CONFIG
    - REPORT_INSTANCE
    - COMMON_REPORT_CONFIG
    - SUPPORT_CASE_UPLOAD
  Create.dto.ergon.entityiddto:
    title: create.dto.ergon.EntityIdDTO
    type: object
    properties:
      entity_id:
        description: The entity identifier
        type: string
      entity_name:
        description: Entity name.
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
  Create.dto.ergon.metaresponsedto:
    title: create.dto.ergon.MetaResponseDTO
    type: object
    properties:
      error_code:
        description: An error code indicating whether the RPC was successful.
        type: integer
        format: int32
      error_detail:
        description: An optional additional string describing the error, if the RPC was not successful.
        type: string
  ProgressStatus:
    title: progress_status
    example: QUEUED
    x-enum-elements:
    - name: QUEUED
      description: ''
    - name: RUNNING
      description: ''
    - name: SUCCEEDED
      description: ''
    - name: ABORTED
      description: ''
    - name: FAILED
      description: ''
    type: string
    enum:
    - QUEUED
    - RUNNING
    - SUCCEEDED
    - ABORTED
    - FAILED
  Create.dto.ergon.taskdto:
    title: create.dto.ergon.TaskDTO
    type: object
    properties:
      cluster_uuid:
        description: The UUID of the cluster on which this task was executed.
        type: string
      complete_time_usecs:
        description: Task complete time in microseconds from epoch.
        type: integer
        format: int64
      create_time_usecs:
        description: Task create time in microseconds from epoch.
        type: integer
        format: int64
      display_name:
        description: The name to be displayed for the task.
        type: string
      entity_list:
        description: List of entities that the task impacts.
        type: array
        items:
          $ref: '#/definitions/Create.dto.ergon.entityiddto'
      last_updated_time_usecs:
        description: Last updated time the task in microseconds from epoch.
        type: integer
        format: int64
      message:
        description: The message that describes the task.
        type: string
      meta_request:
        $ref: '#/definitions/Create.dto.acropolis.tasks.metarequestdto'
      meta_response:
        $ref: '#/definitions/Create.dto.ergon.metaresponsedto'
      operation_type:
        description: The operation for which the task was created.
        type: string
      parent_task_uuid:
        description: The UUID of the parent task.
        type: string
      percentage_complete:
        description: The task completion status in percentage.
        type: integer
        format: int32
      progress_status:
        $ref: '#/definitions/ProgressStatus'
      start_time_usecs:
        description: Task start time in microseconds from epoch.
        type: integer
        format: int64
      subtask_info_list:
        description: The list subtasks with their detailed information.
        type: array
        items:
          $ref: '#/definitions/Create.dto.ergon.taskdto'
      subtask_uuid_list:
        description: The list of UUIDs of the subtasks.
        type: array
        items:
          type: string
      uuid:
        description: The version 4 UUID of the task.
        type: string
  Create.dto.ergon.taskpollrequestdto:
    title: create.dto.ergon.TaskPollRequestDTO
    type: object
    properties:
      completed_tasks:
        description: The list of UUIDs of tasks to be polled for completion.
        type: array
        items:
          type: string
      timeout_interval:
        description: The maximum amount of time to wait, in seconds, before the poll request times out.
        type: integer
        format: int64
  Create.dto.ergon.taskpollresponsedto:
    title: create.dto.ergon.TaskPollResponseDTO
    type: object
    properties:
      completed_tasks_info:
        description: The list of completed tasks.
        type: array
        items:
          $ref: '#/definitions/Create.dto.ergon.taskdto'
      timed_out:
        description: Whether the task poll request timed out.
        type: boolean
  Create.dto.ergon.taskrequestdto:
    title: create.dto.ergon.TaskRequestDTO
    type: object
    properties:
      cluster_uuid_list:
        description: The list of UUIDs of clusters for which the tasks need to be returned
        type: array
        items:
          type: string
      count:
        description: Specifies the number of parent-level tasks that are returned
        type: integer
        format: int32
      cut_off_time_usecs:
        description: The returned tasks shall have the completion time after this cut-off time. This is only applicable when 'include_completed' is set to 'true'
        type: integer
        format: int64
      entity_list:
        description: The returned tasks belong to these entities
        type: array
        items:
          $ref: '#/definitions/Create.dto.ergon.entityiddto'
      include_completed:
        description: Whether the completed tasks need to be included in the response. By default, this is set to 'false'
        type: boolean
      include_subtasks_info:
        description: Whether to include the immediate subtask instances for a parent task
        type: boolean
      operation_type_list:
        description: The returned tasks belong to these entity operations
        type: array
        items:
          type: string
  Get.dto.acropolis.tasks.metarequestdto:
    title: get.dto.acropolis.tasks.MetaRequestDTO
    type: object
    properties:
      method_name:
        description: The method name for which the task was created
        type: string
  Get.dto.ergon.entityiddto:
    title: get.dto.ergon.EntityIdDTO
    type: object
    properties:
      entity_id:
        description: The entity identifier
        type: string
      entity_name:
        description: Entity name.
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
  Get.dto.ergon.metaresponsedto:
    title: get.dto.ergon.MetaResponseDTO
    type: object
    properties:
      error_code:
        description: An error code indicating whether the RPC was successful.
        type: integer
        format: int32
      error_detail:
        description: An optional additional string describing the error, if the RPC was not successful.
        type: string
  Get.dto.ergon.taskdto:
    title: get.dto.ergon.TaskDTO
    type: object
    properties:
      cluster_uuid:
        description: The UUID of the cluster on which this task was executed.
        type: string
      complete_time_usecs:
        description: Task complete time in microseconds from epoch.
        type: integer
        format: int64
      create_time_usecs:
        description: Task create time in microseconds from epoch.
        type: integer
        format: int64
      display_name:
        description: The name to be displayed for the task.
        type: string
      entity_list:
        description: List of entities that the task impacts.
        type: array
        items:
          $ref: '#/definitions/Get.dto.ergon.entityiddto'
      last_updated_time_usecs:
        description: Last updated time the task in microseconds from epoch.
        type: integer
        format: int64
      message:
        description: The message that describes the task.
        type: string
      meta_request:
        $ref: '#/definitions/Get.dto.acropolis.tasks.metarequestdto'
      meta_response:
        $ref: '#/definitions/Get.dto.ergon.metaresponsedto'
      operation_type:
        description: The operation for which the task was created.
        type: string
      parent_task_uuid:
        description: The UUID of the parent task.
        type: string
      percentage_complete:
        description: The task completion status in percentage.
        type: integer
        format: int32
      progress_status:
        $ref: '#/definitions/ProgressStatus'
      start_time_usecs:
        description: Task start time in microseconds from epoch.
        type: integer
        format: int64
      subtask_info_list:
        description: The list subtasks with their detailed information.
        type: array
        items:
          $ref: '#/definitions/Get.dto.ergon.taskdto'
      subtask_uuid_list:
        description: The list of UUIDs of the subtasks.
        type: array
        items:
          type: string
      uuid:
        description: The version 4 UUID of the task.
        type: string
