swagger: '2.0'
info:
  version: 'v2.0'
  title: Swagger API
host: any_cvm_ip:9440
basePath: /api/nutanix/v2.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /networks/:
    get:
      description: Get list of networks.
      summary: getNetworks
      operationId: NetworksGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.acropolis.networkconfigdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Create a network.
      summary: createNetwork
      operationId: NetworksPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Network config info
        schema:
          $ref: '#/definitions/Create.dto.acropolis.networkconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.acropolis.returnvaluedto$networkiddto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /networks/{uuid}:
    get:
      description: Get info of a network.
      summary: getNetwork
      operationId: NetworksByUuidGet
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: UUID of the network
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.acropolis.networkconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update a network.
      summary: updateNetwork
      operationId: NetworksByUuidPut
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: UUID of the network
      - name: body
        in: body
        required: true
        description: Updated network spec
        schema:
          $ref: '#/definitions/Update.dto.acropolis.networkconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete a network.
      summary: deleteNetwork
      operationId: NetworksByUuidDelete
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: Id of the network
      - name: logical_timestamp
        in: query
        required: false
        type: integer
        format: int32
        description: Logical timestamp for synchronized delete
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /networks/{uuid}/addresses:
    get:
      description: Get IP addresses assigned in the specified managed network.
      summary: getNetworkAddressTable
      operationId: NetworksAddressesByUuidGet
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: Id of the network
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.acropolis.addressassignmentdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /networks/{uuid}/blacklist_ip/{ipaddress}:
    delete:
      description: Remove an IP address from the managed network blacklist.
      summary: unreserveIP
      operationId: NetworksBlacklistIpByUuidAndIpaddressDelete
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: Id of the network
      - name: ipaddress
        in: path
        required: true
        type: string
        description: IP address
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /networks/{uuid}/blacklist_ip_addresses:
    post:
      description: Blacklist an IP address from managed network.
      summary: reserveIP
      operationId: NetworksBlacklistIpAddressesByUuidPost
      produces:
      - application/json
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: Id of the network
      - name: body
        in: body
        required: true
        description: IP addresses to reserve Comma-separated list of IP addresses.
        schema:
          $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.string&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  Create.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Create.dto.primitivedto&lt;java.lang.string&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.String&gt;
    type: object
    properties:
      value:
        description: ''
        type: string
  Create.dto.acropolis.ipconfigdto:
    title: create.dto.acropolis.IpConfigDTO
    type: object
    properties:
      network_address:
        description: The network address
        type: string
      prefix_length:
        description: Length of network prefix in number of bits
        type: integer
        format: int32
      default_gateway:
        description: Default gateway
        type: string
      dhcp_options:
        $ref: '#/definitions/Create.dto.acropolis.ipconfigdto$dhcpoptions'
      dhcp_server_address:
        description: The IP address of the DHCP server
        type: string
      pool:
        description: List of IP address pools. Each IP address pool has a start and end address
        type: array
        items:
          $ref: '#/definitions/Create.dto.acropolis.ipconfigdto$ippool'
    required:
    - network_address
    - prefix_length
  Create.dto.acropolis.ipconfigdto$dhcpoptions:
    title: create.dto.acropolis.IpConfigDTO$DhcpOptions
    type: object
    properties:
      boot_file_name:
        description: The filename that is to be downloaded from the TFTP server
        type: string
      domain_name:
        description: Domain name.
        type: string
      domain_name_servers:
        description: Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.
        type: string
      domain_search:
        description: Domains to search in the network. Use space as the delimiter.
        type: string
      tftp_server_name:
        description: The FQDN or IP address of the TFTP server from which the file is to be downloaded.
        type: string
  Create.dto.acropolis.ipconfigdto$ippool:
    title: create.dto.acropolis.IpConfigDTO$IpPool
    type: object
    properties:
      range:
        description: Ip pool range with start address and end address. The expected format is "startIpAddress endIpAddress"
        type: string
    required:
    - range
  Create.dto.acropolis.networkconfigdto:
    title: create.dto.acropolis.NetworkConfigDTO
    type: object
    properties:
      vlan_id:
        description: VLAN ID of the bridged network.
        type: integer
        format: int32
      annotation:
        description: The annotation of the network
        type: string
      ip_config:
        $ref: '#/definitions/Create.dto.acropolis.ipconfigdto'
      logical_timestamp:
        description: Logical timestamp of the network configuration that may may be provided for consistency.
        type: integer
        format: int64
      name:
        description: The name of the network
        type: string
      uuid:
        description: The UUID of the network
        type: string
      vswitch_name:
        description: The name of the vswitch
        type: string
    required:
    - vlan_id
  Create.dto.acropolis.returnvaluedto$networkiddto:
    title: create.dto.acropolis.ReturnValueDTO$NetworkIdDTO
    type: object
    properties:
      network_uuid:
        description: UUID of the network.
        type: string
  Delete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.base.entitycollection&lt;get.dto.acropolis.addressassignmentdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.acropolis.addressassignmentdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.acropolis.networkconfigdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.acropolis.networkconfigdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.errorinfo:
    title: get.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  Get.base.metadata:
    title: get.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  Type:
    title: type
    example: VM
    x-enum-elements:
    - name: VM
      description: ''
    - name: RESERVATION
      description: ''
    - name: INFRASTRUCTURE
      description: ''
    type: string
    enum:
    - VM
    - RESERVATION
    - INFRASTRUCTURE
  Get.dto.acropolis.addressassignmentdto:
    title: get.dto.acropolis.AddressAssignmentDTO
    type: object
    properties:
      deleted:
        description: Indicates that the assignment has been marked for deletion. If this is set to true, then this assignment is no longer valid and is waiting to be garbage collected.
        type: boolean
      entity_uuid:
        description: The version 4 UUID of the entity which owns this  address assignment
        type: string
      ip_address:
        description: The IP address that has been assigned.
        type: string
      mac_address:
        description: The MAC address that the IP address belongs to
        type: string
      network_uuid:
        description: The version 4 UUID of the network. This should not be set in the assignment table.
        type: string
      overlay_network_id:
        description: VNI of the overlay network.
        type: integer
        format: int32
      type:
        $ref: '#/definitions/Type'
  Get.dto.acropolis.ipconfigdto:
    title: get.dto.acropolis.IpConfigDTO
    type: object
    properties:
      default_gateway:
        description: Default gateway
        type: string
      dhcp_options:
        $ref: '#/definitions/Get.dto.acropolis.ipconfigdto$dhcpoptions'
      dhcp_server_address:
        description: The IP address of the DHCP server
        type: string
      network_address:
        description: The network address
        type: string
      pool:
        description: List of IP address pools. Each IP address pool has a start and end address
        type: array
        items:
          $ref: '#/definitions/Get.dto.acropolis.ipconfigdto$ippool'
      prefix_length:
        description: Length of network prefix in number of bits
        type: integer
        format: int32
  Get.dto.acropolis.ipconfigdto$dhcpoptions:
    title: get.dto.acropolis.IpConfigDTO$DhcpOptions
    type: object
    properties:
      boot_file_name:
        description: The filename that is to be downloaded from the TFTP server
        type: string
      domain_name:
        description: Domain name.
        type: string
      domain_name_servers:
        description: Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.
        type: string
      domain_search:
        description: Domains to search in the network. Use space as the delimiter.
        type: string
      tftp_server_name:
        description: The FQDN or IP address of the TFTP server from which the file is to be downloaded.
        type: string
  Get.dto.acropolis.ipconfigdto$ippool:
    title: get.dto.acropolis.IpConfigDTO$IpPool
    type: object
    properties:
      range:
        description: Ip pool range with start address and end address. The expected format is "startIpAddress endIpAddress"
        type: string
  NetworkType:
    title: network_type
    example: EXTERNAL
    x-enum-elements:
    - name: EXTERNAL
      description: ''
    - name: INTERNAL
      description: ''
    type: string
    enum:
    - EXTERNAL
    - INTERNAL
  Get.dto.acropolis.networkconfigdto:
    title: get.dto.acropolis.NetworkConfigDTO
    type: object
    properties:
      annotation:
        description: The annotation of the network
        type: string
      ip_config:
        $ref: '#/definitions/Get.dto.acropolis.ipconfigdto'
      logical_timestamp:
        description: Logical timestamp of the network configuration that may may be provided for consistency.
        type: integer
        format: int64
      name:
        description: The name of the network
        type: string
      network_type:
        $ref: '#/definitions/NetworkType'
      uuid:
        description: The UUID of the network
        type: string
      vlan_id:
        description: VLAN ID of the bridged network.
        type: integer
        format: int32
      vswitch_name:
        description: The name of the vswitch
        type: string
  Update.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Update.dto.acropolis.ipconfigdto:
    title: update.dto.acropolis.IpConfigDTO
    type: object
    properties:
      network_address:
        description: The network address
        type: string
      prefix_length:
        description: Length of network prefix in number of bits
        type: integer
        format: int32
      default_gateway:
        description: Default gateway
        type: string
      dhcp_options:
        $ref: '#/definitions/Update.dto.acropolis.ipconfigdto$dhcpoptions'
      dhcp_server_address:
        description: The IP address of the DHCP server
        type: string
      pool:
        description: List of IP address pools. Each IP address pool has a start and end address
        type: array
        items:
          $ref: '#/definitions/Update.dto.acropolis.ipconfigdto$ippool'
    required:
    - network_address
    - prefix_length
  Update.dto.acropolis.ipconfigdto$dhcpoptions:
    title: update.dto.acropolis.IpConfigDTO$DhcpOptions
    type: object
    properties:
      boot_file_name:
        description: The filename that is to be downloaded from the TFTP server
        type: string
      domain_name:
        description: Domain name.
        type: string
      domain_name_servers:
        description: Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.
        type: string
      domain_search:
        description: Domains to search in the network. Use space as the delimiter.
        type: string
      tftp_server_name:
        description: The FQDN or IP address of the TFTP server from which the file is to be downloaded.
        type: string
  Update.dto.acropolis.ipconfigdto$ippool:
    title: update.dto.acropolis.IpConfigDTO$IpPool
    type: object
    properties:
      range:
        description: Ip pool range with start address and end address. The expected format is "startIpAddress endIpAddress"
        type: string
    required:
    - range
  Update.dto.acropolis.networkconfigdto:
    title: update.dto.acropolis.NetworkConfigDTO
    type: object
    properties:
      annotation:
        description: The annotation of the network
        type: string
      ip_config:
        $ref: '#/definitions/Update.dto.acropolis.ipconfigdto'
      logical_timestamp:
        description: Logical timestamp of the network configuration that may may be provided for consistency.
        type: integer
        format: int64
      name:
        description: The name of the network
        type: string
      uuid:
        description: The UUID of the network
        type: string
      vlan_id:
        description: VLAN ID of the bridged network.
        type: integer
        format: int32
      vswitch_name:
        description: The name of the vswitch
        type: string
