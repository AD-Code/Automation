swagger: '2.0'
info:
  version: 'v2.0'
  title: Swagger API
host: any_cvm_ip:9440
basePath: /PrismGateway/services/rest/v2.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /snmp/:
    get:
      description: Get SNMP configuration.
      summary: getSnmpInfo
      operationId: SnmpGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.appliance.configuration.snmpinfodto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/add_transports:
    post:
      description: Add SNMP Transports.
      summary: addSnmpTransports
      operationId: SnmpAddTransportsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of SNMP Transports
        schema:
          type: array
          items:
            $ref: '#/definitions/Create.dto.appliance.configuration.snmptransportdto'
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Create.dto.appliance.configuration.snmptransportdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/remove_transports:
    post:
      description: Remove SNMP Transports.
      summary: deleteSnmpTransports
      operationId: SnmpRemoveTransportsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of SNMP Transports
        schema:
          type: array
          items:
            $ref: '#/definitions/Create.dto.appliance.configuration.snmptransportdto'
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Create.dto.appliance.configuration.snmptransportdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/status:
    get:
      description: Get the SNMP status.
      summary: getSnmpStatus
      operationId: SnmpStatusGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Enable/Disable SNMP configuration.
      summary: setSnmpStatus
      operationId: SnmpStatusPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enable SNMP Status
        schema:
          $ref: '#/definitions/Update.dto.primitivedto&lt;java.lang.boolean&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.appliance.configuration.snmpinfodto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/transports:
    get:
      description: Get the list of SNMP Transports.
      summary: getSnmpTransports
      operationId: SnmpTransportsGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Get.dto.appliance.configuration.snmptransportdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/traps:
    get:
      description: Get the list of SNMP Traps.
      summary: getSnmpTraps
      operationId: SnmpTrapsGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.appliance.configuration.snmptrapdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Edit SNMP Trap.
      summary: editSnmpTrap
      operationId: SnmpTrapsPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP Trap instance
        schema:
          $ref: '#/definitions/Update.dto.appliance.configuration.snmptrapdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.appliance.configuration.snmptrapdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add SNMP Trap.
      summary: addSnmpTrap
      operationId: SnmpTrapsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP Trap instance
        schema:
          $ref: '#/definitions/Create.dto.appliance.configuration.snmptrapdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.appliance.configuration.snmptrapdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify SNMP Trap.
      summary: patchSnmpTrap
      operationId: SnmpTrapsPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP Trap instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.appliance.configuration.snmptrapdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.appliance.configuration.snmptrapdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/traps/{trap_address}:
    get:
      description: Get SNMP Trap.
      summary: getSnmpTrap
      operationId: SnmpTrapsByTrapAddressGet
      produces:
      - application/json
      parameters:
      - name: trap_address
        in: path
        required: true
        type: string
        description: Address of the SNMP Trap
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.appliance.configuration.snmptrapdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete SNMP Trap.
      summary: deleteSnmpTrap
      operationId: SnmpTrapsByTrapAddressDelete
      produces:
      - application/json
      parameters:
      - name: trap_address
        in: path
        required: true
        type: string
        description: Address of the SNMP Trap
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/users:
    get:
      description: Get the list of SNMP Users.
      summary: getSnmpUsers
      operationId: SnmpUsersGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.appliance.configuration.snmpuserdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Edit SNMP User.
      summary: editSnmpUser
      operationId: SnmpUsersPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP User instance
        schema:
          $ref: '#/definitions/Update.dto.appliance.configuration.snmpuserdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.appliance.configuration.snmpuserdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add SNMP User.
      summary: addSnmpUser
      operationId: SnmpUsersPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP User instance
        schema:
          $ref: '#/definitions/Create.dto.appliance.configuration.snmpuserdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.appliance.configuration.snmpuserdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify SNMP User.
      summary: patchSnmpUser
      operationId: SnmpUsersPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: An SNMP User instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.appliance.configuration.snmpuserdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.appliance.configuration.snmpuserdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /snmp/users/{username}:
    get:
      description: Get SNMP User.
      summary: getSnmpUser
      operationId: SnmpUsersByUsernameGet
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
        description: Name of the SNMP User
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.appliance.configuration.snmpuserdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete SNMP User.
      summary: deleteSnmpUser
      operationId: SnmpUsersByUsernameDelete
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        required: true
        type: string
        description: Name of the SNMP User
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  TransportProtocol:
    title: transport_protocol
    example: TCP
    x-enum-elements:
    - name: TCP
      description: ''
    - name: TCP_6
      description: ''
    - name: UDP
      description: ''
    - name: UDP_6
      description: ''
    type: string
    enum:
    - TCP
    - TCP_6
    - UDP
    - UDP_6
  Create.dto.appliance.configuration.snmptransportdto:
    title: create.dto.appliance.configuration.SnmpTransportDTO
    type: object
    properties:
      port:
        description: Port number.
        type: integer
        format: int32
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
    required:
    - port
    - transport_protocol
  Version:
    title: version
    example: SNMPv2C
    x-enum-elements:
    - name: SNMPv2C
      description: ''
    - name: SNMPv3
      description: ''
    type: string
    enum:
    - SNMPv2C
    - SNMPv3
  Create.dto.appliance.configuration.snmptrapdto:
    title: create.dto.appliance.configuration.SnmpTrapDTO
    type: object
    properties:
      trap_address:
        description: Trap address.
        type: string
      community_string:
        description: ''
        type: string
      engine_id:
        description: ''
        type: string
      inform:
        description: ''
        type: boolean
      log:
        $ref: '#/definitions/Org.slf4j.logger'
      port:
        description: Port number.
        type: integer
        format: int32
      receiver_name:
        description: ''
        type: string
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
      trap_username:
        description: Trap Username.
        type: string
      version:
        $ref: '#/definitions/Version'
    required:
    - trap_address
  AuthType:
    title: auth_type
    example: SHA
    x-enum-elements:
    - name: SHA
      description: ''
    type: string
    enum:
    - SHA
  PrivType:
    title: priv_type
    example: AES
    x-enum-elements:
    - name: AES
      description: ''
    type: string
    enum:
    - AES
  Create.dto.appliance.configuration.snmpuserdto:
    title: create.dto.appliance.configuration.SnmpUserDTO
    type: object
    properties:
      auth_key:
        description: Authentication key.
        type: string
      auth_type:
        $ref: '#/definitions/AuthType'
      username:
        description: User name.
        type: string
      priv_key:
        description: ''
        type: string
      priv_type:
        $ref: '#/definitions/PrivType'
    required:
    - auth_key
    - auth_type
    - username
  Delete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.base.entitycollection&lt;get.dto.appliance.configuration.snmptrapdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpTrapDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.snmptrapdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.appliance.configuration.snmpuserdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.appliance.configuration.SnmpUserDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.snmpuserdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.errorinfo:
    title: get.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  Get.base.metadata:
    title: get.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  Get.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: get.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.dto.appliance.configuration.snmpinfodto:
    title: get.dto.appliance.configuration.SnmpInfoDTO
    type: object
    properties:
      enabled:
        description: ''
        type: boolean
      snmp_transports:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.snmptransportdto'
      snmp_traps:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.snmptrapdto'
      snmp_users:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.snmpuserdto'
  Get.dto.appliance.configuration.snmptransportdto:
    title: get.dto.appliance.configuration.SnmpTransportDTO
    type: object
    properties:
      port:
        description: Port number.
        type: integer
        format: int32
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
  Get.dto.appliance.configuration.snmptrapdto:
    title: get.dto.appliance.configuration.SnmpTrapDTO
    type: object
    properties:
      community_string:
        description: ''
        type: string
      engine_id:
        description: ''
        type: string
      inform:
        description: ''
        type: boolean
      log:
        $ref: '#/definitions/Org.slf4j.logger'
      port:
        description: Port number.
        type: integer
        format: int32
      receiver_name:
        description: ''
        type: string
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
      trap_address:
        description: Trap address.
        type: string
      trap_username:
        description: Trap Username.
        type: string
      version:
        $ref: '#/definitions/Version'
  Get.dto.appliance.configuration.snmpuserdto:
    title: get.dto.appliance.configuration.SnmpUserDTO
    type: object
    properties:
      auth_key:
        description: Authentication key.
        type: string
      auth_type:
        $ref: '#/definitions/AuthType'
      priv_key:
        description: ''
        type: string
      priv_type:
        $ref: '#/definitions/PrivType'
      username:
        description: User name.
        type: string
  Org.slf4j.logger:
    title: org.slf4j.Logger
    type: object
    properties:
      r_o_o_t__l_o_g_g_e_r__n_a_m_e:
        description: ''
        type: string
  Patch.dto.requestdto&lt;patch.dto.appliance.configuration.snmptrapdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpTrapDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.appliance.configuration.snmptrapdto'
      operation:
        description: ''
        type: string
  Patch.dto.requestdto&lt;patch.dto.appliance.configuration.snmpuserdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.SnmpUserDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.appliance.configuration.snmpuserdto'
      operation:
        description: ''
        type: string
  Patch.dto.appliance.configuration.snmptrapdto:
    title: patch.dto.appliance.configuration.SnmpTrapDTO
    type: object
    properties:
      trap_address:
        description: Trap address.
        type: string
      community_string:
        description: ''
        type: string
      engine_id:
        description: ''
        type: string
      inform:
        description: ''
        type: boolean
      log:
        $ref: '#/definitions/Org.slf4j.logger'
      port:
        description: Port number.
        type: integer
        format: int32
      receiver_name:
        description: ''
        type: string
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
      trap_username:
        description: Trap Username.
        type: string
      version:
        $ref: '#/definitions/Version'
    required:
    - trap_address
  Patch.dto.appliance.configuration.snmpuserdto:
    title: patch.dto.appliance.configuration.SnmpUserDTO
    type: object
    properties:
      auth_key:
        description: Authentication key.
        type: string
      auth_type:
        $ref: '#/definitions/AuthType'
      username:
        description: User name.
        type: string
      priv_key:
        description: ''
        type: string
      priv_type:
        $ref: '#/definitions/PrivType'
    required:
    - auth_key
    - auth_type
    - username
  Update.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Update.dto.appliance.configuration.snmpinfodto:
    title: update.dto.appliance.configuration.SnmpInfoDTO
    type: object
    properties:
      enabled:
        description: ''
        type: boolean
      snmp_transports:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Update.dto.appliance.configuration.snmptransportdto'
      snmp_traps:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Update.dto.appliance.configuration.snmptrapdto'
      snmp_users:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Update.dto.appliance.configuration.snmpuserdto'
  Update.dto.appliance.configuration.snmptransportdto:
    title: update.dto.appliance.configuration.SnmpTransportDTO
    type: object
    properties:
      port:
        description: Port number.
        type: integer
        format: int32
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
    required:
    - port
    - transport_protocol
  Update.dto.appliance.configuration.snmptrapdto:
    title: update.dto.appliance.configuration.SnmpTrapDTO
    type: object
    properties:
      trap_address:
        description: Trap address.
        type: string
      community_string:
        description: ''
        type: string
      engine_id:
        description: ''
        type: string
      inform:
        description: ''
        type: boolean
      log:
        $ref: '#/definitions/Org.slf4j.logger'
      port:
        description: Port number.
        type: integer
        format: int32
      receiver_name:
        description: ''
        type: string
      transport_protocol:
        $ref: '#/definitions/TransportProtocol'
      trap_username:
        description: Trap Username.
        type: string
      version:
        $ref: '#/definitions/Version'
    required:
    - trap_address
  Update.dto.appliance.configuration.snmpuserdto:
    title: update.dto.appliance.configuration.SnmpUserDTO
    type: object
    properties:
      auth_key:
        description: Authentication key.
        type: string
      auth_type:
        $ref: '#/definitions/AuthType'
      username:
        description: User name.
        type: string
      priv_key:
        description: ''
        type: string
      priv_type:
        $ref: '#/definitions/PrivType'
    required:
    - auth_key
    - auth_type
    - username
