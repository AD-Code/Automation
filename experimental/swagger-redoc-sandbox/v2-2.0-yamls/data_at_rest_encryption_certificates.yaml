swagger: '2.0'
info:
  version: 'v2.0'
  title: Swagger API
host: any_cvm_ip:9440
basePath: /PrismGateway/services/rest/v2.0
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /data_at_rest_encryption_certificates/ca_certificates/:
    get:
      description: Get all CA certificates.
      summary: getCACertificates
      operationId: DataAtRestEncryptionCertificatesCaCertificatesGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Get.dto.appliance.configuration.certificateauthoritydto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add trusted CA certificate.
      summary: addCACertificate
      operationId: DataAtRestEncryptionCertificatesCaCertificatesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Certificate file
        schema:
          $ref: '#/definitions/Org.apache.cxf.jaxrs.ext.multipart.attachment'
      - name: name
        in: query
        required: true
        type: string
        description: name
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.appliance.configuration.certificateauthoritydto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/ca_certificates/{name}:
    delete:
      description: Delete Certificate Authority.
      summary: deleteCACertificate
      operationId: DataAtRestEncryptionCertificatesCaCertificatesByNameDelete
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Certificate Authority name
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/certification_information:
    put:
      description: Update the Certification information.
      summary: updateCertificationInformation
      operationId: DataAtRestEncryptionCertificatesCertificationInformationPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: false
        description: CertificationInformation instance
        schema:
          $ref: '#/definitions/Update.dto.appliance.configuration.certificationinformationdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.appliance.configuration.certificationinformationdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/certification_information/:
    get:
      description: Get Certification information.
      summary: getCertificationInformation
      operationId: DataAtRestEncryptionCertificatesCertificationInformationGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.appliance.configuration.certificationinformationdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/csr_for_discovered_node:
    get:
      description: Download CSR files
      summary: downloadCSRFromDiscoveredNode
      operationId: DataAtRestEncryptionCertificatesCsrForDiscoveredNodeGet
      produces:
      - application/json
      parameters:
      - name: node_ip
        in: query
        required: true
        type: string
        description: node ip address
      responses:
        200:
          description: ''
          schema:
            type: object
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/csrs:
    get:
      description: Download CSR files
      summary: downloadCSRs
      operationId: DataAtRestEncryptionCertificatesCsrsGet
      produces:
      - application/json
      parameters:
      - name: node_uuid_list
        in: query
        required: false
        type: array
        uniqueItems: false
        items:
          type: string
        description: List of node ids
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Javax.ws.rs.core.response'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/svm_certificate/:
    delete:
      description: Delete certificate.
      summary: deleteCertificate
      operationId: DataAtRestEncryptionCertificatesSvmCertificateDelete
      produces:
      - application/json
      parameters:
      - name: node_uuid
        in: query
        required: true
        type: string
        description: Id of the node on which certificate is installed
      - name: server_name
        in: query
        required: true
        type: string
        description: Key management Server name for which certificate is installed
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/svm_certificates/:
    post:
      description: Add certificates.
      summary: uploadCertificates
      operationId: DataAtRestEncryptionCertificatesSvmCertificatesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Certificate file
        schema:
          $ref: '#/definitions/Org.apache.cxf.jaxrs.ext.multipart.attachment'
      - name: key_management_server_name
        in: query
        required: true
        type: string
        description: Key Management Server name
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.string&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/svm_certificates/multi_file:
    post:
      description: Add certificates.
      summary: uploadCertificatesViaMultiFile
      operationId: DataAtRestEncryptionCertificatesSvmCertificatesMultiFilePost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Certificate list
        schema:
          $ref: '#/definitions/Create.dto.appliance.configuration.multifilecertificateuploaddto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.string&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /data_at_rest_encryption_certificates/svm_certificates/replace:
    post:
      description: Replace expired svm certificate.
      summary: replaceExpiredCertificate
      operationId: DataAtRestEncryptionCertificatesSvmCertificatesReplacePost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Certificate file
        schema:
          $ref: '#/definitions/Org.apache.cxf.jaxrs.ext.multipart.attachment'
      - name: key_management_server_name
        in: query
        required: true
        type: string
        description: Key Management Server name
      - name: node_uuid
        in: query
        required: true
        type: string
        description: ServiceVmId of the node
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.string&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  Create.dto.primitivedto&lt;java.lang.string&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.String&gt;
    type: object
    properties:
      value:
        description: ''
        type: string
  Create.dto.appliance.configuration.certificateauthoritydto:
    title: create.dto.appliance.configuration.CertificateAuthorityDTO
    type: object
    properties:
      certificate:
        description: ''
        type: string
      name:
        description: ''
        type: string
  Create.dto.appliance.configuration.multifilecertificateuploaddto:
    title: create.dto.appliance.configuration.MultiFileCertificateUploadDTO
    type: object
    properties:
      certificate_map:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      key_management_server_name:
        description: ''
        type: string
  Delete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.dto.appliance.configuration.certificateauthoritydto:
    title: get.dto.appliance.configuration.CertificateAuthorityDTO
    type: object
    properties:
      certificate:
        description: ''
        type: string
      name:
        description: ''
        type: string
  Get.dto.appliance.configuration.certificationinformationdto:
    title: get.dto.appliance.configuration.CertificationInformationDTO
    type: object
    properties:
      city:
        description: ''
        type: string
      country_code:
        description: ''
        type: string
      domain_name:
        description: ''
        type: string
      email_address:
        description: ''
        type: string
      organization_name:
        description: ''
        type: string
      organizational_unit_list:
        description: ''
        type: array
        items:
          type: string
      state:
        description: ''
        type: string
  Java.lang.object:
    title: java.lang.Object
    type: object
  Java.util.map&lt;java.lang.string,Java.lang.string&gt;:
    title: java.util.Map&lt;java.lang.String, java.lang.String&gt;
    type: object
  Javax.ws.rs.core.multivaluedmap&lt;java.lang.string,Java.lang.string&gt;:
    title: javax.ws.rs.core.MultivaluedMap&lt;java.lang.String, java.lang.String&gt;
    type: object
  Javax.ws.rs.core.response:
    title: javax.ws.rs.core.Response
    type: object
  Javax.ws.rs.ext.providers:
    title: javax.ws.rs.ext.Providers
    type: object
  Org.apache.cxf.jaxrs.ext.multipart.attachment:
    title: org.apache.cxf.jaxrs.ext.multipart.Attachment
    type: object
    properties:
      headers:
        $ref: '#/definitions/Javax.ws.rs.core.multivaluedmap&lt;java.lang.string,Java.lang.string&gt;'
      object:
        $ref: '#/definitions/Java.lang.object'
      providers:
        $ref: '#/definitions/Javax.ws.rs.ext.providers'
  Update.dto.appliance.configuration.certificationinformationdto:
    title: update.dto.appliance.configuration.CertificationInformationDTO
    type: object
    properties:
      city:
        description: ''
        type: string
      country_code:
        description: ''
        type: string
      domain_name:
        description: ''
        type: string
      email_address:
        description: ''
        type: string
      organization_name:
        description: ''
        type: string
      organizational_unit_list:
        description: ''
        type: array
        items:
          type: string
      state:
        description: ''
        type: string
