swagger: '2.0'
info:
  title: Nutanix Legacy Procedural API
  #TODO description:
    #TODO - tune up this section (tables, validate this is correct, etc)
    #TODO - morph philosophy to more accurate reflect current state and declarative formatting
    #TODO - validate rule set is fully accurate (bounce off of super linter validation sets?)
  description: |
    # Introduction
    ## Overview
    * TODO: add v2 overview
      
    ## Terminology
    * TODO: add v2 terminology

    ## Rules  
    * TODO: add v2 rules

    ## Operatations (TODO?)
    * TODO: add v2 operations

  termsOfService: 'https://www.nutanix.com/support-terms'
    #TODO - validate with DS that we're aligned fully, and proper do-dads are where they need to be
  contact:
    name: Developer Support
    url: 'https://developer.nutanix.com'
  license:
    name: Nutanix End User License Agreement
    url: 'https://www.nutanix.com/eula'
    #TODO - validate with VH that we're aligned fully, and proper do-dads are where they need to be
  version: '2.0'
  #x-logo:
    #TODO - figure out logo / branding - this is likely a much larger thing, but wanted to annotate here anyways
    #url: Nutanix22.png
    #backgroundColor: '#FFFFFF'
basePath: /PrismGateway/services/rest/v2.0
schemes:
  - https
consumes:
  #TODO - validate MIME types in Prism Gateway
  - application/json
produces:
  - application/json
paths:
  /alerts/:
    get:
      description: Get the list of Alerts.
      summary: getAlerts
      operationId: AlertsGet
      produces:
      - application/json
      parameters:
      - name: start_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: Start time in microseconds
      - name: end_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: End time in microseconds
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of alerts
      - name: resolved
        in: query
        required: false
        type: boolean
        description: Alerts which have been resolved
      - name: auto_resolved
        in: query
        required: false
        type: boolean
        description: Alerts which have been auto resolved
      - name: acknowledged
        in: query
        required: false
        type: boolean
        description: Alerts which have been acknowledged
      - name: severity
        in: query
        required: false
        type: string
        description: Alert severities
      - name: alert_type_uuid
        in: query
        required: false
        type: string
        description: Alert type ids
      - name: page
        in: query
        required: false
        type: integer
        format: int32
        description: Page number
      - name: entity_type
        in: query
        required: false
        type: string
        description: Entity type
      - name: entity_ids
        in: query
        required: false
        type: string
        description: Entity ids
      - name: impact_types
        in: query
        required: false
        type: string
        description: Impact Types
      - name: classification
        in: query
        required: false
        type: string
        description: Classification
      - name: alert_ids
        in: query
        required: false
        type: string
        description: Alert ids
      - name: get_causes
        in: query
        required: false
        type: boolean
        description: Get causes
      - name: detailed_info
        in: query
        required: false
        type: boolean
        description: Get detailed info
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.alerts.alertdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/acknowledge:
    post:
      description: Acknowledge Alerts.
      summary: acknowledgeAlerts
      operationId: AlertsAcknowledgePost
      produces:
      - application/json
      parameters:
      - name: start_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: Start time in microseconds
      - name: end_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: End time in microseconds
      - name: severity
        in: query
        required: false
        type: string
        description: Severity
      - name: impact_types
        in: query
        required: false
        type: string
        description: Impact Type of alerts
      - name: classifications
        in: query
        required: false
        type: string
        description: Classification of alerts
      - name: entity_type
        in: query
        required: false
        type: string
        description: Entity Type
      - name: entity_type_ids
        in: query
        required: false
        type: string
        description: Entity Type Ids
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of alerts
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.alerts.managealertsdto'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/configuration:
    get:
      description: Get the Alert configuration.
      summary: getAlertConfig
      operationId: AlertsConfigurationGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.appliance.configuration.alertconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update the Alert configuration.
      summary: updateAlertConfig
      operationId: AlertsConfigurationPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: new Alert configuration.
        schema:
          $ref: '#/definitions/Update.dto.appliance.configuration.alertconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.appliance.configuration.alertconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify the Alert configuration.
      summary: patchAlertConfig
      operationId: AlertsConfigurationPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: new Alert configuration.
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.appliance.configuration.alertconfigdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.appliance.configuration.alertconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/policies:
    get:
      description: Get all User Defined Alert Policies
      summary: getAlertPolicies
      operationId: AlertsPoliciesGet
      produces:
      - application/json
      parameters:
      - name: entity_type
        in: query
        required: false
        type: string
        description: Entity type
      - name: entity_ids
        in: query
        required: false
        type: string
        description: Entity ids
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.alerts.alertpolicydto&gt;'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update a User Defined Alert Policy
      summary: updatePolicy
      operationId: AlertsPoliciesPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Alert Policy with updated configurations
        schema:
          $ref: '#/definitions/Update.dto.alerts.alertpolicydto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.alerts.alertpolicydto'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Create a new User Defined Alert Policy
      summary: createPolicy
      operationId: AlertsPoliciesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: New User Defined Alert Policy
        schema:
          $ref: '#/definitions/Create.dto.alerts.alertpolicydto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.alerts.alertpolicydto'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/policies/{policy_id}:
    get:
      description: Get the User Defined Alert Policy
      summary: getAlertPolicy
      operationId: AlertsPoliciesByPolicyIdGet
      produces:
      - application/json
      parameters:
      - name: policy_id
        in: path
        required: true
        type: string
        description: Alert Policy ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.alerts.alertpolicydto'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete the specified User Defined Alert Policy
      summary: deleteAlertPolicy
      operationId: AlertsPoliciesByPolicyIdDelete
      produces:
      - application/json
      parameters:
      - name: policy_id
        in: path
        required: true
        type: string
        description: Alert Policy ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/resolve:
    post:
      description: Resolve Alerts.
      summary: resolveAlerts
      operationId: AlertsResolvePost
      produces:
      - application/json
      parameters:
      - name: start_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: Start time in microseconds
      - name: end_time_in_usecs
        in: query
        required: false
        type: integer
        format: int32
        description: End time in microseconds
      - name: severity
        in: query
        required: false
        type: string
        description: Severity
      - name: impact_types
        in: query
        required: false
        type: string
        description: Impact Type of alerts
      - name: classifications
        in: query
        required: false
        type: string
        description: Classifications of alerts
      - name: entity_type
        in: query
        required: false
        type: string
        description: Entity Type
      - name: entity_type_ids
        in: query
        required: false
        type: string
        description: Entity Type Ids
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of alerts
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.alerts.managealertsdto'
          examples: {}
        default:
          description: Any internal exception while performing this operation
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/{id}/acknowledge:
    post:
      description: Acknowledge Alert.
      summary: acknowledgeAlert
      operationId: AlertsAcknowledgeByIdPost
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Alert Id
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.alerts.resolveacknowledgealertdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /alerts/{id}/resolve:
    post:
      description: Resolve Alert.
      summary: resolveAlert
      operationId: AlertsResolveByIdPost
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Alert Id
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.alerts.resolveacknowledgealertdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/:
    get:
      description: Get Auth configuration.
      summary: getAuthConfig
      operationId: AuthconfigGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update Auth configuration.
      summary: updateAuthConfig
      operationId: AuthconfigPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: an AuthConfigDTO instance
        schema:
          $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete Auth config.
      summary: deleteAuthConfig
      operationId: AuthconfigDelete
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify Auth configuration.
      summary: patchAuthConfig
      operationId: AuthconfigPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: an AuthConfigDTO instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.authconfig.authconfigdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/add_auth_types:
    post:
      description: Add Auth types.
      summary: addAuthTypes
      operationId: AuthconfigAddAuthTypesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/auth_types:
    get:
      description: Get Auth types.
      summary: getAuthTypes
      operationId: AuthconfigAuthTypesGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update Auth types.
      summary: setAuthTypes
      operationId: AuthconfigAuthTypesPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.authconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/client_auth/:
    get:
      description: Get client authentication status.
      summary: getClientAuth
      operationId: AuthconfigClientAuthGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.clientauthdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update client authentication.
      summary: updateClientAuth
      operationId: AuthconfigClientAuthPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Client auth updates
        schema:
          $ref: '#/definitions/Update.dto.authconfig.clientauthdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.clientauthdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Enable/disable client authentication.
      summary: setClientAuthState
      operationId: AuthconfigClientAuthPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enable client auth
        schema:
          $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.boolean&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.authconfig.cachaindto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/client_auth/{name}:
    delete:
      description: Delete client chain certificate for authentication.
      summary: deleteClientAuthChain
      operationId: AuthconfigClientAuthByNameDelete
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Certificate
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/:
    get:
      description: Get the list of Directories.
      summary: getAllDirectoryConfigs
      operationId: AuthconfigDirectoriesGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.authconfig.directoryconfigdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Edit Directory.
      summary: updateDirectoryConfig
      operationId: AuthconfigDirectoriesPut
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add Directory.
      summary: addDirectoryConfig
      operationId: AuthconfigDirectoriesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Create.dto.authconfig.directoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    patch:
      description: Modify Directory.
      summary: patchDirectoryConfig
      operationId: AuthconfigDirectoriesPatch
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: A Directory instance
        schema:
          $ref: '#/definitions/Patch.dto.requestdto&lt;patch.dto.authconfig.directoryconfigdto&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/connection_status:
    post:
      description: Test LDAP directory connection status
      summary: testConnection
      operationId: AuthconfigDirectoriesConnectionStatusPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Username, active directory name and password to authenticate
        schema:
          $ref: '#/definitions/Create.dto.authconfig.testdirectoryconfigdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/directories/{name}:
    get:
      description: Get Directory.
      summary: getDirectoryConfig
      operationId: AuthconfigDirectoriesByNameGet
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Directory
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete Directory.
      summary: deleteDirectoryConfig
      operationId: AuthconfigDirectoriesByNameDelete
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name of the Directory
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /authconfig/remove_auth_types:
    post:
      description: Remove Auth types.
      summary: deleteAuthTypes
      operationId: AuthconfigRemoveAuthTypesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: List of Auth types
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              type: string
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/credentials:
    get:
      description: Get cloud credentials.
      summary: getCredentials
      operationId: CloudCredentialsByCloudTypeGet
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of cloud credentials to retrieve
      - name: filter_criteria
        in: query
        required: false
        type: string
        description: Filter criteria
      - name: sort_criteria
        in: query
        required: false
        type: string
        description: Sort criteria
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.dr.cloudcredentialsdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Add a cloud credential.
      summary: addCredentials
      operationId: CloudCredentialsByCloudTypePost
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: body
        in: body
        required: true
        description: An instance of CloudCredentialsDTO
        schema:
          $ref: '#/definitions/Create.dto.dr.cloudcredentialsdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.dr.cloudcredentialsdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Remove all cloud credentials.
      summary: removeAllCredentials
      operationId: CloudCredentialsByCloudTypeDelete
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/credentials/{name}:
    delete:
      description: Remove a cloud credential.
      summary: removeCredentials
      operationId: CloudCredentialsByCloudTypeAndNameDelete
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: name
        in: path
        required: true
        type: string
        description: Name of the credential
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Delete.dto.primitivedto&lt;java.lang.boolean&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/cvms:
    get:
      description: Get a list of CVMs.
      summary: getCvms
      operationId: CloudCvmsByCloudTypeGet
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: region
        in: query
        required: true
        type: string
        description: Region
      - name: credential_name
        in: query
        required: false
        type: string
        description: Name of the credential
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of cloud cvms to retrieve
      - name: filter_criteria
        in: query
        required: false
        type: string
        description: Filter criteria
      - name: sort_criteria
        in: query
        required: false
        type: string
        description: Sort criteria
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.dr.cloudcvmdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/default-credentials:
    post:
      description: Set a default cloud credential to use.
      summary: setDefaultCredentials
      operationId: CloudDefaultCredentialsByCloudTypePost
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: body
        in: body
        required: true
        description: Name of the credential
        schema:
          $ref: '#/definitions/Create.dto.primitivedto&lt;java.lang.string&gt;'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.dr.cloudcredentialsdto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/deploy_remote_site:
    post:
      description: Deploy a cloud CVM and create a remote site.
      summary: deployRemoteSite
      operationId: CloudDeployRemoteSiteByCloudTypePost
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: body
        in: body
        required: false
        description: An instance of DeployCloudRemoteSiteRequestDTO
        schema:
          $ref: '#/definitions/Create.dto.dr.deploycloudremotesiterequestdto'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Create.dto.dr.remotesitedto'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/images:
    get:
      description: Get a list of CVM images.
      summary: getCvmImages
      operationId: CloudImagesByCloudTypeGet
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: credential_name
        in: query
        required: false
        type: string
        description: Name of the credential
      - name: region
        in: query
        required: false
        type: string
        description: Region of the cvm image
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of cloud images to retrieve
      - name: filter_criteria
        in: query
        required: false
        type: string
        description: Filter criteria
      - name: sort_criteria
        in: query
        required: false
        type: string
        description: Sort criteria
      - name: list_local_only
        in: query
        required: false
        type: boolean
        description: Is list local, to be specified only for Azure cloud type
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.dr.cloudcvmimagedto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /cloud/{cloud_type}/subnets:
    get:
      description: Get a list of subnets.
      summary: getSubnets
      operationId: CloudSubnetsByCloudTypeGet
      produces:
      - application/json
      parameters:
      - name: cloud_type
        in: path
        required: true
        type: string
        description: Cloud type
      - name: region
        in: query
        required: true
        type: string
        description: Region
      - name: credential_name
        in: query
        required: false
        type: string
        description: Name of the credential
      - name: count
        in: query
        required: false
        type: integer
        format: int32
        description: Maximum number of subnets to retrieve
      - name: filter_criteria
        in: query
        required: false
        type: string
        description: Filter criteria
      - name: sort_criteria
        in: query
        required: false
        type: string
        description: Sort criteria
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.dr.subnetdto&gt;'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false



definitions:
  Create.dto.alerts.alertpolicydto:
    title: create.dto.alerts.AlertPolicyDTO
    type: object
    properties:
      auto_resolve:
        description: Whether the auto resolve feature is enabled for this policy
        type: boolean
      enabled:
        description: Enable/Disable flag for the policy
        type: boolean
      filter:
        description: Filter expression for the policy in FIQL
        type: string
      title:
        description: Title of the Policy
        type: string
      trigger_conditions:
        description: Trigger conditions for the policy. If there are multiple Trigger conditions, they will be ANDed.
        type: array
        items:
          $ref: '#/definitions/Create.dto.alerts.alertpolicydto$triggercondition'
      created_by:
        description: Username of the user who created the Policy
        type: string
      description:
        description: Description of the Policy.
        type: string
      error_on_conflict:
        description: Error if conflicting Alert Policies are found
        type: boolean
      id:
        description: ID of the Policy
        type: string
      impact_types:
        description: Impact Types that are to be associated with the resulting Alert
        type: array
        items:
          type: string
      last_updated_timestamp_in_usecs:
        description: Last updated timestamp of the Policy. Will be used as the CAS value during updates.
        type: integer
        format: int64
      policies_to_override:
        description: List of Alert Policy Ids to override
        type: array
        items:
          type: string
      related_policies:
        description: List of Alert Policies that are related to the entities of the current policy
        type: array
        items:
          $ref: '#/definitions/Create.dto.alerts.alertpolicydto$relatedpolicies'
      trigger_wait_period_in_secs:
        description: Duration to wait before triggering the alert when the specified condition is met
        type: integer
        format: int64
    required:
    - auto_resolve
    - enabled
    - filter
    - title
    - trigger_conditions
  Create.dto.alerts.alertpolicydto$relatedpolicies:
    title: create.dto.alerts.AlertPolicyDTO$RelatedPolicies
    type: object
    properties:
      entity_uuid:
        description: Entity UUID
        type: string
      policy_ids:
        description: Policy Ids that are related to the specified entity
        type: array
        items:
          type: string
  ConditionType:
    title: condition_type
    example: STATIC_THRESHOLD
    x-enum-elements:
    - name: STATIC_THRESHOLD
      description: ''
    - name: ANOMALY
      description: ''
    - name: SAFETY_ZONE
      description: ''
    type: string
    enum:
    - STATIC_THRESHOLD
    - ANOMALY
    - SAFETY_ZONE
  SeverityLevel:
    title: severity_level
    example: CRITICAL
    x-enum-elements:
    - name: CRITICAL
      description: ''
    - name: WARNING
      description: ''
    - name: INFO
      description: ''
    - name: AUDIT
      description: ''
    type: string
    enum:
    - CRITICAL
    - WARNING
    - INFO
    - AUDIT
  Create.dto.alerts.alertpolicydto$triggercondition:
    title: create.dto.alerts.AlertPolicyDTO$TriggerCondition
    type: object
    properties:
      condition:
        description: Conditions to be met to trigger the alert. Conditions are expressed in FIQL
        type: string
      condition_type:
        $ref: '#/definitions/ConditionType'
      severity_level:
        $ref: '#/definitions/SeverityLevel'
    required:
    - condition
    - condition_type
    - severity_level
  Create.dto.alerts.managealertsdto:
    title: create.dto.alerts.ManageAlertsDTO
    type: object
    properties:
      alert_status_list:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Create.dto.alerts.resolveacknowledgealertdto'
      num_failed_updates:
        description: ''
        type: integer
        format: int32
      num_successful_updates:
        description: ''
        type: integer
        format: int32
  Create.dto.alerts.resolveacknowledgealertdto:
    title: create.dto.alerts.ResolveAcknowledgeAlertDTO
    type: object
    properties:
      id:
        description: ''
        type: string
      message:
        description: ''
        type: string
      successful:
        description: ''
        type: boolean
  Delete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.base.entitycollection&lt;get.dto.resultcontentdescriptor&gt;:
    title: get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.resultcontentdescriptor'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.alerts.alertdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.alerts.alertpolicydto&gt;:
    title: get.base.EntityCollection&lt;get.dto.alerts.AlertPolicyDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertpolicydto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.errorinfo:
    title: get.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  Get.base.metadata:
    title: get.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  EntityType:
    title: entity_type
    example: CLUSTER
    x-enum-elements:
    - name: CLUSTER
      description: ''
    - name: HARDWARE
      description: ''
    - name: STORAGE
      description: ''
    - name: BACKUP
      description: ''
    - name: DR
      description: ''
    - name: LICENSE
      description: ''
    - name: DISK
      description: ''
    - name: STORAGE_TIER
      description: ''
    - name: HOST
      description: ''
    - name: NODE
      description: ''
    - name: MANAGEMENT_SERVER
      description: ''
    - name: MANAGEMENT_SERVER_INFO
      description: ''
    - name: VM
      description: ''
    - name: SERVICE_VM
      description: ''
    - name: VDISK
      description: ''
    - name: VIRTUAL_DISK
      description: ''
    - name: STORAGE_POOL
      description: ''
    - name: CONTAINER
      description: ''
    - name: STORAGE_CONTAINER
      description: ''
    - name: VZONE
      description: ''
    - name: SNAPSHOT
      description: ''
    - name: FAST_CLONE
      description: ''
    - name: RSYSLOG_SERVER
      description: ''
    - name: KEY_MANAGEMENT_SERVER
      description: ''
    - name: CERTIFICATE
      description: ''
    - name: HTTP_PROXY
      description: ''
    - name: SNMP_TRAP
      description: ''
    - name: SNMP_USER
      description: ''
    - name: REMOTE_SITE
      description: ''
    - name: CLOUD_CREDENTIALS
      description: ''
    - name: PROTECTION_DOMAIN
      description: ''
    - name: CONSISTENCY_GROUP
      description: ''
    - name: REPLICATION
      description: ''
    - name: REPLICATION_LINK
      description: ''
    - name: SYNC_REPLICATION
      description: ''
    - name: VSTORE
      description: ''
    - name: NETWORK_SWITCH_INTERFACE
      description: ''
    - name: NETWORK_SWITCH
      description: ''
    - name: VIRTUAL_NIC
      description: ''
    - name: VMKERNEL_NIC
      description: ''
    - name: HOST_NIC
      description: ''
    - name: NIC_TEAM
      description: ''
    - name: VIRTUAL_NETWORK
      description: ''
    - name: VIRTUAL_SWITCH
      description: ''
    - name: HOST_GPU
      description: ''
    - name: VIRTUAL_GPU
      description: ''
    - name: TAG
      description: ''
    - name: COMMENT
      description: ''
    - name: TASK
      description: ''
    - name: IMAGE
      description: ''
    - name: IMAGE_INFO
      description: ''
    - name: ISCSI_CLIENT
      description: ''
    - name: VOLUME_GROUP
      description: ''
    - name: VOLUME_DISK
      description: ''
    - name: VM_DISK
      description: ''
    - name: FILE_SERVER
      description: ''
    - name: FS_PARTNER_SERVER
      description: ''
    - name: CVM
      description: ''
    - name: NVM
      description: ''
    - name: FILE_SERVER_SHARE
      description: ''
    - name: ALERT_CAUSE
      description: ''
    - name: ALERT_CHECK_SCHEMA
      description: ''
    - name: ALERT_CHECK_SCHEMA_OVERRIDE
      description: ''
    - name: INTER_CLUSTER_DATA_TRANSFER_INDICATOR
      description: ''
    - name: RACKABLE_UNIT
      description: ''
    - name: DIRECTORY_CONFIG
      description: ''
    - name: HEALTH_CHECK
      description: ''
    - name: NETWORK_SNMP_PROFILE
      description: ''
    - name: ALERT
      description: ''
    - name: SCHEDULE
      description: ''
    - name: BANDWIDTH_POLICY
      description: ''
    - name: FILE_GROUP
      description: ''
    - name: NETWORK_MAPPING
      description: ''
    - name: PROGRESS_MONITOR
      description: ''
    - name: LCM_ENTITY
      description: ''
    - name: LCM_AVAILABLE_VERSION
      description: ''
    - name: CAPACITY_SCENARIO
      description: ''
    - name: NCC_ERROR_CODES
      description: ''
    - name: RESOURCE_CONSUMPTION
      description: ''
    - name: REPORT_CONFIG
      description: ''
    - name: REPORT_INSTANCE
      description: ''
    - name: COMMON_REPORT_CONFIG
      description: ''
    - name: REMOTE_CONNECTION
      description: ''
    type: string
    enum:
    - CLUSTER
    - HARDWARE
    - STORAGE
    - BACKUP
    - DR
    - LICENSE
    - DISK
    - STORAGE_TIER
    - HOST
    - NODE
    - MANAGEMENT_SERVER
    - MANAGEMENT_SERVER_INFO
    - VM
    - SERVICE_VM
    - VDISK
    - VIRTUAL_DISK
    - STORAGE_POOL
    - CONTAINER
    - STORAGE_CONTAINER
    - VZONE
    - SNAPSHOT
    - FAST_CLONE
    - RSYSLOG_SERVER
    - KEY_MANAGEMENT_SERVER
    - CERTIFICATE
    - HTTP_PROXY
    - SNMP_TRAP
    - SNMP_USER
    - REMOTE_SITE
    - CLOUD_CREDENTIALS
    - PROTECTION_DOMAIN
    - CONSISTENCY_GROUP
    - REPLICATION
    - REPLICATION_LINK
    - SYNC_REPLICATION
    - VSTORE
    - NETWORK_SWITCH_INTERFACE
    - NETWORK_SWITCH
    - VIRTUAL_NIC
    - VMKERNEL_NIC
    - HOST_NIC
    - NIC_TEAM
    - VIRTUAL_NETWORK
    - VIRTUAL_SWITCH
    - HOST_GPU
    - VIRTUAL_GPU
    - TAG
    - COMMENT
    - TASK
    - IMAGE
    - IMAGE_INFO
    - ISCSI_CLIENT
    - VOLUME_GROUP
    - VOLUME_DISK
    - VM_DISK
    - FILE_SERVER
    - FS_PARTNER_SERVER
    - CVM
    - NVM
    - FILE_SERVER_SHARE
    - ALERT_CAUSE
    - ALERT_CHECK_SCHEMA
    - ALERT_CHECK_SCHEMA_OVERRIDE
    - INTER_CLUSTER_DATA_TRANSFER_INDICATOR
    - RACKABLE_UNIT
    - DIRECTORY_CONFIG
    - HEALTH_CHECK
    - NETWORK_SNMP_PROFILE
    - ALERT
    - SCHEDULE
    - BANDWIDTH_POLICY
    - FILE_GROUP
    - NETWORK_MAPPING
    - PROGRESS_MONITOR
    - LCM_ENTITY
    - LCM_AVAILABLE_VERSION
    - CAPACITY_SCENARIO
    - NCC_ERROR_CODES
    - RESOURCE_CONSUMPTION
    - REPORT_CONFIG
    - REPORT_INSTANCE
    - COMMON_REPORT_CONFIG
    - REMOTE_CONNECTION
  Get.dto.entitymetadata:
    title: get.dto.EntityMetadata
    type: object
    properties:
      additional_fields:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      cluster_uuid:
        description: ''
        type: string
      context_hint_field:
        description: ''
        type: string
      context_hint_value:
        description: ''
        type: string
      entity_id:
        description: ''
        type: string
      entity_name:
        description: ''
        type: string
      entity_type:
        $ref: '#/definitions/EntityType'
  Get.dto.resultcontentdescriptor:
    title: get.dto.ResultContentDescriptor
    type: object
    properties:
      metadata:
        $ref: '#/definitions/Get.dto.resultmetadata'
      perspectives:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.resultcontentdescriptor$perspective'
  Format:
    title: format
    example: TABLE
    x-enum-elements:
    - name: TABLE
      description: ''
    - name: BAR_CHART
      description: ''
    - name: PIE_CHART
      description: ''
    - name: TIME_SERIES
      description: ''
    - name: KEY_VALUE
      description: ''
    - name: COUNT
      description: ''
    - name: HEALTH_SUMMARY
      description: ''
    - name: ALERT_INFO
      description: ''
    - name: CAPACITY
      description: ''
    - name: OTHER
      description: ''
    type: string
    enum:
    - TABLE
    - BAR_CHART
    - PIE_CHART
    - TIME_SERIES
    - KEY_VALUE
    - COUNT
    - HEALTH_SUMMARY
    - ALERT_INFO
    - CAPACITY
    - OTHER
  Get.dto.resultcontentdescriptor$perspective:
    title: get.dto.ResultContentDescriptor$Perspective
    type: object
    properties:
      format:
        $ref: '#/definitions/Format'
      metadata:
        $ref: '#/definitions/Get.dto.resultmetadata'
      query:
        description: ''
        type: string
      result:
        description: ''
        type: string
      type:
        description: ''
        type: string
  Get.dto.resultmetadata:
    title: get.dto.ResultMetadata
    type: object
    properties:
      entity_type:
        $ref: '#/definitions/EntityType'
      filters:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.resultmetadata$filter'
      instances:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.entitymetadata'
      title:
        description: ''
        type: string
  Get.dto.resultmetadata$filter:
    title: get.dto.ResultMetadata$Filter
    type: object
    properties:
      display_for_rhs:
        description: ''
        type: string
      lhs:
        description: ''
        type: string
      operator:
        description: Operator for the filter.
        type: string
      rhs:
        description: ''
        type: string
  Get.dto.alerts.alertcausedto:
    title: get.dto.alerts.AlertCauseDTO
    type: object
    properties:
      actions:
        description: Possible actions to resolve this alert
        type: string
      additional_links:
        description: Additional links
        type: string
      alert_namespace:
        description: Namespace this alert belongs to
        type: string
      cause:
        description: Detailed description
        type: string
      chart_queries:
        $ref: '#/definitions/Get.base.entitycollection&lt;get.dto.resultcontentdescriptor&gt;'
      details:
        description: Symptoms for this cause
        type: string
      has_global_details:
        description: Whether the alert has global details or not
        type: boolean
      id:
        description: Cause Id
        type: string
      num_resolved_count:
        description: Number of times this cause has resolved the alert
        type: integer
        format: int64
      parent_cause_id:
        description: Id of the alert/cause this is a possible cause for
        type: string
      title:
        description: Short description
        type: string
      troubleshooting_steps:
        description: Steps to determine whether this is the cause.
        type: string
  Get.dto.alerts.alertdto:
    title: get.dto.alerts.AlertDTO
    type: object
    properties:
      acknowledged:
        description: ''
        type: boolean
      acknowledged_by_username:
        description: ''
        type: string
      acknowledged_time_stamp_in_usecs:
        description: ''
        type: integer
        format: int64
      affected_entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertdto$affectedentity'
      alert_details:
        $ref: '#/definitions/Get.dto.alerts.alertdto$alertdetailsdto'
      alert_title:
        description: ''
        type: string
      alert_type_uuid:
        description: ''
        type: string
      auto_resolved:
        description: ''
        type: boolean
      check_id:
        description: ''
        type: string
      classifications:
        description: ''
        type: array
        items:
          type: string
      cluster_uuid:
        description: ''
        type: string
      context_types:
        description: ''
        type: array
        items:
          type: string
      context_values:
        description: ''
        type: array
        items:
          type: string
      created_time_stamp_in_usecs:
        description: ''
        type: integer
        format: int64
      detailed_message:
        description: ''
        type: string
      id:
        description: ''
        type: string
      impact_types:
        description: ''
        type: array
        items:
          type: string
      last_occurrence_time_stamp_in_usecs:
        description: ''
        type: integer
        format: int64
      message:
        description: ''
        type: string
      node_uuid:
        description: ''
        type: string
      originating_cluster_uuid:
        description: ''
        type: string
      possible_causes:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertcausedto'
      resolved:
        description: ''
        type: boolean
      resolved_by_username:
        description: ''
        type: string
      resolved_time_stamp_in_usecs:
        description: ''
        type: integer
        format: int64
      service_v_m_id:
        description: ''
        type: string
      severity:
        description: This field describes the severity of the alert.
        type: string
      user_defined:
        description: ''
        type: boolean
  Get.dto.alerts.alertdto$affectedentity:
    title: get.dto.alerts.AlertDTO$AffectedEntity
    type: object
    properties:
      entity_name:
        description: ''
        type: string
      entity_type:
        description: ''
        type: string
      entity_type_display_name:
        description: ''
        type: string
      id:
        description: ''
        type: string
      uuid:
        description: ''
        type: string
  Get.dto.alerts.alertdto$alertdetailsdto:
    title: get.dto.alerts.AlertDTO$AlertDetailsDTO
    type: object
    properties:
      metric_details:
        description: List of metric details associated with the alert
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertdto$metricdetails'
      severity_trails:
        description: List that contains severity level change details
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertdto$severitytrail'
  DataType:
    title: data_type
    example: LONG
    x-enum-elements:
    - name: LONG
      description: ''
    - name: DOUBLE
      description: ''
    - name: BOOLEAN
      description: ''
    - name: STRING
      description: ''
    type: string
    enum:
    - LONG
    - DOUBLE
    - BOOLEAN
    - STRING
  Get.dto.alerts.alertdto$metricdetails:
    title: get.dto.alerts.AlertDTO$MetricDetails
    type: object
    properties:
      comparison_operator:
        description: Comparison Operator to be applied for teh values.
        type: string
      condition_type:
        $ref: '#/definitions/ConditionType'
      data_type:
        $ref: '#/definitions/DataType'
      entity_id:
        description: UUID of the entity
        type: string
      entity_type:
        description: Entity Type
        type: string
      metric_display_name:
        description: Display name of the metric
        type: string
      metric_name:
        description: Name of the metric
        type: string
      metric_value_details:
        description: List of metric values at different instances of time in the alert lifecycle
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertdto$metricvaluedetails'
      unit:
        description: Unit of the metric value.
        type: string
  Get.dto.alerts.alertdto$metricvaluedetails:
    title: get.dto.alerts.AlertDTO$MetricValueDetails
    type: object
    properties:
      metric_threshold_value:
        description: Threshold value of the metric that was specified in the policy at that given time.
        type: string
      metric_value:
        description: Actual value of the metric at that given time.
        type: string
      state_change_time_stamp_in_usecs:
        description: Time at which the alert's state change occurred.
        type: integer
        format: int64
  Get.dto.alerts.alertdto$severitytrail:
    title: get.dto.alerts.AlertDTO$SeverityTrail
    type: object
    properties:
      severity:
        description: Severity level of the alert. Can be INFO, WARNING or CRITICAL
        type: string
      severity_change_timestamp_in_usecs:
        description: Time at which the severity level change occurred
        type: integer
        format: int64
  Get.dto.alerts.alertpolicydto:
    title: get.dto.alerts.AlertPolicyDTO
    type: object
    properties:
      auto_resolve:
        description: Whether the auto resolve feature is enabled for this policy
        type: boolean
      created_by:
        description: Username of the user who created the Policy
        type: string
      description:
        description: Description of the Policy.
        type: string
      enabled:
        description: Enable/Disable flag for the policy
        type: boolean
      error_on_conflict:
        description: Error if conflicting Alert Policies are found
        type: boolean
      filter:
        description: Filter expression for the policy in FIQL
        type: string
      id:
        description: ID of the Policy
        type: string
      impact_types:
        description: Impact Types that are to be associated with the resulting Alert
        type: array
        items:
          type: string
      last_updated_timestamp_in_usecs:
        description: Last updated timestamp of the Policy. Will be used as the CAS value during updates.
        type: integer
        format: int64
      policies_to_override:
        description: List of Alert Policy Ids to override
        type: array
        items:
          type: string
      related_policies:
        description: List of Alert Policies that are related to the entities of the current policy
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertpolicydto$relatedpolicies'
      title:
        description: Title of the Policy
        type: string
      trigger_conditions:
        description: Trigger conditions for the policy. If there are multiple Trigger conditions, they will be ANDed.
        type: array
        items:
          $ref: '#/definitions/Get.dto.alerts.alertpolicydto$triggercondition'
      trigger_wait_period_in_secs:
        description: Duration to wait before triggering the alert when the specified condition is met
        type: integer
        format: int64
  Get.dto.alerts.alertpolicydto$relatedpolicies:
    title: get.dto.alerts.AlertPolicyDTO$RelatedPolicies
    type: object
    properties:
      entity_uuid:
        description: Entity UUID
        type: string
      policy_ids:
        description: Policy Ids that are related to the specified entity
        type: array
        items:
          type: string
  Get.dto.alerts.alertpolicydto$triggercondition:
    title: get.dto.alerts.AlertPolicyDTO$TriggerCondition
    type: object
    properties:
      condition:
        description: Conditions to be met to trigger the alert. Conditions are expressed in FIQL
        type: string
      condition_type:
        $ref: '#/definitions/ConditionType'
      severity_level:
        $ref: '#/definitions/SeverityLevel'
  Get.dto.appliance.configuration.alertconfigdto:
    title: get.dto.appliance.configuration.AlertConfigDTO
    description: DTO representing the configuration of alerts
    type: object
    properties:
      default_nutanix_email:
        description: Default Nutanix email to which Alert emails would be sent
        type: string
      email_config_rules:
        description: Rules for Email Configuration.
        type: array
        items:
          $ref: '#/definitions/Get.dto.appliance.configuration.alertconfigdto$emailconfigurationrule'
      email_contact_list:
        description: List of email contacts.
        type: array
        items:
          type: string
      email_template:
        $ref: '#/definitions/Get.dto.appliance.configuration.alertconfigdto$emailtemplate'
      enable:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_default_nutanix_email:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_email_digest:
        description: Whether Alert email digest should be enabled.
        type: boolean
      smtp_server:
        $ref: '#/definitions/Get.dto.appliance.configuration.smtpserverdto'
      tunnel_details:
        $ref: '#/definitions/Get.dto.appliance.configuration.remotetunneldetailsdto'
  Get.dto.appliance.configuration.alertconfigdto$emailconfigurationrule:
    title: get.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule
    type: object
    properties:
      cluster_uuids:
        description: Cluster Uuids to which this rule applies to.
        type: array
        items:
          type: string
      impact_types:
        description: Impact types to which this rule applies to.
        type: array
        items:
          type: string
      include_global_email_contact_list:
        description: Whether to include global email contact list.
        type: boolean
      match_phrases:
        description: List of phrases to match the alert with.
        type: array
        items:
          type: string
      recipients:
        description: List of recipients who will receive emails.
        type: array
        items:
          type: string
      severities:
        description: Severity to which this rule applies to.
        type: array
        items:
          type: string
  Get.dto.appliance.configuration.alertconfigdto$emailtemplate:
    title: get.dto.appliance.configuration.AlertConfigDTO$EmailTemplate
    type: object
    properties:
      body_suffix:
        description: Email Body Suffix.
        type: string
      subject_prefix:
        description: Email Subject Prefix.
        type: string
  Get.dto.appliance.configuration.httpproxydto:
    title: get.dto.appliance.configuration.HttpProxyDTO
    description: http-proxy
    type: object
    properties:
      address:
        description: Address of the proxy
        type: string
      name:
        description: Proxy name.
        type: string
      password:
        description: Password for proxy authentication
        type: string
      port:
        description: Port on which proxy is binding
        type: integer
        format: int32
      proxy_types:
        description: Proxy types to send applicable traffic
        type: array
        items:
          type: string
      username:
        description: Username for proxy authentication
        type: string
  Get.dto.appliance.configuration.remotetunneldetailsdto:
    title: get.dto.appliance.configuration.RemoteTunnelDetailsDTO
    type: object
    properties:
      connection_status:
        $ref: '#/definitions/Get.dto.base.communicationstatusdto'
      http_proxy:
        $ref: '#/definitions/Get.dto.appliance.configuration.httpproxydto'
      service_center:
        $ref: '#/definitions/Get.dto.appliance.configuration.servicecenterdto'
      transport_status:
        $ref: '#/definitions/Get.dto.base.communicationstatusdto'
  Get.dto.appliance.configuration.servicecenterdto:
    title: get.dto.appliance.configuration.ServiceCenterDTO
    type: object
    properties:
      ip_address:
        description: Ip Address.
        type: string
      name:
        description: Name.
        type: string
      port:
        description: Port number.
        type: integer
        format: int32
      username:
        description: username.
        type: string
  SecureMode:
    title: secure_mode
    example: STARTTLS
    x-enum-elements:
    - name: STARTTLS
      description: ''
    - name: SSL
      description: ''
    - name: NONE
      description: ''
    type: string
    enum:
    - STARTTLS
    - SSL
    - NONE
  Get.dto.appliance.configuration.smtpserverdto:
    title: get.dto.appliance.configuration.SmtpServerDTO
    type: object
    properties:
      address:
        description: ''
        type: string
      email_status:
        $ref: '#/definitions/Get.dto.base.communicationstatusdto'
      from_email_address:
        description: ''
        type: string
      password:
        description: ''
        type: string
      port:
        description: ''
        type: integer
        format: int32
      secure_mode:
        $ref: '#/definitions/SecureMode'
      username:
        description: ''
        type: string
  Status:
    title: status
    example: SUCCESS
    x-enum-elements:
    - name: SUCCESS
      description: ''
    - name: FAILED
      description: ''
    - name: RETRYING
      description: ''
    - name: UNKNOWN
      description: ''
    type: string
    enum:
    - SUCCESS
    - FAILED
    - RETRYING
    - UNKNOWN
  Get.dto.base.communicationstatusdto:
    title: get.dto.base.CommunicationStatusDTO
    type: object
    properties:
      last_changed_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_checked_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_successful_transmission_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      message:
        $ref: '#/definitions/Get.dto.base.parameterizedmessagedto'
      status:
        $ref: '#/definitions/Status'
  Get.dto.base.parameterizedmessagedto:
    title: get.dto.base.ParameterizedMessageDTO
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      message:
        description: ''
        type: string
  Java.util.map&lt;java.lang.string,Java.lang.string&gt;:
    title: java.util.Map&lt;java.lang.String, java.lang.String&gt;
    type: object
  Patch.dto.requestdto&lt;patch.dto.appliance.configuration.alertconfigdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.AlertConfigDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.appliance.configuration.alertconfigdto'
      operation:
        description: ''
        type: string
  Patch.dto.appliance.configuration.alertconfigdto:
    title: patch.dto.appliance.configuration.AlertConfigDTO
    description: DTO representing the configuration of alerts
    type: object
    properties:
      default_nutanix_email:
        description: Default Nutanix email to which Alert emails would be sent
        type: string
      email_config_rules:
        description: Rules for Email Configuration.
        type: array
        items:
          $ref: '#/definitions/Patch.dto.appliance.configuration.alertconfigdto$emailconfigurationrule'
      email_contact_list:
        description: List of email contacts.
        type: array
        items:
          type: string
      email_template:
        $ref: '#/definitions/Patch.dto.appliance.configuration.alertconfigdto$emailtemplate'
      enable:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_default_nutanix_email:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_email_digest:
        description: Whether Alert email digest should be enabled.
        type: boolean
      smtp_server:
        $ref: '#/definitions/Patch.dto.appliance.configuration.smtpserverdto'
      tunnel_details:
        $ref: '#/definitions/Patch.dto.appliance.configuration.remotetunneldetailsdto'
  Patch.dto.appliance.configuration.alertconfigdto$emailconfigurationrule:
    title: patch.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule
    type: object
    properties:
      cluster_uuids:
        description: Cluster Uuids to which this rule applies to.
        type: array
        items:
          type: string
      impact_types:
        description: Impact types to which this rule applies to.
        type: array
        items:
          type: string
      recipients:
        description: List of recipients who will receive emails.
        type: array
        items:
          type: string
      severities:
        description: Severity to which this rule applies to.
        type: array
        items:
          type: string
      include_global_email_contact_list:
        description: Whether to include global email contact list.
        type: boolean
      match_phrases:
        description: List of phrases to match the alert with.
        type: array
        items:
          type: string
    required:
    - cluster_uuids
    - impact_types
    - recipients
    - severities
  Patch.dto.appliance.configuration.alertconfigdto$emailtemplate:
    title: patch.dto.appliance.configuration.AlertConfigDTO$EmailTemplate
    type: object
    properties:
      body_suffix:
        description: Email Body Suffix.
        type: string
      subject_prefix:
        description: Email Subject Prefix.
        type: string
    required:
    - body_suffix
    - subject_prefix
  Patch.dto.appliance.configuration.httpproxydto:
    title: patch.dto.appliance.configuration.HttpProxyDTO
    description: http-proxy
    type: object
    properties:
      name:
        description: Proxy name.
        type: string
      address:
        description: Address of the proxy
        type: string
      password:
        description: Password for proxy authentication
        type: string
      port:
        description: Port on which proxy is binding
        type: integer
        format: int32
      proxy_types:
        description: Proxy types to send applicable traffic
        type: array
        items:
          type: string
      username:
        description: Username for proxy authentication
        type: string
    required:
    - name
  Patch.dto.appliance.configuration.remotetunneldetailsdto:
    title: patch.dto.appliance.configuration.RemoteTunnelDetailsDTO
    type: object
    properties:
      connection_status:
        $ref: '#/definitions/Patch.dto.base.communicationstatusdto'
      http_proxy:
        $ref: '#/definitions/Patch.dto.appliance.configuration.httpproxydto'
      service_center:
        $ref: '#/definitions/Patch.dto.appliance.configuration.servicecenterdto'
      transport_status:
        $ref: '#/definitions/Patch.dto.base.communicationstatusdto'
  Patch.dto.appliance.configuration.servicecenterdto:
    title: patch.dto.appliance.configuration.ServiceCenterDTO
    type: object
    properties:
      ip_address:
        description: Ip Address.
        type: string
      name:
        description: Name.
        type: string
      port:
        description: Port number.
        type: integer
        format: int32
      username:
        description: username.
        type: string
    required:
    - ip_address
    - name
    - port
    - username
  Patch.dto.appliance.configuration.smtpserverdto:
    title: patch.dto.appliance.configuration.SmtpServerDTO
    type: object
    properties:
      address:
        description: ''
        type: string
      email_status:
        $ref: '#/definitions/Patch.dto.base.communicationstatusdto'
      from_email_address:
        description: ''
        type: string
      password:
        description: ''
        type: string
      port:
        description: ''
        type: integer
        format: int32
      secure_mode:
        $ref: '#/definitions/SecureMode'
      username:
        description: ''
        type: string
  Patch.dto.base.communicationstatusdto:
    title: patch.dto.base.CommunicationStatusDTO
    type: object
    properties:
      last_changed_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_checked_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_successful_transmission_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      message:
        $ref: '#/definitions/Patch.dto.base.parameterizedmessagedto'
      status:
        $ref: '#/definitions/Status'
  Patch.dto.base.parameterizedmessagedto:
    title: patch.dto.base.ParameterizedMessageDTO
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      message:
        description: ''
        type: string
  Update.dto.alerts.alertpolicydto:
    title: update.dto.alerts.AlertPolicyDTO
    type: object
    properties:
      auto_resolve:
        description: Whether the auto resolve feature is enabled for this policy
        type: boolean
      enabled:
        description: Enable/Disable flag for the policy
        type: boolean
      filter:
        description: Filter expression for the policy in FIQL
        type: string
      id:
        description: ID of the Policy
        type: string
      last_updated_timestamp_in_usecs:
        description: Last updated timestamp of the Policy. Will be used as the CAS value during updates.
        type: integer
        format: int64
      title:
        description: Title of the Policy
        type: string
      trigger_conditions:
        description: Trigger conditions for the policy. If there are multiple Trigger conditions, they will be ANDed.
        type: array
        items:
          $ref: '#/definitions/Update.dto.alerts.alertpolicydto$triggercondition'
      created_by:
        description: Username of the user who created the Policy
        type: string
      description:
        description: Description of the Policy.
        type: string
      error_on_conflict:
        description: Error if conflicting Alert Policies are found
        type: boolean
      impact_types:
        description: Impact Types that are to be associated with the resulting Alert
        type: array
        items:
          type: string
      policies_to_override:
        description: List of Alert Policy Ids to override
        type: array
        items:
          type: string
      related_policies:
        description: List of Alert Policies that are related to the entities of the current policy
        type: array
        items:
          $ref: '#/definitions/Update.dto.alerts.alertpolicydto$relatedpolicies'
      trigger_wait_period_in_secs:
        description: Duration to wait before triggering the alert when the specified condition is met
        type: integer
        format: int64
    required:
    - auto_resolve
    - enabled
    - filter
    - id
    - last_updated_timestamp_in_usecs
    - title
    - trigger_conditions
  Update.dto.alerts.alertpolicydto$relatedpolicies:
    title: update.dto.alerts.AlertPolicyDTO$RelatedPolicies
    type: object
    properties:
      policy_ids:
        description: Policy Ids that are related to the specified entity
        type: array
        items:
          type: string
  Update.dto.alerts.alertpolicydto$triggercondition:
    title: update.dto.alerts.AlertPolicyDTO$TriggerCondition
    type: object
    properties:
      condition:
        description: Conditions to be met to trigger the alert. Conditions are expressed in FIQL
        type: string
      condition_type:
        $ref: '#/definitions/ConditionType'
      severity_level:
        $ref: '#/definitions/SeverityLevel'
    required:
    - condition
    - condition_type
    - severity_level
  Update.dto.appliance.configuration.alertconfigdto:
    title: update.dto.appliance.configuration.AlertConfigDTO
    description: DTO representing the configuration of alerts
    type: object
    properties:
      default_nutanix_email:
        description: Default Nutanix email to which Alert emails would be sent
        type: string
      email_config_rules:
        description: Rules for Email Configuration.
        type: array
        items:
          $ref: '#/definitions/Update.dto.appliance.configuration.alertconfigdto$emailconfigurationrule'
      email_contact_list:
        description: List of email contacts.
        type: array
        items:
          type: string
      email_template:
        $ref: '#/definitions/Update.dto.appliance.configuration.alertconfigdto$emailtemplate'
      enable:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_default_nutanix_email:
        description: Whether Alert emails should be enabled.
        type: boolean
      enable_email_digest:
        description: Whether Alert email digest should be enabled.
        type: boolean
      smtp_server:
        $ref: '#/definitions/Update.dto.appliance.configuration.smtpserverdto'
      tunnel_details:
        $ref: '#/definitions/Update.dto.appliance.configuration.remotetunneldetailsdto'
  Update.dto.appliance.configuration.alertconfigdto$emailconfigurationrule:
    title: update.dto.appliance.configuration.AlertConfigDTO$EmailConfigurationRule
    type: object
    properties:
      cluster_uuids:
        description: Cluster Uuids to which this rule applies to.
        type: array
        items:
          type: string
      impact_types:
        description: Impact types to which this rule applies to.
        type: array
        items:
          type: string
      include_global_email_contact_list:
        description: Whether to include global email contact list.
        type: boolean
      match_phrases:
        description: List of phrases to match the alert with.
        type: array
        items:
          type: string
      recipients:
        description: List of recipients who will receive emails.
        type: array
        items:
          type: string
      severities:
        description: Severity to which this rule applies to.
        type: array
        items:
          type: string
  Update.dto.appliance.configuration.alertconfigdto$emailtemplate:
    title: update.dto.appliance.configuration.AlertConfigDTO$EmailTemplate
    type: object
    properties:
      body_suffix:
        description: Email Body Suffix.
        type: string
      subject_prefix:
        description: Email Subject Prefix.
        type: string
  Update.dto.appliance.configuration.httpproxydto:
    title: update.dto.appliance.configuration.HttpProxyDTO
    description: http-proxy
    type: object
    properties:
      address:
        description: Address of the proxy
        type: string
      name:
        description: Proxy name.
        type: string
      port:
        description: Port on which proxy is binding
        type: integer
        format: int32
      password:
        description: Password for proxy authentication
        type: string
      proxy_types:
        description: Proxy types to send applicable traffic
        type: array
        items:
          type: string
      username:
        description: Username for proxy authentication
        type: string
    required:
    - address
    - name
    - port
  Update.dto.appliance.configuration.remotetunneldetailsdto:
    title: update.dto.appliance.configuration.RemoteTunnelDetailsDTO
    type: object
    properties:
      connection_status:
        $ref: '#/definitions/Update.dto.base.communicationstatusdto'
      http_proxy:
        $ref: '#/definitions/Update.dto.appliance.configuration.httpproxydto'
      service_center:
        $ref: '#/definitions/Update.dto.appliance.configuration.servicecenterdto'
      transport_status:
        $ref: '#/definitions/Update.dto.base.communicationstatusdto'
  Update.dto.appliance.configuration.servicecenterdto:
    title: update.dto.appliance.configuration.ServiceCenterDTO
    type: object
    properties:
      ip_address:
        description: Ip Address.
        type: string
      name:
        description: Name.
        type: string
      port:
        description: Port number.
        type: integer
        format: int32
      username:
        description: username.
        type: string
    required:
    - ip_address
    - name
    - port
    - username
  Update.dto.appliance.configuration.smtpserverdto:
    title: update.dto.appliance.configuration.SmtpServerDTO
    type: object
    properties:
      address:
        description: ''
        type: string
      email_status:
        $ref: '#/definitions/Update.dto.base.communicationstatusdto'
      from_email_address:
        description: ''
        type: string
      password:
        description: ''
        type: string
      port:
        description: ''
        type: integer
        format: int32
      secure_mode:
        $ref: '#/definitions/SecureMode'
      username:
        description: ''
        type: string
  Update.dto.base.communicationstatusdto:
    title: update.dto.base.CommunicationStatusDTO
    type: object
    properties:
      last_changed_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_checked_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      last_successful_transmission_time_stamp_usecs:
        description: ''
        type: integer
        format: int64
      message:
        $ref: '#/definitions/Update.dto.base.parameterizedmessagedto'
      status:
        $ref: '#/definitions/Status'
  Update.dto.base.parameterizedmessagedto:
    title: update.dto.base.ParameterizedMessageDTO
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      message:
        description: ''
        type: string
  Get.dto.authconfig.authconfigdto:
    title: get.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
  Get.dto.authconfig.autologininfodto:
    title: get.dto.authconfig.AutoLoginInfoDTO
    type: object
    properties:
      enabled:
        description: Whether auto login is enabled or not.
        type: boolean
      service_account_d_t_o:
        $ref: '#/definitions/Get.dto.authconfig.serviceaccountdto'
  Get.dto.authconfig.cachaindto:
    title: get.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
      name:
        description: The name of the CA Chain certificate.
        type: string
  Get.dto.authconfig.clientauthdto:
    title: get.dto.authconfig.ClientAuthDTO
    type: object
    properties:
      auto_login_info:
        $ref: '#/definitions/Get.dto.authconfig.autologininfodto'
      ca_chain_info:
        $ref: '#/definitions/Get.dto.authconfig.cachaindto'
  Get.dto.authconfig.directoryconfigdto:
    title: get.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      name:
        description: Name of directory.
        type: string
      open_ldap_config:
        $ref: '#/definitions/Get.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
  Get.dto.authconfig.openldapconfigdto:
    title: get.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Get.dto.authconfig.serviceaccountdto:
    title: get.dto.authconfig.ServiceAccountDTO
    type: object
    properties:
      directory_config_name:
        description: The name of the Active Directory Config name to use for this service account.
        type: string
      password:
        description: The password to use for the service account.
        type: string
      username:
        description: The username to use with the service account.
        type: string
  Patch.dto.requestdto&lt;patch.dto.authconfig.authconfigdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.authconfig.AuthConfigDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.authconfig.authconfigdto'
      operation:
        description: ''
        type: string
  Patch.dto.requestdto&lt;patch.dto.authconfig.directoryconfigdto&gt;:
    title: patch.dto.RequestDTO&lt;patch.dto.authconfig.DirectoryConfigDTO&gt;
    type: object
    properties:
      cluster_uuid:
        description: ''
        type: string
      generic_d_t_o:
        $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
      operation:
        description: ''
        type: string
  Patch.dto.authconfig.authconfigdto:
    title: patch.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Patch.dto.authconfig.directoryconfigdto'
    required:
    - auth_type_list
  Patch.dto.authconfig.directoryconfigdto:
    title: patch.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      name:
        description: Name of directory.
        type: string
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Patch.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - name
  Patch.dto.authconfig.openldapconfigdto:
    title: patch.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Update.dto.authconfig.authconfigdto:
    title: update.dto.authconfig.AuthConfigDTO
    description: auth-config
    type: object
    properties:
      auth_type_list:
        description: Authentication Types
        type: array
        items:
          type: string
      directory_list:
        description: Id of an alert type.
        type: array
        items:
          $ref: '#/definitions/Update.dto.authconfig.directoryconfigdto'
    required:
    - auth_type_list
  Update.dto.authconfig.autologininfodto:
    title: update.dto.authconfig.AutoLoginInfoDTO
    type: object
    properties:
      enabled:
        description: Whether auto login is enabled or not.
        type: boolean
      service_account_d_t_o:
        $ref: '#/definitions/Update.dto.authconfig.serviceaccountdto'
  Update.dto.authconfig.cachaindto:
    title: update.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      name:
        description: The name of the CA Chain certificate.
        type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
    required:
    - ca_chain
    - name
  Update.dto.authconfig.clientauthdto:
    title: update.dto.authconfig.ClientAuthDTO
    type: object
    properties:
      auto_login_info:
        $ref: '#/definitions/Update.dto.authconfig.autologininfodto'
      ca_chain_info:
        $ref: '#/definitions/Update.dto.authconfig.cachaindto'
  Update.dto.authconfig.directoryconfigdto:
    title: update.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      name:
        description: Name of directory.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Update.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - connection_type
    - directory_type
    - directory_url
    - domain
    - name
  Update.dto.authconfig.openldapconfigdto:
    title: update.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Update.dto.authconfig.serviceaccountdto:
    title: update.dto.authconfig.ServiceAccountDTO
    type: object
    properties:
      directory_config_name:
        description: The name of the Active Directory Config name to use for this service account.
        type: string
      password:
        description: The password to use for the service account.
        type: string
      username:
        description: The username to use with the service account.
        type: string
  Create.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Create.dto.authconfig.cachaindto:
    title: create.dto.authconfig.CaChainDTO
    type: object
    properties:
      ca_chain:
        description: The content of the CA Chain certificate.
        type: array
        items:
          type: string
      enable_client_auth:
        description: The status of the client authentication.
        type: boolean
      name:
        description: The name of the CA Chain certificate.
        type: string
  ConnectionType:
    title: connection_type
    example: LDAP
    x-enum-elements:
    - name: LDAP
      description: ''
    type: string
    enum:
    - LDAP
  DirectoryType:
    title: directory_type
    example: ACTIVE_DIRECTORY
    x-enum-elements:
    - name: ACTIVE_DIRECTORY
      description: ''
    - name: OPEN_LDAP
      description: ''
    type: string
    enum:
    - ACTIVE_DIRECTORY
    - OPEN_LDAP
  GroupSearchType:
    title: group_search_type
    example: RECURSIVE
    x-enum-elements:
    - name: RECURSIVE
      description: ''
    - name: NON_RECURSIVE
      description: ''
    type: string
    enum:
    - RECURSIVE
    - NON_RECURSIVE
  Create.dto.authconfig.directoryconfigdto:
    title: create.dto.authconfig.DirectoryConfigDTO
    description: directory-config
    type: object
    properties:
      connection_type:
        $ref: '#/definitions/ConnectionType'
      directory_type:
        $ref: '#/definitions/DirectoryType'
      directory_url:
        description: Directory's ldap url.
        type: string
      domain:
        description: Domain name.
        type: string
      name:
        description: Name of directory.
        type: string
      group_search_type:
        $ref: '#/definitions/GroupSearchType'
      open_ldap_config:
        $ref: '#/definitions/Create.dto.authconfig.openldapconfigdto'
      service_account_password:
        description: The password to use for the service account.
        type: string
      service_account_username:
        description: The username to use with the service account.
        type: string
    required:
    - connection_type
    - directory_type
    - directory_url
    - domain
    - name
  Create.dto.authconfig.openldapconfigdto:
    title: create.dto.authconfig.OpenLdapConfigDTO
    description: Open LDAP configuration
    type: object
    properties:
      group_member_attribute:
        description: Unique identifier in group that associates users to the group.
        type: string
      group_member_attribute_value:
        description: User attribute that will be used to group entity to associate user to the group.
        type: string
      group_object_class:
        description: Group Object class, identifier for object type group.
        type: string
      group_search_base:
        description: Base DN for group search.
        type: string
      user_object_class:
        description: User object class, unique identifier for object user type
        type: string
      user_search_base:
        description: Base DN for user search.
        type: string
      username_attribute:
        description: Unique identifier for each user which can be used forauthentication.
        type: string
  Create.dto.authconfig.testdirectoryconfigdto:
    title: create.dto.authconfig.TestDirectoryConfigDTO
    type: object
    properties:
      directory_name:
        description: Directory name to test LDAP configuration.
        type: string
      password:
        description: Password to test LDAP configuration.
        type: string
      username:
        description: Username to test LDAP configuration.
        type: string
    required:
    - directory_name
    - password
    - username
  Get.base.entitycollection&lt;get.dto.authconfig.directoryconfigdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.authconfig.DirectoryConfigDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.authconfig.directoryconfigdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Create.dto.primitivedto&lt;java.lang.string&gt;:
    title: create.dto.PrimitiveDTO&lt;java.lang.String&gt;
    type: object
    properties:
      value:
        description: ''
        type: string
  Create.dto.alerts.alertsummarydto:
    title: create.dto.alerts.AlertSummaryDTO
    type: object
    properties:
      alert_summaries:
        $ref: '#/definitions/Java.util.map&lt;create.dto.alerts.alertdto$alertseverity,Create.base.entitycollection&lt;create.dto.alerts.alertdto&gt;&gt;'
      count:
        description: ''
        type: integer
        format: int64
  Create.dto.dr.awscredentialdto:
    title: create.dto.dr.AwsCredentialDTO
    type: object
    properties:
      access_key:
        description: The AWS access key.
        type: string
      secret_key:
        description: The AWS secret key.
        type: string
    required:
    - access_key
    - secret_key
  Create.dto.dr.azurecredentialdto:
    title: create.dto.dr.AzureCredentialDTO
    type: object
    properties:
      secure_file_i_d:
        description: The Azure secure file ID.
        type: string
      subscription_i_d:
        description: The Azure subscription ID.
        type: string
  Create.dto.dr.bandwidthpolicydto:
    title: create.dto.dr.BandwidthPolicyDTO
    description: This DTO describes bandwidth throttling policies for different time schedules
    type: object
    properties:
      policy_name:
        description: Name of the bandwidth Throttling policy.
        type: string
      bandwidth_configurations:
        description: List of the policy configurations.
        type: array
        items:
          $ref: '#/definitions/Create.dto.dr.bandwidthpolicydto$bandwidthscheduleconfiguration'
      default_bandwidth_limit:
        description: Default bandwidth limit
        type: integer
        format: int32
    required:
    - policy_name
  Create.dto.dr.bandwidthpolicydto$bandwidthscheduleconfiguration:
    title: create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration
    type: object
    properties:
      bandwidth_limit:
        description: Bandwidth limit for the policy.
        type: integer
        format: int32
      days_selected:
        description: Days selected in a week.
        type: integer
        format: int32
      end_time:
        description: End time of the policy
        type: integer
        format: int64
      start_time:
        description: Start time of the policy
        type: integer
        format: int64
  Create.dto.dr.cloudcredentialsdto:
    title: create.dto.dr.CloudCredentialsDTO
    type: object
    properties:
      aws_credential:
        $ref: '#/definitions/Create.dto.dr.awscredentialdto'
      azure_credential:
        $ref: '#/definitions/Create.dto.dr.azurecredentialdto'
      credential_i_d:
        description: ''
        type: integer
        format: int64
      name:
        description: Name of the Cloud credentials.
        type: string
      use_as_default:
        description: ''
        type: boolean
  ConnectivityType:
    title: connectivity_type
    example: VPN
    x-enum-elements:
    - name: VPN
      description: ''
    - name: SSH_TUNNEL
      description: ''
    type: string
    enum:
    - VPN
    - SSH_TUNNEL
  Create.dto.dr.deploycloudremotesiterequestdto:
    title: create.dto.dr.DeployCloudRemoteSiteRequestDTO
    type: object
    properties:
      connectivity_type:
        $ref: '#/definitions/ConnectivityType'
      local_remote_site_name:
        description: ''
        type: string
      local_storage_container_names:
        description: ''
        type: array
        items:
          type: string
      region:
        description: ''
        type: string
      c_e_r_e_b_r_o__s_s_h__p_o_r_t__l_o_w_e_r__b_o_u_n_d:
        description: ''
        type: integer
        format: int32
      c_e_r_e_b_r_o__s_s_h__p_o_r_t__u_p_p_e_r__b_o_u_n_d:
        description: ''
        type: integer
        format: int32
      skip_instance_type_validation:
        description: Flag to skip instance type validation
        type: boolean
    required:
    - connectivity_type
    - local_remote_site_name
    - local_storage_container_names
    - region
  Create.dto.dr.l2networkmappingdto:
    title: create.dto.dr.L2NetworkMappingDTO
    type: object
    properties:
      dest_hypervisor_type:
        description: ''
        type: string
      dest_network_name:
        description: ''
        type: string
      src_hypervisor_type:
        description: ''
        type: string
      src_network_name:
        description: ''
        type: string
  Create.dto.dr.networkmappingdto:
    title: create.dto.dr.NetworkMappingDTO
    description: 'This DTO describes network mapping from source to destination cluster based on network uuids '
    type: object
    properties:
      l2_network_mappings:
        description: List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks
        type: array
        items:
          $ref: '#/definitions/Create.dto.dr.l2networkmappingdto'
      uuid:
        description: Network mapping identifier for this remote site
        type: string
  CloudType:
    title: cloud_type
    example: AWS
    x-enum-elements:
    - name: AWS
      description: ''
    - name: AZURE
      description: ''
    type: string
    enum:
    - AWS
    - AZURE
  zStatus:
    title: status
    example: HANDSHAKING
    x-enum-elements:
    - name: HANDSHAKING
      description: ''
    - name: UNREACHABLE
      description: ''
    - name: STRETCH_UNHEALTHY
      description: ''
    - name: RELATIONSHIP_NOT_ESTABLISHED
      description: ''
    - name: RELATIONSHIP_ESTABLISHED
      description: ''
    - name: DEPLOYING
      description: ''
    type: string
    enum:
    - HANDSHAKING
    - UNREACHABLE
    - STRETCH_UNHEALTHY
    - RELATIONSHIP_NOT_ESTABLISHED
    - RELATIONSHIP_ESTABLISHED
    - DEPLOYING
  Create.dto.dr.remotesitedto:
    title: create.dto.dr.RemoteSiteDTO
    description: remote-site
    type: object
    properties:
      alert_summary:
        $ref: '#/definitions/Create.dto.alerts.alertsummarydto'
      bandwidth_policy:
        $ref: '#/definitions/Create.dto.dr.bandwidthpolicydto'
      bandwidth_policy_enabled:
        description: ''
        type: boolean
      capabilities:
        description: ''
        type: array
        items:
          type: string
      cloud_type:
        $ref: '#/definitions/CloudType'
      cluster_external_data_services_i_p_address:
        description: ''
        type: string
      cluster_id:
        description: ''
        type: integer
        format: int64
      cluster_incarnation_id:
        description: ''
        type: integer
        format: int64
      compression_enabled:
        description: ''
        type: boolean
      credential_name:
        description: Credential Name
        type: string
      cvm_name:
        description: CVM Name
        type: string
      health_summary:
        $ref: '#/definitions/Create.dto.health.check.healthsummarydto'
      latency_in_usecs:
        description: ''
        type: integer
        format: int64
      marked_for_removal:
        description: ''
        type: boolean
      max_bps:
        description: ''
        type: integer
        format: int32
      metro_ready:
        description: ''
        type: boolean
      name:
        description: Name of the remote site.
        type: string
      network_mapping:
        $ref: '#/definitions/Create.dto.dr.networkmappingdto'
      proxy_enabled:
        description: ''
        type: boolean
      region:
        description: Region
        type: string
      remote_ip_ports:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.integer&gt;'
      remote_v_store_info:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Create.dto.dr.remotesitedto$vstoreinfo&gt;'
      replication_links:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Create.dto.dr.replicationlinkdto'
      ssh_enabled:
        description: ''
        type: boolean
      stats:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      status:
        $ref: '#/definitions/Status'
      usage_stats:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
      uuid:
        description: Uuid of the remote site.
        type: string
      vstore_name_map:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
  Create.dto.dr.replicationlinkdto:
    title: create.dto.dr.ReplicationLinkDTO
    type: object
    properties:
      current_replicating_snapshot_id:
        description: ''
        type: string
      current_replicating_snapshot_total_bytes:
        description: ''
        type: integer
        format: int64
      current_replicating_snapshot_transmitted_bytes:
        description: ''
        type: integer
        format: int64
      id:
        description: ''
        type: string
      last_replication_end_time_in_usecs:
        description: ''
        type: integer
        format: int64
      last_replication_start_time_in_usecs:
        description: ''
        type: integer
        format: int64
      last_successful_replication_snapshot_id:
        description: ''
        type: string
      protection_domain_name:
        description: ''
        type: string
      remote_site_name:
        description: ''
        type: string
      stats:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.lang.string&gt;'
  zEntityType:
    title: entity_type
    example: CLUSTER
    x-enum-elements:
    - name: CLUSTER
      description: ''
    - name: HARDWARE
      description: ''
    - name: STORAGE
      description: ''
    - name: BACKUP
      description: ''
    - name: DR
      description: ''
    - name: LICENSE
      description: ''
    - name: DISK
      description: ''
    - name: STORAGE_TIER
      description: ''
    - name: HOST
      description: ''
    - name: NODE
      description: ''
    - name: MANAGEMENT_SERVER
      description: ''
    - name: MANAGEMENT_SERVER_INFO
      description: ''
    - name: VM
      description: ''
    - name: SERVICE_VM
      description: ''
    - name: VDISK
      description: ''
    - name: VIRTUAL_DISK
      description: ''
    - name: STORAGE_POOL
      description: ''
    - name: CONTAINER
      description: ''
    - name: STORAGE_CONTAINER
      description: ''
    - name: VZONE
      description: ''
    - name: SNAPSHOT
      description: ''
    - name: FAST_CLONE
      description: ''
    - name: RSYSLOG_SERVER
      description: ''
    - name: KEY_MANAGEMENT_SERVER
      description: ''
    - name: CERTIFICATE
      description: ''
    - name: HTTP_PROXY
      description: ''
    - name: SNMP_TRAP
      description: ''
    - name: SNMP_USER
      description: ''
    - name: REMOTE_SITE
      description: ''
    - name: CLOUD_CREDENTIALS
      description: ''
    - name: PROTECTION_DOMAIN
      description: ''
    - name: CONSISTENCY_GROUP
      description: ''
    - name: REPLICATION
      description: ''
    - name: REPLICATION_LINK
      description: ''
    - name: SYNC_REPLICATION
      description: ''
    - name: VSTORE
      description: ''
    - name: NETWORK_SWITCH_INTERFACE
      description: ''
    - name: NETWORK_SWITCH
      description: ''
    - name: VIRTUAL_NIC
      description: ''
    - name: VMKERNEL_NIC
      description: ''
    - name: HOST_NIC
      description: ''
    - name: NIC_TEAM
      description: ''
    - name: VIRTUAL_NETWORK
      description: ''
    - name: VIRTUAL_SWITCH
      description: ''
    - name: HOST_GPU
      description: ''
    - name: VIRTUAL_GPU
      description: ''
    - name: TAG
      description: ''
    - name: COMMENT
      description: ''
    - name: TASK
      description: ''
    - name: IMAGE
      description: ''
    - name: IMAGE_INFO
      description: ''
    - name: ISCSI_CLIENT
      description: ''
    - name: VOLUME_GROUP
      description: ''
    - name: VOLUME_DISK
      description: ''
    - name: VM_DISK
      description: ''
    - name: FILE_SERVER
      description: ''
    - name: FS_PARTNER_SERVER
      description: ''
    - name: CVM
      description: ''
    - name: NVM
      description: ''
    - name: FILE_SERVER_SHARE
      description: ''
    - name: ALERT_CAUSE
      description: ''
    - name: ALERT_CHECK_SCHEMA
      description: ''
    - name: ALERT_CHECK_SCHEMA_OVERRIDE
      description: ''
    - name: INTER_CLUSTER_DATA_TRANSFER_INDICATOR
      description: ''
    - name: RACKABLE_UNIT
      description: ''
    - name: DIRECTORY_CONFIG
      description: ''
    - name: HEALTH_CHECK
      description: ''
    - name: NETWORK_SNMP_PROFILE
      description: ''
    - name: ALERT
      description: ''
    - name: SCHEDULE
      description: ''
    - name: BANDWIDTH_POLICY
      description: ''
    - name: FILE_GROUP
      description: ''
    - name: NETWORK_MAPPING
      description: ''
    - name: PROGRESS_MONITOR
      description: ''
    - name: LCM_ENTITY
      description: ''
    - name: LCM_AVAILABLE_VERSION
      description: ''
    - name: CAPACITY_SCENARIO
      description: ''
    - name: NCC_ERROR_CODES
      description: ''
    - name: RESOURCE_CONSUMPTION
      description: ''
    - name: REPORT_CONFIG
      description: ''
    - name: REPORT_INSTANCE
      description: ''
    - name: COMMON_REPORT_CONFIG
      description: ''
    - name: REMOTE_CONNECTION
      description: ''
    type: string
    enum:
    - CLUSTER
    - HARDWARE
    - STORAGE
    - BACKUP
    - DR
    - LICENSE
    - DISK
    - STORAGE_TIER
    - HOST
    - NODE
    - MANAGEMENT_SERVER
    - MANAGEMENT_SERVER_INFO
    - VM
    - SERVICE_VM
    - VDISK
    - VIRTUAL_DISK
    - STORAGE_POOL
    - CONTAINER
    - STORAGE_CONTAINER
    - VZONE
    - SNAPSHOT
    - FAST_CLONE
    - RSYSLOG_SERVER
    - KEY_MANAGEMENT_SERVER
    - CERTIFICATE
    - HTTP_PROXY
    - SNMP_TRAP
    - SNMP_USER
    - REMOTE_SITE
    - CLOUD_CREDENTIALS
    - PROTECTION_DOMAIN
    - CONSISTENCY_GROUP
    - REPLICATION
    - REPLICATION_LINK
    - SYNC_REPLICATION
    - VSTORE
    - NETWORK_SWITCH_INTERFACE
    - NETWORK_SWITCH
    - VIRTUAL_NIC
    - VMKERNEL_NIC
    - HOST_NIC
    - NIC_TEAM
    - VIRTUAL_NETWORK
    - VIRTUAL_SWITCH
    - HOST_GPU
    - VIRTUAL_GPU
    - TAG
    - COMMENT
    - TASK
    - IMAGE
    - IMAGE_INFO
    - ISCSI_CLIENT
    - VOLUME_GROUP
    - VOLUME_DISK
    - VM_DISK
    - FILE_SERVER
    - FS_PARTNER_SERVER
    - CVM
    - NVM
    - FILE_SERVER_SHARE
    - ALERT_CAUSE
    - ALERT_CHECK_SCHEMA
    - ALERT_CHECK_SCHEMA_OVERRIDE
    - INTER_CLUSTER_DATA_TRANSFER_INDICATOR
    - RACKABLE_UNIT
    - DIRECTORY_CONFIG
    - HEALTH_CHECK
    - NETWORK_SNMP_PROFILE
    - ALERT
    - SCHEDULE
    - BANDWIDTH_POLICY
    - FILE_GROUP
    - NETWORK_MAPPING
    - PROGRESS_MONITOR
    - LCM_ENTITY
    - LCM_AVAILABLE_VERSION
    - CAPACITY_SCENARIO
    - NCC_ERROR_CODES
    - RESOURCE_CONSUMPTION
    - REPORT_CONFIG
    - REPORT_INSTANCE
    - COMMON_REPORT_CONFIG
    - REMOTE_CONNECTION
  Create.dto.health.check.entitytypehealthchecksummarydto:
    title: create.dto.health.check.EntityTypeHealthCheckSummaryDTO
    type: object
    properties:
      checks_in_error:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Create.dto.health.check.healthcheckerrorsdto&gt;'
      detailed_check_summary:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Java.util.map&lt;create.dto.health.check.healthstatus,Java.lang.integer&gt;&gt;'
      entity_type:
        $ref: '#/definitions/EntityType'
      filter_criteria:
        description: ''
        type: string
      health_summary:
        $ref: '#/definitions/Java.util.map&lt;create.dto.health.check.healthstatus,Java.lang.integer&gt;'
  HealthStatus:
    title: health_status
    example: Critical
    x-enum-elements:
    - name: Critical
      description: ''
    - name: Warning
      description: ''
    - name: Good
      description: ''
    - name: Unknown
      description: ''
    - name: Error
      description: ''
    type: string
    enum:
    - Critical
    - Warning
    - Good
    - Unknown
    - Error
  Create.dto.health.check.healthsummarydto:
    title: create.dto.health.check.HealthSummaryDTO
    type: object
    properties:
      entity_type_summaries:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Create.dto.health.check.entitytypehealthchecksummarydto'
      health_check_summaries:
        $ref: '#/definitions/Java.util.map&lt;java.lang.string,Create.dto.health.check.healthchecksummarydto&gt;'
      health_status:
        $ref: '#/definitions/HealthStatus'
  zDelete.dto.primitivedto&lt;java.lang.boolean&gt;:
    title: delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;
    type: object
    properties:
      value:
        description: ''
        type: boolean
  Get.base.entitycollection&lt;get.dto.dr.cloudcredentialsdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.dr.cloudcredentialsdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.dr.cloudcvmdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.dr.cloudcvmdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.dr.cloudcvmimagedto&gt;:
    title: get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.dr.cloudcvmimagedto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  Get.base.entitycollection&lt;get.dto.dr.subnetdto&gt;:
    title: get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;
    type: object
    properties:
      entities:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Get.dto.dr.subnetdto'
      error_info:
        $ref: '#/definitions/Get.base.errorinfo'
      metadata:
        $ref: '#/definitions/Get.base.metadata'
  zGet.base.errorinfo:
    title: get.base.ErrorInfo
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int64
      entity_list:
        description: ''
        type: array
        items:
          type: string
      message:
        description: ''
        type: string
  zGet.base.metadata:
    title: get.base.Metadata
    type: object
    properties:
      count:
        description: ''
        type: integer
        format: int32
      end_index:
        description: ''
        type: integer
        format: int32
      filter_criteria:
        description: ''
        type: string
      grand_total_entities:
        description: ''
        type: integer
        format: int32
      next_cursor:
        description: ''
        type: string
      page:
        description: ''
        type: integer
        format: int32
      previous_cursor:
        description: ''
        type: string
      search_string:
        description: ''
        type: string
      sort_criteria:
        description: ''
        type: string
      start_index:
        description: ''
        type: integer
        format: int32
      total_entities:
        description: ''
        type: integer
        format: int32
  Get.dto.dr.awscredentialdto:
    title: get.dto.dr.AwsCredentialDTO
    type: object
    properties:
      access_key:
        description: The AWS access key.
        type: string
      secret_key:
        description: The AWS secret key.
        type: string
  Get.dto.dr.azurecredentialdto:
    title: get.dto.dr.AzureCredentialDTO
    type: object
    properties:
      secure_file_i_d:
        description: The Azure secure file ID.
        type: string
      subscription_i_d:
        description: The Azure subscription ID.
        type: string
  Get.dto.dr.cloudcredentialsdto:
    title: get.dto.dr.CloudCredentialsDTO
    type: object
    properties:
      aws_credential:
        $ref: '#/definitions/Get.dto.dr.awscredentialdto'
      azure_credential:
        $ref: '#/definitions/Get.dto.dr.azurecredentialdto'
      credential_i_d:
        description: ''
        type: integer
        format: int64
      name:
        description: Name of the Cloud credentials.
        type: string
      use_as_default:
        description: ''
        type: boolean
  State:
    title: state
    example: STARTING
    x-enum-elements:
    - name: STARTING
      description: ''
    - name: STARTED
      description: ''
    - name: RUNNING
      description: ''
    - name: STOPPING
      description: ''
    - name: STOPPED
      description: ''
    - name: TERMINATED
      description: ''
    type: string
    enum:
    - STARTING
    - STARTED
    - RUNNING
    - STOPPING
    - STOPPED
    - TERMINATED
  Get.dto.dr.cloudcvmdto:
    title: get.dto.dr.CloudCvmDTO
    type: object
    properties:
      name:
        description: ''
        type: string
      private_ip:
        description: ''
        type: string
      public_ip:
        description: ''
        type: string
      region:
        description: ''
        type: string
      state:
        $ref: '#/definitions/State'
      subnet_id:
        description: ''
        type: string
      type:
        description: ''
        type: string
  Get.dto.dr.cloudcvmimagedto:
    title: get.dto.dr.CloudCvmImageDTO
    type: object
    properties:
      description:
        description: ''
        type: string
      id:
        description: ''
        type: string
      name:
        description: ''
        type: string
      region:
        description: ''
        type: string
      version:
        description: ''
        type: string
  VpnState:
    title: vpn_state
    example: AVAILABLE
    x-enum-elements:
    - name: AVAILABLE
      description: ''
    - name: IMPAIRED
      description: ''
    - name: UNAVAILABLE
      description: ''
    - name: UNKNOWN
      description: ''
    type: string
    enum:
    - AVAILABLE
    - IMPAIRED
    - UNAVAILABLE
    - UNKNOWN
  Get.dto.dr.subnetdto:
    title: get.dto.dr.SubnetDTO
    type: object
    properties:
      availability_zone:
        description: ''
        type: string
      available_ip_count:
        description: ''
        type: integer
        format: int32
      default_avail_zone:
        description: ''
        type: boolean
      id:
        description: ''
        type: string
      subnet_cidr:
        description: ''
        type: string
      subnet_id:
        description: ''
        type: string
      vpc_id:
        description: ''
        type: string
      vpn_state:
        $ref: '#/definitions/VpnState'
  Java.util.map&lt;create.dto.alerts.alertdto$alertseverity,Create.base.entitycollection&lt;create.dto.alerts.alertdto&gt;&gt;:
    title: java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;
    type: object
  Java.util.map&lt;create.dto.health.check.healthstatus,Java.lang.integer&gt;:
    title: java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;
    type: object
  Java.util.map&lt;java.lang.string,Create.dto.dr.remotesitedto$vstoreinfo&gt;:
    title: java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;
    type: object
  Java.util.map&lt;java.lang.string,Create.dto.health.check.healthcheckerrorsdto&gt;:
    title: java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;
    type: object
  Java.util.map&lt;java.lang.string,Create.dto.health.check.healthchecksummarydto&gt;:
    title: java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;
    type: object
  Java.util.map&lt;java.lang.string,Java.lang.integer&gt;:
    title: java.util.Map&lt;java.lang.String, java.lang.Integer&gt;
    type: object
  zJava.util.map&lt;java.lang.string,Java.lang.string&gt;:
    title: java.util.Map&lt;java.lang.String, java.lang.String&gt;
    type: object
  Java.util.map&lt;java.lang.string,Java.util.map&lt;create.dto.health.check.healthstatus,Java.lang.integer&gt;&gt;:
    title: java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;
    type: object