{
    "apiVersion": "v1",
    "swaggerVersion": "1.2",
    "basePath": "https://any_cvm_ip:9440/PrismGateway/services/rest/v1",
    "resourcePath": "/containers",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "apis": [
        {
            "internal": false,
            "path": "/containers/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of Containers.",
                    "notes": "Get the list of Containers configured in the cluster.",
                    "type": "get.base.EntityCollection&lt;get.dto.appliance.configuration.ContainerDTO&gt;",
                    "nickname": "getContainers",
                    "parameters": [
                        {
                            "name": "count",
                            "description": "Number of Containers to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filterCriteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sortCriteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "description": "Search string",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "searchAttributeList",
                            "description": "Search attribute list",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "projection",
                            "description": "Projections on the attributes",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "PATCH",
                    "summary": "Modify a Container.",
                    "notes": "Modify the specified Container.",
                    "type": "patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "patchContainer",
                    "parameters": [
                        {
                            "description": "A Container instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ContainerDTO&gt;"
                        }
                    ],
                    "responseMessages": []
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Add a Container.",
                    "notes": "Add a Container to the cluster.",
                    "type": "create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "addContainer",
                    "parameters": [
                        {
                            "description": "A Container instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.appliance.configuration.ContainerDTO"
                        }
                    ],
                    "responseMessages": []
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "PUT",
                    "summary": "Update a Container.",
                    "notes": "Update the specified Container.",
                    "type": "update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "editContainer",
                    "parameters": [
                        {
                            "description": "A Container instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "update.dto.appliance.configuration.ContainerDTO"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/alerts",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of alerts generated on any Container.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getContainerAlerts",
                    "parameters": [
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of alerts",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "resolved",
                            "description": "Alerts which have been resolved",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Alerts which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "severity",
                            "description": "Alert severities",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "alertTypeUuid",
                            "description": "Alert type ids",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/datastores",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of NFS Datastores.",
                    "notes": "Get the list of NFS Datastores mounted using Containers in the cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "get.dto.esx.NfsDatastoreInfoDTO"
                    },
                    "nickname": "getNfsDatastores",
                    "parameters": [],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/datastores/add_datastore",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Add an NFS Datastore.",
                    "notes": "Add an NFS Datastore.",
                    "type": "create.dto.esx.CreateNfsDatastoreStatusDTO",
                    "nickname": "createNfsDatastores",
                    "parameters": [
                        {
                            "description": "Add request",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.esx.CreateNfsDatastoreRequestDTO"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/datastores/remove_datastore",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Remove an NFS Datastore.",
                    "notes": "Remove an NFS Datastore.",
                    "type": "create.dto.esx.DeleteNfsDatastoreStatusDTO",
                    "nickname": "deleteNfsDatastores",
                    "parameters": [
                        {
                            "description": "Remove request",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.esx.DeleteNfsDatastoreRequestDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/events",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of events generated on any Container.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getContainerEvents",
                    "parameters": [
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of events",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Events which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/{id}",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "DELETE",
                    "summary": "Delete a Container.",
                    "notes": "Delete a Container with the specified id from the cluster.",
                    "type": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "deleteContainer",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "ignoreSmallFiles",
                            "description": "Ignore small file",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get a Container.",
                    "notes": "Get a Container with the specified id.",
                    "type": "get.dto.appliance.configuration.ContainerDTO",
                    "nickname": "getContainer",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "projection",
                            "description": "Projections on the attributes",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/{id}/alerts",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of alerts generated on a specified Container.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getAlertsForContainer",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of a Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of alerts",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "resolved",
                            "description": "Alerts which have been resolved",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Alerts which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "severity",
                            "description": "Alert severities",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "alertTypeUuid",
                            "description": "Alert type ids",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/{id}/events",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of events generated on a specified Container.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getEventsForContainer",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of a Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of events",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Events which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/{id}/stats/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the stats for a specified Container.",
                    "notes": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                    "type": "get.base.StatsResponse",
                    "nickname": "getContainerStats",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of a Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "metrics",
                            "description": "List of metrics",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "intervalInSecs",
                            "description": "Sampling interval of stats",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/containers/{id}/vdisks",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of VDisks.",
                    "notes": "Get the list of VDisks of the specified Container.",
                    "type": "array",
                    "items": {
                        "$ref": "get.dto.appliance.configuration.VDiskDTO"
                    },
                    "nickname": "getVDisksInContainer",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of a Container",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        }
    ],
    "models": {
        "create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.alerts.AlertSummaryDTO": {
            "id": "create.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.appliance.configuration.ContainerDTO": {
            "id": "create.dto.appliance.configuration.ContainerDTO",
            "required": [],
            "properties": {
                "advertisedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertSummary": {
                    "$ref": "create.dto.alerts.AlertSummaryDTO"
                },
                "compressionDelayInSecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "containerUuid": {
                    "type": "string"
                },
                "downMigrateTimesInSecs": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;"
                },
                "enableSoftwareEncryption": {
                    "type": "boolean"
                },
                "erasureCode": {
                    "type": "string"
                },
                "erasureCodeDelaySecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "fingerPrintOnWrite": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "create.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilmPolicy": {
                    "type": "string"
                },
                "isNutanixManaged": {
                    "type": "boolean"
                },
                "mappedRemoteContainers": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfsWhitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfsWhitelistInherited": {
                    "type": "boolean"
                },
                "onDiskDedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplogReplicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "randomIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seqIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "storagePoolId": {
                    "type": "string"
                },
                "storagePoolUuid": {
                    "type": "string"
                },
                "totalExplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "totalImplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "vstoreNameList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreRequestDTO": {
            "id": "create.dto.esx.CreateNfsDatastoreRequestDTO",
            "required": [],
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "datastoreName": {
                    "type": "string"
                },
                "nodeIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodeUuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "targetPath": {
                    "type": "string"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreStatusDTO": {
            "id": "create.dto.esx.CreateNfsDatastoreStatusDTO",
            "required": [],
            "properties": {
                "nodeSpecificStatus": {
                    "items": {
                        "$ref": "create.dto.esx.CreateNfsDatastoreStatusDTO$NodeSpecificCreateStatus"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.esx.CreateNfsDatastoreStatusDTO$NodeSpecificCreateStatus": {
            "id": "create.dto.esx.CreateNfsDatastoreStatusDTO$NodeSpecificCreateStatus",
            "required": [],
            "properties": {
                "capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "freeSpace": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "nodeIpAddress": {
                    "type": "string"
                },
                "nodeUuid": {
                    "type": "string"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreRequestDTO": {
            "id": "create.dto.esx.DeleteNfsDatastoreRequestDTO",
            "required": [],
            "properties": {
                "datastoreName": {
                    "type": "string"
                },
                "nodeIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nodeUuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreStatusDTO": {
            "id": "create.dto.esx.DeleteNfsDatastoreStatusDTO",
            "required": [],
            "properties": {
                "nodeSpecificStatus": {
                    "items": {
                        "$ref": "create.dto.esx.DeleteNfsDatastoreStatusDTO$NodeSpecificDeleteStatus"
                    },
                    "type": "array"
                }
            }
        },
        "create.dto.esx.DeleteNfsDatastoreStatusDTO$NodeSpecificDeleteStatus": {
            "id": "create.dto.esx.DeleteNfsDatastoreStatusDTO$NodeSpecificDeleteStatus",
            "required": [],
            "properties": {
                "message": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "nodeUuid": {
                    "type": "string"
                },
                "successful": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "create.dto.health.check.HealthSummaryDTO": {
            "id": "create.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.appliance.configuration.ContainerDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.appliance.configuration.ContainerDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.appliance.configuration.ContainerDTO"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.ErrorInfo": {
            "id": "get.base.ErrorInfo",
            "required": [],
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entityList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "get.base.Metadata": {
            "id": "get.base.Metadata",
            "required": [],
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "grandTotalEntities": {
                    "format": "int32",
                    "type": "integer"
                },
                "nextCursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previousCursor": {
                    "type": "string"
                },
                "searchString": {
                    "type": "string"
                },
                "sortCriteria": {
                    "type": "string"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalEntities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.base.StatsResponse": {
            "id": "get.base.StatsResponse",
            "required": [],
            "properties": {
                "statsSpecificResponses": {
                    "items": {
                        "$ref": "get.base.StatsResponse$StatsSpecificResponse"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.StatsResponse$StatsSpecificResponse": {
            "id": "get.base.StatsResponse$StatsSpecificResponse",
            "required": [],
            "properties": {
                "intervalInSecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "startTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "successful": {
                    "type": "boolean"
                },
                "values": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.EntityMetadata": {
            "id": "get.dto.EntityMetadata",
            "required": [],
            "properties": {
                "additionalFields": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "clusterUuid": {
                    "type": "string"
                },
                "contextHintField": {
                    "type": "string"
                },
                "contextHintValue": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "entityName": {
                    "type": "string"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.ResultContentDescriptor": {
            "id": "get.dto.ResultContentDescriptor",
            "required": [],
            "properties": {
                "metadata": {
                    "$ref": "get.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "get.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.ResultContentDescriptor$Perspective": {
            "id": "get.dto.ResultContentDescriptor$Perspective",
            "required": [],
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "get.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "get.dto.ResultMetadata": {
            "id": "get.dto.ResultMetadata",
            "required": [],
            "properties": {
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "get.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "get.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.dto.ResultMetadata$Filter": {
            "id": "get.dto.ResultMetadata$Filter",
            "required": [],
            "properties": {
                "displayForRhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "description": "Operator for the filter.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertCauseDTO": {
            "id": "get.dto.alerts.AlertCauseDTO",
            "required": [],
            "properties": {
                "actions": {
                    "description": "Possible actions to resolve this alert",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "additionalLinks": {
                    "description": "Additional links",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "alertNamespace": {
                    "description": "Namespace this alert belongs to",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cause": {
                    "description": "Detailed description",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "chartQueries": {
                    "$ref": "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;",
                    "description": "Charts that are relevant to this cause",
                    "typeName": "DEFAULT"
                },
                "details": {
                    "description": "Symptoms for this cause",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "hasGlobalDetails": {
                    "description": "Whether the alert has global details or not",
                    "type": "boolean",
                    "typeName": "DEFAULT"
                },
                "id": {
                    "description": "Cause Id",
                    "type": "string",
                    "typeName": "UUID_TYPE"
                },
                "numResolvedCount": {
                    "description": "Number of times this cause has resolved the alert",
                    "format": "int64",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "parentCauseId": {
                    "description": "Id of the alert/cause this is a possible cause for",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "title": {
                    "description": "Short description",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "troubleshootingSteps": {
                    "description": "Steps to determine whether this is the cause.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO": {
            "id": "get.dto.alerts.AlertDTO",
            "required": [],
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledgedByUsername": {
                    "type": "string"
                },
                "acknowledgedTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertDetails": {
                    "$ref": "get.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alertTitle": {
                    "type": "string"
                },
                "alertTypeUuid": {
                    "type": "string"
                },
                "autoResolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "checkId": {
                    "type": "string"
                },
                "clusterUuid": {
                    "type": "string"
                },
                "contextTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "contextValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "createdTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailedMessage": {
                    "type": "string"
                },
                "entityIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entityTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entityUuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "lastOccurrenceTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "nodeUuid": {
                    "type": "string"
                },
                "originatingClusterUuid": {
                    "type": "string"
                },
                "possibleCauses": {
                    "items": {
                        "$ref": "get.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolvedByUsername": {
                    "type": "string"
                },
                "resolvedTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "serviceVMId": {
                    "type": "string"
                },
                "severity": {
                    "description": "This field describes the severity of the alert.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "id": "get.dto.alerts.AlertDTO$AlertDetailsDTO",
            "required": [],
            "properties": {
                "metricDetails": {
                    "description": "List of metric details associated with the alert",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "notes": "List of metric details associated with the alert",
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "severityTrails": {
                    "description": "List that contains severity level change details",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "notes": "List that contains severity level change details",
                    "type": "array",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricDetails": {
            "id": "get.dto.alerts.AlertDTO$MetricDetails",
            "required": [],
            "properties": {
                "comparisonOperator": {
                    "description": "Comparison Operator to be applied for teh values.",
                    "notes": "Comparison Operator",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "conditionType": {
                    "description": "Condition Type that the current metric is associated with.",
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "notes": "Condition Type that the current metric is associated with.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "dataType": {
                    "description": "Data Type of the value.",
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "notes": "Data Type of the value.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "entityId": {
                    "description": "UUID of the entity",
                    "notes": "UUID of the entity",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "entityType": {
                    "description": "Entity Type",
                    "notes": "Entity Type",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricDisplayName": {
                    "description": "Display name of the metric",
                    "notes": "Display name of the metric",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricName": {
                    "description": "Name of the metric",
                    "notes": "Name of the metric",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricValueDetails": {
                    "description": "List of metric values at different instances of time in the alert lifecycle",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "notes": "List of metric values at different instances of time in the alert lifecycle",
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "unit": {
                    "description": "Unit of the metric value.",
                    "notes": "Unit of the metric value.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricValueDetails": {
            "id": "get.dto.alerts.AlertDTO$MetricValueDetails",
            "required": [],
            "properties": {
                "metricThresholdValue": {
                    "description": "Threshold value of the metric that was specified in the policy at that given time.",
                    "notes": "Threshold value of the metric that was specified in the policy at that given time.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricValue": {
                    "description": "Actual value of the metric at that given time.",
                    "notes": "Actual value of the metric at that given time.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "stateChangeTimeStampInUsecs": {
                    "description": "Time at which the alert's state change occurred.",
                    "format": "int64",
                    "notes": "Time at which the alert's state change occurred.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$SeverityTrail": {
            "id": "get.dto.alerts.AlertDTO$SeverityTrail",
            "required": [],
            "properties": {
                "severity": {
                    "description": "Severity level of the alert. Can be INFO, WARNING or CRITICAL",
                    "notes": "Severity level of the alert. Can be INFO, WARNING or CRITICAL",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "severityChangeTimestampInUsecs": {
                    "description": "Time at which the severity level change occurred",
                    "format": "int64",
                    "notes": "Time at which the severity level change occurred",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertSummaryDTO": {
            "id": "get.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.appliance.configuration.ContainerDTO": {
            "id": "get.dto.appliance.configuration.ContainerDTO",
            "required": [],
            "properties": {
                "advertisedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertSummary": {
                    "$ref": "get.dto.alerts.AlertSummaryDTO"
                },
                "clusterUuid": {
                    "description": " Uuid of the cluster this entity belongs to",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "compressionDelayInSecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "containerUuid": {
                    "type": "string"
                },
                "downMigrateTimesInSecs": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;"
                },
                "enableSoftwareEncryption": {
                    "type": "boolean"
                },
                "erasureCode": {
                    "type": "string"
                },
                "erasureCodeDelaySecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "fingerPrintOnWrite": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "get.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilmPolicy": {
                    "type": "string"
                },
                "isNutanixManaged": {
                    "type": "boolean"
                },
                "mappedRemoteContainers": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfsWhitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfsWhitelistInherited": {
                    "type": "boolean"
                },
                "onDiskDedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplogReplicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "randomIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seqIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "storagePoolId": {
                    "type": "string"
                },
                "storagePoolUuid": {
                    "type": "string"
                },
                "totalExplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "totalImplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "vstoreNameList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.appliance.configuration.VDiskDTO": {
            "id": "get.dto.appliance.configuration.VDiskDTO",
            "required": [],
            "properties": {
                "alertSummary": {
                    "$ref": "get.dto.alerts.AlertSummaryDTO"
                },
                "clusterUuid": {
                    "description": " Uuid of the cluster this entity belongs to",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "containerId": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "containerUuid": {
                    "type": "string"
                },
                "creationTimeInMicrosSinceEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "erasureCode": {
                    "type": "string"
                },
                "erasureCodeDelaySecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "fingerPrintOnWrite": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "get.dto.health.check.HealthSummaryDTO"
                },
                "immutable": {
                    "type": "boolean"
                },
                "iscsiLun": {
                    "format": "int32",
                    "type": "integer"
                },
                "iscsiTargetName": {
                    "type": "string"
                },
                "markedForRemoval": {
                    "type": "boolean",
                    "typeName": "DEFAULT"
                },
                "maxCapacityBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfsFile": {
                    "type": "boolean"
                },
                "nfsFileName": {
                    "type": "string"
                },
                "onDiskDedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "parentNfsFileName": {
                    "type": "string"
                },
                "qosFairshare": {
                    "type": "string"
                },
                "qosPriority": {
                    "type": "string"
                },
                "shared": {
                    "type": "boolean"
                },
                "snapshot": {
                    "type": "boolean"
                },
                "snapshots": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "storagePoolId": {
                    "type": "string"
                },
                "storagePoolName": {
                    "type": "string"
                },
                "storagePoolUuid": {
                    "type": "string"
                },
                "totalReservedCapacityBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "vdiskUuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.esx.NfsDatastoreInfoDTO": {
            "id": "get.dto.esx.NfsDatastoreInfoDTO",
            "required": [],
            "properties": {
                "capacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "containerId": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "containerUuid": {
                    "type": "string"
                },
                "datastoreName": {
                    "type": "string"
                },
                "freeSpace": {
                    "format": "int64",
                    "type": "integer"
                },
                "hostId": {
                    "type": "string"
                },
                "hostIpAddress": {
                    "type": "string"
                },
                "hostUuid": {
                    "type": "string"
                },
                "vmNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "get.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "get.dto.health.check.HealthSummaryDTO": {
            "id": "get.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "get.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.String&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "patch.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ContainerDTO&gt;": {
            "id": "patch.dto.RequestDTO&lt;patch.dto.appliance.configuration.ContainerDTO&gt;",
            "required": [],
            "properties": {
                "clusterUuid": {
                    "type": "string"
                },
                "genericDTO": {
                    "$ref": "patch.dto.appliance.configuration.ContainerDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "patch.dto.alerts.AlertSummaryDTO": {
            "id": "patch.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.appliance.configuration.ContainerDTO": {
            "id": "patch.dto.appliance.configuration.ContainerDTO",
            "required": [],
            "properties": {
                "advertisedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertSummary": {
                    "$ref": "patch.dto.alerts.AlertSummaryDTO"
                },
                "compressionDelayInSecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "containerUuid": {
                    "type": "string"
                },
                "downMigrateTimesInSecs": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;"
                },
                "enableSoftwareEncryption": {
                    "type": "boolean"
                },
                "erasureCode": {
                    "type": "string"
                },
                "erasureCodeDelaySecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "fingerPrintOnWrite": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "patch.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilmPolicy": {
                    "type": "string"
                },
                "isNutanixManaged": {
                    "type": "boolean"
                },
                "mappedRemoteContainers": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfsWhitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfsWhitelistInherited": {
                    "type": "boolean"
                },
                "onDiskDedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplogReplicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "randomIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seqIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "storagePoolId": {
                    "type": "string"
                },
                "storagePoolUuid": {
                    "type": "string"
                },
                "totalExplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "totalImplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "vstoreNameList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "patch.dto.health.check.HealthSummaryDTO": {
            "id": "patch.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "update.dto.alerts.AlertSummaryDTO": {
            "id": "update.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.appliance.configuration.ContainerDTO": {
            "id": "update.dto.appliance.configuration.ContainerDTO",
            "required": [],
            "properties": {
                "advertisedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertSummary": {
                    "$ref": "update.dto.alerts.AlertSummaryDTO"
                },
                "compressionDelayInSecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "containerUuid": {
                    "type": "string"
                },
                "downMigrateTimesInSecs": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;"
                },
                "enableSoftwareEncryption": {
                    "type": "boolean"
                },
                "erasureCode": {
                    "type": "string"
                },
                "erasureCodeDelaySecs": {
                    "format": "int32",
                    "type": "integer"
                },
                "fingerPrintOnWrite": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "ON"
                    ],
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "update.dto.health.check.HealthSummaryDTO"
                },
                "id": {
                    "type": "string"
                },
                "ilmPolicy": {
                    "type": "string"
                },
                "isNutanixManaged": {
                    "type": "boolean"
                },
                "mappedRemoteContainers": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nfsWhitelist": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nfsWhitelistInherited": {
                    "type": "boolean"
                },
                "onDiskDedup": {
                    "enum": [
                        "NONE",
                        "OFF",
                        "POST_PROCESS"
                    ],
                    "type": "string"
                },
                "oplogReplicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "randomIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replicationFactor": {
                    "format": "int32",
                    "type": "integer"
                },
                "seqIoPreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "storagePoolId": {
                    "type": "string"
                },
                "storagePoolUuid": {
                    "type": "string"
                },
                "totalExplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "totalImplicitReservedCapacity": {
                    "format": "int64",
                    "type": "integer"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "vstoreNameList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "update.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "update.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "update.dto.health.check.HealthSummaryDTO": {
            "id": "update.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "update.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        }
    }
}