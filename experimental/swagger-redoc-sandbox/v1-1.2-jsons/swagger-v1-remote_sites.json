{
    "apiVersion": "v1",
    "swaggerVersion": "1.2",
    "basePath": "https://any_cvm_ip:9440/PrismGateway/services/rest/v1",
    "resourcePath": "/remote_sites",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "apis": [
        {
            "internal": false,
            "path": "/remote_sites/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of Remote Sites.",
                    "notes": "Get the list of Remote Sites configured in the cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "get.dto.dr.RemoteSiteDTO"
                    },
                    "nickname": "getAllRemoteSites",
                    "parameters": [
                        {
                            "name": "names",
                            "description": "Remote Site names",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "metroCompatible",
                            "description": "Remote Site stretchable",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "fullDetails",
                            "description": "Remote cluster detail",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "remoteContainers",
                            "description": "Remote container to fetch",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "includeDeleted",
                            "description": "Include deleted",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "projection",
                            "description": "Projections on the attributes",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "PATCH",
                    "summary": "Modify a Remote Site.",
                    "notes": "Modify the configuration of the specified Remote Site.",
                    "type": "patch.dto.dr.RemoteSiteDTO",
                    "nickname": "patchRemoteSite",
                    "parameters": [
                        {
                            "description": "A Remote Site instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "patch.dto.RequestDTO&lt;patch.dto.dr.RemoteSiteDTO&gt;"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Add a Remote Site.",
                    "notes": "A remote cluster to be used as a DR site.",
                    "type": "create.dto.dr.RemoteSiteDTO",
                    "nickname": "addRemoteSite",
                    "parameters": [
                        {
                            "description": "A Remote Site instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.dr.RemoteSiteDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "PUT",
                    "summary": "Update a Remote Site.",
                    "notes": "Update the configuration of the specified Remote Site.",
                    "type": "update.dto.dr.RemoteSiteDTO",
                    "nickname": "updateRemoteSite",
                    "parameters": [
                        {
                            "description": "A Remote Site instance",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "update.dto.dr.RemoteSiteDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/alerts",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of alerts generated on any Remote Site.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getRemoteSiteAlerts",
                    "parameters": [
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of alerts",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "resolved",
                            "description": "Alerts which have been resolved",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Alerts which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "severity",
                            "description": "Alert severities",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "alertTypeUuid",
                            "description": "Alert type ids",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/dr_snapshots/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of Snapshots.",
                    "notes": "Get the list of all Snapshots created in Remote Sites.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;",
                    "nickname": "getAllRemoteSiteSnapshots",
                    "parameters": [
                        {
                            "name": "count",
                            "description": "Maximum number of DR Snapshots to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filterCriteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sortCriteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "fullDetails",
                            "description": "Whether to include consistency group / vm details",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/events",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of events generated on any Remote Site.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getRemoteSiteEvents",
                    "parameters": [
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of events",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Events which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/health_check_summary",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the health check summary for the Remote Sites.",
                    "notes": "",
                    "type": "get.dto.health.check.EntityTypeHealthCheckSummaryDTO",
                    "nickname": "getHealthCheckSummaryForRemoteSites",
                    "parameters": [
                        {
                            "name": "filterCriteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "detailedSummary",
                            "description": "Detailed summary",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/pending_replications/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get all pending replications.",
                    "notes": "Get the list of backlogged/pending replications in the cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "get.dto.dr.PendingReplicationDTO"
                    },
                    "nickname": "getPendingReplications",
                    "parameters": [
                        {
                            "name": "protectionDomainNames",
                            "description": "Protection Domain Names",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "remoteSiteNames",
                            "description": "Remote Site Names",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "DELETE",
                    "summary": "Delete a Remote Site.",
                    "notes": "Delete a Remote Site with the specified name from the cluster.",
                    "type": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "markRemoteSiteForRemoval",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get a Remote Site.",
                    "notes": "Get a Remote Site with the specified name.",
                    "type": "get.dto.dr.RemoteSiteDTO",
                    "nickname": "getRemoteSite",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "projection",
                            "description": "Projections on the attributes",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "fullDetails",
                            "description": "Remote cluster details",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "remoteContainers",
                            "description": "Remote container to fetch",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}/alerts",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of alerts generated on a specified Remote Site.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getAlertsForRemoteSite",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of alerts",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "resolved",
                            "description": "Alerts which have been resolved",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Alerts which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "severity",
                            "description": "Alert severities",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "alertTypeUuid",
                            "description": "Alert type ids",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}/dr_snapshots/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of Snapshots.",
                    "notes": "Get the list of Snapshots created in a particular Remote Site.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;",
                    "nickname": "getSnapshotsForRemoteSite",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of DR Snapshots to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filterCriteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sortCriteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "fullDetails",
                            "description": "Whether to include consistency group / vm details",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation"
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}/events",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the list of events generated on a specified Remote Site.",
                    "notes": "",
                    "type": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
                    "nickname": "getEventsForRemoteSite",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of events",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "acknowledged",
                            "description": "Events which have been acknowledged",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        },
                        {
                            "name": "page",
                            "description": "Page number",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}/pending_replications/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get all pending replications for the specified Remote Site.",
                    "notes": "Get the list of backlogged/pending replications for the specified Remote Site in the cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "get.dto.dr.PendingReplicationDTO"
                    },
                    "nickname": "getPendingReplicationsInRemote",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "protectionDomainNames",
                            "description": "Names of Protection Domains",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                }
            ]
        },
        {
            "internal": false,
            "path": "/remote_sites/{name}/stats/",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get the stats for a specified Remote Site.",
                    "notes": "If start time and end time are included in the query string, then historical stats are retrieved. Otherwise, the latest stats are retrieved.",
                    "type": "get.base.StatsResponse",
                    "nickname": "getRemoteSiteStats",
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the Remote Site",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "metrics",
                            "description": "List of metrics",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "startTimeInUsecs",
                            "description": "Start time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "endTimeInUsecs",
                            "description": "End time in microseconds",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "intervalInSecs",
                            "description": "Sampling interval of stats",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 500,
                            "message": "Any internal exception while performing this operation."
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "create.dto.alerts.AlertSummaryDTO": {
            "id": "create.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO": {
            "id": "create.dto.dr.BandwidthPolicyDTO",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "required": [
                "policyName"
            ],
            "properties": {
                "bandwidthConfigurations": {
                    "description": "List of the policy configurations.",
                    "items": {
                        "$ref": "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "defaultBandwidthLimit": {
                    "description": "Default bandwidth limit",
                    "format": "int32",
                    "notes": "This bandwidth is used in the time which is not covered by any of the existing schedule. Because every schedule will be having their own bandwidth limit defined.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "policyName": {
                    "description": "Name of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "id": "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration",
            "required": [],
            "properties": {
                "bandwidthLimit": {
                    "description": "Bandwidth limit for the policy.",
                    "format": "int32",
                    "notes": "At the time of policy consideration this bandwidth limit will be used to limit the bandwidth used.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "daysSelected": {
                    "description": "Days selected in a week.",
                    "format": "int32",
                    "notes": "This field describes the selected days of the week for this policy configuration.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "endTime": {
                    "description": "End time of the policy",
                    "format": "int64",
                    "notes": "End time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "startTime": {
                    "description": "Start time of the policy",
                    "format": "int64",
                    "notes": "Start time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.L2NetworkMappingDTO": {
            "id": "create.dto.dr.L2NetworkMappingDTO",
            "required": [],
            "properties": {
                "destHypervisorType": {
                    "type": "string"
                },
                "destNetworkName": {
                    "type": "string"
                },
                "srcHypervisorType": {
                    "type": "string"
                },
                "srcNetworkName": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.NetworkMappingDTO": {
            "id": "create.dto.dr.NetworkMappingDTO",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "required": [],
            "properties": {
                "l2NetworkMappings": {
                    "description": "List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks",
                    "items": {
                        "$ref": "create.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "uuid": {
                    "description": "Network mapping identifier for this remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.RemoteSiteDTO": {
            "id": "create.dto.dr.RemoteSiteDTO",
            "description": "remote-site",
            "required": [],
            "properties": {
                "alertSummary": {
                    "$ref": "create.dto.alerts.AlertSummaryDTO"
                },
                "bandwidthPolicy": {
                    "$ref": "create.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidthPolicyEnabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudType": {
                    "description": "Cloud type",
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "clusterExternalDataServicesIPAddress": {
                    "type": "string"
                },
                "clusterId": {
                    "format": "int64",
                    "type": "integer"
                },
                "clusterIncarnationId": {
                    "format": "int64",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "credentialName": {
                    "description": "Credential Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cvmName": {
                    "description": "CVM Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "healthSummary": {
                    "$ref": "create.dto.health.check.HealthSummaryDTO"
                },
                "latencyInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxBps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metroReady": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "networkMapping": {
                    "$ref": "create.dto.dr.NetworkMappingDTO"
                },
                "proxyEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "description": "Region",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remoteIpPorts": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
                    "description": "Dictionary having IP address as key and Port as value",
                    "typeName": "DEFAULT"
                },
                "remoteVStoreInfo": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;"
                },
                "replicationLinks": {
                    "items": {
                        "$ref": "create.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "sshEnabled": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "uuid": {
                    "description": "Uuid of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vstoreNameMap": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
                    "description": "Dictionary having map of local vStore to remote vStore",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.ReplicationLinkDTO": {
            "id": "create.dto.dr.ReplicationLinkDTO",
            "required": [],
            "properties": {
                "currentReplicatingSnapshotId": {
                    "type": "string"
                },
                "currentReplicatingSnapshotTotalBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "currentReplicatingSnapshotTransmittedBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastReplicationEndTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastReplicationStartTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastSuccessfulReplicationSnapshotId": {
                    "type": "string"
                },
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteName": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                }
            }
        },
        "create.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "create.dto.health.check.HealthSummaryDTO": {
            "id": "create.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.ResultContentDescriptor"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.dr.SnapshotDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.dr.SnapshotDTO"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.ErrorInfo": {
            "id": "get.base.ErrorInfo",
            "required": [],
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entityList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "get.base.Metadata": {
            "id": "get.base.Metadata",
            "required": [],
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "endIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "grandTotalEntities": {
                    "format": "int32",
                    "type": "integer"
                },
                "nextCursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previousCursor": {
                    "type": "string"
                },
                "searchString": {
                    "type": "string"
                },
                "sortCriteria": {
                    "type": "string"
                },
                "startIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalEntities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.base.StatsResponse": {
            "id": "get.base.StatsResponse",
            "required": [],
            "properties": {
                "statsSpecificResponses": {
                    "items": {
                        "$ref": "get.base.StatsResponse$StatsSpecificResponse"
                    },
                    "type": "array"
                }
            }
        },
        "get.base.StatsResponse$StatsSpecificResponse": {
            "id": "get.base.StatsResponse$StatsSpecificResponse",
            "required": [],
            "properties": {
                "intervalInSecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "startTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "successful": {
                    "type": "boolean"
                },
                "values": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.EntityMetadata": {
            "id": "get.dto.EntityMetadata",
            "required": [],
            "properties": {
                "additionalFields": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "clusterUuid": {
                    "type": "string"
                },
                "contextHintField": {
                    "type": "string"
                },
                "contextHintValue": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "entityName": {
                    "type": "string"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                }
            }
        },
        "get.dto.ResultContentDescriptor": {
            "id": "get.dto.ResultContentDescriptor",
            "required": [],
            "properties": {
                "metadata": {
                    "$ref": "get.dto.ResultMetadata"
                },
                "perspectives": {
                    "items": {
                        "$ref": "get.dto.ResultContentDescriptor$Perspective"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.ResultContentDescriptor$Perspective": {
            "id": "get.dto.ResultContentDescriptor$Perspective",
            "required": [],
            "properties": {
                "format": {
                    "enum": [
                        "TABLE",
                        "BAR_CHART",
                        "PIE_CHART",
                        "TIME_SERIES",
                        "KEY_VALUE",
                        "COUNT",
                        "HEALTH_SUMMARY",
                        "ALERT_INFO",
                        "CAPACITY",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "get.dto.ResultMetadata"
                },
                "query": {},
                "result": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "get.dto.ResultMetadata": {
            "id": "get.dto.ResultMetadata",
            "required": [],
            "properties": {
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filters": {
                    "items": {
                        "$ref": "get.dto.ResultMetadata$Filter"
                    },
                    "type": "array"
                },
                "instances": {
                    "items": {
                        "$ref": "get.dto.EntityMetadata"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "get.dto.ResultMetadata$Filter": {
            "id": "get.dto.ResultMetadata$Filter",
            "required": [],
            "properties": {
                "displayForRhs": {
                    "type": "string"
                },
                "lhs": {
                    "type": "string"
                },
                "operator": {
                    "description": "Operator for the filter.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "rhs": {
                    "type": "string"
                }
            }
        },
        "get.dto.alerts.AlertCauseDTO": {
            "id": "get.dto.alerts.AlertCauseDTO",
            "required": [],
            "properties": {
                "actions": {
                    "description": "Possible actions to resolve this alert",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "additionalLinks": {
                    "description": "Additional links",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "alertNamespace": {
                    "description": "Namespace this alert belongs to",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cause": {
                    "description": "Detailed description",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "chartQueries": {
                    "$ref": "get.base.EntityCollection&lt;get.dto.ResultContentDescriptor&gt;",
                    "description": "Charts that are relevant to this cause",
                    "typeName": "DEFAULT"
                },
                "details": {
                    "description": "Symptoms for this cause",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "hasGlobalDetails": {
                    "description": "Whether the alert has global details or not",
                    "type": "boolean",
                    "typeName": "DEFAULT"
                },
                "id": {
                    "description": "Cause Id",
                    "type": "string",
                    "typeName": "UUID_TYPE"
                },
                "numResolvedCount": {
                    "description": "Number of times this cause has resolved the alert",
                    "format": "int64",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "parentCauseId": {
                    "description": "Id of the alert/cause this is a possible cause for",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "title": {
                    "description": "Short description",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "troubleshootingSteps": {
                    "description": "Steps to determine whether this is the cause.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO": {
            "id": "get.dto.alerts.AlertDTO",
            "required": [],
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "acknowledgedByUsername": {
                    "type": "string"
                },
                "acknowledgedTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "alertDetails": {
                    "$ref": "get.dto.alerts.AlertDTO$AlertDetailsDTO"
                },
                "alertTitle": {
                    "type": "string"
                },
                "alertTypeUuid": {
                    "type": "string"
                },
                "autoResolved": {
                    "type": "boolean"
                },
                "categories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "checkId": {
                    "type": "string"
                },
                "clusterUuid": {
                    "type": "string"
                },
                "contextTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "contextValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "createdTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "detailedMessage": {
                    "type": "string"
                },
                "entityIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entityTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entityUuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "impact": {
                    "type": "string"
                },
                "lastOccurrenceTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "nodeUuid": {
                    "type": "string"
                },
                "originatingClusterUuid": {
                    "type": "string"
                },
                "possibleCauses": {
                    "items": {
                        "$ref": "get.dto.alerts.AlertCauseDTO"
                    },
                    "type": "array"
                },
                "resolved": {
                    "type": "boolean"
                },
                "resolvedByUsername": {
                    "type": "string"
                },
                "resolvedTimeStampInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "serviceVMId": {
                    "type": "string"
                },
                "severity": {
                    "description": "This field describes the severity of the alert.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$AlertDetailsDTO": {
            "id": "get.dto.alerts.AlertDTO$AlertDetailsDTO",
            "required": [],
            "properties": {
                "metricDetails": {
                    "description": "List of metric details associated with the alert",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$MetricDetails"
                    },
                    "notes": "List of metric details associated with the alert",
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "severityTrails": {
                    "description": "List that contains severity level change details",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$SeverityTrail"
                    },
                    "notes": "List that contains severity level change details",
                    "type": "array",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricDetails": {
            "id": "get.dto.alerts.AlertDTO$MetricDetails",
            "required": [],
            "properties": {
                "comparisonOperator": {
                    "description": "Comparison Operator to be applied for teh values.",
                    "notes": "Comparison Operator",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "conditionType": {
                    "description": "Condition Type that the current metric is associated with.",
                    "enum": [
                        "STATIC_THRESHOLD",
                        "ANOMALY",
                        "SAFETY_ZONE"
                    ],
                    "notes": "Condition Type that the current metric is associated with.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "dataType": {
                    "description": "Data Type of the value.",
                    "enum": [
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "STRING"
                    ],
                    "notes": "Data Type of the value.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "entityId": {
                    "description": "UUID of the entity",
                    "notes": "UUID of the entity",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "entityType": {
                    "description": "Entity Type",
                    "notes": "Entity Type",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricDisplayName": {
                    "description": "Display name of the metric",
                    "notes": "Display name of the metric",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricName": {
                    "description": "Name of the metric",
                    "notes": "Name of the metric",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricValueDetails": {
                    "description": "List of metric values at different instances of time in the alert lifecycle",
                    "items": {
                        "$ref": "get.dto.alerts.AlertDTO$MetricValueDetails"
                    },
                    "notes": "List of metric values at different instances of time in the alert lifecycle",
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "unit": {
                    "description": "Unit of the metric value.",
                    "notes": "Unit of the metric value.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$MetricValueDetails": {
            "id": "get.dto.alerts.AlertDTO$MetricValueDetails",
            "required": [],
            "properties": {
                "metricThresholdValue": {
                    "description": "Threshold value of the metric that was specified in the policy at that given time.",
                    "notes": "Threshold value of the metric that was specified in the policy at that given time.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "metricValue": {
                    "description": "Actual value of the metric at that given time.",
                    "notes": "Actual value of the metric at that given time.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "stateChangeTimeStampInUsecs": {
                    "description": "Time at which the alert's state change occurred.",
                    "format": "int64",
                    "notes": "Time at which the alert's state change occurred.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertDTO$SeverityTrail": {
            "id": "get.dto.alerts.AlertDTO$SeverityTrail",
            "required": [],
            "properties": {
                "severity": {
                    "description": "Severity level of the alert. Can be INFO, WARNING or CRITICAL",
                    "notes": "Severity level of the alert. Can be INFO, WARNING or CRITICAL",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "severityChangeTimestampInUsecs": {
                    "description": "Time at which the severity level change occurred",
                    "format": "int64",
                    "notes": "Time at which the severity level change occurred",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.alerts.AlertSummaryDTO": {
            "id": "get.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.BandwidthPolicyDTO": {
            "id": "get.dto.dr.BandwidthPolicyDTO",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "required": [],
            "properties": {
                "bandwidthConfigurations": {
                    "description": "List of the policy configurations.",
                    "items": {
                        "$ref": "get.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "defaultBandwidthLimit": {
                    "description": "Default bandwidth limit",
                    "format": "int32",
                    "notes": "This bandwidth is used in the time which is not covered by any of the existing schedule. Because every schedule will be having their own bandwidth limit defined.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "policyName": {
                    "description": "Name of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "policyUuid": {
                    "description": "Uuid of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "id": "get.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration",
            "required": [],
            "properties": {
                "bandwidthLimit": {
                    "description": "Bandwidth limit for the policy.",
                    "format": "int32",
                    "notes": "At the time of policy consideration this bandwidth limit will be used to limit the bandwidth used.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "daysSelected": {
                    "description": "Days selected in a week.",
                    "format": "int32",
                    "notes": "This field describes the selected days of the week for this policy configuration.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "endTime": {
                    "description": "End time of the policy",
                    "format": "int64",
                    "notes": "End time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "scheduleUuid": {
                    "description": "Uuid of the bandwidth schedule configuration.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "startTime": {
                    "description": "Start time of the policy",
                    "format": "int64",
                    "notes": "Start time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.L2NetworkMappingDTO": {
            "id": "get.dto.dr.L2NetworkMappingDTO",
            "required": [],
            "properties": {
                "destHypervisorType": {
                    "type": "string"
                },
                "destNetworkName": {
                    "type": "string"
                },
                "srcHypervisorType": {
                    "type": "string"
                },
                "srcNetworkName": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.NetworkMappingDTO": {
            "id": "get.dto.dr.NetworkMappingDTO",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "required": [],
            "properties": {
                "l2NetworkMappings": {
                    "description": "List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks",
                    "items": {
                        "$ref": "get.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "uuid": {
                    "description": "Network mapping identifier for this remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.NfsFile": {
            "id": "get.dto.dr.NfsFile",
            "required": [],
            "properties": {
                "consistencyGroup": {
                    "type": "string"
                },
                "nfsFilePath": {
                    "type": "string"
                },
                "nfsHandle": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.PendingReplicationDTO": {
            "id": "get.dto.dr.PendingReplicationDTO",
            "required": [],
            "properties": {
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteName": {
                    "type": "string"
                },
                "snapshot": {
                    "$ref": "get.dto.dr.SnapshotDTO"
                }
            }
        },
        "get.dto.dr.RemoteSiteDTO": {
            "id": "get.dto.dr.RemoteSiteDTO",
            "description": "remote-site",
            "required": [],
            "properties": {
                "alertSummary": {
                    "$ref": "get.dto.alerts.AlertSummaryDTO"
                },
                "bandwidthPolicy": {
                    "$ref": "get.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidthPolicyEnabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudType": {
                    "description": "Cloud type",
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "clusterArch": {
                    "description": "The remote site architecture type. e.g: x86_64, ppc64le.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "clusterExternalDataServicesIPAddress": {
                    "type": "string"
                },
                "clusterId": {
                    "format": "int64",
                    "type": "integer"
                },
                "clusterIncarnationId": {
                    "format": "int64",
                    "type": "integer"
                },
                "clusterType": {
                    "description": "Nature of the remote site e.g: light compute, SNB.",
                    "items": {
                        "enum": [
                            "LIGHT_COMPUTE",
                            "SINGLE_NODE_BACKUP"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "credentialName": {
                    "description": "Credential Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cvmName": {
                    "description": "CVM Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "healthSummary": {
                    "$ref": "get.dto.health.check.HealthSummaryDTO"
                },
                "latencyInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxBps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metroReady": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "networkMapping": {
                    "$ref": "get.dto.dr.NetworkMappingDTO"
                },
                "proxyEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "description": "Region",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remoteIpPorts": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
                    "description": "Dictionary having IP address as key and Port as value",
                    "typeName": "DEFAULT"
                },
                "remoteVStoreInfo": {
                    "$ref": "java.util.Map&lt;java.lang.String, get.dto.dr.RemoteSiteDTO$VStoreInfo&gt;"
                },
                "replicationLinks": {
                    "items": {
                        "$ref": "get.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "sshEnabled": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "uuid": {
                    "description": "Uuid of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vstoreNameMap": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
                    "description": "Dictionary having map of local vStore to remote vStore",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.ReplicationLinkDTO": {
            "id": "get.dto.dr.ReplicationLinkDTO",
            "required": [],
            "properties": {
                "currentReplicatingSnapshotId": {
                    "type": "string"
                },
                "currentReplicatingSnapshotTotalBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "currentReplicatingSnapshotTransmittedBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastReplicationEndTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastReplicationStartTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastSuccessfulReplicationSnapshotId": {
                    "type": "string"
                },
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteName": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                }
            }
        },
        "get.dto.dr.SnapshotDTO": {
            "id": "get.dto.dr.SnapshotDTO",
            "required": [],
            "properties": {
                "consistencyGroups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "exclusiveUsageInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "locatedRemoteSiteName": {
                    "type": "string"
                },
                "nfsFiles": {
                    "items": {
                        "$ref": "get.dto.dr.NfsFile"
                    },
                    "type": "array"
                },
                "oobScheduleIds": {
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshotCreateTimeUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshotExpiryTimeUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "snapshotUuid": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "EXPIRED",
                        "RETAIN_FOREVER",
                        "AVAILABLE",
                        "SCHEDULED"
                    ],
                    "type": "string"
                },
                "vms": {
                    "items": {
                        "$ref": "get.dto.dr.VirtualMachine"
                    },
                    "type": "array"
                },
                "volumeGroups": {
                    "items": {
                        "$ref": "get.dto.dr.VolumeGroup"
                    },
                    "type": "array"
                }
            }
        },
        "get.dto.dr.VirtualMachine": {
            "id": "get.dto.dr.VirtualMachine",
            "required": [],
            "properties": {
                "appConsistentSnapshots": {
                    "description": "Whether consistency group performs app consistent snapshots",
                    "type": "boolean",
                    "typeName": "DEFAULT"
                },
                "consistencyGroup": {
                    "description": "Consistency group of a vm",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "relatedEntityUuids": {
                    "description": "List of UUIDs of entities related to this VM e.g. the attached volume groups",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "vmFiles": {
                    "description": "Files composing the VM",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "vmHandle": {
                    "description": "Internal data-structure used by Cerebro to uniquely identify a vm Should it be displayed to user?",
                    "format": "int64",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "vmId": {
                    "description": "Unique identifier of a virtual machine within a Hypervisor.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vmName": {
                    "description": "Display name of a virtual machine",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vmPowerStateOnRecovery": {
                    "description": "Power state after vm recovery. Default power state is POWEREDOFF.",
                    "enum": [
                        "Powered Off",
                        "Powered On",
                        "Power state at time of snapshot"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vmRecoverability": {
                    "description": "Describes this VM's recovery capabilities",
                    "items": {
                        "$ref": "get.dto.dr.VmRecoverabilityDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.VmRecoverabilityDTO": {
            "id": "get.dto.dr.VmRecoverabilityDTO",
            "required": [],
            "properties": {
                "cerebroError": {
                    "description": "Cerebro error code for why VM can't be recovered/migrated",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "reason": {
                    "description": "Human-readable string why VM can't be recovered/migrated",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remoteSite": {
                    "description": "Name of the remote site where this VM can't be recovered (Optional)",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.VolumeGroup": {
            "id": "get.dto.dr.VolumeGroup",
            "required": [],
            "properties": {
                "consistencyGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nfsFilePaths": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "relatedEntityUuids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "volumeGroupUuid": {
                    "type": "string"
                }
            }
        },
        "get.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "get.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "get.dto.health.check.HealthSummaryDTO": {
            "id": "get.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "get.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;get.dto.alerts.AlertDTO$AlertSeverity, get.base.EntityCollection&lt;get.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, get.dto.dr.RemoteSiteDTO$VStoreInfo&gt;": {
            "id": "java.util.Map&lt;java.lang.String, get.dto.dr.RemoteSiteDTO$VStoreInfo&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, get.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.String&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;get.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, patch.dto.dr.RemoteSiteDTO$VStoreInfo&gt;": {
            "id": "java.util.Map&lt;java.lang.String, patch.dto.dr.RemoteSiteDTO$VStoreInfo&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, update.dto.dr.RemoteSiteDTO$VStoreInfo&gt;": {
            "id": "java.util.Map&lt;java.lang.String, update.dto.dr.RemoteSiteDTO$VStoreInfo&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "patch.dto.RequestDTO&lt;patch.dto.dr.RemoteSiteDTO&gt;": {
            "id": "patch.dto.RequestDTO&lt;patch.dto.dr.RemoteSiteDTO&gt;",
            "required": [],
            "properties": {
                "clusterUuid": {
                    "type": "string"
                },
                "genericDTO": {
                    "$ref": "patch.dto.dr.RemoteSiteDTO"
                },
                "operation": {
                    "type": "string"
                }
            }
        },
        "patch.dto.alerts.AlertSummaryDTO": {
            "id": "patch.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;patch.dto.alerts.AlertDTO$AlertSeverity, patch.base.EntityCollection&lt;patch.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "patch.dto.dr.BandwidthPolicyDTO": {
            "id": "patch.dto.dr.BandwidthPolicyDTO",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "required": [
                "policyUuid"
            ],
            "properties": {
                "bandwidthConfigurations": {
                    "description": "List of the policy configurations.",
                    "items": {
                        "$ref": "patch.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "defaultBandwidthLimit": {
                    "description": "Default bandwidth limit",
                    "format": "int32",
                    "notes": "This bandwidth is used in the time which is not covered by any of the existing schedule. Because every schedule will be having their own bandwidth limit defined.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "policyName": {
                    "description": "Name of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "policyUuid": {
                    "description": "Uuid of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "patch.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "id": "patch.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration",
            "required": [
                "scheduleUuid"
            ],
            "properties": {
                "bandwidthLimit": {
                    "description": "Bandwidth limit for the policy.",
                    "format": "int32",
                    "notes": "At the time of policy consideration this bandwidth limit will be used to limit the bandwidth used.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "daysSelected": {
                    "description": "Days selected in a week.",
                    "format": "int32",
                    "notes": "This field describes the selected days of the week for this policy configuration.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "endTime": {
                    "description": "End time of the policy",
                    "format": "int64",
                    "notes": "End time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "scheduleUuid": {
                    "description": "Uuid of the bandwidth schedule configuration.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "startTime": {
                    "description": "Start time of the policy",
                    "format": "int64",
                    "notes": "Start time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "patch.dto.dr.L2NetworkMappingDTO": {
            "id": "patch.dto.dr.L2NetworkMappingDTO",
            "required": [],
            "properties": {
                "destHypervisorType": {
                    "type": "string"
                },
                "destNetworkName": {
                    "type": "string"
                },
                "srcHypervisorType": {
                    "type": "string"
                },
                "srcNetworkName": {
                    "type": "string"
                }
            }
        },
        "patch.dto.dr.NetworkMappingDTO": {
            "id": "patch.dto.dr.NetworkMappingDTO",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "required": [],
            "properties": {
                "l2NetworkMappings": {
                    "description": "List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks",
                    "items": {
                        "$ref": "patch.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "uuid": {
                    "description": "Network mapping identifier for this remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "patch.dto.dr.RemoteSiteDTO": {
            "id": "patch.dto.dr.RemoteSiteDTO",
            "description": "remote-site",
            "required": [],
            "properties": {
                "alertSummary": {
                    "$ref": "patch.dto.alerts.AlertSummaryDTO"
                },
                "bandwidthPolicy": {
                    "$ref": "patch.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidthPolicyEnabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudType": {
                    "description": "Cloud type",
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "clusterExternalDataServicesIPAddress": {
                    "type": "string"
                },
                "clusterId": {
                    "format": "int64",
                    "type": "integer"
                },
                "clusterIncarnationId": {
                    "format": "int64",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "credentialName": {
                    "description": "Credential Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cvmName": {
                    "description": "CVM Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "healthSummary": {
                    "$ref": "patch.dto.health.check.HealthSummaryDTO"
                },
                "latencyInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxBps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metroReady": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "networkMapping": {
                    "$ref": "patch.dto.dr.NetworkMappingDTO"
                },
                "proxyEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "description": "Region",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remoteIpPorts": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
                    "description": "Dictionary having IP address as key and Port as value",
                    "typeName": "DEFAULT"
                },
                "remoteVStoreInfo": {
                    "$ref": "java.util.Map&lt;java.lang.String, patch.dto.dr.RemoteSiteDTO$VStoreInfo&gt;"
                },
                "replicationLinks": {
                    "items": {
                        "$ref": "patch.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "sshEnabled": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "uuid": {
                    "description": "Uuid of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vstoreNameMap": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
                    "description": "Dictionary having map of local vStore to remote vStore",
                    "typeName": "DEFAULT"
                }
            }
        },
        "patch.dto.dr.ReplicationLinkDTO": {
            "id": "patch.dto.dr.ReplicationLinkDTO",
            "required": [],
            "properties": {
                "currentReplicatingSnapshotId": {
                    "type": "string"
                },
                "currentReplicatingSnapshotTotalBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "currentReplicatingSnapshotTransmittedBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastReplicationEndTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastReplicationStartTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastSuccessfulReplicationSnapshotId": {
                    "type": "string"
                },
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteName": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                }
            }
        },
        "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;patch.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "patch.dto.health.check.HealthSummaryDTO": {
            "id": "patch.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "patch.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, patch.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "update.dto.alerts.AlertSummaryDTO": {
            "id": "update.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alertSummaries": {
                    "$ref": "java.util.Map&lt;update.dto.alerts.AlertDTO$AlertSeverity, update.base.EntityCollection&lt;update.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "update.dto.dr.BandwidthPolicyDTO": {
            "id": "update.dto.dr.BandwidthPolicyDTO",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "required": [
                "policyUuid"
            ],
            "properties": {
                "bandwidthConfigurations": {
                    "description": "List of the policy configurations.",
                    "items": {
                        "$ref": "update.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "defaultBandwidthLimit": {
                    "description": "Default bandwidth limit",
                    "format": "int32",
                    "notes": "This bandwidth is used in the time which is not covered by any of the existing schedule. Because every schedule will be having their own bandwidth limit defined.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "policyName": {
                    "description": "Name of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "policyUuid": {
                    "description": "Uuid of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "update.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "id": "update.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration",
            "required": [
                "scheduleUuid"
            ],
            "properties": {
                "bandwidthLimit": {
                    "description": "Bandwidth limit for the policy.",
                    "format": "int32",
                    "notes": "At the time of policy consideration this bandwidth limit will be used to limit the bandwidth used.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "daysSelected": {
                    "description": "Days selected in a week.",
                    "format": "int32",
                    "notes": "This field describes the selected days of the week for this policy configuration.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "endTime": {
                    "description": "End time of the policy",
                    "format": "int64",
                    "notes": "End time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "scheduleUuid": {
                    "description": "Uuid of the bandwidth schedule configuration.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "startTime": {
                    "description": "Start time of the policy",
                    "format": "int64",
                    "notes": "Start time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "update.dto.dr.L2NetworkMappingDTO": {
            "id": "update.dto.dr.L2NetworkMappingDTO",
            "required": [],
            "properties": {
                "destHypervisorType": {
                    "type": "string"
                },
                "destNetworkName": {
                    "type": "string"
                },
                "srcHypervisorType": {
                    "type": "string"
                },
                "srcNetworkName": {
                    "type": "string"
                }
            }
        },
        "update.dto.dr.NetworkMappingDTO": {
            "id": "update.dto.dr.NetworkMappingDTO",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "required": [],
            "properties": {
                "l2NetworkMappings": {
                    "description": "List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks",
                    "items": {
                        "$ref": "update.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "uuid": {
                    "description": "Network mapping identifier for this remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "update.dto.dr.RemoteSiteDTO": {
            "id": "update.dto.dr.RemoteSiteDTO",
            "description": "remote-site",
            "required": [],
            "properties": {
                "alertSummary": {
                    "$ref": "update.dto.alerts.AlertSummaryDTO"
                },
                "bandwidthPolicy": {
                    "$ref": "update.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidthPolicyEnabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloudType": {
                    "description": "Cloud type",
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "clusterExternalDataServicesIPAddress": {
                    "type": "string"
                },
                "clusterId": {
                    "format": "int64",
                    "type": "integer"
                },
                "clusterIncarnationId": {
                    "format": "int64",
                    "type": "integer"
                },
                "compressionEnabled": {
                    "type": "boolean"
                },
                "credentialName": {
                    "description": "Credential Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cvmName": {
                    "description": "CVM Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "healthSummary": {
                    "$ref": "update.dto.health.check.HealthSummaryDTO"
                },
                "latencyInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "markedForRemoval": {
                    "type": "boolean"
                },
                "maxBps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metroReady": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "networkMapping": {
                    "$ref": "update.dto.dr.NetworkMappingDTO"
                },
                "proxyEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "description": "Region",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remoteIpPorts": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
                    "description": "Dictionary having IP address as key and Port as value",
                    "typeName": "DEFAULT"
                },
                "remoteVStoreInfo": {
                    "$ref": "java.util.Map&lt;java.lang.String, update.dto.dr.RemoteSiteDTO$VStoreInfo&gt;"
                },
                "replicationLinks": {
                    "items": {
                        "$ref": "update.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "sshEnabled": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usageStats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "uuid": {
                    "description": "Uuid of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vstoreNameMap": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
                    "description": "Dictionary having map of local vStore to remote vStore",
                    "typeName": "DEFAULT"
                }
            }
        },
        "update.dto.dr.ReplicationLinkDTO": {
            "id": "update.dto.dr.ReplicationLinkDTO",
            "required": [],
            "properties": {
                "currentReplicatingSnapshotId": {
                    "type": "string"
                },
                "currentReplicatingSnapshotTotalBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "currentReplicatingSnapshotTransmittedBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lastReplicationEndTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastReplicationStartTimeInUsecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastSuccessfulReplicationSnapshotId": {
                    "type": "string"
                },
                "protectionDomainName": {
                    "type": "string"
                },
                "remoteSiteName": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                }
            }
        },
        "update.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "update.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checksInError": {
                    "$ref": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailedCheckSummary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entityType": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filterCriteria": {
                    "type": "string"
                },
                "healthSummary": {
                    "$ref": "java.util.Map&lt;update.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "update.dto.health.check.HealthSummaryDTO": {
            "id": "update.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entityTypeSummaries": {
                    "items": {
                        "$ref": "update.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "healthCheckSummaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, update.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "healthStatus": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        }
    }
}