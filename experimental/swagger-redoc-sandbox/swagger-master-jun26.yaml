swagger: '2.0'
info:
  title: Nutanix Enterprise Cloud API (Prism Central)
  #TODO description:
    #TODO - tune up this section (tables, validate this is correct, etc)
    #TODO - morph philosophy to more accurate reflect current state and declarative formatting
    #TODO - validate rule set is fully accurate (bounce off of super linter validation sets?)
    #TODO - Add linkage to the new restful-api-guidelines public documentation
  description: |
    # Introduction
    ## Philosophy
    REST API 3.0 follows an Intentful API philosophy. The fundamental idea is to move
    programming from the user to the machine thereby lowering the skillset requirements
    from the datacenter admin. The user needs to specify the desired end state of any entity
    and the system is responsible to compile and execute a series of steps that will take the
    entity from the current state to the desired state. Progress towards any desired state is
    tracked via waits and events.

    All kinds of entity and entity lists follow a homogenous specification format. This allows
    for ease of programming where multiple kinds of entity are involved. Further, this
    enables the user to get familiar with the API as a whole quickly.

    Intentful APIs dramatically reduce the number of action verbs needed. Most changes
    can be achieved by specifying desired state rather than via a series of action verbs that
    specify the journey to the end state.

    ## Terminology
    **Entity :** Any object that is managed via the API.<br>
    **Kind :** The kind represents the type of an entity. E.g. vm, alert<br>
    **Resource Kind :** A kind that represents a physical or virtual infrastructure resource. E.g.
    vm, app, volume_group.<br>
    **Helper Kind :** A kind that is not an infrastructure resource but represents entities that
    are used in conjunction with infrastructure resources. E.g. alert, event, status. <br>
    **Basic Resource Kind :** A Basic kind is a primary resource type. E.g. vm <br>
    **Related Resource Kind :** Related kinds are kinds of entities that are automatically
    defined by the system and relate to basic kinds. E.g. vm_snapshot. <br>
    **Type :** Subcategories or subobjects within top level resource types. E.g. reference <br>
    **ResourceLimit :** A kind that represents a quota of resources of various types. <br>
    **Snapshot :** A point in time state of resources and policies of an entity. <br>
    **Backup :** An automatically created aggregation object that collects all the snapshots for
    the same object within the same resource pool together. <br>
    **Profile :** A profile is a set of resource and policy specifications that can be directly
    applied to an entity. <br>
    **Template :** A template is a complete specification from which valid entities can be
    generated given certain input parameters. <br>
    **"spec" :** A section in the json representation of an entity that expresses the desired
    state of the entity. <br>
    **"status" :** A section in the json representation of an entity that expresses the current
    state of the entity. <br>

    ## Rules
    * The "metadata" section has fields that relate to all kinds of entities and are
    instantly updateable by the system.
    * The "spec" section has everything that cannot be changed by the system without
    user/automation intervention after initialization.
    * The "status" section has a copy of the currently enforced version of the "spec"
    section plus other fields that are managed/updated automatically by the system.
    Some fields in the "status" section can be updated by the user as well.
    * "parent_reference" is mandatory for snapshot and backup entities and present in
    normal entities if they were created with this field populated (clone/restore
    equivalent).
    * Any field that represents a defined "type" has the type name as a suffix. E.g.
    backup_factory, vm_reference.

    ## Operatations (TODO?)
    TODO: Need to deside whether we're going to put ops docs for things like page/sort/filter
    HERE or as first class top level objects (in a tagGroup). Guessing tagGroup, but sketched
    this out just to show what it would look like.
    ### Page
    Some docs on pagination ...
    default 20 per page, can request length up to 500, Controlled by GFLAG.aplos_api_list_max_length
    ### Sort
    Some docs on sorting
    ### Filter
    Some docs on filtering
  termsOfService: 'https://www.nutanix.com/support-terms'
  contact:
    name: Developer Support
    url: 'https://developer.nutanix.com'
  license:
    name: Nutanix End User License Agreement
    url: 'https://www.nutanix.com/eula'
  version: 3.1.0
  x-ntnx-build-version: dbg-master-33ddb4592a3e43726b7d2dd8b4b1a6d45e6d19bd
externalDocs:
  url: 'https://developer.nutanix.com'
schemes:
  - https
securityDefinitions:
  basicAuth:
    type : basic
security:
  - basicAuth: []
basePath: /v3_pc
consumes:
  - application/json
produces:
  - application/json
parameters:
  uuid:
    name: uuid
    description: The UUID of the entity.
    in: path
    type: string
    format: UUID
    required: true
    pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
  cloud_type:
    name: cloud_type
    description: The Cloud Type.
    in: path
    required: true
    type: string
    pattern: (\bAWS\b|\bAZURE\b|\bNUTANIX_HOSTED_CLOUD\b|\bONPREM_CLOUD\b)
    x-example: AWS
  node_uuid:
    name: node_uuid
    in: path
    description: Node UUID
    type: string
    format: UUID
    required: true
    pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
  cluster_certificates_kms_uuid:
    name: kms_uuid
    in: path
    description: KMS UUID
    type: string
    format: UUID
    required: true
    pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
  cloud_credentials_id:
    name: cloud_credentials_id
    in: path
    description: ID to uniquely identify cloud credentials
    required: true
    type: integer
    format: int64
    x-example: 478452
  cluster_certificates_node_ip:
    name: node_ip
    description: IP address of discovered node. Used in the context of cluster certificates internal API
    in: path
    required: true
    type: string
    x-example: 478452
paths:


  '/access_control_policies':
    post:
      tags: ["access_control_policies"]
      x-ntnx-kind: 'access_control_policy'
      x-ntnx-operations: ["create"]
      summary: Create a new Access Control Policy
      description: >
        An Access Control Policy (ACP) represents the association of a User
        with a role, in a given 'Context' (i.e. where can the role be exercised)
        e.g. an ACP can represent the following:
        User1 has Role1 within the boundaries of Project1.
        (i.e. if Role1 allows the User to update-VM, he/she can do so ONLY
        for VMs belonging to Project1)
      parameters:
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/access_control_policy_intent_input'
      responses:
       202:
        description: Request Accepted
        schema:
         $ref: '#/definitions/access_control_policy_intent_response'
       500:
        description: Internal Error
        schema:
          $ref: '#/definitions/access_control_policy_status'


  '/access_control_policies/list':
    post:
      tags: ["access_control_policies"]
      x-ntnx-kind: 'access_control_policy'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing Access Control Policies

      description: >
        This operation gets a list of Access Control Policies, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/access_control_policy_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/access_control_policy_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'

  '/access_control_policies/{uuid}':

    put:
      tags: ["access_control_policies"]
      x-ntnx-kind: 'access_control_policy'
      x-ntnx-operations: ["update"]
      summary: Update a existing Access Control Policy
      description: >
        This operation submits a request to update a existing Access Control Policy
        based on the input parameters.

      parameters:
       - $ref: '#/parameters/uuid'
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/access_control_policy_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/access_control_policy_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/access_control_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'


    get:
      tags: ["access_control_policies"]
      x-ntnx-kind: 'access_control_policy'
      x-ntnx-operations: ["view"]
      summary: Get a exiting Access Control Policy
      description: This operation gets a existing Access Control Policy.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/access_control_policy_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/access_control_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'


    delete:
      tags: ["access_control_policies"]
      x-ntnx-kind: 'access_control_policy'
      x-ntnx-operations: ["delete"]
      summary: Delete a existing Access Control Policy
      description: >
        Delete an existing Access Control Policy.
        Warning - deleting an Access Control Policy will automatically
        detach the associated users and user-groups, thereby revoking the
        access they were granted because of this Access Control Policy.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/access_control_policy_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/access_control_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'

  '/accounts':
    post:
      summary: Create Account
      description: |
        Given a spec creates a Account with associated metadata
      tags: ["accounts"]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/account_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["create"]
      x-doc-hide: true

  '/accounts/list':
    post:
      summary: List the Account
      description: List the Account with associated metadata
      tags: ["accounts"]
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/account_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/accounts/{uuid}/verify':
    get:
      summary: Verify account
      description: Verify account settings
      tags: ["accounts"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        404:
          description: Invalid UUID Provided
          schema:
            $ref: '#/definitions/account_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["verify"]
      x-doc-hide: true

  '/accounts/{uuid}':
    get:
      summary: Get Account
      description: Given a UUID, returns a Account definition
      tags: ["accounts"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/account_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

    put:
      summary: Update Account
      description: |
        Given a spec and Account UUID, update Account
      tags: ["accounts"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/account_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/account_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["update"]
      x-doc-hide: true

    delete:
      summary: Delete Account
      description: Delete an Account given its UUID
      tags: ["accounts"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_intent_response'
        404:
          description: Invalid UUID Provided
          schema:
            $ref: '#/definitions/account_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/account_status'
      x-ntnx-kind: "account"
      x-ntnx-operations: ["delete"]
      x-doc-hide: true
  "/action_instances":
    post:
      tags: ["action_instances"]
      x-ntnx-kind: action_instance
      x-ntnx-operations: ["create"]
      summary: Create a new action_instance
      description: >
        This operation submits a request to create a new action_instance
        based on the input parameters.

      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_instance_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_instance_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_instance_status'

  "/action_instances/list":
    post:
      tags: ["action_instances"]
      x-ntnx-kind: action_instance
      x-ntnx-operations: ["view"]
      summary: Get a list of existing action_instance
      description: >
        This operation gets a list of action_instance, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_instance_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_instance_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_instance_status'

  "/action_instances/{uuid}":
    get:
      tags: ["action_instances"]
      x-ntnx-kind: action_instance
      x-ntnx-operations: ["view"]
      summary: Get a exiting action_instance
      description: This operation gets a existing action_instance.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_instance_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_instance_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_instance_status'
    put:
      tags: ["action_instances"]
      x-ntnx-kind: action_instance
      x-ntnx-operations: ["update"]
      summary: Update a existing action_instance
      description: >
        This operation submits a request to update a existing action_instance
        based on the input parameters.

      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/action_instance_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_instance_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_instance_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_instance_status'
    delete:
      tags: ["action_instances"]
      x-ntnx-kind: action_instance
      x-ntnx-operations: ["delete"]
      summary: Delete a existing action_instance
      description: This operation submits a request to delete a existing action_instance.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_instance_status'
  "/action_rule_results":
    post:
      tags: ["action_rule_results"]
      x-ntnx-kind: action_rule_result
      x-ntnx-operations: ["create"]
      summary: Create a new action_rule_result
      description: For testing purpose.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_rule_result_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_rule_result_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_result_status'

  "/action_rule_results/list":
    post:
      tags: ["action_rule_results"]
      x-ntnx-kind: action_rule_result
      x-ntnx-operations: ["view"]
      summary: Get a list of existing action_rule_result
      description: >
        This operation gets a list of action_rule_result, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_rule_result_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_rule_result_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_result_status'

  "/action_rule_results/{uuid}":
    get:
      tags: ["action_rule_results"]
      x-ntnx-kind: action_rule_result
      x-ntnx-operations: ["view"]
      summary: Get a exiting action_rule_result
      description: This operation gets a existing action_rule_result.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_rule_result_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_rule_result_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_result_status'
    delete:
      tags: ["action_rule_results"]
      x-ntnx-kind: action_rule_result
      x-ntnx-operations: ["delete"]
      summary: Delete a existing action_rule_result
      description: This operation submits a request to delete a existing action_rule_result.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_result_status'
  "/action_rules":
    post:
      tags: ["action_rules"]
      x-ntnx-kind: action_rule
      x-ntnx-operations: ["create"]
      summary: Create a new action_rule
      description: >
        This operation submits a request to create a new action_rule
        based on the input parameters.

      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_rule_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_rule_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_status'

  "/action_rules/list":
    post:
      tags: ["action_rules"]
      x-ntnx-kind: action_rule
      x-ntnx-operations: ["view"]
      summary: Get a list of existing action_rule
      description: >
        This operation gets a list of action_rule, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_rule_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_rule_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_status'

  "/action_rules/{uuid}":
    get:
      tags: ["action_rules"]
      x-ntnx-kind: action_rule
      x-ntnx-operations: ["view"]
      summary: Get a exiting action_rule
      description: This operation gets a existing action_rule.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_rule_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_rule_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_status'

    put:
      summary: Update a existing action_rule
      description: >
        This operation submits a request to update a existing action_rule
        based on the input parameters.

      tags: ["action_rules"]
      x-ntnx-kind: action_rule
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_rule_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_rule_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_rule_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_status'

    delete:
      tags: ["action_rules"]
      x-ntnx-kind: action_rule
      x-ntnx-operations: ["delete"]
      summary: Delete a existing action_rule
      description: This operation submits a request to delete a existing action_rule.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_rule_status'
  "/action_trigger_types":
    post:
      tags: ["action_trigger_types"]
      x-ntnx-kind: action_trigger_type
      x-ntnx-operations: ["create"]
      summary: Create a new action_trigger_type
      description: >
        This operation submits a request to create a new action_trigger_type
        based on the input parameters.

      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_trigger_type_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_trigger_type_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_trigger_type_status'

  "/action_trigger_types/list":
    post:
      tags: ["action_trigger_types"]
      x-ntnx-kind: action_trigger_type
      x-ntnx-operations: ["view"]
      summary: Get a list of existing action_trigger_type
      description: >
        This operation gets a list of action_trigger_type, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_trigger_type_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_trigger_type_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_trigger_type_status'

  "/action_trigger_types/{uuid}":
    get:
      tags: ["action_trigger_types"]
      x-ntnx-kind: action_trigger_type
      x-ntnx-operations: ["view"]
      summary: Get a exiting action_trigger_type
      description: This operation gets a existing action_trigger_type.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_trigger_type_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_trigger_type_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_trigger_type_status'

    put:
      summary: Update a existing action_trigger_type
      description: >
        This operation submits a request to update a existing action_trigger_type
        based on the input parameters.

      tags: ["action_trigger_types"]
      x-ntnx-kind: action_trigger_type
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_trigger_type_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_trigger_type_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_trigger_type_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_trigger_type_status'

  "/action_trigger_types/{uuid}/display_metadata":
    get:
      tags: ["action_trigger_types"]
      x-ntnx-kind: action_trigger_type
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      summary: Get action trigger type UI display metadata
      description: This operation gets action trigger type UI display metadata.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/display_metadata'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_trigger_type_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_trigger_type_status'
  "/action_types":
    post:
      tags: ["action_types"]
      x-ntnx-kind: action_type
      x-ntnx-operations: ["create"]
      summary: Create a new action_type
      description: >
        This operation submits a request to create a new action_type
        based on the input parameters.

      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_type_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_type_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_type_status'

  "/action_types/list":
    post:
      tags: ["action_types"]
      x-ntnx-kind: action_type
      x-ntnx-operations: ["view"]
      summary: Get a list of existing action_type
      description: >
        This operation gets a list of action_type, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
           $ref: '#/definitions/action_type_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_type_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_type_status'

  "/action_types/{uuid}":
    get:
      tags: ["action_types"]
      x-ntnx-kind: action_type
      x-ntnx-operations: ["view"]
      summary: Get a exiting action_type
      description: This operation gets a existing action_type.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/action_type_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_type_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_type_status'

    put:
      summary: Update a existing action_type
      description: >
        This operation submits a request to update a existing action_type
        based on the input parameters.

      tags: ["action_types"]
      x-ntnx-kind: action_type
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/action_type_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/action_type_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_type_status"
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/action_type_status'

  "/action_types/{uuid}/display_metadata":
    get:
      tags: ["action_types"]
      x-ntnx-kind: action_type
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      summary: Get action type UI display metadata
      description: This operation gets action type UI display metadata.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/display_metadata'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/action_type_status"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/action_type_status'
  "/affinity_rules":
     post:
       summary: Create an affinity rule.
       description: Creates a new affinity rule.
       tags: ["affinity_rules"]
       x-ntnx-kind: 'affinity_rule'
       parameters:
         - name: body
           in: body
           required: true
           schema:
             $ref: '#/definitions/affinity_rule_intent_input'
       responses:
         202:
           description: Request Accepted
           schema:
             $ref: '#/definitions/affinity_rule_intent_response'
         500:
           description: Internal Error
           schema:
             $ref: "#/definitions/affinity_rule_status"

  "/affinity_rules/list":
     post:
       summary: Retrieve affinity rules.
       description: Returns all the affinity rules that are currently defined.
       tags: ["affinity_rules"]
       x-ntnx-kind: 'affinity_rule'
       parameters:
         - name: get_entities_request
           in: body
           required: true
           schema:
             $ref: '#/definitions/affinity_rule_list_metadata'
       responses:
         200:
           description: Success
           schema:
             type: array
             items:
               $ref: '#/definitions/affinity_rule_list_intent_response'
         500:
           description: Internal Error
           schema:
             $ref: '#/definitions/affinity_rule_status'

  "/affinity_rules/{uuid}":
     get:
       summary: Retrieve affinity rule.
       description: >
         Returns the description of a specific affinity rule identified by
         its UUID.
       tags: ["affinity_rules"]
       x-ntnx-kind: 'affinity_rule'
       parameters:
         - $ref: "#/parameters/uuid"
       responses:
         200:
           description: Success
           schema:
             $ref: '#/definitions/affinity_rule_intent_response'
         500:
           description: Internal Error
           schema:
             $ref: '#/definitions/affinity_rule_status'

     put:
       summary: Modify an affinity rule.
       description: >
         Modifies a specific affinity rule identified by its UUID. This can
         be used to modify the entity categories on which the rule is defined.
       tags: ["affinity_rules"]
       x-ntnx-kind: 'affinity_rule'
       parameters:
         - $ref: "#/parameters/uuid"
         - name: body
           in: body
           description: Affinity rule being modified.
           required: true
           schema:
             $ref: '#/definitions/affinity_rule_intent_input'
       responses:
         202:
           description: Request Accepted
           schema:
             $ref: '#/definitions/affinity_rule_intent_response'
         500:
           description: Internal Error
           schema:
             $ref: "#/definitions/affinity_rule_status"

     delete:
       summary: Delete affinity rule.
       description: Deletes the affinity rule identified by its UUID.
       tags: ["affinity_rules"]
       x-ntnx-kind: 'affinity_rule'
       parameters:
         - $ref: "#/parameters/uuid"
       responses:
         202:
           description: Request Accepted
           schema:
             $ref: '#/definitions/affinity_rule_intent_response'
         500:
           description: Internal Error
           schema:
             $ref: '#/definitions/affinity_rule_status'

  "/legacy_vm_host_affinity_compatibility":
     get:
       summary: Gets the current state of compatibility with legacy rules.
       description: >
         Every VM in the cluster is checked to see if the legacy affinities
         are all accounted for by the defined category based affinity policies.
         All VMs for which this is not the case are returned along with the
         list of legacy affinities that remain unaccounted for.
       x-doc-hide: true
       responses:
         200:
           description: >
             JSON which describes the legacy affinities of every applicable VM.
           schema:
             type: array
             items:
              type: object
              properties:
                vm_reference:
                  $ref: '#/definitions/vm_reference'
                cluster_reference:
                  $ref: '#/definitions/cluster_reference'
                hosts:
                  type: array
                  description: Hosts that the VM is currently affined to.
                  items:
                    type: object
                    properties:
                      host_reference:
                        $ref: '#/definitions/host_reference'
                      is_deletable:
                        type: boolean
                        description: >
                          Indicates whether or not this legacy affinity can be deleted.
     put:
       summary: Deletes legacy affinity rules.
       description: >
         Deletes the legacy affinites of VMs. This is done to bring about full
         compliance of legacy affinities with the defined category based
         affinity policies.
       x-doc-hide: true
       parameters:
         - name: body
           in: body
           required: true
           schema:
             type: array
             items:
               type: object
               properties:
                 vm_reference:
                   $ref: '#/definitions/vm_reference'
                 cluster_reference:
                   $ref: '#/definitions/cluster_reference'
                 hosts:
                   type: array
                   description: Hosts no longer affined to the VM.
                   items:
                     type: object
                     properties:
                       host_reference:
                         $ref: '#/definitions/host_reference'
       responses:
         200:
           description: >
             JSON which describes if the updates were successful or not.
           schema:
             type: array
             items:
               type: object
               properties:
                 vm_reference:
                  $ref: '#/definitions/vm_reference'
                 status:
                   type: boolean
                   description: >
                     Indicates whether the update to the VMs legacy affinities
                     succeeded or not.
  "/alerts/notify":
    post:
      tags: ["alerts"]
      x-ntnx-kind: alert
      x-ntnx-operations: ["create"]
      summary: Create a new alert
      description: >
        This operation submits a request to create a new alert
        based on the input parameters.

      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert_notification_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/alert_status"

  "/alerts/list":
    post:
      tags: ["alerts"]
      x-ntnx-kind: alert
      x-ntnx-operations: ["view"]
      summary:  Get a list of existing alert
      description: >
        This operation gets a list of alert, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/alert_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/alert_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/alert_status'

  "/alerts/{uuid}":
    get:
      tags: ["alerts"]
      x-ntnx-kind: alert
      x-ntnx-operations: ["view"]
      summary: Get a exiting alert
      description: This operation gets a existing alert.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/alert_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/alert_status'

  "/alerts/action/{action}":
    post:
      tags: ["alerts"]
      summary: |
        Perform an action to acknowledge or resolve alerts.
      description: |
        Acknowledge alerts being looked at or be resolved.
      x-ntnx-kind: alert
      x-ntnx-operations: ["update"]
      parameters:
        - name: action
          in: path
          description: The action type.
          required: true
          type: string
          x-example: "ACKNOWLEDGE"
          x-ntnx-enum:
            - ACKNOWLEDGE
            - RESOLVE
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/alert_action_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/alert_status"
  '/app_runlogs/archive_file/{uuid}/download':
    get:
      summary: Returns archive containing script and output file for download
      description: Returns archive containing script and output file for download
      tags: [ app_runlogs ]
      parameters:
       - $ref: '#/parameters/uuid'
      produces:
      - application/octet-stream
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app_runlog
      x-ntnx-operations: ["archive_download"]
      x-doc-hide: true

  '/app_runlogs/archival_policy/list':
    post:
      summary: Returns archive information of the runlogs
      description: Returns archive information of the runlogs
      tags: [app_runlogs]
      parameters:
       - name: get_entities_request
         in: body
         required: true
         schema:
          $ref: '#/definitions/app_runlog_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_archive_list_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app_runlog
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/app_runlogs/archival_policy/{uuid}':
    get:
      summary: Returns archive information of the runlogs
      description: Returns archive information of the runlogs
      tags: [app_runlogs]
      parameters:
       - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_archive_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app_runlog
      x-ntnx-operations: ["view"]
      x-doc-hide: true
  '/apps':
    post:
      summary: Create Application
      description: |
        Given a spec creates a Application with associated metadata
      tags: [apps]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/app_custom_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["create"]
      x-doc-hide: true

  '/apps/list':
    post:
      summary: List the Application
      description: List the Application with associated metadata
      tags: [apps]
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/app_list_metadata'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/app_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/apps/{uuid}':
    get:
      summary: Get Application
      description: Given a UUID, returns a Application definition
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

    put:
      summary: Update Application
      description: |
        Given a spec and Application UUID, update Application
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/app_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["update"]
      x-doc-hide: true

    delete:
      summary: Delete Application
      description: Delete a Application given its UUID
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
        404:
          description: Invalid UUID Provided
          schema:
            $ref: '#/definitions/app_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["delete"]
      x-doc-hide: true

  '/apps/{uuid}/actions/{action_uuid}/run':
    post:
      summary: The API to run an action of appplication on provided target.
      description: The API to run an action of appplication on provided target.
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: action_uuid
         description: UUID of Action in Application to execute
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/app_actionrun_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_actionrun_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["action_run"]
      x-doc-hide: true

  '/apps/{uuid}/substrates/{substrate_uuid}':
    get:
      summary: Get Substrate Element
      description: Given a UUID, returns the substrate element
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: substrate_uuid
         description: Uuid of substrate element to get
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_substrate_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/apps/{uuid}/app_runlogs/list':
    post:
      summary: List the Runlogs
      description: List the runlog with associated metadata
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: get_entities_request
         in: body
         required: true
         schema:
           $ref: '#/definitions/app_runlog_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_list'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/apps/{uuid}/app_runlogs/{runlog_uuid}':
    get:
      summary: Get Runlog
      description: Given a UUID, returns the runlog
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: runlog_uuid
         description: Uuid of runlog to get
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/apps/{uuid}/app_runlogs/{runlog_uuid}/abort':
    post:
      summary: Abort Runlog
      description: Abort the given Runlog
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: runlog_uuid
         description: Uuid of runlog to abort
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["runlog_abort"]
      x-doc-hide: true

  '/apps/{uuid}/app_runlogs/{runlog_uuid}/output':
    get:
      summary: Returns last 10 lines of output of runlog
      description: Returns last ten lines of output
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: runlog_uuid
         description: Uuid of runlog to get
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/app_runlog_output_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/apps/{uuid}/app_runlogs/{runlog_uuid}/output/download':
    get:
      summary: Returns output file for download
      description: Returns output file for downlaod
      tags: [apps]
      parameters:
       - $ref: '#/parameters/uuid'
       - name: runlog_uuid
         description: Uuid of runlog to get
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/app_runlog_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/app_runlog_status'
      x-ntnx-kind: app
      x-ntnx-operations: ["runlog_download"]
      x-doc-hide: true
  '/availability_zones':
    post:
      x-doc-hide: true
      tags: ['availability_zones']
      summary: Create an availability zone
      description: Create an availability zone
      x-ntnx-kind: 'availability_zone'
      x-ntnx-operations: ["create"]
      parameters:
        - name: availability_zone
          in: body
          required: true
          schema:
            $ref: '#/definitions/availability_zone_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/availability_zone_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/availability_zone_status'

  '/availability_zones/list':
    post:
      tags: ['availability_zones']
      x-ntnx-kind: 'availability_zone'
      x-ntnx-operations: ["view"]
      summary: Get availability zones
      description: Get availability zones
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/availability_zone_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/availability_zone_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/availability_zone_status'

  '/availability_zones/{uuid}':
    get:
      tags: ['availability_zones']
      summary: Get details for an availability zones
      description: Get details for an availability zones
      x-ntnx-kind: 'availability_zone'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/availability_zone_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/availability_zone_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/availability_zone_status'
    put:
      x-doc-hide: true
      tags: ['availability_zones']
      summary: Modify availability zone
      description: Modify availability zone
      x-ntnx-kind: 'availability_zone'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/availability_zone_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/availability_zone_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/availability_zone_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/availability_zone_status'
    delete:
      x-doc-hide: true
      tags: ['availability_zones']
      summary: Delete an availability zone
      description: Delete an availability zone
      x-ntnx-kind: 'availability_zone'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/availability_zone_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/availability_zone_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/availability_zone_status'
  '/availability_zones/sync':
    post:
      tags: ['availability_zones']
      x-doc-hide: true
      summary: Sync global entities to all connected availability zones.
      description: |
        Sync global entities like protection rules, recovery plans to all
        connected availability zones.
      parameters:
        - name: body
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/entity_sync_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/procedural_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  "/aws/regions/list":
    post:
      tags: ['aws/regions']
      x-doc-hide: true
      summary: List all the AWS regions
      description: |
        List all the AWS regions. No filters to be mentioned.
      x-ntnx-kind: 'aws_region'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_region_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_region_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  "/aws/availability_zones/list":
    post:
      tags: ['aws/availability_zones']
      x-doc-hide: true
      summary: List all the AWS availability zones
      description: |
        List all the AWS roles. Supported filters are:
        - account_uuid
        - region
        Use account_uuid filter to list all the availability zones on
        a particular AWS account.
        Use the account_uuid and region filters together to list all the
        availability zones on a particular region of an AWS account .
      x-ntnx-kind: 'aws_availability_zone'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_availability_zone_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_availability_zone_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  "/aws/roles/list":
    post:
      tags: ['aws/roles']
      x-doc-hide: true
      summary: List all the AWS roles
      description: |
        List all the AWS roles. Supported filters are:
        - account_uuid
        - region
        Use account_uuid filter to list all the roles on the default region of a
        particular AWS account.
        Use account_uuid and region filter together to list all the roles on a
        particular region of an aws_account.
      x-ntnx-kind: 'aws_role'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_role_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_role_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  "/aws/key_pairs/list":
    post:
      tags: ['aws/key_pairs']
      x-doc-hide: true
      summary: List all the AWS key pairs
      description: |
        List all the AWS key pairs. Supported filters are:
        - account_uuid
        - region
        Use account_uuid filter to list all the key pairs on the default region of
        a particular AWS account.
        Use account_uuid and region filters together to list the key pairs on
        a particular region of an AWS account.
      x-ntnx-kind: 'aws_key_pair'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_key_pair_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_key_pair_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  "/aws/machine_types/list":
    post:
      tags: ['aws/machine_types']
      x-doc-hide: true
      summary: List all the AWS machine types
      description: |
        List all the AWS machine types. No filters to be mentioned.
      x-ntnx-kind: 'aws_machine_type'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_machine_type_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_machine_type_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  "/aws/volume_types/list":
    post:
      tags: ['aws/volume_types']
      x-doc-hide: true
      summary: List all the AWS volume types
      description: |
        List all the AWS volume types. No filters to be mentioned.
      x-ntnx-kind: 'aws_volume_type'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_volume_type_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_volume_type_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  '/aws/elastic_ips/list':
    post:
      tags: [ aws/elastic_ips ]
      x-doc-hide: true
      x-ntnx-kind: 'aws_elastic_ip'
      x-ntnx-operations: ['view']
      summary: List AWS elastic IPs.
      description: |
        List all AWS elastic IPs. Supported filters are:
        - account_uuid
        - region
        - free_public_ip_address_only
        - eip_type
        Use account_uuid filter to list all the elastic IPs on the default
        region of a particular account.
        Use account_uuid and region filters together to list the elastic IPs
        on an AWS account in the particular region.
        Set the free_public_ip_address_only filter to True to return only
        free public IPs in the above two cases.
        Set eip_type filter to either 'standard' or 'vpc' when
        only_free_public_ips is set to True.
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_elastic_ip_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_elastic_ip_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_elastic_ip_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_elastic_ip_status'
  '/aws/images/list':
    post:
      tags: [aws/images]
      x-doc-hide: true
      summary: List all AWS AMIs.
      description: |
        List AWS AMIs . Supported filters are:
        - account_uuid
        - region
        - executable_only
        - public_images
        - image_name
        Use account_uuid to list images on a particular account.
        Use account_uuid and region filters together to list images
        belonging to a particular region.
        Set executable_only to True in either of the above two cases
        to list only executable images.
        Set public_images to True if AWS community AMIs also
        have to be listed
        Provide image_name to limit the results to
        those AMI names containing the provided name
      x-ntnx-kind: 'aws_image'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_image_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_image_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_image_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_image_status'
  '/aws/security_groups/list':
    post:
      tags: [aws/security_groups]
      x-doc-hide: true
      summary: List all AWS Security Groups
      description: |
        List all AWS Security Groups. Supported filters are:
        - account_uuid
        - region
        - vpc_id
        - include_classic_sg
        Use account_uuid to list all security groups on the default
        region of a particular AWS account.
        Use account_uuid and region filters together to list all
        security groups in a particular region.
        Use account_uuid, region and vpc_id filters together to list all
        security groups in a particular vpc.
        Set include_classic_sg filter to 'True' to also show
        EC2 classic security groups in the above three cases.
      x-ntnx-kind: 'aws_security_group'
      x-ntnx-operations: ['view']
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_security_group_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_security_group_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_security_group_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_security_group_status'

  '/aws/security_groups/{account_uuid}/{region}/{id}':
    get:
      tags: [aws/security_groups]
      x-doc-hide: true
      summary: Get an AWS security group
      description: Get an AWS security group
      x-ntnx-kind: 'aws_security_group'
      x-ntnx-operations: ['view']
      parameters:
        - name: account_uuid
          in: path
          required: true
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        - name: region
          in: path
          required: true
          type: string
          pattern: ^[a-z]{2}-[a-z]*-[1-9]{1}$
          x-example: ap-northeast-2
        - name: id
          in: path
          required: true
          type: string
          pattern: ^sg-[a-f0-9]{1,17}$
          x-example: sg-12345678
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_security_group_intent_resource'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_security_group_status'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/aws_security_group_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_security_group_status'
  '/aws/subnets/list':
    post:
      tags: [ aws/subnets ]
      x-doc-hide: true
      x-ntnx-kind: 'aws_subnet'
      x-ntnx-operations: ['view']
      summary: List all AWS subnets.
      description: |
        List all AWS subnets. Supported filters are:
        - account_uuid
        - region
        - vpc_id
        - availability_zone
        Use account_uuid filter to list all the subnets on the default
        region of a particular account.
        Use account_uuid and region filters together to list the subnets on
        all VPCs and AZs of a particular region.
        Use account_uuid, region and vpc_id filter together to list the
        subnets on a particular VPC.
        Use account_uuid, region and availability_zone filter together to list
        the subnets on a particualr AZ.
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_subnet_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_subnet_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_subnet_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_subnet_status'

  '/aws/subnets/{account_uuid}/{region}/{id}':
    get:
      tags: [ aws/subnets ]
      x-doc-hide: true
      summary: Get details for an AWS subnet
      description: Get details for a subnet.
      x-ntnx-kind: 'aws_subnet'
      x-ntnx-operations: ['view']
      parameters:
        - name: account_uuid
          in: path
          required: true
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        - name: region
          in: path
          required: true
          type: string
          pattern: ^[a-z]{2}-[a-z]*-[1-9]{1}$
          x-example: ap-northeast-2
        - name: id
          in: path
          required: true
          type: string
          pattern: ^subnet-[a-f0-9]{1,17}$
          x-example: subnet-12345678
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_subnet_intent_resource'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_subnet_status'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/aws_subnet_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_subnet_status'
  "/aws/vms":
    post:
      summary: Create an AWS instance(VM)
      description: >
        A VM is a logical representation of a computer (CPU, memory,
        storage, and operating system)
      tags: [aws/vms]
      x-doc-hide: true
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/aws_vm_intent_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/aws_vm_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/aws_vm_status"
      x-ntnx-kind: "aws_vm"
      x-ntnx-operations: ['create']

  "/aws/vms/list":
    post:
      summary: List AWS VMs.
      description: |
        List VMs with associated metadata. Supported filters are:
        - account_uuid
        - region
        - power_state
        Use the account_uuid filter to get all the VMs on the default region of a
        particular account.
        Use account_uuid and region filters together to list all the VMs in a
        particular region.
        Set the power_state to running, stopped, and terminated. in the above two cases
        to list only VMs in the particular power state.
      tags: [aws/vms]
      x-doc-hide: true
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: "#/definitions/aws_vm_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/aws_vm_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/aws_vm_status"
      x-ntnx-kind: "aws_vm"
      x-ntnx-operations: ['view']

  "/aws/vms/{uuid}":
    get:
      summary: Get an AWS VM.
      description: Given a UUID, returns an AWS VM definition.
      tags: [aws/vms]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/aws_vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/aws_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/aws_vm_status"
      x-ntnx-kind: "aws_vm"
      x-ntnx-operations: ['view']
    put:
      summary: Update an AWS VM.
      description: Given an intenful spec and VM uuid, update an AWS VM.
      tags: [aws/vms]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/aws_vm_intent_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/aws_vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/aws_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/aws_vm_status"
      x-ntnx-kind: "aws_vm"
      x-ntnx-operations: ['update']
    delete:
      summary: Delete an AWS VM.
      description: Delete an AWS VM given its uuid.
      tags: [aws/vms]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/aws_vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/aws_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/aws_vm_status"
      x-ntnx-kind: "aws_vm"
      x-ntnx-operations: ['delete']
  '/aws/vpcs/list':
    post:
      tags: [aws/vpcs]
      x-doc-hide: true
      summary: List all AWS VPCs
      description: |
        List all AWS VPCs. Supported filters are:
        - account_uuid
        - region
        Use account_uuid to list all VPCs on the default region of a
        particular AWS account.
        Use account_uuid and region filters together to list the
        VPCs in a particular region.
      x-ntnx-kind: 'aws_vpc'
      x-ntnx-operations: ['view']
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/aws_vpc_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_vpc_list_intent_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_vpc_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_vpc_status'

  '/aws/vpcs/{account_uuid}/{region}/{id}':
    get:
      tags: [aws/vpcs]
      x-doc-hide: true
      summary: Get an AWS VPC
      description: Get an AWS VPC.
      x-ntnx-kind: 'aws_vpc'
      x-ntnx-operations: ['view']
      parameters:
        - name: account_uuid
          in: path
          required: true
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        - name: region
          in: path
          required: true
          type: string
          pattern: ^[a-z]{2}-[a-z]*-[1-9]{1}$
          x-example: ap-northeast-2
        - name: id
          in: path
          required: true
          type: string
          pattern: ^vpc-[a-f0-9]{1,17}$
          x-example: ap-northeast-2
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_vpc_intent_resource'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/aws_vpc_status'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/aws_vpc_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/aws_vpc_status'
  '/tenant_clusters/physical_availability_zone':
    post:
      tags: ['physical_availability_zone']
      x-doc-hide: true
      x-ntnx-kind: 'physical_availability_zone'
      x-ntnx-operations: ["create"]
      summary: Configure a Physical Availability zone.
      description: Configure a Physical Availability zone.
      parameters:
        - in: body
          name: physical_availability_zone
          description: Physical Availability Zone Configuration details.
          required: true
          schema:
            $ref: '#/definitions/physical_availability_zone'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/physical_availability_zone_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/physical_availability_zone_status'
    get:
      summary: Physical Availability zone configuration.
      description: Physical Availability zone configuration.
      tags: ['physical_availability_zone']
      x-doc-hide: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/physical_availability_zone'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/physical_availability_zone_status'
      x-ntnx-kind: 'physical_availability_zone'
      x-ntnx-operations: ["view"]
  '/tenant_clusters/physical_availability_zone/keys':
    get:
      x-doc-hide: true
      tags: ['physical_availability_zone']
      x-ntnx-kind: 'physical_availability_zone'
      x-ntnx-operations: ["view"]
      summary: Get Physical Availability Zone's JWKS
      description: >
        JSON Web Key Set (JWKS) that contains public keys. The keys can be used
        to verify the signatures of tokens issued by the PC, My.Nutanix (IDP),
        IAM and Okta.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/key_set_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/physical_availability_zone_status'
  /batch:
    post:
      tags: ["batch"]
      summary: Submit a list of one or more intentful REST APIs to be processed
      description: |
        Batching allows for instructions for several operations to be sent
        using a single HTTP request. Depending on the batch parameters, the
        Nutanix v3 gateway processes each independent operation sequentially
        or in parallel. Once all operations in the batch have been completed,
        a consolidated response is returned and the HTTP connection is closed.
        The batch API takes an array of logical HTTP requests represented as
        JSON arrays. Maximum size of the array should not exceed 60.
        Each request comprises the following:
        - A method (corresponding to HTTP methods such as GET, PUT, and POST)
        - A relative URL (relative_url)
        - (Optional) A body (for POST and PUT requests).
        The batch API returns an array of logical HTTP responses represented
        as JSON arrays containing the following:
        - A status code
        - (Optional) A body represented as a JSON-encoded string
      parameters:
        -
          name: intent_list
          in: body
          description: List of intent APIs
          required: true
          schema:
            $ref: '#/definitions/batch_request'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/batch_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  /billing/summary:
    get:
      x-doc-hide: true
      tags:
      - billing
      summary: Get usage details for the current tenant.
      description: Get usage details for the current tenant grouped by day.
      parameters:
      - name: start_date
        in: query
        required: true
        type: string
        format: date
        x-example: 03/01/2018
      - name: end_date
        in: query
        required: true
        type: string
        format: date
        x-example: 03/06/2018
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/billing_summary'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  /billing/account:
    get:
      x-doc-hide: true
      tags:
      - billing
      summary: Get account information for the current user.
      description: Get account information for the logged in user.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/account_details'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  /billing/unbilled_invoice:
    get:
      x-doc-hide: true
      tags:
      - billing
      summary: Get unbilled usage summary.
      description: Get sumamry of usages that are not yet invoiced to the user.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/unbilled_invoice'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  /billing/invoices:
    post:
      x-doc-hide: true
      tags:
      - billing
      summary: Get a list of existing billing_invoices
      description: Get all invoices for the tenant account.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/billing_invoice_list'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  "/blackouts":
    post:
      x-doc-hide: true
      summary: Create blackout object
      description: Create a blackout object
      tags: ["blackouts"]
      x-ntnx-kind: 'blackout'
      x-ntnx-operations: ["create"]
      parameters:
        - in: body
          name: body
          description: Create blackout object
          required: true
          schema:
            $ref: '#/definitions/blackout_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/blackout_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blackout_status'

  "/blackouts/list":
    post:
      x-doc-hide: true
      tags: ["blackouts"]
      x-ntnx-kind: 'blackout'
      x-ntnx-operations: ["view"]
      summary: Retrieve all blackout objects
      description: Retrieve all blackout objects
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/blackout_list_metadata'
      responses:
        200:
          description: Retrieve all blackout objects
          schema:
            $ref: '#/definitions/blackout_list_intent_response'
        500:
          description: Failed to retrieve blackout objects
          schema:
            $ref: '#/definitions/blackout_status'

  "/blackouts/{uuid}":
    get:
      x-doc-hide: true
      tags: ["blackouts"]
      x-ntnx-kind: 'blackout'
      x-ntnx-operations: ["view"]
      summary: Retrieve specified blackout object
      description: Retrieve specified blackout object
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/blackout_intent_response'
        500:
          description: Failed to retrieve blackout object
          schema:
            $ref: '#/definitions/blackout_status'

    put:
      x-doc-hide: true
      summary: Update blackout entity
      description: Update blackout entity
      tags: ["blackouts"]
      x-ntnx-kind: 'blackout'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update blackout
          required: true
          schema:
            $ref: '#/definitions/blackout_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/blackout_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blackout_status'

    delete:
      x-doc-hide: true
      tags: ["blackouts"]
      x-ntnx-kind: 'blackout'
      x-ntnx-operations: ["delete"]
      summary: Delete specified blackout object
      description: Delete specified blackout object
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/blackout_intent_response'
        500:
          description: Failed to delete blackout object
          schema:
            $ref: '#/definitions/blackout_status'
  '/blueprints':
    post:
      summary: Create Blueprint
      description: |
        Given a spec creates a Blueprint with associated metadata
      tags: ["blueprint"]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_custom_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["create"]
      x-doc-hide: true

  '/blueprints/list':
    post:
      summary: List the Blueprint
      description: List the Blueprint with associated metadata
      tags: ["blueprint"]
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/blueprint_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/blueprints/{uuid}':
    get:
      summary: Get Blueprint
      description: Given a UUID, returns a Blueprint definition
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: UUID of Blueprint to get
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

    put:
      summary: Update Blueprint
      description: |
        Given a spec and Blueprint UUID, update Blueprint
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: UUID of blueprint to be updated
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_custom_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["update"]
      x-doc-hide: true

    delete:
      summary: Delete Blueprint
      description: Delete a Blueprint given its UUID
      tags: ["blueprint"]
      parameters:
      - name: uuid
        description: UUID of the blueprint to be deleted
        in: path
        required: true
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_intent_response'
        404:
          description: Invalid UUID Provided
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["delete"]
      x-doc-hide: true

  '/blueprints/{uuid}/launch':
    post:
      summary: Launch the blueprint
      description: |
              Launch the given blueprint
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: Uuid of blueprint to be launched
         in: path
         required: true
         type: string
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
         format: UUID
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_launch_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_launch_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["launch"]
      x-doc-hide: true

  '/blueprints/{uuid}/clone':
    post:
      summary: Clone the blueprint
      description: |
              Clone the given blueprint
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: Uuid of blueprint to be cloned
         in: path
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_clone_input'
      responses:
        200:
          description: Blueprint cloning Succeeded
          schema:
            $ref: '#/definitions/blueprint_clone_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["clone"]
      x-doc-hide: true

  '/blueprints/{uuid}/pending_launches/{launched_uuid}':
    get:
      summary: Get the pending launch details
      description: Get the details of the pending launch with the given uuid
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: UUID of Blueprint to get
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: launched_uuid
         description: Launched UUID of blueprint
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_pending_launches_resource'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/blueprints/pending_launches/list':
    post:
      summary: List the pending Blueprint launches
      description: List the blueprint launch pending requests
      tags: ["blueprint"]
      parameters:
       - name: get_entities_request
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_pending_launches_list_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/blueprints/marketplace_launch':
    post:
      summary: Launch the marketplace item
      description: |
              Launch the given marketplace item
      tags: ["blueprint"]
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_marketplace_launch_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_marketplace_launch_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["launch"]
      x-doc-hide: true

  '/blueprints/import_json':
    post:
      summary: Create Blueprint using json
      description: |
        Given a spec creates a Blueprint with associated metadata
      tags: ["blueprint"]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_upload_custom_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_upload_output'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["import"]
      x-doc-hide: true

  '/blueprints/{uuid}/export_json':
    get:
      summary: Get Blueprint in json format
      description: Given a UUID, returns a Blueprint definition
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: UUID of Blueprint to get
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_download_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["export"]
      x-doc-hide: true

  '/blueprints/import_file':
    post:
      summary: Create Blueprint from file
      description: Creates a blueprint from uploaded file
      tags: ["blueprint"]
      consumes: [ "application/octet-stream" ]
      parameters:
       - name: body
         description: blueprint_file
         in: body
         required: true
         schema:
           format: binary
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/blueprint_upload_output'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["upload"]
      x-doc-hide: true

  '/blueprints/{uuid}/export_file':
    get:
      summary: Download blueprint file
      description: Given a UUID, returns a Blueprint file
      tags: ["blueprint"]
      parameters:
       - name: uuid
         description: UUID of Blueprint to get
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            format: binary
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/blueprint_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["download"]
      x-doc-hide: true
  '/blueprints/brownfield_import/vms/list':
    post:
      summary: List the vms available for import
      description: List the blueprint launch pending request with the filters
              - platform_type
              - account_uuid
              - platform_filters
      tags: ["blueprint"]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/blueprint_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-ntnx-kind: "blueprint"
      x-ntnx-operations: ["brownfield_view"]
      x-doc-hide: true
  "/categories/{name}":
    get:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["view_name"]
      summary: Get a category key.
      description: Get a category key.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_key_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

    put:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["create_or_update_name"]
      summary: Create or Update a category Key.
      description: Create or Update a category Key.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/category_key'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_key_status'
        201:
          description: Created
          schema:
            $ref: '#/definitions/category_key_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

    delete:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["delete_name"]
      summary: Delete a category Key.
      description: Delete a category Key.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

  "/categories/{name}/{value}":
    get:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["view_value"]
      summary: Get a category value.
      description: Get a category value.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
        - name: value
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: webservervalue
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_value_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

    put:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["create_or_update_value"]
      summary: Create or Update a category value.
      description: |
        Create or Update a category value. Creates when value doesn't exist.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
        - name: value
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: webservervalue
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/category_value'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_value_status'
        201:
          description: Created
          schema:
            $ref: '#/definitions/category_value_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

    delete:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["delete_value"]
      summary: Delete a category value.
      description: Delete a category value.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
        - name: value
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: webservervalue
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'


  "/categories/list":
    post:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["view_name"]
      summary: List the category keys.
      description: |
        List the category keys.
      parameters:
        - name: get_entities_request
          in: body
          required: false
          schema:
            $ref: '#/definitions/category_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_key_list_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

  "/categories/{name}/list":
    post:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["view_value"]
      summary: List the values for a specified key.
      description: |
        List the values for a specified key.
      parameters:
        - name: name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: productioncategory
        - name: get_entities_request
          in: body
          required: false
          schema:
            $ref: '#/definitions/category_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_value_list_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'

  "/category/query":
    post:
      tags: ["categories"]
      x-ntnx-kind: category
      x-ntnx-operations: ["view_value"]
      summary: Get category usage details.
      description: >
        Get list of entities attached to categories or policies in which
        categories are used as defined by the filter criteria.
      parameters:
        - name: query
          in: body
          schema:
            $ref: '#/definitions/category_query_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/category_query_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/category_status'
  "/cells":
    post:
      summary: Create a cell instance
      description: Create a cell instance
      tags: ['cell']
      x-ntnx-kind: 'cell'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          description: Create cell object
          required: true
          schema:
            $ref: '#/definitions/cell_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cell_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cell_status'

  "/cells/list":
    post:
      tags: ['cell']
      x-ntnx-kind: 'cell'
      x-ntnx-operations: ["view"]
      summary: Retrieves all cells
      description: Retrieves all cells
      parameters:
      - name: body
        in: body
        required: true
        schema:
         $ref: '#/definitions/cell_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cell_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cell_status'

  "/cells/{uuid}":
    get:
      tags: ["cell"]
      x-ntnx-kind: 'cell'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified cell
      description: Retrieves specified cell
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cell_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cell_status'

    put:
      summary: Update cell
      description: Update cell
      tags: ['cell']
      x-ntnx-kind: 'cell'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update cell
          required: true
          schema:
            $ref: '#/definitions/cell_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cell_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cell_status'

    delete:
      tags: ["cell"]
      x-ntnx-kind: 'cell'
      x-ntnx-operations: ["delete"]
      summary: Delete specified cell
      description: Delete specified cell
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cell_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cell_status'
  '/cloud_configs/{cloud_type}':
    get:
      tags: ["cloud"]
      x-doc-hide: true
      summary: Gets the Nutanix hosted cloud config.
      description: Gets the Nutanix hosted cloud config.
      parameters:
        - $ref: "#/parameters/cloud_type"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_config_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/cloud_trust_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_trust_status'
  '/cloud_trusts':
    post:
      summary: Pairs this cloud with the given cloud (Nutanix hosted cloud/ Onprem Cloud).
      description: Performs cloud pairing by establishing a trust with the provided cloud.
      tags: ["cloud"]
      x-doc-hide: true
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cloud_trust_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/cloud_trust_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_trust_status'
      x-ntnx-kind: 'cloud_trust'
      x-ntnx-permissions:
        - cloud_trust.create
      x-ntnx-operations: ["create"]

  '/cloud_trusts/{uuid}':
    get:
      summary: Get the details of the specified trusted cloud.
      description: Gets the details of the specified trusted cloud.
      tags: ["cloud"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_trust_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/cloud_trust_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_trust_status'
      x-ntnx-kind: 'cloud_trust'
      x-ntnx-permissions:
        - cloud_trust.view
      x-ntnx-operations: ["view"]

    delete:
      tags: ["cloud"]
      x-doc-hide: true
      x-ntnx-kind: 'cloud_trust'
      x-ntnx-permissions:
        - cloud_trust.delete
      x-ntnx-operations: ["delete"]
      summary: Deletes the specified cloud pairing.
      description: Deletes the specified cloud pairing by un-establishing trust with the cloud.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/cloud_trust_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_trust_status'

  '/cloud_trusts/list':
    post:
      summary: List trusted clouds.
      description: Gets list of trusted clouds.
      tags: ["cloud"]
      x-doc-hide: true
      parameters:
        - in: body
          name: body
          description: A cloud trust object
          required: true
          schema:
            $ref: '#/definitions/cloud_trust_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_trust_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_trust_status'
      x-ntnx-kind: 'cloud_trust'
      x-ntnx-permissions:
        - cloud_trust.view
      x-ntnx-operations: ["view"]
  '/clusters/{uuid}':
    get:
      summary: Get a exiting cluster
      description: This operation gets a existing cluster.
      tags: ["clusters"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      x-ntnx-kind: 'cluster'
      x-ntnx-operations: ["view"]

    put:
      summary: Update a existing cluster
      description: >
        This operation submits a request to update a existing cluster
        based on the input parameters.

      tags: ["clusters"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cluster_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/cluster_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      x-ntnx-kind: 'cluster'
      x-ntnx-operations: ["update"]

  '/clusters/list':
    post:
      summary: Get a list of existing clusters

      description: >
        This operation gets a list of clusters, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["clusters"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/cluster_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      x-ntnx-kind: 'cluster'
      x-ntnx-operations: ["view"]



  '/clusters/{uuid}/cloud_credentials/{cloud_type}':
    post:
      tags: ['clusters']
      summary: Add a cloud credential for accessing cloud sites
      description: Add a cloud credential for accessing cloud sites
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cloud_credentials_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true

    delete:
      tags: ['clusters']
      summary: Delete all cloud credentials
      description: Delete all cloud credentials
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true

  '/clusters/{uuid}/cloud_credentials/{cloud_type}/list':
    post:
      summary: Get a list of existing cloud credentials

      description: >
        This operation gets a list of cloud credentials, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/cloud_credentials_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true

  '/clusters/{uuid}/cloud_credentials/{cloud_type}/{cloud_credentials_id}':
    get:
      summary: Get a exiting cloud credentials
      description: This operation gets a existing cloud credentials.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
        - $ref: "#/parameters/cloud_credentials_id"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true

    delete:
      summary: Delete a existing cloud credentials
      description: This operation submits a request to delete a existing cloud credentials.

      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
        - $ref: "#/parameters/cloud_credentials_id"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true

    put:
      summary: Update a existing cloud credentials
      description: >
        This operation submits a request to update a existing cloud credentials
        based on the input parameters.

      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cloud_type"
        - $ref: "#/parameters/cloud_credentials_id"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cloud_credentials_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      x-ntnx-kind: 'cloud_credentials'
      x-doc-hide: true
  '/clusters/{uuid}/certificates/client_auth':
    post:
      summary: Import CA chain for client authentication
      description: Import CA chain for client authentication
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/ca_chain_spec'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'client_auth'
      x-doc-hide: true

    put:
      summary: Replace the CA chain for client authentication
      description: Replace the CA chain for client authentication
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/ca_chain_spec'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'client_auth'
      x-doc-hide: true

    delete:
      summary: Remove the CA chain for client authentication
      description: Remove the CA chain for client authentication
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'client_auth'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/ca_certs':
    post:
      summary: Add a new CA certificate
      description: Add a new CA certificate
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/ca_cert'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/ca_certs/{ca_name}':
    delete:
      summary: Delete the CA certificate
      description: |
        Delete the CA certificate specified by certificate authority name
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: ca_name
          in: path
          required: true
          type: string
          maxLength: 64
          x-example: prodCA01
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/svm_certs/{kms_uuid}':
    post:
      summary: Add one or more certificates to a service VM
      description: Add one or more certificates to a service VM
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cluster_certificates_kms_uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/certificate_spec_upload_input'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/svm_certs/{node_uuid}/{kms_uuid}':
    put:
      summary: Replace the certificate on a service VM
      description: Replace the certificate on a service VM
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/node_uuid"
        - $ref: "#/parameters/cluster_certificates_kms_uuid"
        - name: cert
          in: body
          required: true
          schema:
            $ref: '#/definitions/certificate'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

    delete:
      summary: Delete the certificate on a service VM
      description: Delete the certificate on a service VM
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/node_uuid"
        - $ref: "#/parameters/cluster_certificates_kms_uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/csrs':
    get:
      summary: Download CSRs from cluster
      description: Download Certificate Signing Requests from cluster
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/csrs_spec'
      produces:
      - application/octet-stream
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/csrs/{node_ip}':
    get:
      summary: Download CSR from a discovered node
      description: Download Certificate Signing Request from a discovered node
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - $ref: "#/parameters/cluster_certificates_node_ip"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/pemkey':
    post:
      summary: Generate a 2048 bits cipher length RSA key
      description: Generate a 2048 bits cipher length RSA key
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true

  '/clusters/{uuid}/certificates/pemkey/import':
    post:
      summary: Import a new key
      description: Import a new key
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: spec
          in: body
          required: true
          schema:
            $ref: '#/definitions/pemkey_spec'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'certificate'
      x-doc-hide: true



  '/clusters/multicluster_config':
    post:
      summary: Apply multicluster configuration from Prism Central.
      description: Apply multicluster configuration from Prism Central.
      tags: ['clusters']
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/multicluster_config_intent_input'
      responses:
        202:
          description:  Request Accepted
          schema:
            $ref: '#/definitions/multicluster_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/multicluster_config_status'
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/clusters/multicluster_config/{uuid}':
    put:
      summary: |
        Update a scheduled and unprocessed multicluster configuration request.
      description: |
        Update a scheduled and unprocessed multicluster configuration request.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/multicluster_config_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/multicluster_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/multicluster_config_status'
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

    delete:
      summary: |
        Delete a scheduled and unprocessed multicluster configuration request.
      description: |
        Delete a scheduled and unprocessed multicluster configuration request.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/multicluster_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/multicluster_config_status'
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/clusters/multicluster_config/{uuid}/cancel':
    post:
      summary: Cancel a multicluster configuration request from Prism Central.
      description: |
        Cancel a multicluster configuration request by cancelling all queued
        cluster configuration tasks.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/clusters/multicluster_config/{uuid}/pause':
    post:
      summary: Pause a multicluster configuration request from Prism Central.
      description: |
        Pause a multicluster configuration request by pausing all
        queued cluster configuration tasks.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/clusters/multicluster_config/{uuid}/resume':
    post:
      summary: Resume a paused multicluster configuration request.
      description: Resume a paused multicluster configuration request.
      tags: ['clusters']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
        500:
          description: Internal Error
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/clusters/multicluster_config/{cluster_uuid}/migrate_ssp_config':
    post:
      summary: Migrate SSP config from a Prism Element.
      description: Migrate SSP config from a Prism Element.
      tags: ['clusters']
      parameters:
       - name: cluster_uuid
         in: path
         description: The UUID of the entity.
         type: string
         format: UUID
         required: true
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: body
         in: body
         required: false
         schema:
           $ref: '#/definitions/ssp_config_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssp_migration_status'
        500:
          description: Internal Error
      x-ntnx-kind: 'multicluster_config'
      x-doc-hide: true

  '/common_report_configs':
    post:
      summary: Create common report config.
      description: |
        This operation submits a request to create a common report
        configuration with associated metadata based on the intentful spec.
      tags: ["reports"]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/common_report_config_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/common_report_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/common_report_config_status'
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["create"]
      x-doc-hide: true

  '/common_report_configs/list':
    post:
      summary: List the common report configs.
      description: |
        This operation retrieves a list of all the common report
        configurations with associated metadata.
      tags: ["reports"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/common_report_config_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/common_report_config_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/common_report_config_status'
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/common_report_configs/{uuid}':
    get:
      summary: Get common report config information.
      description: |
        This operation retrieves a common report configuration based on the
        UUID.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/common_report_config_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/common_report_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/common_report_config_status'
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["view"]
      x-doc-hide: true
    put:
      summary: Update common report config.
      description: |
        This operation updates a common report configuration based on the
        UUID and intentful spec.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/common_report_config_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/common_report_config_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/common_report_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/common_report_config_status'
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["update"]
    delete:
      summary: Delete common report config.
      description: |
        This operation submits a request to delete a common report
        configuration based on the UUID.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/common_report_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/common_report_config_status'
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["delete"]
      x-doc-hide: true
  "/containers":
    post:
      summary: Create a new Container
      description: >
        This operation submits a request to create a new Container
        based on the input parameters.

      tags: [containers]
      x-doc-hide: true
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/container_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/container_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/container_status"
      x-ntnx-kind: "container"
      x-ntnx-operations: ["create"]

  "/containers/{uuid}":
    get:
      summary: Get a exiting Container
      description: This operation gets a existing Container.
      tags: [containers]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/container_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/container_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/container_status"
      x-ntnx-kind: "container"
      x-ntnx-operations: ["view"]

    put:
      summary: Update a existing Container
      description: >
        This operation submits a request to update a existing Container
        based on the input parameters.

        Only state change of container is allowed.

      tags: [containers]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          description: Intent Spec for Container.
          schema:
            $ref: "#/definitions/container_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/container_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/container_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/container_status"
      x-ntnx-kind: "container"
      x-ntnx-operations: ["update"]

    delete:
      summary: Delete a existing Container
      description: This operation submits a request to delete a existing Container.

      tags: [containers]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/container_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/container_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/container_status"
      x-ntnx-kind: "container"
      x-ntnx-operations: ["delete"]

  "/containers/list":
    post:
      summary: Get a list of existing Containers

      description: >
        This operation gets a list of Containers, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: [containers]
      x-doc-hide: true
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/container_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/container_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      x-ntnx-kind: "container"
      x-ntnx-operations: ["view"]
  "/datacenters":
    post:
      summary: Create a datacenter instance
      description: Create a datacenter instance
      tags: ['datacenter']
      x-ntnx-kind: 'datacenter'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          description: Create datacenter object
          required: true
          schema:
            $ref: '#/definitions/datacenter_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/datacenter_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/datacenter_status'

  "/datacenters/list":
    post:
      tags: ['datacenter']
      x-ntnx-kind: 'datacenter'
      x-ntnx-operations: ["view"]
      summary: Retrieves all datacenters
      description: Retrieves all datacenters
      parameters:
      - name: body
        in: body
        required: true
        schema:
         $ref: '#/definitions/datacenter_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/datacenter_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/datacenter_status'

  "/datacenters/{uuid}":
    get:
      tags: ["datacenter"]
      x-ntnx-kind: 'datacenter'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified datacenter
      description: Retrieves specified datacenter
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/datacenter_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/datacenter_status'

    put:
      summary: Update datacenter
      description: Update datacenter
      tags: ['datacenter']
      x-ntnx-kind: 'datacenter'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update datacenter
          required: true
          schema:
            $ref: '#/definitions/datacenter_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/datacenter_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/datacenter_status'

    delete:
      tags: ["datacenter"]
      x-ntnx-kind: 'datacenter'
      x-ntnx-operations: ["delete"]
      summary: Delete specified datacenter
      description: Delete specified datacenter
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/datacenter_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/datacenter_status'
  "/direct_connects/virtual_interfaces":
    post:
      tags: ["direct_connect_virtual_interfaces"]
      summary: Create a new direct_connect_virtual_interface
      description: >
        This operation submits a request to create a new direct_connect_virtual_interface
        based on the input parameters.

      x-ntnx-kind: direct_connect_virtual_interface
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_status"

  '/direct_connects/virtual_interfaces/list':
    post:
      tags: ["direct_connect_virtual_interfaces"]
      x-ntnx-kind: direct_connect_virtual_interface
      x-ntnx-operations: ["view"]
      summary: Get a list of existing direct_connect_virtual_interfaces
      description: >
        This operation gets a list of direct_connect_virtual_interfaces, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/direct_connect_virtual_interface_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_status"

  "/direct_connects/virtual_interfaces/{uuid}":
    get:
      tags: ["direct_connect_virtual_interfaces"]
      summary: Get a exiting direct_connect_virtual_interface
      description: This operation gets a existing direct_connect_virtual_interface.
      x-ntnx-kind: direct_connect_virtual_interface
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_status"
    put:
      tags: ["direct_connect_virtual_interfaces"]
      summary: Update a existing direct_connect_virtual_interface
      description: >
        This operation submits a request to update a existing direct_connect_virtual_interface
        based on the input parameters.

      x-ntnx-kind: direct_connect_virtual_interface
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_status"
    delete:
      tags: ["direct_connect_virtual_interfaces"]
      summary: Delete a existing direct_connect_virtual_interface
      description: This operation submits a request to delete a existing direct_connect_virtual_interface.

      x-ntnx-kind: direct_connect_virtual_interface
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_virtual_interface_status"
  "/direct_connects/connections":
    post:
      tags: ["direct_connects"]
      summary: Create a new direct_connect
      description: >
        This operation submits a request to create a new direct_connect
        based on the input parameters.

      x-ntnx-kind: direct_connect
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/direct_connect_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_status"

  '/direct_connects/connections/list':
    post:
      tags: ["direct_connects"]
      x-ntnx-kind: direct_connect
      x-ntnx-operations: ["view"]
      summary: Get a list of existing direct_connects
      description: >
        This operation gets a list of direct_connects, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/direct_connect_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/direct_connect_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_status"

  "/direct_connects/connections/{uuid}":
    get:
      tags: ["direct_connects"]
      summary: Get a exiting direct_connect
      description: This operation gets a existing direct_connect.
      x-ntnx-kind: direct_connect
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/direct_connect_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_status"
    put:
      tags: ["direct_connects"]
      summary: Update a existing direct_connect
      description: >
        This operation submits a request to update a existing direct_connect
        based on the input parameters.

      x-ntnx-kind: direct_connect
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/direct_connect_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_status"
    delete:
      tags: ["direct_connects"]
      summary: Delete a existing direct_connect
      description: This operation submits a request to delete a existing direct_connect.

      x-ntnx-kind: direct_connect
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/direct_connect_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/direct_connect_status"

  '/directory_services':
    post:
      tags: ['directory_service']
      summary: Create a new directory service configuration
      description: >
        This operation submits a request to create a new directory service configuration
        based on the input parameters.

      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['add']
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/directory_service_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/directory_service_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'


  '/directory_services/list':
    post:
      tags: ['directory_service']
      summary: Get a list of existing directory service configurations
      description: >
        This operation gets a list of directory service configurations, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['view']
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/directory_service_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/directory_service_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'

  '/directory_services/{uuid}/search':
    post:
      tags: ['directory_service']
      summary: Search user or group in the directory service.
      description: |
        Retrieves a user or a group available in the directory service based on
        the UUID specified.
      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['search']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
           $ref: '#/definitions/directory_service_search_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/directory_service_search_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'

  '/directory_services/{uuid}':
    get:
      tags: ['directory_service']
      summary: Get a exiting directory service configuration
      description: This operation gets a existing directory service configuration.
      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['view']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/directory_service_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/directory_service_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'


    put:
      tags: ['directory_service']
      summary: Update a existing directory service configuration
      description: >
        This operation submits a request to update a existing directory service configuration
        based on the input parameters.

      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['update']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
           $ref: '#/definitions/directory_service_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/directory_service_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/directory_service_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'



    delete:
      tags: ['directory_service']
      summary: Delete a existing directory service configuration
      description: This operation submits a request to delete a existing directory service configuration.

      x-ntnx-kind: 'directory_service'
      x-ntnx-operations: ['delete']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/directory_service_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/directory_service_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'


  '/disks/list':
    post:
      summary: Get a list of existing Disks

      description: >
        This operation gets a list of Disks, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["disks"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/disk_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/disk_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      x-ntnx-kind: 'disk'
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/disks/{uuid}':
    get:
      summary: Get a exiting Disk
      description: This operation gets a existing Disk.
      tags: ["disks"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/disk_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      x-ntnx-kind: 'disk'
      x-ntnx-operations: ["view"]
      x-doc-hide: true

    delete:
      summary: Delete a existing Disk
      description: This operation submits a request to delete a existing Disk.

      tags: ["disks"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/disk_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      x-ntnx-kind: 'disk'
      x-ntnx-operations: ["delete"]
      x-doc-hide: true
  /docker_registries/list:
    post:
      summary: List all docker registries
      description: List all docker registries
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/docker_registry_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/docker_registry_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      x-ntnx-kind: 'docker_registry'
      x-ntnx-operations: ["view"]

  /docker_registries:
    post:
      description: Create a docker registry
      summary: Create a docker registry
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - name: body
          in: body
          description: Docker registry spec
          required: true
          schema:
            $ref: '#/definitions/docker_registry_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      x-ntnx-kind: 'docker_registry'
      x-ntnx-operations: ["create"]

  /docker_registries/{uuid}/search/list:
    post:
      summary: Searches docker containers for specified registry
      description: Searches docker containers for specified registry
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - $ref: '#/parameters/uuid'
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/docker_registry_image_search_list_intent_response'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/docker_registry_image_search_list_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/docker_registry_image_search_list_intent_response"
        500:
          description: Internal Error
      x-ntnx-kind: 'docker_image'
      x-ntnx-operations: ["view"]

  /docker_registries/{uuid}:
    get:
      description: Retrieve a docker registry
      summary: Retrieve a Docker registry
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        500:
          description: Failed to retrieve docker registry
          schema:
            $ref: '#/definitions/docker_registry_status'
      x-ntnx-kind: 'docker_registry'
      x-ntnx-operations: ["view"]

    put:
      description: Update a docker registry
      summary: Update a docker registry
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - $ref: '#/parameters/uuid'
        - name: body
          in: body
          description: Docker registry spec
          required: true
          schema:
            $ref: '#/definitions/docker_registry_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      x-ntnx-kind: 'docker_registry'
      x-ntnx-operations: ["update"]

    delete:
      summary: Deletes a Docker registry
      description: Deletes a Docker registry
      tags: ["docker_registry"]
      x-doc-hide: true
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      x-ntnx-kind: 'docker_registry'
      x-ntnx-operations: ["delete"]
  '/entity_sync_rules':
    post:
      tags: ["entity_sync_rules"]
      summary: Create a new entity_sync_rule
      description: >
        This operation submits a request to create a new entity_sync_rule
        based on the input parameters.

      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["create"]
      x-doc-hide: true
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/entity_sync_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/entity_sync_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"

  '/entity_sync_rules/list':
    post:
      tags: ["entity_sync_rules"]
      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing entity_sync_rules
      description: >
        This operation gets a list of entity_sync_rules, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-doc-hide: true
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/entity_sync_rule_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/entity_sync_rule_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"

  '/entity_sync_rules/{uuid}':
    get:
      tags: ["entity_sync_rules"]
      summary: Get a exiting entity_sync_rule
      description: This operation gets a existing entity_sync_rule.
      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/entity_sync_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"

    delete:
      tags: ["entity_sync_rules"]
      summary: Delete a existing entity_sync_rule
      description: This operation submits a request to delete a existing entity_sync_rule.

      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["delete"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/entity_sync_rule_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/entity_sync_rule_status'

    put:
      tags: ["entity_sync_rules"]
      summary: Update a existing entity_sync_rule
      description: >
        This operation submits a request to update a existing entity_sync_rule
        based on the input parameters.

      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["update"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/entity_sync_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/entity_sync_rule_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/entity_sync_rule_status'
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"

  '/entity_sync_rules/{uuid}/process':
    post:
      tags: ["entity_sync_rules"]
      summary: Process an entity sync rule.
      description: |
        It will be used whenever user wants to process an entity sync rule
        immediately, irrespective of sync trigger or schedule. It will override
        entities in case of conflicts.
      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["process"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/entity_sync_rule_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"

  '/entity_sync_rules/{uuid}/list_entities_to_sync':
    get:
      tags: ["entity_sync_rules"]
      summary: |
        Get the list of entities which needs to be synced.
      description: |
        Get the list of entities that are affected by this entity sync rule
        which needs to be synced to connected Availability Zones.
      x-ntnx-kind: 'entity_sync_rule'
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/list_entities_to_sync_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/entity_sync_rule_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/entity_sync_rule_status"
  '/environments':
    post:
      x-doc-hide: true
      summary: Create Environment
      description: |
        Given a spec creates a Environment with associated metadata
      tags: ["environment"]
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/environment_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/environment_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/environment_status'
      x-ntnx-kind: "environment"
      x-ntnx-operations: ["create"]

  '/environments/list':
    post:
      x-doc-hide: true
      summary: List the Environment
      description: List the Environment with associated metadata
      tags: ["environment"]
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/environment_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/environment_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/environment_status'
      x-ntnx-kind: "environment"
      x-ntnx-operations: ["view"]

  '/environments/{uuid}':
    get:
      x-doc-hide: true
      summary: Get Environment
      description: Given a UUID, returns a Environment definition
      tags: ["environment"]
      parameters:
       - name: uuid
         description: UUID of Environment to get
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/environment_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/environment_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/environment_status'
      x-ntnx-kind: "environment"
      x-ntnx-operations: ["view"]

    put:
      x-doc-hide: true
      summary: Update Environment
      description: |
        Given a spec and Environment UUID, update Environment
      tags: ["environment"]
      parameters:
       - name: uuid
         description: UUID of environment to be updated
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/environment_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/environment_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/environment_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/environment_status'
      x-ntnx-kind: "environment"
      x-ntnx-operations: ["update"]

    delete:
      x-doc-hide: true
      summary: Delete Environment
      description: Delete a Environment given its UUID
      tags: ["environment"]
      parameters:
      - name: uuid
        description: UUID of the environment to be deleted
        in: path
        required: true
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/environment_intent_response'
        404:
          description: Invalid UUID Provided
          schema:
            $ref: '#/definitions/environment_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/environment_status'
      x-ntnx-kind: "environment"
      x-ntnx-operations: ["delete"]
  '/file_store':
    post:
      x-doc-hide: true
      tags: ["file_store"]
      summary: Create a new file_item
      description: "File items are binaries and unlike images are not limited
                   by the file type (e.g ISOs, or disk images)."
      x-ntnx-kind: 'file_item'
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/file_item_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/file_item_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"

  "/file_store/{uuid}":
    get:
      tags: ["file_store"]
      summary: Get a exiting file_item
      description: This operation gets a existing file_item.
      x-doc-hide: true
      x-ntnx-kind: 'file_item'
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/file_item_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"
    put:
      tags: ["file_store"]
      summary: Update a existing file_item
      description: >
        This operation submits a request to update a existing file_item
        based on the input parameters.

      x-doc-hide: true
      x-ntnx-kind: 'file_item'
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/file_item_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/file_item_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"
    delete:
      tags: ["file_store"]
      summary: Delete a existing file_item
      description: This operation submits a request to delete a existing file_item.

      x-doc-hide: true
      x-ntnx-kind: 'file_item'
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/file_item_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"

  "/file_store/{uuid}/file":
    put:
      tags: ["file_store"]
      summary: Upload file item contents
      description: Upload the binary bits for a file item.
      x-doc-hide: true
      x-ntnx-kind: 'file_item'
      consumes: [ "application/octet-stream" ]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: file_item
          in: body
          required: true
          schema:

            format: binary
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"
    get:
      tags: ["file_store"]
      summary: Get file item Contents
      description: Download the raw binary bits associated with a file item.
      x-doc-hide: true
      x-ntnx-kind: 'file_item'
      parameters:
        - $ref: "#/parameters/uuid"
      produces:
      - application/octet-stream
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"

  "/file_store/list":
    post:
      tags: ["file_store"]
      summary: Get a list of existing file_items

      description: >
        This operation gets a list of file_items, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-doc-hide: true
      x-ntnx-kind: "file_item"
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: "#/definitions/file_item_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/file_item_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/file_item_status"
  "/floating_ips":
    post:
      tags: ["floating_ip"]
      summary: Create a new Floating IP
      description: >
        This operation submits a request to create a new Floating IP
        based on the input parameters.

      x-ntnx-kind: floating_ip
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/floating_ip_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/floating_ip_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/floating_ip_status"

  '/floating_ips/list':
    post:
      tags: ["floating_ip"]
      x-ntnx-kind: floating_ip
      x-ntnx-operations: ["view"]
      summary: Get a list of existing Floating IPs
      description: >
        This operation gets a list of Floating IPs, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/floating_ip_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/floating_ip_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/floating_ip_status'

  "/floating_ips/{uuid}":
    get:
      tags: ["floating_ip"]
      summary: Get a exiting Floating IP
      description: This operation gets a existing Floating IP.
      x-ntnx-kind: floating_ip
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/floating_ip_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/floating_ip_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/floating_ip_status"

    put:
      tags: ["floating_ip"]
      summary: Update a existing Floating IP
      description: >
        This operation submits a request to update a existing Floating IP
        based on the input parameters.

      x-ntnx-kind: floating_ip
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/floating_ip_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/floating_ip_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/floating_ip_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/floating_ip_status"

    delete:
      tags: ["floating_ip"]
      summary: Delete a existing Floating IP
      description: This operation submits a request to delete a existing Floating IP.

      x-ntnx-kind: floating_ip
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/floating_ip_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/floating_ip_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/floating_ip_status"
  '/gcp/v1/disk_types/list':
    post:
      tags: ["gcp/disk_types"]
      x-doc-hide: true
      summary: Get Google cloud disk types
      description: |
        List all disk types present in a zone. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_disk_type"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/images/list':
    post:
      tags: ["gcp/images"]
      x-doc-hide: true
      summary: Get Google cloud images
      description: |
        List all images available for a GCP account. Supported filters are:
        - account_uuid
      x-ntnx-kind: "gcp_image"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/instances/list':
    post:
      tags: ["gcp/instances"]
      x-doc-hide: true
      summary: Get Google cloud vm instances
      description: |
        List all VM's present in a zone. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_instance"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/machine_types/list':
    post:
      tags: ["gcp/machine_types"]
      x-doc-hide: true
      summary: Get Google cloud machine types
      description: |
        List all machine types present in a zone. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_machine_type"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/networks/list':
    post:
      tags: ["gcp/networks"]
      x-doc-hide: true
      summary: Get Google cloud networks
      description: |
        List all network interfaces present in a zone. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_network"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/persistent_disks/list':
    post:
      tags: ["gcp/persistent_disks"]
      x-doc-hide: true
      summary: Get Google cloud persistent disks
      description: |
        List all persistent disks present in a zone. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_persistent_disk"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/regions/list':
    post:
      tags: ["gcp/regions"]
      x-doc-hide: true
      summary: Get Google cloud regions
      description: |
        List all regions present available for a GCP account. Supported filters are:
        - account_uuid
      x-ntnx-kind: "gcp_region"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/snapshots/list':
    post:
      tags: ["gcp/snapshots"]
      x-doc-hide: true
      summary: Get Google cloud snapshots
      description: |
        List all snapshots available for a GCP account. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_snapshot"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/subnetworks/list':
    post:
      tags: ["gcp/subnetworks"]
      x-doc-hide: true
      summary: Get Google cloud subnetworks
      description: |
        List all subnetworks available for a GCP account. Supported filters are:
        - account_uuid
        - zone
      x-ntnx-kind: "gcp_subnetwork"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/zones/list':
    post:
      tags: ["gcp/zones"]
      x-doc-hide: true
      summary: Get Google cloud zones
      description: |
        List all zones available for a GCP account. Supported filters are:
        - account_uuid
      x-ntnx-kind: "gcp_zone"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/firewalls/list':
    post:
      tags: ["gcp/firewalls"]
      x-doc-hide: true
      summary: Get Google cloud firewalls
      description: |
        List all firewalls available for a project. Supported filters are:
        - account_uuid
      x-ntnx-kind: "gcp_firewall"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gcp_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: GCP resources response body
          schema:
            additionalProperties: true

  '/gcp/v1/accounts/{account_uuid}/zone/{zone_name}/instances/{uuid}':
    get:
      summary: Get gcp vm
      description: Given a UUID, returns a gcp vm
      tags: ["gcp/instances"]
      parameters:
       - name: uuid
         description: UUID of gcp instance
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: account_uuid
         description: UUID of account
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: zone_name
         description: zone name for gcp account
         in: path
         required: true
         type: string
         x-example: us-central1-a
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Internal Error
          schema:
            additionalProperties: true
      x-ntnx-kind: "gcp_instance"
      x-ntnx-operations: ["view"]
      x-doc-hide: true
  /graphql:
    post:
      tags: ["graphql"]
      x-doc-hide: true
      summary: Execute graphql queries.
      description: |
        Execute graphql query and return the data.
      parameters:
        -
          name: body
          in: body
          description: Graphql query to execute.
          required: true
          schema:
            $ref: '#/definitions/graphql_query'
      responses:
        '200':
          description: Requests processed successfully.
          schema:
            $ref: '#/definitions/graphql_response'
        500:
          description: Failed to process requests.
          schema:
            $ref: '#/definitions/status'
  /groups:
    post:
      # This api should be prevented from being shown in customer docs.
      x-doc-hide: true
      tags:
      - groups
      summary: Get Entities.
      description: Get entities from entity db.
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/groups_get_entities_request'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/groups_get_entities_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  '/hosts/{uuid}':
    get:
      summary: Get a exiting Host
      description: This operation gets a existing Host.
      tags: ["hosts"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/host_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      x-ntnx-kind: 'host'
      x-ntnx-operations: ["view"]

    delete:
      summary: Delete a existing Host
      description: This operation submits a request to delete a existing Host.

      tags: ["hosts"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/host_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      x-ntnx-kind: 'host'
      x-doc-hide: true
      x-ntnx-operations: ["delete"]

    put:
      summary: Update a existing Host
      description: >
        This operation submits a request to update a existing Host
        based on the input parameters.

      tags: ["hosts"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          description: Intent Spec of Host.
          schema:
            $ref: "#/definitions/host_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/host_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      x-ntnx-kind: 'host'
      x-ntnx-operations: ["update"]
      x-doc-hide: true

  '/hosts/list':
    post:
      summary: Get a list of existing Hosts

      description: >
        This operation gets a list of Hosts, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["hosts"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/host_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/host_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      x-ntnx-kind: 'host'
      x-ntnx-operations: ["view"]

  '/hosts/{uuid}/run_ipmi_cmd':
    post:
      summary: Run IPMI command on the given host
      description: Run IPMI command on the given host
      tags: ["ipmi_cmd"]
      parameters:
        - $ref: "#/parameters/uuid"
        - in: body
          name: ipmi_args
          description: The arguments for the IPMI tool as a single string
          required: true
          schema:
            $ref: '#/definitions/host_ipmi_args'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/host_ipmi_cmd_result'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      x-doc-hide: true
      x-ntnx-kind: 'host'
      x-ntnx-operations: ["create"]
  '/idempotence_identifiers':
    post:
      summary: Create an new idempotence_identifier " (UUID4)"
      description: >
        This operation submits a request to create an new idempotence_identifier
        based on the input parameters.

        The idempotence_identifiers API allows users to generate an idempotent UUID4 with a user-provided identifier. The idempotent UUID(s) can later be passed in POST requests. By default,  Nutanix v3 APIs do not allow for operations to be created with user-provided UUIDs; each POST request received by the API gateway results in a UUID4 being automatically generated and returned in the response JSON.

      parameters:
        - in: body
          name: body
          description: An idempotence identifier object.
          required: false
          schema:
            $ref: '#/definitions/idempotence_identifiers_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/idempotence_identifiers_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      tags: ["idempotence_identifiers"]
      x-ntnx-kind: idempotence_identifier

  '/idempotence_identifiers/salted':
    post:
      summary: Create an new idempotence_identifier " (Salted / UUID5)"
      description: >
        This operation submits a request to create an new idempotence_identifier
        based on the input parameters.

        This internal API generates idempotent UUID5(s)for given name or list of names. These are deterministic UUID5, so use caution as this can result in duplicated UUIDs across environments.

      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/identifier_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/identifier_response'
        500:
          description: Internal Error
      tags: ["idempotence_identifiers"]
      x-ntnx-kind: idempotence_identifier
      x-doc-hide: true # internal API

  '/idempotence_identifiers/{client_identifier}':
    get:
      summary: Get an exiting idempotence_identifier
      description: This operation gets an existing idempotence_identifier.
      parameters:
        - name: client_identifier
          in: path
          required: true
          type: string
          x-example: my-particular-id
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/idempotence_identifiers_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      tags: ["idempotence_identifiers"]
      x-ntnx-kind: idempotence_identifier
    delete:
      summary: Delete an existing idempotence_identifier
      description: This operation submits a request to delete an existing idempotence_identifier.

        NOTE - There is a
        Grace period before actually deleting expired UUIDs.
        Deletion occurs of UUIDs only after 300 secs from expiration time.
        Controlled by GFLAG idempotence_uuid_grace_period_secs.

      parameters:
        - name: client_identifier
          in: path
          required: true
          type: string
          x-example: my-particular-id
      responses:
        200:
          description: Success
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      tags: ["idempotence_identifiers"]
      x-ntnx-kind: idempotence_identifier
  "/vms/{uuid}/vm_disk/{vm_disk_uuid}/data":
    get:
      x-doc-hide: true
      summary: Read from a VM disk.
      description: Read from an identity disk attached to a VM from the
                   provided offset.
      parameters:
        - $ref: "#/parameters/uuid"
        - in: path
          name: vm_disk_uuid
          description: VM disk device UUID
          type: string
          format: UUID
          required: true
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        - in: query
          name: offset
          type: integer
          format: int32
          description: Offset within the disk. Defaults to 0.

          maximum: 16777216
          minimum: 0
        - in: query
          name: length
          type: integer
          format: int32
          maximum: 16777216
          minimum: 0
          description: Amount to read from disk. By default this will be the
                       max size (16 MB).
      responses:
        200:
          description: Success
          schema:
            type: string
            format: byte
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
    put:
      x-doc-hide: true
      summary: Write to a VM disk.
      description: Write to an identity disk attached to a VM at the provided
                   offset.
      consumes: [ "application/octet-stream" ]
      parameters:
        - $ref: "#/parameters/uuid"
        - in: path
          name: vm_disk_uuid
          description: VM disk device UUID
          type: string
          format: UUID
          required: true
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        - in: query
          name: offset
          type: integer
          format: int32
          description: Offset within the disk. Defaults to 0.
          minimum: 0
          maximum: 16777216
        - in: body
          name: data
          required: true
          schema:
            format: byte
      responses:
        200:
          description: Success
          schema:
            type: object
            description: Return object indicating the status of the write.
            properties:
              bytes_written:
                description: Number of bytes written to the identity disk.
                type: integer
                format: int32
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
  '/identity_providers':
    post:
      tags: ['identity_providers']
      summary: Create a new identity_provider
      description: >
        This operation submits a request to create a new identity_provider
        based on the input parameters.

      x-ntnx-kind: identity_provider
      x-ntnx-operations: ['create']
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/identity_provider_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/identity_provider_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

  '/identity_providers/list':
    post:
      tags: ['identity_providers']
      summary: Get a list of existing identity_provider
      description: >
        This operation gets a list of identity_provider, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: identity_provider
      x-ntnx-operations: ["view"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/identity_provider_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/identity_provider_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

  '/identity_providers/{uuid}':
    get:
      tags: ['identity_providers']
      summary: Get a exiting identity_provider
      description: This operation gets a existing identity_provider.
      x-ntnx-kind: identity_provider
      x-ntnx-operations: ['view']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/identity_provider_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/identity_provider_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

    put:
      tags: ['identity_providers']
      summary: Update a existing identity_provider
      description: >
        This operation submits a request to update a existing identity_provider
        based on the input parameters.

      x-ntnx-kind: identity_provider
      x-ntnx-operations: ['update']
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
           $ref: '#/definitions/identity_provider_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/identity_provider_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/identity_provider_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

    delete:
      tags: ['identity_providers']
      summary: Delete a existing identity_provider
      description: This operation submits a request to delete a existing identity_provider.

      x-ntnx-kind: identity_provider
      x-ntnx-operations: ['delete']
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/identity_provider_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

  '/identity_providers/callback':
    post:
      tags: ['identity_providers']
      summary: Endpoint which will be called from the identity provider.
      description: |
        Assertion consumer service url to which the SAML assertion is posted.
      x-ntnx-kind: identity_provider
      x-doc-hide: true
      parameters:
        - name: saml_response
          in: formData
          required: false
          type: string
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

  '/identity_providers/redirect_list':
    post:
      tags: ['identity_providers']
      summary: Get a list of existing identity_provider
      description: >
        This operation gets a list of identity_provider, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: identity_provider
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/identity_provider_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/identity_provider_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'

  '/identity_providers/sp_metadata':
    get:
      tags: ['identity_providers']
      summary: Endpoint which will give service provider metadata as output
      description: |
        Endpoint which will give service provider metadata as output
      x-ntnx-kind: identity_provider
      responses:
        200:
          description: Success
          schema:
            format: binary
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/identity_provider_status'
  "/images/migrate":
    post:
      summary: Migrate images from PE cluster to PC
      description: >
        Submits a request to create a task handling image migration operation,
        returns a task reference. This moves ownership of images from the PE
        cluster to PC.
        Image UUIDs can be obtained by querying the PE instance to list images
        on the PE. In the case where image UUID list is provided as empty,
        all images on the cluster that are not currently migrated to PC
        will be migrated to PC.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["migrate"]
      tags: ["images"]
      parameters:
      -
        name: body
        in: body
        schema:
           $ref: "#/definitions/image_migrate_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/procedural_error_response"
  "/images/remote_copy":
    post:
      summary: Copy AHV images between on-prem and Xi
      description: >
        Submits a request to create a task handling image remote copy operation,
        returns a task uuid.
        In the case where image UUID list is provided as empty, all images on
        the local PC cluster will be copied to remote PC's cluster.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["remote_copy"]
      x-doc-hide: false
      tags: ["images"]
      parameters:
      -
        name: body
        in: body
        schema:
           $ref: "#/definitions/image_remote_copy_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/procedural_error_response"
  '/images':
    post:
      tags: ["images"]
      summary: Create a new IMAGE
      description: >
        Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user
        can be attached to a VM. An ISO image is attached as a virtual CD-ROM
        drive, and QCOW2 and VMDK files are attached as SCSI disks. An image
        has to be explicitly added to the self-service catalog before users
        can create VMs from it.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/image_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/image_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"

  "/images/{uuid}":
    get:
      tags: ["images"]
      summary: Get a exiting IMAGE
      description: This operation gets a existing IMAGE.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/image_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"
    put:
      tags: ["images"]
      summary: Update a existing IMAGE
      description: >
        This operation submits a request to update a existing IMAGE
        based on the input parameters.

      x-ntnx-kind: 'image'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/image_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/image_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"
    delete:
      tags: ["images"]
      summary: Delete a existing IMAGE
      description: This operation submits a request to delete a existing IMAGE.

      x-ntnx-kind: 'image'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/image_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"

  "/images/{uuid}/file":
    put:
      tags: ["images"]
      summary: Upload Image Contents
      description: >
        Upload the binary bits of an image based on the UUID specified. Note
        that the image must be created first before an upload can be done.
        Also, once the image has been uploaded the image cannot be changed.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["update", "create"]
      consumes: [ "application/octet-stream" ]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: image
          in: body
          required: true
          schema:
            format: binary
        - name: X-Nutanix-Checksum-Type
          description: Checksum type (e.g SHA_1, SHA_256).
          in: header
          type: string
          enum: [ "SHA_1", "SHA_256" ]
        - name: X-Nutanix-Checksum-Bytes
          description: Checksum bytes.
          in: header
          type: string
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"
    get:
      tags: ["images"]
      summary: Get Image Contents
      description: Downloads the image based on the UUID specified.
      x-ntnx-kind: 'image'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      produces:
      - application/octet-stream
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"

  "/images/list":
    post:
      tags: ["images"]
      summary: Get a list of existing IMAGEs

      description: >
        This operation gets a list of IMAGEs, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: "image"
      x-ntnx-operations: ["view"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: "#/definitions/image_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/image_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/image_status"
  '/marketplace_items/config':
    post:
      x-doc-hide: true
      summary: Enable or disable the Nutanix apps in the marketplace
      description: Enable or disable the Nutanix apps in the marketplace
      tags: ['marketplace_item']
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["config"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/marketplace_item_config'
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
    get:
      x-doc-hide: true
      summary: Retrieve configuration for Nutanix apps
      description: |
        Retrieve configuration for whether Nutanix apps have been enabled
        or disabled
      tags: ['marketplace_item']
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["view"]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/marketplace_item_config'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
  '/marketplace_items/render':
    post:
      x-doc-hide: true
      summary: Create a Marketplace item from the given input.
      description: >
        Helper that translates the given input spec into the equivalent
        Marketplace item. This is then persisted in the system. NOTE, the
        result of this operation is the UUID of the created marketplace item.
      tags: ['marketplace_item']
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/marketplace_item_render_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/marketplace_item_render_output'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["render"]
  '/marketplace_items/list':
    post:
      x-doc-hide: true
      tags: ['marketplace_item']
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing marketplace items
      description: >
        This operation gets a list of marketplace items, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      - in: body
        name: get_entities_request
        required: true
        schema:
         $ref: '#/definitions/marketplace_item_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/marketplace_item_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'

  '/marketplace_items':
    post:
      x-doc-hide: true
      summary: Create a new marketplace item
      description: >
        This operation submits a request to create a new marketplace item
        based on the input parameters.

      tags: ['marketplace_item']
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/marketplace_item_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/marketplace_item_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'

  '/marketplace_items/{uuid}':
    get:
      x-doc-hide: true
      tags: ['marketplace_item']
      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["view"]
      summary: Get a exiting marketplace item
      description: This operation gets a existing marketplace item.
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/marketplace_item_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/marketplace_item_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
    put:
      x-doc-hide: true
      tags: ['marketplace_item']
      summary: Update a existing marketplace item
      description: >
        This operation submits a request to update a existing marketplace item
        based on the input parameters.

      x-ntnx-kind: 'marketplace_item'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/marketplace_item_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/marketplace_item_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/marketplace_item_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
    delete:
      x-doc-hide: true
      tags: ['marketplace_item']
      x-ntnx-operations: ["delete"]
      x-ntnx-kind: 'marketplace_item'
      summary: Delete a existing marketplace item
      description: This operation submits a request to delete a existing marketplace item.

      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/marketplace_item_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/marketplace_item_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/marketplace_item_status'
  "/mh_vms/{uuid}/snapshot":
    post:
      summary: Create a VM recovery point.
      description: >
        Submits a request to create a task handling the snapshot operation on
        the VM, returns a task reference. This creates a point in time
        recovery point.

      tags: ["mh_vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         schema:
           $ref: "#/definitions/mh_vm_snapshot_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/mh_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-kind: "mh_vm"
      x-ntnx-operations: ["snapshot"]

  "/mh_vms/{uuid}/revert":
    post:
      summary: Revert the VM to the given recovery point.
      description: >
        Submits a request to create a task handling the VM revert to a
        recovery point operation, returns a task reference.

      tags: ["mh_vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/mh_vm_revert_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/mh_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-kind: "mh_vm"
      x-ntnx-operations: ["revert"]
  "/mh_vms":
    post:
      summary: Create a new VM
      description: >
        This operation submits a request to create a new VM
        based on the input parameters.

      tags: ["mh_vms"]
      x-doc-hide: true
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/mh_vm_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/mh_vm_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-kind: "mh_vm"
      x-ntnx-operations: ['create']


  "/mh_vms/list":
    post:
      summary: Get a list of existing VMs
      description: >
        This operation gets a list of VMs, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["mh_vms"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: "#/definitions/mh_vm_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/mh_vm_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-kind: mh_vm
      x-ntnx-operations: ['view']


  "/mh_vms/{uuid}":

    get:
      summary: Get a exiting VM
      description: This operation gets a existing VM.
      tags: ["mh_vms"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/mh_vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/mh_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-operations: ['view']
      x-ntnx-kind: mh_vm

    put:
      summary: Update a existing VM
      description: >
        This operation submits a request to update a existing VM
        based on the input parameters.


      tags: ["mh_vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/mh_vm_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/mh_vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/mh_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-operations: ['update']
      x-ntnx-kind: mh_vm
  "/mh_vms/{uuid}/validate_migration":
    post:
      summary: |
        Validates the feasibility of VM migration to given migration target.
      description: |
        Validates the feasibility of VM migration to given migration target,
        if not feasible returns the reason behind it.
      tags: ["mh_vm"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/vm_validate_migration_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vm_validate_migration_output"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/mh_vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/mh_vm_status"
      x-ntnx-kind: mh_vm
      x-ntnx-operations: ['view']
  "/network_devices":
    post:
      summary: Create a network device instance
      description: Create a network device instance
      tags: ['network_device']
      x-ntnx-kind: 'network_device'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          description: Create network device object
          required: true
          schema:
            $ref: '#/definitions/network_device_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network_device_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_device_status'

  "/network_devices/list":
    post:
      tags: ['network_device']
      x-ntnx-kind: 'network_device'
      x-ntnx-operations: ["view"]
      summary: Retrieves all network devices
      description: Retrieves all network devices
      parameters:
      - name: body
        in: body
        required: true
        schema:
         $ref: '#/definitions/network_device_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network_device_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_device_status'

  "/network_devices/{uuid}":
    get:
      tags: ["network_device"]
      x-ntnx-kind: 'network_device'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified network device
      description: Retrieves specified network device
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_device_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_device_status'

    put:
      summary: Update network device
      description: Update a network device
      tags: ['network_device']
      x-ntnx-kind: 'network_device'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update network device
          required: true
          schema:
            $ref: '#/definitions/network_device_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network_device_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_device_status'

    delete:
      tags: ["network_device"]
      x-ntnx-kind: 'network_device'
      x-ntnx-operations: ["delete"]
      summary: Delete specified network device
      description: Delete specified network device
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_device_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_device_status'
  '/network_function_chains':
    post:
      summary: Create a new Network Function Chain
      description: >
        Given an intentful spec, creates a network function chain with
        associated metadata.
      tags: ["network_function_chains"]

      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/network_function_chain_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      x-ntnx-kind: 'network_function_chain'
      x-ntnx-operations: ["create"]

  '/network_function_chains/list':
    post:
      summary: Get a list of existing Network Function Chains

      description: >
        This operation gets a list of Network Function Chains, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["network_function_chains"]

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/network_function_chain_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network_function_chain_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      x-ntnx-kind: 'network_function_chain'
      x-ntnx-operations: ["view"]

  '/network_function_chains/{uuid}':
    get:
      summary: Get a exiting Network Function Chain
      description: Given a UUID, returns a network_function_chain definition.
      tags: ["network_function_chains"]

      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      x-ntnx-kind: 'network_function_chain'
      x-ntnx-operations: ["view"]
    put:
      summary: Update a existing Network Function Chain
      description: >
        Given an intenful spec and uuid, update network function chain.
      tags: ["network_function_chains"]

      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/network_function_chain_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      x-ntnx-kind: 'network_function_chain'
      x-ntnx-operations: ["update"]
    delete:
      summary: Delete a existing Network Function Chain
      description: Delete a network function chain given its uuid.
      tags: ["network_function_chains"]

      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      x-ntnx-kind: 'network_function_chain'
      x-ntnx-operations: ["delete"]
  "/network_security_rules":
    post:
      tags: ["network_security_rules"]
      summary: Create a new Network security rule
      description: >
        This operation submits a request to create a new Network security rule
        based on the input parameters.

      x-ntnx-kind: 'network_security_rule'
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/network_security_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/network_security_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/network_security_rule_status"

  '/network_security_rules/list':
    post:
      tags: ["network_security_rules"]
      summary: Get all network security rules

      description: >
        This operation gets a list of Network security rules, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: 'network_security_rule'
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/network_security_rule_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/network_security_rule_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/network_security_rule_status"

  "/network_security_rules/{uuid}":
    get:
      tags: ["network_security_rules"]
      summary: Get a exiting Network security rule
      description: This operation gets a existing Network security rule.
      x-ntnx-kind: 'network_security_rule'
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/network_security_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/network_security_rule_status"
    put:
      tags: ["network_security_rules"]
      summary: Update a existing Network security rule
      description: >
        This operation submits a request to update a existing Network security rule
        based on the input parameters.

      x-ntnx-kind: 'network_security_rule'
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/network_security_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/network_security_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/network_security_rule_status"
    delete:
      tags: ["network_security_rules"]
      summary: Delete a existing Network security rule
      description: This operation submits a request to delete a existing Network security rule.

      x-ntnx-kind: 'network_security_rule'
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/network_security_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/network_security_rule_status"
  '/ngt_policies':
    post:
      summary: Create a new ngt_policy
      description: >
        This operation submits a request to create a new ngt_policy
        based on the input parameters.

      tags: ["ngt_policies"]
      x-ntnx-kind: 'ngt_policy'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ngt_policy_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ngt_policy_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ngt_policy_status'

  '/ngt_policies/{uuid}':
    get:
      summary: Get a exiting ngt_policy
      description: This operation gets a existing ngt_policy.
      tags: ["ngt_policies"]
      x-ntnx-kind: 'ngt_policy'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ngt_policy_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ngt_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ngt_policy_status'

    put:
      summary: Update a existing ngt_policy
      description: >
        This operation submits a request to update a existing ngt_policy
        based on the input parameters.

      tags: ["ngt_policies"]
      x-ntnx-kind: 'ngt_policy'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ngt_policy_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ngt_policy_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/ngt_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ngt_policy_status'

    delete:
      summary: Delete a existing ngt_policy
      description: This operation submits a request to delete a existing ngt_policy.

      tags: ["ngt_policies"]
      x-ntnx-kind: 'ngt_policy'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ngt_policy_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ngt_policy_status'

  '/ngt_policies/list':
    post:
      summary: Get a list of existing ngt_policies

      description: >
        This operation gets a list of ngt_policies, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["ngt_policies"]
      x-ntnx-kind: 'ngt_policy'
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/ngt_policy_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ngt_policy_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ngt_policy_status'
  '/metrics/{api}':
    post:
      summary: Proxies metrics request to nusights Db API server.
      description: >
        Input data is validated by REST layer in nusights DB server,this is a
         passthrough.
      x-doc-hide: true
      parameters:
        - name: api
          in: path
          description: The API type for nusights Db API server
          type: string
          required: true
          maxLength: 64
          x-example: table
          x-ntnx-enum:
            - table
        - name: body
          in: body
          schema:
            additionalProperties: true
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true

  '/events':
    post:
      summary: Proxies events request to nusights Db API server.
      description: >
        Input data is validated by REST layer in nusights DB server,this is a
          passthrough.
      x-doc-hide: true
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: true
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
  '/oauth/client/list':
    post:
      x-doc-hide: true
      tags: ["oauth"]
      x-ntnx-kind: 'oauth_client'
      summary: Retrieves all oauth client
      description: Retrieves all oauth clients
      parameters:
      - in: body
        name: get_entities_request
        required: true
        schema:
         $ref: '#/definitions/oauth_client_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_list'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
  '/oauth/client':
    post:
      x-doc-hide: true
      tags: ["oauth"]
      x-ntnx-kind: 'oauth_client'
      description: Add new Oauth Client
      summary: This is used to register new oauth client
      parameters:
        - in: body
          name: oauth_client
          description: Oauth client details
          required: true
          schema:
            $ref: '#/definitions/oauth_client_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
  '/oauth/client/{client_id}':
    get:
      x-doc-hide: true
      tags: ["oauth"]
      x-ntnx-kind: 'oauth_client'
      description: Get Oauth client information
      summary: Used to fetch existing oauth client details
      parameters:
        - name: client_id
          in: path
          required: true
          type: string
          x-example: YIzoTEg5HewuCouC
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        404:
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
    put:
      x-doc-hide: true
      tags: ["oauth"]
      x-ntnx-kind: 'oauth_client'
      description: Update Oauth client information
      summary: Used to update existing client details
      parameters:
        - name: client_id
          in: path
          required: true
          type: string
          x-example: YIzoTEg5HewuCouC
        - in: body
          name: oauth_client
          description: Oauth client details
          required: true
          schema:
            $ref: '#/definitions/oauth_client_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        404:
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
    delete:
      x-doc-hide: true
      tags: ["oauth"]
      x-ntnx-kind: 'oauth_client'
      description: Delete existing Oauth client information
      summary: Delete an existing Oauth client
      parameters:
        - name: client_id
          in: path
          required: true
          type: string
          x-example: YIzoTEg5HewuCouC
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        404:
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
  '/oauth/authorize':
    post:
      x-doc-hide: true
      tags: ['oauth']
      description: Authorization confirmation post url
      summary: Used to get authorization code from server
      consumes: [ "application/x-www-form-urlencoded" ]
      parameters:
        - name: client_id
          in: formData
          required: true
          type: string
          description: >
            Your client ID
            See RFC6749 "2.2. Client Identifier" for specification details
          x-example: YIzoTEg5HewuCouC
        - name: scope
          in: formData
          type: string
          description: Whitespace-separated list of scopes you application needs
        - name: response_type
          in: formData
          required: true
          type: string
          description: Must be 'code'
        - name: confirm
          in: formData
          required: true
          type: string
          description: Must be 'yes' or 'no'
        - name: redirect_uri
          in: formData
          type: string
          description: |
            This URL is used to provide user authorization if the user accepted
            access to the application or not
        - name: state
          in: formData
          type: string
          description: state parameter to prevent cross site origin attacks
      responses:
        302:
          description: >
            Authorization grant is provided in callback url
            callback url is in format {redirect_uri}/?code={grant_code}&state={state}
          headers:
            Location:
              type: string
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'

  '/oauth/token':
    post:
      x-doc-hide: true
      tags: ['oauth']
      description: Returns an access token
      summary: This callback is used to get token from Oauth2 provider
      consumes: [ "application/x-www-form-urlencoded" ]
      parameters:
        - name: grant_type
          in: formData
          required: true
          description: Value MUST be set to "authorization_code" or "refresh_token"
          type: string
        - name: client_id
          in: formData
          required: true
          type: string
          description: Your client ID
        - name: client_secret
          in: formData
          required: true
          type: string
          description: Your client secret
        - name: code
          in: formData
          required: false
          type: string
          description: >
            The authorization code received from the authorization server.
            NOTE - this is required for grant_type = authorization_code
        - name: refresh_token
          in: formData
          required: false
          type: string
          description: |
            refresh_token received with previous token
            NOTE - this is required for grant_type = refresh_token
        - name: state
          in: formData
          required: false
          type: string
          description: |
            state parameter to prevent cross site origin attacks
            use only if passed in getting authorization
        - name: redirect_uri
          in: formData
          required: false
          type: string
          description: >
            The redirection URI used by the authorization server
            to return the authorization response in the previous step.
            NOTE - this is required for grant_type = authorization_code

      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/provider_oauth_token'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/oauth_status'
        401:
          description: Authentication Failure
          schema:
            $ref: '#/definitions/oauth_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'

  '/oauth/generate_token':
    post:
      tags: ['oauth']
      x-ntnx-kind: 'oauth_token'
      x-doc-hide: true
      description: Generates an oauth token
      summary: |
        This is used when the user is already authenticated and would like to
        create bearer tokens for distribution
      parameters:
      - in: body
        name: oauth_generate_token_request
        required: true
        schema:
         $ref: '#/definitions/oauth_generate_token_request'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_generate_token_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'

  '/oauth/revoke_token':
    post:
      tags: ['oauth']
      x-ntnx-kind: 'oauth_token'
      x-doc-hide: true
      description: Revokes an oauth token
      summary: |
        Revoke a token will cause the token to be removed from system
        Any subsequent authorization calls with the token will fail
      parameters:
      - in: query
        name: token
        type: string
        required: true
        x-example: 6JwgO77PApxsFCU8Quz0pnL9s23016
      - in: query
        name: token_type_hint
        required: false
        type: string
        default: access_token
        x-ntnx-enum:
          - access_token
          - refresh_token
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/oauth_status'
        404:
          description: Token not found
          schema:
            $ref: '#/definitions/oauth_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'
  '/oauth/idp_login':
    get:
      x-doc-hide: true
      tags: ['oauth']
      summary: Oauth2 login to idp
      description: Oauth2
      responses:
        302:
          description: Redirect to IDP Login Page
          headers:
            Location:
              type: 'string'
  '/oauth/adfs_login':
    get:
      x-doc-hide: true
      tags: ['oauth']
      summary: ADFS login url for idp
      description: Oauth2
      responses:
        302:
          description: Redirect to ADFS Login Page
          headers:
            Location:
              type: 'string'
  '/oauth/idp_callback':
    get:
      x-doc-hide: true
      tags: ['oauth']
      summary: Oauth2 callback from IDP to intent gateway
      description: Oauth2 callback from IDP to intent gateway
      parameters:
      - name: code
        in: query
        required: true
        type: string
        x-example: BdLDvZvO3ZfSwg-asLNk
      - name: state
        in: query
        required: false
        type: string
        x-example: state-8600b31f-52d1-4dca-987c-386e3d8967e9
      responses:
        302:
          description: Redirect to SSP UI.
          headers:
            Location:
              type: "string"
  "/config/okta_config":
    put:
      x-doc-hide: true
      summary: "Update the AGS Okta config"
      description: "Update the AGS Okta config"
      tags: [config]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/okta_config_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/okta_config_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
      x-ntnx-permissions:
       - ags_config.update
      x-ntnx-operations: ["update"]

    get:
      x-doc-hide: true
      summary: "Get the AGS Okta config"
      description: "Get the AGS Okta config"
      tags: [config]
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/okta_config_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
      x-ntnx-permissions:
       - ags_config.view
      x-ntnx-operations: ["view"]

  "/config/okta_redirect_config":
    get:
      x-doc-hide: true
      summary: "Get the Okta config for redirection"
      description: "Get the AGS Okta config for redirection"
      tags: [config]
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/okta_redirect_config_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
      x-ntnx-permissions:
       - ags_config.view
      x-ntnx-operations: ["view"]
  '/okta/callback':
    get:
      x-doc-hide: true
      tags: ['okta_oauth']
      summary: Oauth2 callback from Okta for redirect using state
      description: Oauth2 callback from Okta for redirect using state
      parameters:
      - name: code
        in: query
        required: true
        type: string
        x-example: BdLDvZvO3ZfSwg-asLNk
      - name: state
        in: query
        required: true
        type: string
        x-example: state-8600b31f-52d1-4dca-987c-386e3d8967e9
      responses:
        302:
          description: Redirect to AGS UI.
          headers:
            Location:
              type: "string"
          schema:
            type: string
  #
  # Permission POST is not exposed as the custom permisions are
  # not supported yet.
  #

  '/permissions':
    post:
      tags: ["permissions"]
      x-ntnx-kind: 'permission'
      x-ntnx-operations: ["create"]
      x-doc-hide: true
      summary: Create a permission.
      description: |
        "Permissions define what a user can do with each type. For example,
        an admin can upload images; a DevOps user can create, edit, or delete
        a VM; and an operations user can view a VM console."
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/permission_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/permission_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'


  #
  # Permission PUT is not exposed as the custom permisions are
  # not supported yet and pre canned permissions cannot be updated.
  #
  '/permissions/{uuid}':

    put:
      tags: ["permissions"]
      x-ntnx-kind: 'permission'
      x-ntnx-operations: ["update"]
      x-doc-hide: true
      summary: Update a permission.
      description: Update a permission.
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/permission_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/permission_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/permission_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'


    get:
      tags: ["permissions"]
      x-ntnx-kind: 'permission'
      x-ntnx-operations: ["view"]
      summary: Get a permission.
      description: Get a permission.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/permission_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/permission_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'

    #
    # Permission DELETE is not exposed as the custom permisions are
    # not supported yet and precanned permissions cannot be deleted.
    #

    delete:
      summary: Delete a permission.
      description: Delete a permission.
      x-doc-hide: true
      tags: ["permissions"]
      x-ntnx-kind: 'permission'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/permission_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/permission_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'


  '/permissions/list':
    post:
      summary: List the permissions.
      description: |
        Get permissions.
      tags: ["permissions"]
      x-ntnx-kind: 'permission'
      x-ntnx-operations: ["view"]
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/permission_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/permission_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'
  '/clusters/entity_replication_target_details':
    post:
      summary: |
        Get the placement information for an entity. This will be used to
        identify the replication target for an entity snapshot or placement of
        the entity.
      description: Get entity placement details.
      tags: ["clusters"]
      x-ntnx-kind: 'cluster'
      x-doc-hide: true
      parameters:
        - name: spec
          in: body
          description: Entity spec.
          required: true
          schema:
            $ref: '#/definitions/placement_spec'
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/placement_detail"
        500:
          description: Internal Error
  '/portal_services/software/{software_type}/list':
    post:
      tags: ["portal_services"]
      summary: Get all available software on Nutanix Portal
      description: Get a list of portal software with specified type
      parameters:
        - name: software_type
          description: Software type
          in: path
          required: true
          type: string
          x-example: "nos"
          x-ntnx-enum:
          - NOS
          - PRISM_CENTRAL
          - PRISM_CENTRAL_DEPLOY
        - name: get_entities_request
          in: body
          schema:
            $ref: '#/definitions/software_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/software_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/software_status'
      x-doc-hide: true

  '/portal_services/software/{software_type}/{version}':
    get:
      tags: ["portal_services"]
      summary: Get specified software information
      description: Get the software info with specified type and version
      parameters:
        - name: software_type
          description: Software type
          in: path
          required: true
          type: string
          x-example: "nos"
          x-ntnx-enum:
          - NOS
          - PRISM_CENTRAL
          - PRISM_CENTRAL_DEPLOY
        - name: version
          description: Software version
          in: path
          required: true
          type: string
          x-example: "5.6"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/portal_software'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/software_status'
      x-doc-hide: true
  '/prism_central/nodes':
    post:
      summary: Add a new prism central VM to Prism Central cluster.
      description: >
        Given an intentful spec, add a new prism central vm to the cluster .
      tags: ["prism_central"]
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/prism_central_nodes'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/prism_central_request_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/prism_central_nodes_status'
      x-ntnx-kind: 'prism_central'
      x-ntnx-operations: ["create"]
      x-doc-hide: true

  '/prism_central':
    get:
      summary: Get a exiting Prism Central
      description: This operation gets a existing Prism Central.
      tags: ["prism_central"]
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/prism_central"
        404:
          description: Invalid UUID Provided.
          schema:
            $ref: "#/definitions/prism_central_status"
        500:
          description: Internal Error.
          schema:
            $ref: "#/definitions/prism_central_status"
      x-ntnx-kind: "prism_central"
      x-ntnx-operations: ["view"]
      x-doc-hide: true
  '/projects_internal':
    post:
      x-doc-hide: true
      tags: ["project"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["create"]
      summary: Create a new Project
      description: >
        This operation submits a request to create a new Project
        based on the input parameters.

      parameters:
        - in: body
          name: body
          description: The entity to create or modify a project.
          required: true
          schema:
            $ref: '#/definitions/project_internal_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/project_internal_intent_response'
        500:
          description: Internal Error

  '/projects_internal/{uuid}':
    get:
      x-doc-hide: true
      tags: ["project"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["view"]
      summary: Get a exiting Project
      description: This operation gets a existing Project.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/project_internal_intent_response'
        500:
          description: Internal Error

    put:
      x-doc-hide: true
      tags: ["project"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["update"]
      summary: Update a existing Project
      description: >
        This operation submits a request to update a existing Project
        based on the input parameters.

      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: The entity used to create or modify a project.
          required: true
          schema:
            $ref: '#/definitions/project_internal_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/project_internal_intent_response'
        500:
          description: Internal Error
  /projects/list:
    post:
      tags: ["projects"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing Projects

      description: >
        This operation gets a list of Projects, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/project_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/project_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'


  /projects:
    post:
      tags: ["projects"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["create"]
      summary: Create a new Project
      description: >
        This operation submits a request to create a new Project
        based on the input parameters.

      parameters:
        - in: body
          name: body
          description: The entity to create or modify a project.
          required: true
          schema:
            $ref: '#/definitions/project_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/project_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'


  /projects/{uuid}:
    get:
      tags: ["projects"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["view"]
      summary: Get a exiting Project
      description: This operation gets a existing Project.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/project_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'


    put:
      tags: ["projects"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["update"]
      summary: Update a existing Project
      description: >
        This operation submits a request to update a existing Project
        based on the input parameters.

      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: The entity used to create or modify a project.
          required: true
          schema:
            $ref: '#/definitions/project_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/project_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'



    delete:
      tags: ["projects"]
      x-ntnx-kind: 'project'
      x-ntnx-operations: ["delete"]
      summary: Delete a existing Project
      description: This operation submits a request to delete a existing Project.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/project_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'

  '/protection_rules':
    post:
      tags: ["protection_rules"]
      summary: Create a protection rule
      description: Create a protection rule
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/protection_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/protection_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"
  '/protection_rules/list':
    post:
      tags: ["protection_rules"]
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["view"]
      summary: Get protection rules
      description: Get protection rules
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: "#/definitions/protection_rule_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/protection_rule_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"

  '/protection_rules/{uuid}/query_entities':
    get:
      tags: ["protection_rules"]
      summary: Get a list of entities affected by a protection rule
      description: |
        Get a list of entities affected by a protection rule based on the
        filters provided in the protection rule definition.
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/affected_entity_list"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"

  '/protection_rules/{uuid}/process':
    post:
      tags: ["protection_rules"]
      summary: Process a protection rule
      description: |
        It will be used whenever user wants to process a protection rule
        immediately. For example if an entity is protected by a protection
        rule, user can call this API to trigger protection rule processing.
        This API doesn't wait for the processing to be completed. The API
        triggers the protection rule processing and returns.
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["process"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/protection_rule_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"

  '/protection_rules/{uuid}':
    get:
      tags: ["protection_rules"]
      summary: Get details for a protection rule
      description: Get details for a protection rule
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/protection_rule_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"
    put:
      tags: ["protection_rules"]
      summary: Modify protection rule
      description: Modify protection rule
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/protection_rule_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/protection_rule_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/protection_rule_status"
    delete:
      tags: ["protection_rules"]
      summary: Delete a protection rule
      description: Delete a protection rule
      x-ntnx-kind: 'protection_rule'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/protection_rule_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/protection_rule_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/protection_rule_status'
  "/public_cidrs":
    post:
      tags: ["public_cidrs"]
      summary: Create a new public_cidr
      description: >
        This operation submits a request to create a new public_cidr
        based on the input parameters.

      x-doc-hide: true
      x-ntnx-kind: public_cidr
      x-ntnx-operations: ["create"]
      parameters:
        -
          name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/public_cidr_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/public_cidr_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/public_cidr_status"

  "/public_cidrs/list":
    post:
      tags: ["public_cidrs"]
      x-doc-hide: true
      x-ntnx-kind: public_cidr
      x-ntnx-operations: ["view"]
      summary: Get a list of existing public_cidrs
      description: >
        This operation gets a list of public_cidrs, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/public_cidr_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/public_cidr_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/public_cidr_status"

  "/public_cidrs/{uuid}":
    get:
      tags: ["public_cidrs"]
      summary: Get a exiting public_cidr
      description: This operation gets a existing public_cidr.
      x-doc-hide: true
      x-ntnx-kind: public_cidr
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/public_cidr_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/public_cidr_status"
    put:
      tags: ["public_cidrs"]
      summary: Update a existing public_cidr
      description: >
        This operation submits a request to update a existing public_cidr
        based on the input parameters.

      x-doc-hide: true
      x-ntnx-kind: public_cidr
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/public_cidr_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/public_cidr_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/public_cidr_status"
    delete:
      tags: ["public_cidrs"]
      summary: Delete a existing public_cidr
      description: This operation submits a request to delete a existing public_cidr.

      x-doc-hide: true
      x-ntnx-kind: public_cidr
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/public_cidr_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/public_cidr_status"
  "/qos_policies":
    post:
      tags: ["qos_policies"]
      summary: Create a new qos_policy
      description: >
        This operation submits a request to create a new qos_policy
        based on the input parameters.

      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/qos_policy_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/qos_policy_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/qos_policy_status"
      x-ntnx-kind: "qos_policy"
      x-ntnx-operations: ["create"]

  "/qos_policies/list":
    post:
      tags: ["qos_policies"]
      summary: Get a list of existing qos_policies

      description: >
        This operation gets a list of qos_policies, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/qos_policy_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/qos_policy_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/qos_policy_status"
      x-ntnx-kind: "qos_policy"
      x-ntnx-operations: ["view"]

  "/qos_policies/{uuid}":
    get:
      tags: ["qos_policies"]
      summary: Get a exiting qos_policy
      description: This operation gets a existing qos_policy.
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/qos_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/qos_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/qos_policy_status"
      x-ntnx-kind: "qos_policy"
      x-ntnx-operations: ["view"]

    put:
      tags: ["qos_policies"]
      summary: Update a existing qos_policy
      description: >
        This operation submits a request to update a existing qos_policy
        based on the input parameters.

      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/qos_policy_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/qos_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/qos_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/qos_policy_status"
      x-ntnx-kind: "qos_policy"
      x-ntnx-operations: ["update"]

    delete:
      tags: ["qos_policies"]
      summary: Delete a existing qos_policy
      description: This operation submits a request to delete a existing qos_policy.

      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/qos_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/qos_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/qos_policy_status"
      x-ntnx-kind: "qos_policy"
      x-ntnx-operations: ["delete"]
  "/racks":
    post:
      summary: Create a rack instance
      description: Create a rack instance
      tags: ['rack']
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          description: Create rack object
          required: true
          schema:
            $ref: '#/definitions/rack_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/rack_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'

  "/racks/list":
    post:
      tags: ['rack']
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["view"]
      summary: Retrieves all racks
      description: Retrieves all racks
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/rack_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/rack_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'

  "/racks/{uuid}":
    get:
      tags: ["rack"]
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified rack
      description: Retrieves specified rack
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/rack_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'

    put:
      summary: Update rack
      description: Update rack
      tags: ['rack']
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update rack
          required: true
          schema:
            $ref: '#/definitions/rack_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/rack_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'

    delete:
      tags: ["rack"]
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["delete"]
      summary: Delete specified rack
      description: Delete specified rack
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/rack_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'

  "/racks/validate_rack_config":
    post:
      tags: ["rack"]
      x-ntnx-kind: 'rack'
      x-ntnx-operations: ["view"]
      x-doc-hide: true
      summary: Validates Specified Rack Configuration
      description: >
        Check whether given rack configuration in this cluster's context is
        valid or not. A rack configuration refers to a map of racks to the hosts
        it contains.
      parameters:
        - in: body
          name: body
          description: Validate rack configuration
          required: true
          schema:
            $ref: '#/definitions/validate_rack_config_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/validate_rack_config_output'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rack_status'
  "/rackable_units/list":
    post:
      tags: ['rackable_unit']
      x-ntnx-kind: 'rackable_unit'
      x-ntnx-operations: ["view"]
      summary: Retrieves all rackable units
      description: Retrieves all rackable units
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/rackable_unit_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/rackable_unit_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rackable_unit_status'

  "/rackable_units/{uuid}":
    get:
      tags: ["rackable_unit"]
      x-ntnx-kind: 'rackable_unit'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified rackable unit
      description: Retrieves specified rackable unit
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/rackable_unit_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rackable_unit_status'

    put:
      summary: Update rackable unit
      description: Update rackable unit
      tags: ['rackable_unit']
      x-ntnx-kind: 'rackable_unit'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update rackable unit
          required: true
          schema:
            $ref: '#/definitions/rackable_unit_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/rackable_unit_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/rackable_unit_status'
  '/recovery_plan_jobs':
    post:
      summary: Create Recovery Plan Job
      description: >
        Create a Recovery Plan Job for a Recovery Plan with associated metadata
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["create"]
      tags: ['recovery_plan_jobs']
      parameters:
        - name: body
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/recovery_plan_job_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/recovery_plan_job_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

  '/recovery_plan_jobs/list':
    post:
      summary: List the Recovery Plan Jobs
      description: List the Recovery Plan Jobs
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["view"]
      tags: ['recovery_plan_jobs']
      parameters:
       - name: get_entities_request
         in: body
         required: true
         schema:
           $ref: '#/definitions/recovery_plan_job_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

  '/recovery_plan_jobs/{uuid}':
    get:
      summary: Get Recovery Plan Job
      description: Given a UUID, returns a Recovery Plan Job state
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["view"]
      tags: ['recovery_plan_jobs']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

    put:
      summary: Update Recovery Plan Job
      description: >
        Given an intenful spec and Recovery Plan Job UUID, update Recovery
        Plan Job
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["update"]
      tags: ['recovery_plan_jobs']
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/recovery_plan_job_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

    delete:
      summary: Delete Recovery Plan Job
      description: Delete a Recovery Plan Job given its UUID
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["delete"]
      tags: ['recovery_plan_jobs']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

  '/recovery_plan_jobs/{uuid}/{action}':
    post:
      summary: Perform an action on Recovery Plan Job
      description: Perform an action on Recovery Plan Job
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["update"]
      tags: ["recovery_plan_jobs"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: action
         description: Action to be performed on the Recovery Plan Job
         in: path
         required: true
         type: string
         x-example: "pause"
         x-ntnx-enum:
           - pause
           - resume
           - abort
           - cleanup
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/recovery_plan_job_action_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'

  '/recovery_plan_jobs/{uuid}/{status}':
    get:
      summary: Get the execution status of the Recovery Plan Job
      description: Get the execution status of the Recovery Plan Job
      x-ntnx-kind: 'recovery_plan_job'
      x-ntnx-operations: ["view"]
      tags: ["recovery_plan_jobs"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: status
         description: Type of the Recovery Plan Job status
         in: path
         required: true
         type: string
         x-example: "execution_status"
         x-ntnx-enum:
           - execution_status
           - cleanup_status
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_job_execution_status'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_job_status'
  '/recovery_plans':
    post:
      summary: Create Recovery Plan
      description: >
        Given a spec creates a Recovery Plan with associated metadata
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["create"]
      tags: ['recovery_plans']
      parameters:
       - name: body
         description: Request body
         in: body
         required: true
         schema:
           $ref: '#/definitions/recovery_plan_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/recovery_plan_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_status'

  '/recovery_plans/list':
    post:
      summary: List the Recovery Plans
      description: List the Recovery Plans with associated metadata
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["view"]
      tags: ['recovery_plans']
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/recovery_plan_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_status'

  '/recovery_plans/{uuid}':
    get:
      summary: Get Recovery Plan
      description: Given a UUID, returns a Recovery Plan definition
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["view"]
      tags: ['recovery_plans']
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/recovery_plan_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_status'

    put:
      summary: Update Recovery Plan
      description: >
        Given a spec and Recovery Plan UUID, update Recovery Plan
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["update"]
      tags: ['recovery_plans']
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/recovery_plan_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/recovery_plan_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_status'

    delete:
      summary: Delete Recovery Plan
      description: Delete a Recovery Plan given its UUID
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["delete"]
      tags: ['recovery_plans']
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/recovery_plan_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/recovery_plan_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/recovery_plan_status'

  '/recovery_plans/{uuid}/entities':
    get:
      summary:  Get entities associated with the Recovery Plan
      description: >
        Entities associated with the Recovery Plan. It includes the live
        entities and the entities for which Recovery Points are present on the
        local Availability Zones/Public Cloud.
      x-ntnx-kind: 'recovery_plan'
      x-ntnx-operations: ["view"]
      tags: ['recovery_plans']
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/recovery_plan_entities"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/recovery_plan_status"
  '/remote_connections/list':
    post:
      tags: ['remote_connections']
      x-ntnx-kind: 'remote_connection'
      x-ntnx-operations: ["view"]
      summary: Get list of remote connections
      description: Retrieve list of remote connections
      x-doc-hide: true
      parameters:
        - in: body
          name: get_entities_request
          description: A remote connection object
          required: false
          schema:
            $ref: '#/definitions/remote_connection_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/remote_connection_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
  '/remote_connections':
    post:
      tags: ["remote_connections"]
      x-ntnx-kind: 'remote_connection'
      x-ntnx-operations: ["create"]
      summary: Creates a remote connection
      description: Creates a remote connection
      x-doc-hide: true
      parameters:
        - in: body
          name: body
          description: Remote connection details
          required: true
          schema:
            $ref: '#/definitions/remote_connection_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
  '/remote_connections/{uuid}':
    get:
      tags: ['remote_connections']
      x-ntnx-kind: 'remote_connection'
      x-ntnx-operations: ["view"]
      description: Get remote connection
      summary: Used to fetch remote connection details
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/remote_connection_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
    put:
      tags: ['remote_connections']
      x-ntnx-kind: 'remote_connection'
      x-ntnx-operations: ["update"]
      description: Update remote connection
      summary: Used to update remote connection details
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
        - in: body
          name: body
          description: Remote connection details
          schema:
            $ref: '#/definitions/remote_connection_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/remote_connection_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
    delete:
      tags: ['remote_connections']
      x-ntnx-kind: 'remote_connection'
      x-ntnx-operations: ["delete"]
      description: Delete existing remote connection and its information
      summary: Delete an existing remote connection
      x-doc-hide: true
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/remote_connection_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
  /remote_rpc_request:
    post:
      tags: ['remote_connections']
      summary: Execute Remote RPC
      description: Execute Remote RPC
      x-doc-hide: true
      parameters:
        - in: body
          name: payload
          required: true
          description: RPC payload.
          schema:
            $ref: "#/definitions/remote_rpc_request_input"
        - in: query
          name: service_name
          description: Name of the service whose RPC needs to be invoked.
          type: string
          required: true
          x-example: "unknown_update_me"
        - in: query
          name: port
          description: Port at which the service is running
          type: integer
          required: true
          x-example: 1234
        - in: query
          name: timeout_ms
          description: timeout in milliseconds.
          type: integer
          required: false
        - in: query
          name: base_url
          description: base url for rpc call.
          type: string
          required: false
      consumes: [ "application/octet-stream"]
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  /fanout_proxy:
    post:
      tags: ['remote_connections']
      summary: Proxies request to remote cluster
      description: |
        Proxies request to remote cluster, uses remote connection
        to call endpoint on remote cluster.
      x-doc-hide: true
      parameters:
        - name: az_name
          in: query
          type: string
          description: One of the availability zones name of Xi portal.
        - name: az_physical_uuid
          in: query
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
          description: One of the availability zones UUID of Xi portal.
        - name: remote_cluster_uuid
          in: query
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
          description: Cluster UUID of remote PC or PE cluster.
        - name: method
          in: query
          required: true
          type: string
          description: HTTP method to call
          x-example: GET
          x-ntnx-enum:
            - PUT
            - POST
            - GET
            - DELETE
        - name: url_path
          in: query
          required: true
          type: string
          description: URL path to call on remote cluster
          x-example: "api/nutanix/v3/vms"
        - name: content_type
          in: query
          type: string
          description: content type for the call
        - name: kind
          in: query
          type: string
          description: entity kind e.g. vm, network
        - name: entity_uuid
          in: query
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
          description: The UUID of the entity.
        - name: tenant_uuid
          in: query
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
          description: The UUID of the tenant.
        - name: timeout_ms
          in: query
          type: integer
          description: Additional timeout in milliseconds for fanout calls.
        - name: fanout_proxy_body
          in: body
          schema:
            additionalProperties: true
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'

  /az_proxy:
    post:
      tags: ['remote_connections']
      summary: Proxies request to remote AZ
      description: |
        Proxies request to remote cluster, uses remote connection
        to call endpoint on remote cluster
      x-doc-hide: true
      parameters:
        - name: az_name
          in: query
          type: string
          description: Availability Zone Name
        - name: method
          in: query
          required: true
          type: string
          description: HTTP method to call
          x-example: GET
          x-ntnx-enum:
            - PUT
            - POST
            - GET
            - DELETE
        - name: url_path
          in: query
          required: true
          type: string
          description: URL path to call on remote cluster
          x-example: "api/nutanix/v3/vms"
        - name: content_type
          in: query
          type: string
          description: content type for the call
        - name: az_proxy_body
          in: body
          schema:
            additionalProperties: true
      responses:
        200:
          description: Success
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'

  '/report_configs':
    post:
      summary: Create report config.
      description: Given an intentful spec, creates a report config with specified attributes.
      tags: ["reports"]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/report_config_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_config_status'
      x-ntnx-kind: 'report_config'
      x-ntnx-operations: ["create"]

  '/report_configs/list':
    post:
      summary: List the report configs.
      description: List the report configs with associated metadata.
      tags: ["reports"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/report_config_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/report_config_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_config_status'
      x-ntnx-kind: report_config
      x-ntnx-operations: ["view"]

  '/report_configs/{uuid}':
    get:
      summary: Get report config information.
      description: Given a UUID, returns a report config.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/report_config_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/report_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_config_status'
      x-ntnx-kind: report_config
      x-ntnx-operations: ["view"]

    put:
      summary: Update report config.
      description: Given an intenful spec and report config uuid, update report config.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/report_config_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_config_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/report_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_config_status'
      x-ntnx-kind: report_config
      x-ntnx-operations: ["update"]

    delete:
      summary: Delete report config.
      description: Delete a report config given its uuid.
      tags: ["reports"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_config_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_config_status'
      x-ntnx-kind: report_config
      x-ntnx-operations: ["delete"]
  '/reports/notify':
    post:
      summary: Email the specified generated reports to specified recipients.
      description: Email the specified generated reports to specified recipients.
      tags: ["reports"]
      parameters:
        - name: request_body
          in: body
          required: true
          schema:
            $ref: '#/definitions/report_notification_spec'
      responses:
        200:
          description: Success
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/report_instance_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_instance_status'
      x-ntnx-kind: report_instance
      x-ntnx-operations: ["notify"]

  '/reports/upload/{type}':
    post:
      summary: Upload a file.
      description: This uploads a file and returns the UUID for the same.
      tags: ["reports"]
      consumes: [ "application/octet-stream"]
      parameters:
        - name: type
          description: |
            Type of the file to be uploaded. Supported types are
              - logo
          in: path
          required: true
          type: string
          pattern: (\breport_instance\b|\blogo\b)
          x-example: logo
          x-ntnx-enum:
            - logo
        - name: file
          in: body
          required: true
          schema:
            format: binary
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/resource_upload_response'
        500:
          description: Internal Error
      x-ntnx-kind: common_report_config
      x-ntnx-operations: ["create"]

  '/reports/download/{type}/{uuid}':
    get:
      summary: Download a resource.
      description: Download a resource.
      tags: ["reports"]
      produces: ["application/octet-stream"]
      parameters:
        - name: type
          description: |
            Type of resource to be downloaded. Supported types are.
              - report_instance
              - logo
          in: path
          required: true
          type: string
          pattern: (\breport_instance\b|\blogo\b)
          x-example: logo
          x-ntnx-enum:
            - logo
            - report_instance
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            format: binary
        404:
          description: Resource not found
        500:
          description: Internal Error
      x-ntnx-kind: report_instance
      x-ntnx-operations: ["view"]
  '/report_instances/list':
    post:
      summary: Get the list of all the Generated report instances.
      description: Get the list of all the generated report instances.
      tags: ["reports"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/report_instance_list_metadata'
      responses:
        200:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_instance_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_instance_status'
      x-ntnx-kind: report_instance
      x-ntnx-operations: ["view"]

  '/report_instances/{uuid}':
    get:
      summary: Get the specified report instance.
      description: Get the specified report instance.
      tags: ["reports"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/report_instance_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/report_instance_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_instance_status'
      x-ntnx-kind: report_instance
      x-ntnx-operations: ["view"]

    delete:
      summary: Delete the generated report instance.
      description: Delete the generated report instance.
      tags: ["reports"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_instance_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/report_instance_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_instance_status'
      x-ntnx-kind: 'report_instance'
      x-ntnx-operations: ["delete"]

  '/report_instances':
    post:
      summary: Create a report instance.
      description: This will generate the report for a specified report
                   config uuid.
      tags: ["reports"]
      parameters:
        - name: input_body
          in: body
          required: true
          schema:
            $ref: '#/definitions/report_instance_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/report_instance_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/report_instance_status'
      x-ntnx-kind: 'report_instance'
      x-ntnx-operations: ["create"]

  '/roles':
    post:
      tags: ["roles"]
      x-ntnx-kind: 'role'
      x-ntnx-operations: ["create"]
      summary: Create a role.
      description: |
       "A role is a collection of permissions defined for one or more kinds.
       A kind represents the type of an entity (such as VM). Roles are
       defined by users who have permission to create roles and assign roles
       to projects. All users in a project inherit the role."
      parameters:
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/role_intent_input'
      responses:
       202:
        description: Request Accepted
        schema:
         $ref: '#/definitions/role_intent_response'
       500:
        description: Internal Error
        schema:
          $ref: '#/definitions/role_status'


  '/roles/{uuid}':

    put:
      tags: ["roles"]
      x-ntnx-kind: 'role'
      x-ntnx-operations: ["update"]
      summary: Update a role.
      description: Update a role.
      parameters:
       - $ref: '#/parameters/uuid'
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/role_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/role_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/role_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'


    get:
      tags: ["roles"]
      x-ntnx-kind: 'role'
      x-ntnx-operations: ["view"]
      summary: Get a role.
      description: Get a role.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/role_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/role_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'


    delete:
      tags: ["roles"]
      x-ntnx-kind: 'role'
      x-ntnx-operations: ["delete"]
      summary: Delete a role.
      description: Delete a role.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/role_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/role_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'


  '/roles/list':
    post:
      tags: ["roles"]
      x-ntnx-kind: 'role'
      x-ntnx-operations: ["view"]
      summary: List the roles.
      description: |
       Get roles.
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/role_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/role_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'


  "/virtual_networks/routing_policies":
    post:
      tags: ["routing_policies"]
      summary: Create a new routing_policy
      description: >
        This operation submits a request to create a new routing_policy
        based on the input parameters.

        A routing policy that defines traffic behavior.

      x-ntnx-kind: routing_policy
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/routing_policy_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/routing_policy_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/routing_policy_status"

  "/virtual_networks/routing_policies/list":
    post:
      tags: ["routing_policies"]
      x-ntnx-kind: routing_policy
      x-ntnx-operations: ["view"]
      summary: Get a list of existing routing_policies
      description: >
        This operation gets a list of routing_policies, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/routing_policy_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/routing_policy_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/routing_policy_status"

  "/virtual_networks/routing_policies/{uuid}":
    get:
      tags: ["routing_policies"]
      summary: Get a exiting routing_policy
      description: This operation gets a existing routing_policy.
      x-ntnx-kind: routing_policy
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/routing_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/routing_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/routing_policy_status"
    put:
      tags: ["routing_policies"]
      summary: Update a existing routing_policy
      description: >
        This operation submits a request to update a existing routing_policy
        based on the input parameters.

      x-ntnx-kind: routing_policy
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/routing_policy_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/routing_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/routing_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/routing_policy_status"

    delete:
      tags: ["routing_policies"]
      summary: Delete a existing routing_policy
      description: This operation submits a request to delete a existing routing_policy.

      x-ntnx-kind: routing_policy
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/routing_policy_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/routing_policy_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/routing_policy_status"
  /search:
    post:
      # This api should be prevented from being shown in customer docs.
      x-doc-hide: true
      tags: ["search"]
      summary: Get Search Information.
      description: Parse user query and get search information.
      parameters:
      -
        name: search_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/search_request'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/query_result'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
  '/services/nucalm':
    post:
      x-doc-hide: true
      tags: ["services"]
      summary: Manage NuCalm service.
      description: Manage NuCalm service.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/nucalm_service_config_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/service_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  '/services/microseg':
    post:
      x-doc-hide: true
      tags: ["services"]
      summary: Manage Microsegmentation.
      description: Manage Microsegmentation.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/microseg_service_config_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/service_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  '/services/xfit':
    post:
      x-doc-hide: true
      tags: ["services"]
      summary: Manage xfit service.
      description: Manage xfit service, including enabling the service.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/xfit_service_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/service_config_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  '/services/disaster_recovery':
    post:
      x-doc-hide: true
      tags: ["services"]
      summary: Manage Disaster Recovery service.
      description: Manage Disaster Recovery service.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/disaster_recovery_service_config_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/service_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'

  '/services/{service_name}/status':
    get:
      x-doc-hide: true
      summary: Service status.
      description: Service status.
      tags: ["services"]
      parameters:
        - name: service_name
          in: path
          description: The service name.
          type: string
          required: true
          maxLength: 64
          x-example: "EpsilonService"
        - name: include_capabilities
          in: query
          type: boolean
          description: >
            Whether or not to include the capabilities of this service in the
            response. Capabilities for service include if it can be
            enabled/disabled or not.

      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/service_enablement_status"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"

  '/services/{service_name}/cluster_capability':
    get:
      x-doc-hide: true
      summary: Cluster feature status.
      description: Cluster feature capability status.
      tags: ["services"]
      parameters:
        - name: service_name
          in: path
          description: The service name.
          type: string
          required: true
          maxLength: 64
          x-example: microseg
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/cluster_capability_status"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/status"
  /ssh_user/list:
    post:
      x-doc-hide: true
      tags: ['ssh_user']
      x-ntnx-kind: 'ssh_user'
      x-ntnx-operations: ["view"]
      summary: Retrieves all SSH Users on the cluster
      description: Retrieves all SSH Users on the cluster
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/ssh_user_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ssh_user_list'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'

  /ssh_user:
    post:
      x-doc-hide: true
      summary: Add SSH User to the entity
      description: Add SSH User to the entity
      tags: ['ssh_user']
      x-ntnx-kind: 'ssh_user'
      x-ntnx-operations: ["create"]
      parameters:
        - in: body
          name: ssh_user_intent
          description: Create SSH User object
          required: true
          schema:
            $ref: '#/definitions/ssh_user_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssh_user_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'

  /ssh_user/{uuid}:
    get:
      x-doc-hide: true
      tags: ['ssh_user']
      x-ntnx-kind: 'ssh_user'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified SSH User
      description: Retrieves specified SSH User
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ssh_user_details'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'

    put:
      x-doc-hide: true
      summary: Update SSH User entity
      description: Update SSH User entity
      tags: ['ssh_user']
      x-ntnx-kind: 'ssh_user'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: ssh_user_intent
          description: Update SSH User
          required: true
          schema:
            $ref: '#/definitions/ssh_user_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssh_user_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'

    delete:
      x-doc-hide: true
      tags: ['ssh_user']
      x-ntnx-kind: 'ssh_user'
      x-ntnx-operations: ["delete"]
      summary: Unregister specified SSH User
      description: Unregister specified SSH User
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssh_user_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
  "/streaming_policies":
    post:
      x-doc-hide: true
      summary: Create Streaming Policy
      description: Create Streaming Policy
      tags: ['streaming_policy']
      x-ntnx-kind: 'streaming_policy'
      parameters:
        - in: body
          name: body
          description: Create Streaming Policy object
          required: true
          schema:
            $ref: '#/definitions/streaming_policy_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/streaming_policy_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/streaming_policy_status'

  "/streaming_policies/list":
    post:
      x-doc-hide: true
      tags: ['streaming_policy']
      x-ntnx-kind: 'streaming_policy'
      summary: Retrieves all Streaming Policies
      description: Retrieves all Streaming Policies
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
         $ref: '#/definitions/streaming_policy_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/streaming_policy_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/streaming_policy_status'

  "/streaming_policies/{uuid}":
    get:
      x-doc-hide: true
      tags: ["streaming_policy"]
      x-ntnx-kind: 'streaming_policy'
      summary: Retrieves specified Streaming Policy
      description: Retrieves specified Streaming Policy
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/streaming_policy_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/streaming_policy_status'

    put:
      x-doc-hide: true
      summary: Update Streaming Policy entity
      description: Update Streaming Policy entity
      tags: ['streaming_policy']
      x-ntnx-kind: 'streaming_policy'
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update Streaming Policy
          required: true
          schema:
            $ref: '#/definitions/streaming_policy_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/streaming_policy_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/streaming_policy_status'

    delete:
      x-doc-hide: true
      tags: ["streaming_policy"]
      x-ntnx-kind: 'streaming_policy'
      summary: Delete specified Streaming Policy
      description: Delete specified Streaming Policy
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/streaming_policy_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/streaming_policy_status'
  "/subnets":
    post:
      tags: ["subnets"]
      summary: Create a new subnet
      description: >
        This operation submits a request to create a new subnet
        based on the input parameters.

        A subnet is a block of IP addresses.

      x-ntnx-kind: 'subnet'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/subnet_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/subnet_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/subnet_status"

  "/subnets/list":
    post:
      tags: ["subnets"]
      x-ntnx-kind: 'subnet'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing subnets
      description: >
        This operation gets a list of subnets, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/subnet_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/subnet_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/subnet_status"

  "/subnets/{uuid}":
    get:
      tags: ["subnets"]
      summary: Get a exiting subnet
      description: This operation gets a existing subnet.
      x-ntnx-kind: 'subnet'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/subnet_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/subnet_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/subnet_status"
    put:
      tags: ["subnets"]
      summary: Update a existing subnet
      description: >
        This operation submits a request to update a existing subnet
        based on the input parameters.

      x-ntnx-kind: 'subnet'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/subnet_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/subnet_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/subnet_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/subnet_status"
    delete:
      tags: ["subnets"]
      summary: Delete a existing subnet
      description: This operation submits a request to delete a existing subnet.

      x-ntnx-kind: 'subnet'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/subnet_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/subnet_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/subnet_status"
  '/portal_services/support_cases':
    post:
      summary: Create support case.
      description: Given a spec, creates a support case with associated metadata.
      tags: ["portal_services"]
      x-doc-hide: true
      parameters:
      -
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/support_case_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/support_case_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/support_case_status'
      x-ntnx-kind: 'support_case'
      x-ntnx-operations: ["create"]

  '/portal_services/support_cases/{case_id}':
    get:
      summary: Get specified support case.
      description: Returns the support case details for a given support case ID.
      tags: ["portal_services"]
      x-doc-hide: true
      parameters:
        - name: case_id
          description: ID of the support case.
          in: path
          required: true
          type: string
          x-example: "00123456"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/support_case_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/support_case_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/support_case_status'
      x-ntnx-kind: 'support_case'
      x-ntnx-operations: ["view"]

  '/portal_services/support_cases/list':
    post:
      summary: List support cases.
      description: >
        List of support cases. Supported filters are -
        - cluster_reference
        - serial_number
      tags: ["portal_services"]
      x-doc-hide: true
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/support_case_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/support_case_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/support_case_status'
      x-ntnx-kind: 'support_case'
      x-ntnx-operations: ["view"]

  '/portal_services/support_cases/template/{template_id}':
    get:
      summary: Get screen template from portal.
      description: Given a template ID it fetches that template.
      tags: ["portal_services"]
      x-doc-hide: true
      parameters:
        - name: template_id
          description: ID of the screen for which it needs template.
          in: path
          required: true
          type: string
          x-example: "Dummy Template"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/support_case_template_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/support_case_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/support_case_status'
      x-ntnx-kind: 'support_case'
      x-ntnx-operations: ["view"]
  "/tasks/list":
    post:
      tags: ["tasks"]
      summary: Get a list of existing Tasks

      description: >
        This operation gets a list of Tasks, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-doc-hide: true
      x-ntnx-kind: "task"
      parameters:
        - name: get_entities_request
          in: body
          required: false
          schema:
            $ref: '#/definitions/task_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/task_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/task_status"

  "/tasks/{uuid}":
    get:
      tags: ["tasks"]
      summary: Get a exiting Task
      description: This operation gets a existing Task.
      x-ntnx-kind: "task"
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/task"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/task_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/task_status"

  "/tasks/poll":
    post:
      tags: ["tasks"]
      summary: Poll for completion of tasks
      description: "Poll for completion of tasks"
      x-doc-hide: true
      x-ntnx-kind: "task"
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/task_poll_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/task_poll_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/task_status"
  '/tenant_clusters/config/tenants':
    post:
      x-doc-hide: true
      tags: ["tenants"]
      x-ntnx-kind: 'tenant'
      x-ntnx-operations: ['create']
      summary: Create a new Tenant
      description: >
        This operation submits a request to create a new Tenant
        based on the input parameters.

      parameters:
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/tenant'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/tenant_status'
        201:
          description: Created
          schema:
            $ref: '#/definitions/tenant_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/tenant_status'
  "/underlay_subnets":
    post:
      summary: Create a underlay subnet instance
      description: Create a underlay subnet instance
      tags: ['underlay_subnet']
      x-ntnx-kind: 'underlay_subnet'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          description: Create underlay subnet object
          required: true
          schema:
            $ref: '#/definitions/underlay_subnet_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/underlay_subnet_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/underlay_subnet_status'

  "/underlay_subnets/list":
    post:
      tags: ['underlay_subnet']
      x-ntnx-kind: 'underlay_subnet'
      x-ntnx-operations: ["view"]
      summary: Retrieves all underlay subnets
      description: Retrieves all underlay subnets
      parameters:
      - name: body
        in: body
        required: true
        schema:
         $ref: '#/definitions/underlay_subnet_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/underlay_subnet_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/underlay_subnet_status'

  "/underlay_subnets/{uuid}":
    get:
      tags: ["underlay_subnet"]
      x-ntnx-kind: 'underlay_subnet'
      x-ntnx-operations: ["view"]
      summary: Retrieves specified underlay subnet
      description: Retrieves specified underlay subnet
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/underlay_subnet_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/underlay_subnet_status'

    put:
      summary: Update underlay subnet
      description: Update underlay subnet
      tags: ['underlay_subnet']
      x-ntnx-kind: 'underlay_subnet'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          name: body
          description: Update underlay subnet
          required: true
          schema:
            $ref: '#/definitions/underlay_subnet_intent_input'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/underlay_subnet_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/underlay_subnet_status'

    delete:
      tags: ["underlay_subnet"]
      x-ntnx-kind: 'underlay_subnet'
      x-ntnx-operations: ["delete"]
      summary: Delete specified underlay subnet
      description: Delete specified underlay subnet
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/underlay_subnet_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/underlay_subnet_status'

  '/user_groups':
    post:
      tags: ["user_groups"]
      x-ntnx-kind: 'user_group'
      x-ntnx-operations: ["add"]
      summary: Add a User group.
      description: Add a User group to the system.
      parameters:
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/user_group_intent_input'
      responses:
       202:
        description: Request Accepted
        schema:
         $ref: '#/definitions/user_group_intent_response'
       500:
        description: Internal Error
        schema:
          $ref: '#/definitions/user_group_status'


  '/user_groups/list':
    post:
      tags: ["user_groups"]
      x-ntnx-kind: 'user_group'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing User Groups

      description: >
        This operation gets a list of User Groups, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/user_group_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_group_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'

  '/user_groups/{uuid}':
    get:
      tags: ["user_groups"]
      x-ntnx-kind: 'user_group'
      x-ntnx-operations: ["view"]
      summary: Get a exiting User Group
      description: >
        A user group is a grouping of users either defined locally
        or in a Directory service.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_group_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_group_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'


    put:
      tags: ["user_groups"]
      x-ntnx-kind: 'user_group'
      x-ntnx-operations: ["update"]
      x-doc-hide: true
      summary: Update a existing User Group
      description: >
        This operation submits a request to update a existing User Group
        based on the input parameters.

      parameters:
       - $ref: '#/parameters/uuid'
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/user_group_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/user_group_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_group_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'



    delete:
      tags: ["user_groups"]
      x-ntnx-kind: 'user_group'
      x-ntnx-operations: ["delete"]
      summary: Delete a existing User Group
      description: This operation submits a request to delete a existing User Group.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/user_group_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_group_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'

  '/users/info':
    get:
      x-doc-hide: true
      tags: ["users"]
      x-ntnx-kind: "user"
      summary: |
        Retrieves the Access control policies and other user data
        for logged in user.
      description: |
        Gets the Access Control Policies attached to a user,
        alongwith other user-specific information.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_info'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'
  '/users/me':
    get:
      tags: ["users"]
      x-ntnx-kind: 'user'
      summary: Retrieves currently logged in user.
      description: Displays the user currently logged in.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'

  '/logout':
    get:
      tags: ["users"]
      x-ntnx-kind: 'user'
      summary: Logs out the current user
      description: Logs out the current user.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/logout_response'
        500:
          description: Internal Error


  '/users/{uuid}/project_usage_summary':
    get:
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["view_project_usage_summary"]
      summary: Retrieves specified user resource domain information.
      description: Retrieves specified user resource domain information.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_usage_in_projects'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/resource_domain_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/resource_domain_status'



  '/users':
    post:
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["add"]
      summary: Create a new User
      description: >
        This operation submits a request to create a new User
        based on the input parameters.

      parameters:
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/user_intent_input'
      responses:
       202:
        description: Request Accepted
        schema:
         $ref: '#/definitions/user_intent_response'
       500:
        description: Internal Error
        schema:
          $ref: '#/definitions/user_status'


  '/users/list':
    post:
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing Users
      description: >
        This operation gets a list of Users, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/user_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'

  '/users/{uuid}':
    get:
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["view"]
      summary: Get a exiting User
      description: This operation gets a existing User.
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/user_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'


    put:
      x-doc-hide: true
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["update"]
      summary: Update a existing User
      description: >
        This operation submits a request to update a existing User
        based on the input parameters.

      parameters:
       - $ref: '#/parameters/uuid'
       - in: body
         name: body
         required: true
         schema:
           $ref: '#/definitions/user_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/user_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'

    delete:
      tags: ["users"]
      x-ntnx-kind: 'user'
      x-ntnx-operations: ["remove"]
      summary: Delete a existing User
      description: This operation submits a request to delete a existing User.

      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/user_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/user_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'

  '/versions':
    get:
      tags: ["versions"]
      summary: Get details on the api version
      description: "A version is the major and minor number of the API."
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/versions'
      x-doc-hide: true
  "/virtual_networks":
    post:
      tags: ["virtual_network"]
      summary: Create a new virtual network
      description: >
        This operation submits a request to create a new virtual network
        based on the input parameters.

      x-ntnx-kind: "virtual_network"
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/virtual_network_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/virtual_network_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/virtual_network_status"

  "/virtual_networks/list":
    post:
      tags: ["virtual_network"]
      summary: Get a list of existing virtual networks
      description: >
        This operation gets a list of virtual networks, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      x-ntnx-kind: "virtual_network"
      x-ntnx-operations: ["view"]
      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/virtual_network_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/virtual_network_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/virtual_network_status"

  "/virtual_networks/{uuid}":
    get:
      tags: ["virtual_network"]
      summary: Get a exiting virtual network
      description: This operation gets a existing virtual network.
      x-ntnx-kind: "virtual_network"
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/virtual_network_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/virtual_network_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/virtual_network_status"
    put:
      tags: ["virtual_network"]
      summary: Update a existing virtual network
      description: >
        This operation submits a request to update a existing virtual network
        based on the input parameters.

      x-ntnx-kind: "virtual_network"
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/virtual_network_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/virtual_network_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/virtual_network_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/virtual_network_status"
    delete:
      tags: ["virtual_network"]
      summary: Delete a existing virtual network
      description: This operation submits a request to delete a existing virtual network.

      x-ntnx-kind: "virtual_network"
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/virtual_network_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/virtual_network_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/virtual_network_status"
  '/vm_snapshots':
    post:
      summary: Create VM snapshot
      description: |
        Given an intentful spec, creates a snapshot with associated metadata
      tags: ["vm_snapshot"]
      x-doc-hide: true
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/vm_snapshot_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      x-ntnx-kind: 'vm_snapshot'
      x-ntnx-operations: ["create"]

  '/vm_snapshots/list':
    post:
      summary: Get VM snapshots
      description: |
        Get VM snapshots. Here is a list of supported filters
        - entity_uuid==UUID of the virtual machine
      tags: ["vm_snapshot"]
      x-doc-hide: true
      parameters:
      - name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/vm_snapshot_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_snapshot_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      x-ntnx-kind: 'vm_snapshot'
      x-ntnx-operations: ["view"]

  '/vm_snapshots/{uuid}':
    get:
      summary: Get VM snapshot
      description: Given a UUID, returns a VM snapshot definition
      tags: ["vm_snapshot"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      x-ntnx-kind: 'vm_snapshot'
      x-ntnx-operations: ["view"]
    put:
      summary: Update VM snapshot
      description: |
        Given an intenful spec and snapshot UUID, update VM snapshot
      tags: ["vm_snapshot"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/vm_snapshot_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      x-ntnx-kind: 'vm_snapshot'
      x-ntnx-operations: ["update"]
    delete:
      summary: Delete VM snapshot
      description: Delete a VM snapshot given its UUID
      tags: ["vm_snapshot"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      x-ntnx-kind: 'vm_snapshot'
      x-ntnx-operations: ["delete"]
  "/vms/{uuid}/validate_migration":
    post:
      summary: |
        Validates the feasibility of VM migration to given migration target.
      description: |
        Validates the feasibility of VM migration to given migration target,
        if not feasible returns the reason behind it.
      tags: ["vms"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/vm_validate_migration_input"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vm_validate_migration_output"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ['view']
  "/vms":
    post:
      summary: Create a new VM
      description: >
        This operation submits a request to create a new VM
        based on the input parameters.

      tags: ["vms"]
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/vm_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vm_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ['create']

  "/vms/list":
    post:
      summary: Get a list of existing VMs

      description: >
        This operation gets a list of VMs, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      tags: ["vms"]
      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
         $ref: "#/definitions/vm_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vm_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ['view']

  "/vms/{uuid}":
    get:
      summary: Get a exiting VM
      description: This operation gets a existing VM.
      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-operations: ['view']
      x-ntnx-kind: "vm"
    put:
      summary: Update a existing VM
      description: >
        This operation submits a request to update a existing VM
        based on the input parameters.

      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/vm_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-operations: ['update', 'update_power_state']
      x-ntnx-kind: "vm"
    delete:
      summary: Delete a existing VM
      description: This operation submits a request to delete a existing VM.

      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vm_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-operations: ['delete']
      x-ntnx-kind: "vm"
  '/vmware/v6/datacenter/list':
    post:
      summary: List datacenters
      description: |
        List all datatcenters in a vcenter account. Supported filters are:
        - account_uuid
      tags: ["vmware/datacenter"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_datacenter"
      x-ntnx-operations: ["view"]

  '/vmware/v6/datastore/list':
    post:
      summary: List datastores
      description: |
        List all datastores in a host. Supported filters are:
        - account_uuid
        - hostname
      tags: ["vmware/datastore"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_datastore"
      x-ntnx-operations: ["view"]

  '/vmware/v6/template/list':
    post:
      summary: List vm templates
      description: |
        List all vm templates in a datacenter. Supported filters are:
        - account_uuid
      tags: ["vmware/template"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_template"
      x-ntnx-operations: ["view"]

  '/vmware/v6/timezone/list':
    post:
      summary: List all timezones
      description: |
        List all timezones supported by the guest os. Supported filters are:
        - account_uuid
        - guest_os
      tags: ["vmware/timezone"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_timezone"
      x-ntnx-operations: ["view"]

  '/vmware/v6/host/list':
    post:
      summary: List all hosts
      description: |
        List all hosts in a datacenter. Supported filters are:
        - account_uuid
      tags: ["vmware/host"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_host"
      x-ntnx-operations: ["view"]

  '/vmware/v6/cluster/list':
    post:
      summary: List all clusters
      description: |
        List all clusters in a datacenter. Supported filters are:
        - account_uuid
      tags: ["vmware/cluster"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_cluster"
      x-ntnx-operations: ["view"]

  '/vmware/v6/storage_pod/list':
    post:
      summary: List all storage_pods
      description: |
        List all storage_pods in a datacenter. Supported filters are:
        - account_uuid
      tags: ["vmware/storage_pod"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_storage_pod"
      x-ntnx-operations: ["view"]

  '/vmware/v6/network_adapter/list':
    post:
      summary: List all network adapters supported
      description: List all network adapter supported by vmware.
      tags: ["vmware/network_adapter"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_netadapter"
      x-ntnx-operations: ["view"]

  '/vmware/v6/network/list':
    post:
      summary: List all networks
      description: |
        List all networks types supported by the host. Supported filters are:
        - account_uuid
        - hostname
      tags: ["vmware/network"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_network"
      x-ntnx-operations: ["view"]

  '/vmware/v6/resourcepool/list':
    post:
      summary: List resource pool
      description: |
        List all resource pools in a host. Supported filters are:
        - account_uuid
        - hostname
      tags: ["vmware/resourcepool"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_resourcepool"
      x-ntnx-operations: ["view"]

  '/vmware/v6/vm/list':
    post:
      summary: List all virtual machines
      description: |
        List all virtual machines. Supported filters are:
        - account_uuid
      tags: ["vmware/vm"]
      parameters:
        - name: get_entities_request
          description: Request body
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware_list_metadata'
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_vm"
      x-ntnx-operations: ["view"]

  '/vmware/v6/accounts/{account_uuid}/vms/{uuid}':
    get:
      summary: Get vmware vm
      description: Given a UUID, returns a vmware vm
      tags: ["vmware/vm"]
      parameters:
       - name: uuid
         description: UUID of vm
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: account_uuid
         description: UUID of account
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-ntnx-kind: "vmware_vm"
      x-ntnx-operations: ["view"]
      x-doc-hide: true

  '/vmware/v6/accounts/{account_uuid}/templates/{uuid}':
    get:
      summary: Get vmware template
      description: Given a UUID, returns a vmware template
      tags: ["vmware/template"]
      parameters:
       - name: uuid
         description: UUID of template
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
       - name: account_uuid
         description: UUID of account
         in: path
         required: true
         type: string
         format: UUID
         pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
         x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      responses:
        200:
          description: Success
          schema:
            additionalProperties: true
        404:
          description: Resource not found
          schema:
            additionalProperties: true
        500:
          description: Internal Error
          schema:
            additionalProperties: true
      x-doc-hide: true
      x-ntnx-kind: "vmware_template"
      x-ntnx-operations: ["view"]
  /volume_groups/list:
    post:
      tags: ['volume_groups']
      x-ntnx-kind: volume_group
      x-ntnx-operations: ["view"]
      summary: Get a list of existing volume_groups
      description: >
        This operation gets a list of volume_groups, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/volume_group_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/volume_group_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/volume_group_status"

  /volume_groups:
    post:
      tags: ['volume_groups']
      x-ntnx-kind: volume_group
      x-ntnx-operations: ["create"]
      summary: Create a new volume_group
      description: >
        This operation submits a request to create a new volume_group
        based on the input parameters.

      parameters:
        - in: body
          name: body
          description: Volume group object.
          required: true
          schema:
            $ref: "#/definitions/volume_group_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/volume_group_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/volume_group_status"

  /volume_groups/{uuid}:
    get:
      tags: ['volume_groups']
      x-ntnx-kind: volume_group
      x-ntnx-operations: ["view"]
      summary: Get a exiting volume_group
      description: This operation gets a existing volume_group.
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/volume_group_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/volume_group_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/volume_group_status"

    put:
      tags: ['volume_groups']
      x-ntnx-kind: volume_group
      x-ntnx-operations: ["update"]
      summary: Update a existing volume_group
      description: >
        This operation submits a request to update a existing volume_group
        based on the input parameters.

      parameters:
        - $ref: "#/parameters/uuid"
        - in: body
          name: body
          description: Volume group object.
          required: true
          schema:
            $ref: "#/definitions/volume_group_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/volume_group_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/volume_group_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/volume_group_status"

    delete:
      tags: ['volume_groups']
      x-ntnx-kind: volume_group
      x-ntnx-operations: ["delete"]
      summary: Delete a existing volume_group
      description: This operation submits a request to delete a existing volume_group.

      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/volume_group_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/volume_group_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/volume_group_status"
  '/vpn_connections':
    post:
      tags: ["vpn_connection"]
      summary: Create a new vpn_connection
      description: >
        This operation submits a request to create a new vpn_connection
        based on the input parameters.

        A vpn_connection respresents the configuration
                      needed to establish an IPSEC vpn tunnel between the local
                      and remote vpn gateways. The vpn_gateway objects must be
                      created first.

      x-ntnx-kind: 'vpn_connection'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_connection_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_connection_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_connection_status"

  '/vpn_connections/list':
    post:
      tags: ["vpn_connection"]
      x-ntnx-kind: 'vpn_connection'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing vpn_connections
      description: >
        This operation gets a list of vpn_connections, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_connection_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vpn_connection_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_connection_status"

  '/vpn_connections/{uuid}':
    get:
      tags: ["vpn_connection"]
      summary: Get a exiting vpn_connection
      description: This operation gets a existing vpn_connection.
      x-ntnx-kind: 'vpn_connection'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vpn_connection_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_connection_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_connection_status"
    put:
      tags: ["vpn_connection"]
      summary: Update a existing vpn_connection
      description: >
        This operation submits a request to update a existing vpn_connection
        based on the input parameters.

      x-ntnx-kind: 'vpn_connection'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_connection_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_connection_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_connection_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_connection_status"
    delete:
      tags: ["vpn_connection"]
      summary: Delete a existing vpn_connection
      description: This operation submits a request to delete a existing vpn_connection.

      x-ntnx-kind: 'vpn_connection'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_connection_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_connection_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_connection_status"
  '/vpn_gateways':
    post:
      tags: ["vpn_gateway"]
      summary: Create a new vpn_gateway
      description: >
        This operation submits a request to create a new vpn_gateway
        based on the input parameters.

        A vpn_gateway respresents the virtual
                      appliance that can peer with a remote gateway instance to
                      provide VPN functionality.

      x-ntnx-kind: 'vpn_gateway'
      x-ntnx-operations: ["create"]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_gateway_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_gateway_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_gateway_status"

  '/vpn_gateways/list':
    post:
      tags: ["vpn_gateway"]
      x-ntnx-kind: 'vpn_gateway'
      x-ntnx-operations: ["view"]
      summary: Get a list of existing vpn_gateways
      description: >
        This operation gets a list of vpn_gateways, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
        - name: get_entities_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_gateway_list_metadata"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vpn_gateway_list_intent_response"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_gateway_status"

  '/vpn_gateways/{uuid}':
    get:
      tags: ["vpn_gateway"]
      summary: Get a exiting vpn_gateway
      description: This operation gets a existing vpn_gateway.
      x-ntnx-kind: 'vpn_gateway'
      x-ntnx-operations: ["view"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vpn_gateway_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_gateway_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_gateway_status"
    put:
      tags: ["vpn_gateway"]
      summary: Update a existing vpn_gateway
      description: >
        This operation submits a request to update a existing vpn_gateway
        based on the input parameters.

      x-ntnx-kind: 'vpn_gateway'
      x-ntnx-operations: ["update"]
      parameters:
        - $ref: "#/parameters/uuid"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/vpn_gateway_intent_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_gateway_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_gateway_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_gateway_status"
    delete:
      tags: ["vpn_gateway"]
      summary: Delete a existing vpn_gateway
      description: This operation submits a request to delete a existing vpn_gateway.

      x-ntnx-kind: 'vpn_gateway'
      x-ntnx-operations: ["delete"]
      parameters:
        - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/vpn_gateway_intent_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vpn_gateway_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vpn_gateway_status"


  '/vm_recovery_points':
    post:
      summary: Create a new vm recovery point
      description: >
        This operation submits a request to create a new vm recovery point
        based on the input parameters.

      tags: ["vm_recovery_points"]
      parameters:
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/vm_recovery_point_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-permissions:
       - vm_recovery_point.create
      x-ntnx-operations: ["create"]

  '/vm_recovery_points/list':
    post:
      tags: ["vm_recovery_points"]
      summary: Get a list of existing vm recovery point
      description: >
        This operation gets a list of vm recovery point, allowing for sorting
        and pagination.
        Note: Entities that have not been created successfully are not listed.

      parameters:
      -
        name: get_entities_request
        in: body
        required: true
        schema:
          $ref: '#/definitions/vm_recovery_point_list_metadata'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_list_intent_response'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-permissions:
       - vm_recovery_point.view
      x-ntnx-operations: ["view"]

  '/vm_recovery_points/{uuid}':
    get:
      summary: Get a exiting vm recovery point
      description: This operation gets a existing vm recovery point.
      tags: ["vm_recovery_points"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-permissions:
       - vm_recovery_point.view
      x-ntnx-operations: ["view"]
    put:
      summary: Update a existing vm recovery point
      description: >
        This operation submits a request to update a existing vm recovery point
        based on the input parameters.

      tags: ["vm_recovery_points"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: '#/definitions/vm_recovery_point_intent_input'
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-permissions:
       - vm_recovery_point.update
      x-ntnx-operations: ["update"]
    delete:
      summary: Delete a existing vm recovery point
      description: This operation submits a request to delete a existing vm recovery point.

      tags: ["vm_recovery_points"]
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-permissions:
       - vm_recovery_point.delete
      x-ntnx-operations: ["delete"]

  "/vm_recovery_points/{uuid}/restore":
    post:
      summary: Restore a vm recovery point.
      description: >
        Submits a request to create a task handling the restore of vm
        recovery point, returns the task reference. This operation is used to
        create a vm out of the vm recovery point. Follow the task to
        get the reference of the created vm.
      tags: ["vm_recovery_points"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         schema:
           $ref: "#/definitions/vm_recovery_point_restore_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_recovery_point_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_recovery_point_status"
      x-ntnx-kind: 'vm_recovery_point'
      x-ntnx-operations: ["restore"]

  "/vms/{uuid}/snapshot":
    post:
      summary: Create a vm recovery point.
      description: >
        Submits a request to create a task handling the snapshot operation on
        the vm, returns a task reference. This creates a point in time
        recovery point.
      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         schema:
           $ref: "#/definitions/vm_snapshot_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ["snapshot"]

  "/vms/{uuid}/revert":
    post:
      summary: Revert the vm to the given recovery point.
      description: >
        Submits a request to create a task handling the vm revert to a
        recovery point operation, returns a task reference.
      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         required: true
         schema:
           $ref: "#/definitions/vm_revert_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ["revert"]
  "/vms/{uuid}/clone":
    post:
      summary: Clone a vm.
      description: >
        Submits a request to create a task handling vm clone operation,
        returns a task reference. This creates a new vm by cloning the
        current vm.
      tags: ["vms"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         schema:
           $ref: "#/definitions/vm_clone_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_status"
      x-ntnx-kind: "vm"
      x-ntnx-operations: ['clone']
  "/vm_recovery_points/{uuid}/clone":
    post:
      summary: Clone a vm_recovery_point.
      description: >
        Submits a request to create a task handling vm_recovery_point
        clone operation, returns a task reference. This replicates the
        vm_recovery_point to target availability zone.
      tags: ["vm_recovery_points"]
      parameters:
       - $ref: "#/parameters/uuid"
       - name: body
         in: body
         schema:
           $ref: "#/definitions/vm_recovery_points_clone_input"
      responses:
        202:
          description: Request Accepted
          schema:
            $ref: "#/definitions/procedural_response"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/vm_recovery_point_status"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/vm_recovery_point_status"
      x-ntnx-kind: "vm_recovery_point"
      x-ntnx-operations: ['clone']
  '/vm_recovery_points/{uuid}/validate_restore':
    post:
      summary: |
        Validates the feasibility of vm restoration from the
        vm recovery point.
      description: |
        Validates the feasibility of vm restoration from the
        vm recovery point, if not feasible return the reason behind it.
      tags: ["vm_recovery_points"]
      x-doc-hide: true
      parameters:
       - $ref: "#/parameters/uuid"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/vm_validate_restore_output"
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      x-ntnx-kind: "vm_recovery_point"
      x-ntnx-operations: ['view']

definitions:
  versions:
    type: object
    title: Versions
    description: Supported API Versions
    required:
    - major_version
    - minor_version
    properties:
      major_version:
        type: string
        format: integer
        description: The major number of the API
      minor_version:
        type: string
        format: integer
        description: The minor number of the API
  api_version:
    title: API Version
    description: API Version of the Nutanix v3 API framework.
    type: string
    readOnly: true
    default: 3.1.0
  reference:
    title: Reference
    description: Reference to a kind
    type: object
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
  status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: 'The entitys kind. i.e. "status".'
      status:
        type: string
        readOnly: true
        description: 'Only value possible is "failure".'
      reason:
        type: string
        readOnly: true
        description: One snake case word.
      message:
        type: string
        readOnly: true
        description: A sentence explaining the reason for the status.
      details:
        type: object
        readOnly: true
        description: Custom key-value details relevant to the status.
        additionalProperties:
          type: string
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.
  checksum:
    title: Image checksum
    description: Image checksum
    required:
    - checksum_algorithm
    - checksum_value
    properties:
      checksum_algorithm:
        $ref: "#/definitions/checksum_algorithm"
      checksum_value:
        type: string
        format: bytes
  checksum_algorithm:
    title: Checksum algorithm
    description: The type of checksum calculated for the image
    type: string
    x-ntnx-enum:
      - SHA_256
      - SHA_1
  policies:
    title: Policies
    description: |
      Settings that modify the behavior of the entity. They will be interpreted
      by built in or the third party providers
    type: array
    items:
      type: object
      properties:
        type:
          description: The policy type
          type: string
        policy:
          description: Policy object which will be interpreted by the provider
          type: object
  providers:
    title: Providers
    description: |
      Providers should be supplied as "<scope>:<provider>" style keys. Values
      will be interpreted by the provider if supplied
    type: object
    additionalProperties:
      type: object
  offset:
    title: offset
    type: integer
    format: int32
    default: 0
    minimum: 0
    description: >
      Offset from the start of the entity list, used to page through result set.
      Use this in concert with "lenth" to iterate through large lists of entities
  length:
    title: length
    type: integer
    format: int32
    default: 20
    minimum: 1
    maximum: 500
    description: >
      The number of records to retrieve relative to the offset, used for paging through the result sets.
      This default 20 per page. Can be narrowed from 20 to 1, or expanded up to 500.
  total_matches:
    title: total_matches
    type: integer
    minimum: 0
    description: Total matches found to a given query
  filter:
    title: filter
    type: string
    description: >
      The filter in FIQL syntax used for the results.
      Note - this version does not currently support FIQL for public facing calls, and should be considered internal only until this documentation is updated.
  sort_order:
    title: Sort order
    description: >
      The sort order in which results are returned, can be ASCENDING or DESCENDING.
      To return sorted results, both 'sort_order' and 'sort_attribute' must be specified together.
      By default, API should return results in ASCENDING order; however, if ordering is important,
      please specify your required value on request.
    type: string
    default: ASCENDING
    x-ntnx-enum:
      - ASCENDING
      - DESCENDING
  sort_attribute:
    title: Sort atribute
    description: >
      The attribute to perform sort on.
      Note - this version does not currently support this attribute for public facing calls, and should be considered internal only until this documentation is updated.
    type: string
  credentials:
    title: Credentials to login server
    description: Credentials to login server
    type: object
    required:
    - username
    properties:
      username:
        type: string
      password:
        type: string
  aws_credentials:
    title: AWS Credentials
    description: Credentials to access AWS
    type: object
    required:
    - access_key
    - secret_key
    properties:
      access_key:
        type: string
      secret_key:
        type: string
  public_key:
    title: Public Key
    description: Public Key
    type: object
    required:
    - name
    - key
    properties:
      name:
        type: string
        maxLength: 64
      key:
        type: string
  software_type:
    title: Software type
    description: Software type
    type: string
    x-ntnx-enum:
        - NOS
        - NCC
        - PRISM_CENTRAL
  scope_filter_expression:
    title: Scope Filter Expression.
    description: >
      The Scope filter expression is a combination of LHS-Operator-RHS.
      This type of filter expression helps express the "Context" part of a Filter.
      Example1 - To express a context = Belonging to Project P1 or Project P2
        left_hand_side = PROJECT
        operator = IN
        right_hand_side = ["P1", "P2"]
      Example2 - To express Belonging to 2 categories
        left_hand_side = CATEGORY
        operator = IN_ALL
        right_hand_side = ["location:nyc", "env:prod"]
    type: object
    required:
    - left_hand_side
    - operator
    - right_hand_side
    properties:
      left_hand_side:
        description: The LHS of the filter expression - the scope type.
        type: string
        x-ntnx-enum:
        - CATEGORY
        - PROJECT
        - SECRET_DIRECTORY
      operator:
        description: The operator of the filter expression.
        type: string
        x-ntnx-enum:
        - IN
        - IN_ALL
        - NOT_IN
      right_hand_side:
        description: The Right hand side(RHS) of the scope filter expression.
        $ref: '#/definitions/right_hand_side'

  entity_filter_expression:
    title: Entity Filter Expression.
    description: >
      Entity Filter Expression is a combination of LHS-Operator-RHS.
      This filter expression helps express the Filter on actual entities.
      Example1 - To express All VMs
        left_hand_side = VM
        operator = IN
        right_hand_side = ALL
      Example2 - To express Not VM1 or VM2
        left_hand_side =  VM
        operator = NOT_IN
        right_hand_side = ["VM1", "VM2"]
    type: object
    required:
    - left_hand_side
    - operator
    - right_hand_side
    properties:
      left_hand_side:
        description: The LHS of the filter expression - the entity type.
        type: object
        x-ntnx-one-of:
          - required:
            - entity_type
        properties:
          entity_type:
            type: string
            description: >
              The representation of the possible value of an LHS,
              in this case it is an entity type.A certain entity type e.g. VM
              Note. To express all entity types, use ALL
            maxLength: 64
      operator:
        description: The operator in the filter expression.
        type: string
        x-ntnx-enum:
        - IN
        - NOT_IN
      right_hand_side:
        description: The Right hand side(RHS) of a filter expression.
        $ref: '#/definitions/right_hand_side'
  right_hand_side:
    title: The right hand side (RHS) of an expression.
    description: The right hand side of an expression.
    type: object
    x-ntnx-one-of:
      - required:
          #NOTE: The term collection below may be replaced by a
          #more representative name in the near future.
          - collection
      - required:
          - categories
      - required:
          - uuid_list
    properties:
      collection:
        description: >
          A representative term for supported groupings of entities.
          ALL = All the entities of a given kind.
          SELF_OWNED = The entities of a given kind, that are owned by the user.
        type: string
        x-ntnx-enum:
        - ALL
        - SELF_OWNED
      categories:
        type: object
        description: >
          The category values represented as a dictionary of key -> list of values.
          e.g.{"env":["env1", "env2"]}
        additionalProperties:
          type: array
          items:
            type: string
      uuid_list:
        description: The explicit list of UUIDs for the given kind.
        type: array
        items:
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  context_filter:
    title: Context Filter
    description: >
      A filter defines the selection criteria for entities.
      It consists of two lists of filter expressions.
      The filter expressions can be of two types, Scope or Entity.
      The expressions in both these lists are combined with a logical AND.
    type: object
    required:
    - entity_filter_expression_list
    properties:
      scope_filter_expression_list:
        description: A list of Scope filter expressions.
        type: array
        items:
          $ref: '#/definitions/scope_filter_expression'
      entity_filter_expression_list:
        description: A list of Entity filter expressions.
        type: array
        items:
          $ref: '#/definitions/entity_filter_expression'
  category_filter:
    title: A category filter
    description: A category filter.
    type: object
    required:
      - params
    properties:
      type:
        description: The type of the filter being used.
        type: string
        default: CATEGORIES_MATCH_ANY
        x-ntnx-enum:
        - CATEGORIES_MATCH_ALL
        - CATEGORIES_MATCH_ANY
      kind_list:
        description: List of kinds associated with this filter.
        type: array
        items:
          type: string
      params:
        type: object
        description: A list of category key and list of values.
        additionalProperties:
          type: array
          items:
            type: string
  address:
    title: Host address.
    description: Host address.
    type: object
    x-ntnx-one-of:
    - required:
      - ip
    - required:
      - ipv6
    - required:
      - fqdn
    properties:
      ip:
        description: IPV4 address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ipv6:
        description: IPV6 address.
        type: string
        pattern: (([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))
      fqdn:
        description: Fully qualified domain name.
        type: string
      port:
        description: Port Number
        type: integer
        format: int32
      is_backup:
        description: Whether this address is a backup or not.
        type: boolean
  ip_subnet:
    title: IP subnet.
    description: "IP subnet provided as an address and prefix length."
    type: object
    properties:
      ip:
        description: IPV4 address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      prefix_length:
        type: integer
        format: int32
        minimum: 0
        maximum: 32
  ip_subnet_status:
    title: IP subnet.
    description: "IP subnet provided as an address and prefix length."
    type: object
    properties:
      ip:
        description: IPV4 address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      prefix_length:
        type: integer
        format: int32
  port_range:
    title: TCP/UDP ports.
    description: "Range of TCP/UDP ports."
    type: object
    properties:
      start_port:
        type: integer
        format: int32
      end_port:
        type: integer
        format: int32
  schedule:
    title: Schedule definition.
    description: Defines the schedule parameters.
    required:
    - interval_type
    - interval_multiple
    type: object
    properties:
      interval_type:
        description: |
          Type of schedule interval. For schedule once, the interval_type is set
          to Once. ONCE is for aperiodic schedules.
        type: string
        x-ntnx-enum:
          - ONCE
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
      interval_multiple:
        description: Multiple of interval_type.
        type: integer
        format: int32
      start_time:
        description: |
          Start time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        type: string
        format: date-time
      end_time:
        description: |
          End time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        type: string
        format: date-time
      duration_secs:
        description: |
          Duration of the event. If set, an event of duration duration_usecs
          will repeat as per the recurrence defined in interval_type.
        type: integer
        format: int64
      is_suspended:
        description: Whether the schedule is suspended.
        type: boolean
      day_of_week:
        description: |
          For schedule on weekly basis,like every Monday and Friday 10:00. To use this field, it is
          required that start_time (datetime) is set, and the interval_type is set to weekly or
          NONE.  If interval_type is set to NONE, then, only schedule for Monday and Friday once, in
          this example.
        type: array
        items:
          type: string
          x-ntnx-enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
  generic_key_value_pair:
    title: Generic key value pair.
    description: Generic key value pair used for custom attributes.
    type: object
    additionalProperties:
      type: string
  postal_address:
    title: Postal address
    description: Postal address
    type: object
    properties:
      street:
        description: Street name and number
        type: string
        maxLength: 100
      city:
        description: City name
        type: string
        maxLength: 100
      state:
        description: State name
        type: string
        maxLength: 100
      zip_code:
        description: Zip code
        type: string
        maxLength: 20
      country:
        description: Country name
        type: string
        maxLength: 100
  datacenter_component:
    title: Hardware component
    description: |
      Common properties for node or a network device in datacenters
    type: object
    properties:
      rack_unit_position:
        description: rack unit position
        type: integer
        format: int32
        minimum: 0
      rack_unit_height:
        description: rack unit height
        type: integer
        format: int32
        minimum: 1
      management_ip:
        description: management IP address
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      management_mac_address:
        description: management mac address
        type: string
        pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        x-example: 50:6b:8d:ee:de:2b
      installation_time:
        description: installation date time
        type: string
        format: date-time
  contact_information:
    type: object
    title: Contact Information object.
    description: Contact information object.
    properties:
      name:
        description: Name of the contact.
        type: string
      email_address:
        description: Email address of the contact.
        type: string
        pattern: (^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)
      phone_number:
        description: Phone Number of the contact.
        type: string
  param_value:
    title: Value object
    description: Scalar value object that handles different types
    type: object
    x-ntnx-one-of:
      - required:
        - bool_value
      - required:
        - int_value
      - required:
        - double_value
      - required:
        - string_value
    properties:
      bool_value:
        type: boolean
      int_value:
        type: integer
        format: int64
      double_value:
        type: number
        format: double
      string_value:
        type: string
  entity_info:
    title: Entity name/type/id
    type: object
    description: Entity information
    properties:
      name:
        description: Entity name
        type: string
      type:
        description: Entity type
        type: string
      uuid:
        description: Entity UUID
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  # Response output for the procedural APIs.
  procedural_response:
    type: object
    title: Procedural API response
    description: >
      Response for invoking a procedural call. Contains a task UUID.
    required:
     - task_uuid
    properties:
      task_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  procedural_error_response:
    type: object
    title: Procedural API error response
    description: >
      Response for invoking a procedural call.
    properties:
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
  asn:
    title: ASN
    description: Autonomous system number
    type: integer
    format: uint32
    minimum: 0
    maximum: 4294967294
  ssh_user:
    type: object
    title: SSH User Entity
    description: SSH User Entity
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/ssh_user_request_details'

  ssh_user_def_status:
    type: object
    title: SSH User Entity
    description: SSH User Entity
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/ssh_user_details'

  ssh_user_request_details:
    type: object
    title: SSH User Request details
    description: SSH User Request details
    required:
      - username
      - user_uuid
      - user_key
      - user_key_name
      - entity_list
      - access_request_uuid
    properties:
      username:
        description: SSH User name
        type: string
      user_uuid:
        description: SSH User UUID
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      user_unix_id:
        description: Linux UID for user
        type: integer
      entity_list:
        description: List containing entity IP and entity type for each entity
        type: array
        items:
          type: object
          required:
            - entity_ip
            - entity_type
          properties:
            entity_ip:
              description: Entity IP Address
              type: string
            entity_type:
              description: Entity type
              type: string
              x-ntnx-enum:
                - CVM
                - PRISM_CENTRAL
                - HYPERVISOR
            entity_uuid:
              description: Entity UUID
              type: string
              pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      user_key:
        description: key to add for the user
        type: string
      user_key_name:
        description: Name for the user key to add
        type: string
      access_request_uuid:
        description: UUID of the access request requesting SSH access
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  ssh_user_details:
    type: object
    title: SSH User details
    description: SSH User details
    required:
      - username
      - user_uuid
      - entity_list
      - access_request_uuid
    properties:
      username:
        description: SSH User name
        type: string
      user_uuid:
        description: SSH User UUID
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      entity_list:
        description: List of IP addresses to the entity which the user requested access to
        type: array
        items:
          type: object
          properties:
            entity_ip:
              description: Entity IP Address
              type: string
            entity_type:
              description: Entity IP Address
              type: string
              x-ntnx-enum:
                - CVM
                - PRISM_CENTRAL
                - HYPERVISOR
            entity_uuid:
              description: Entity UUID
              type: string
              pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      access_request_uuid:
        description: UUID of the access request requesting SSH access
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  ssh_user_list:
    type: object
    title: SSH User list
    description: SSH User list
    required:
      - metadata
      - entities
    properties:
      metadata:
        $ref: '#/definitions/ssh_user_list_metadata'
      entities:
        type: array
        items:
          $ref: '#/definitions/ssh_user_details'

  user_usage_in_projects:
    type: object
    title: User usage in project definition.
    description: User usage in project definition.
    required:
    - api_version
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      project_resource_domain_list:
        type: array
        items:
          type: object
          required:
          - project_reference
          - resource_domain
          properties:
            project_reference:
              $ref: '#/definitions/project_reference'
            resource_domain:
              description: Usage information for the user in the project.
              $ref: '#/definitions/resource_domain_resources_status'



  user_input_resource:
    type: object
    title: User Resource Definition.
    description: User Resource Definition.
    x-ntnx-one-of:
      - required:
        - directory_service_user
    properties:
      # The following can be extended to support local user(s) in the future.
      directory_service_user:
        $ref: '#/definitions/directory_service_user'

  directory_service_user:
    description: A Directory Service user.
    type: object
    title: Directory Service user Definition.
    properties:
      user_principal_name:
        type: string
        description: >
          The UserPrincipalName of the user from the directory service.
        maxLength: 104
      directory_service_reference:
        description: >
          Directory service reference if the user type is directory service.
        $ref: '#/definitions/directory_service_reference'

  directory_service_user_status:
    description: A Directory Service user.
    type: object
    title: Directory Service user Response.
    properties:
      user_principal_name:
        type: string
        description: >
          The UserPrincipalName of the user from the directory service.
          It will be same as default user principal name if no upn suffix is
          enabled for user logon name in directory service.
        maxLength: 104
      default_user_principal_name:
        type: string
        description: >
          The Default UserPrincipalName of the user from the directory service.
          This is of format samAccountName@domain_name.
        maxLength: 104
      directory_service_reference:
        description: >
          Directory service reference if the user type is directory service.
        $ref: '#/definitions/directory_service_reference'


  user_status_resource:
    type: object
    title: User Resource Definition.
    description: User Resource Definition.
    properties:
      user_type:
        type: string
        x-ntnx-enum:
        - LOCAL

        - DIRECTORY_SERVICE


      display_name:
        type: string
        description: >
          The display name of the user (common name) provided by the
          directory service.

      directory_service_user:
        $ref: '#/definitions/directory_service_user_status'


      projects_reference_list:
        type: array
        description: A list of projects the user is part of.
        items:
          $ref: '#/definitions/project_reference'

      access_control_policy_reference_list:
        type: array
        description: List of ACP references.
        items:
          $ref: '#/definitions/access_control_policy_reference'

      resource_usage_summary:
        type: object
        properties:
          resource_domain:
            $ref: '#/definitions/resource_domain_resources_status'



  # The input object that defines a User
  user:
    title: User.
    description: User Input Definition.
    type: object
    required:
    - resources
    properties:
      resources:
        $ref: '#/definitions/user_input_resource'


  # The output object that defines a User
  user_def_status:
    title: User status definition.
    description: User status definition.
    type: object
    required:
    - name
    - resources
    properties:
      name:
        description: Name of the User.
        type: string
      resources:
        $ref: '#/definitions/user_status_resource'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  logout_response:
    type: object
    title: Logout response
    description: Response from logout object
    properties:
      external_logout_url_list:
        type: array
        description: List of addition logout urls which should be called by UI
        items:
          type: string
  # The input object that defines a  user group
  user_group:
    title: user group.
    description: User Group Input Definition.
    type: object
    properties:
      resources:
        $ref: '#/definitions/user_group_input_resource'

  user_group_input_resource:
    title: user group resource definition.
    description: User Group Resource Definition
    type: object
    x-ntnx-one-of:
      - required:
        - directory_service_user_group
    properties:
      directory_service_user_group:
        $ref: '#/definitions/directory_service_user_group_input'

  directory_service_user_group_input:
    title: A Directory Service user group.
    description: A Directory Service user group.
    type: object
    properties:
      distinguished_name:
        description: The Distinguished name for the user group.
        type: string
        maxLength: 255

  directory_service_user_group_status:
    title: A Directory Service user group.
    description: A Directory Service user group.
    type: object
    properties:
      distinguished_name:
        description: The Distinguished name for the user group.
        type: string
      directory_service_reference:
        description: The directory service that this user group belongs to.
        $ref: '#/definitions/directory_service_reference'

  # The output object that defines a User Group
  user_group_def_status:
    title: user group status definition.
    description: User group status definition.
    type: object
    required:
    - resources
    properties:
      resources:
        $ref: '#/definitions/user_group_output_resource'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  # Note: The user group should ideally also list the users associated with it.
  # We intend to introduce a new API in the future to allow for the same.

  user_group_output_resource:
    title: user group resource definition.
    description: User Group Resource Definition.
    type: object
    required:
      - display_name
    properties:
      user_group_type:
        type: string
        x-ntnx-enum:
          - DIRECTORY_SERVICE
      display_name:
        description: The display name for the user group.
        type: string
      directory_service_user_group:
        $ref: '#/definitions/directory_service_user_group_status'
      projects_reference_list:
        type: array
        description: A list of projects the user group is part of.
        items:
          $ref: '#/definitions/project_reference'
      access_control_policy_reference_list:
        type: array
        description: List of ACP references.
        items:
          $ref: '#/definitions/access_control_policy_reference'
  user_info:
    title: Access Control Policy and User status definition.
    description: Access Control Policy and User status definition.
    type: object
    properties:
      access_control_policy_list:
        description: The list of Access Control Policies
        type: array
        items:
          $ref: '#/definitions/access_control_policy_detail'
      user_legacy_name:
        description: The legacy name of the logged in user
        type: string

  access_control_policy_detail:
    title: Details of Access Control Policy.
    description: Details of Access Control Policy.
    type: object
    properties:
      role:
        # Note: Role object currently contains name and list of permission ref.
        # Will need to revisit if role's UUID is required as well.
        description: The Role being assigned to the user.
        $ref: '#/definitions/role'
      filter_list:
        description: >
          The list of filters, which define the entities.
        type: object
        x-ntnx-one-of:
          - required:
            - context_list
        properties:
          context_list:
            description: >
              The list of context filters.
              These are OR filters. The scope-expression-list
              defines the context, and the filter works in conjunction
              with the entity-expression-list.
              Note - the absence of a scope expression in a filter
              implies global context.
            type: array
            items:
              $ref: '#/definitions/context_filter'

  access_control_policy:
    title: Access Control Policy.
    description: Access Control Policy Input Definition.
    type: object
    required:
    - resources
    properties:
      name:
        description: Name of the Access Control Policy.
        type: string
        maxLength: 64
      description:
        description: >
          The description of the association of a role to a user
          in a given context.
        type: string
        maxLength: 1000
      resources:
        description: Access Control Policy resources.
        title: Access Control Policy Resources.
        type: object
        required:
        - role_reference
        properties:
          user_reference_list:
            description: The User(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_reference'

          user_group_reference_list:
            description: The User group(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_group_reference'

          role_reference:
            description: The Role being assigned to a given user(s).
            $ref: '#/definitions/role_reference'
          filter_list:
            description: >
              The list of filters, which define the entities.
            type: object
            x-ntnx-one-of:
              - required:
                - context_list
            properties:
              context_list:
                description: >
                  The list of context filters.
                  These are OR filters. The scope-expression-list
                  defines the context, and the filter works in conjunction
                  with the entity-expression-list.
                  Note - the absence of a scope expression in a filter
                  implies global context.
                type: array
                items:
                  $ref: '#/definitions/context_filter'


  access_control_policy_def_status:
    title: Access Control Policy status definition.
    description: Access Control Policy status definition.
    type: object
    required:
    - resources
    properties:
      name:
        description: Name of the Access Control Policy.
        type: string
      description:
        description: The description of the association of a role to a user
                     in a given context.
        type: string
      resources:
        title: Access Control Policy Resources.
        type: object
        properties:
          user_reference_list:
            description: The User(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_reference'

          user_group_reference_list:
            description: The User group(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_group_reference'

          role_reference:
            description: The Role being assigned to a given user(s).
            $ref: '#/definitions/role_reference'
          filter_list:
            description: >
              The list of filters, which define the entities.
            type: object
            x-ntnx-one-of:
              - required:
                - context_list
            properties:
              context_list:
                description: >
                  The list of context filters.
                  These are OR filters. The scope-expression-list
                  defines the context, and the filter works in conjunction
                  with the entity-expression-list.
                  Note - the absence of a scope expression in a filter
                  implies global context.
                type: array
                items:
                  $ref: '#/definitions/context_filter'
      state:
        description: The state of the Access Control Policy entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  project:
    type: object
    title: Project resource spec
    description: A Project resource.
    required:
      - name
      - resources
    properties:
      name:
        type: string
        description: Project name.
        maxLength: 64
      description:
        type: string
        description: Project description.
        maxLength: 1000
      resources:
        type: object
        title: Project Resources
        properties:
          resource_domain:
            $ref: '#/definitions/resource_domain_spec'
          default_subnet_reference:
            $ref: '#/definitions/subnet_reference'
            description: Optional default subnet if one is specified
          subnet_reference_list:
            type: array
            description: List of subnets for the project.
            items:
              $ref: '#/definitions/subnet_reference'
          user_reference_list:
            type: array
            description: List of users in the project.
            items:
              $ref: '#/definitions/user_reference'

          external_user_group_reference_list:
            type: array
            description: |
              List of directory service user groups. These groups are not
              managed by Nutanix.
            items:
              $ref: '#/definitions/user_group_reference'

          account_reference_list:
            type: array
            description: List of accounts associated with the project.
            items:
              $ref: '#/definitions/account_reference'
          environment_reference_list:
            type: array
            description: List of environments associated with the project.
            items:
              $ref: '#/definitions/environment_reference'

  project_def_status:
    type: object
    title: Project Resource Status
    description: A Project resource.
    required:
      - name
      - resources
    properties:
      name:
        type: string
        description: Project name.
      description:
        type: string
        description: Project description.
      state:
        description: The state of the project entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        type: object
        title: Project Resources
        properties:
          is_default:
            description: |
              Indicates if it is the default project. A default project is
              managed by the system and cannot be renamed or removed.
            type: boolean
          resource_domain:
            $ref: '#/definitions/resource_domain_resources_status'
          default_subnet_reference:
            $ref: '#/definitions/subnet_reference'
            description: Optional default subnet if one is specified
          subnet_reference_list:
            # Why is this not implemented using RBAC?
            type: array
            description: List of subnets for the project.
            items:
              $ref: '#/definitions/subnet_reference'
          user_reference_list:
            type: array
            description: |
              List of users added directly to the project.
            items:
              $ref: '#/definitions/user_reference'

          external_user_group_reference_list:
            type: array
            description: |
              List of directory service groups reference. These
              groups are not managed by Nutanix.
            items:
              $ref: '#/definitions/user_group_reference'

          account_reference_list:
            type: array
            description: List of accounts associated with the project.
            items:
              $ref: '#/definitions/account_reference'
          environment_reference_list:
            type: array
            description: List of environments associated with the project.
            items:
              $ref: '#/definitions/environment_reference'
  project_internal_intent_input:
    type: object
    title: Project Intent Entity
    description: An intentful representation of a Project
    required:
     - api_version
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_metadata'
      spec:
        $ref: '#/definitions/project_internal'

  project_internal:
    type: object
    title: Project details, combined with Users and ACPs
    description: A Project resource, combined with Users and ACPs
    required:
      - project_detail
    properties:
      project_detail:
        type: object
        title: Project details
        description: A Project resource.
        required:
          - name
          - resources
        properties:
          name:
            type: string
            description: Project name.
            maxLength: 64
          description:
            type: string
            description: Project description.
            maxLength: 1000
          resources:
            type: object
            title: Project Resources
            properties:
              resource_domain:
                $ref: '#/definitions/resource_domain_spec'
              default_subnet_reference:
                $ref: '#/definitions/subnet_reference'
                description: Optional default subnet if one is specified
              subnet_reference_list:
                type: array
                description: List of subnets for the project.
                items:
                  $ref: '#/definitions/subnet_reference'
              user_reference_list:
                type: array
                description: List of users in the project.
                items:
                  $ref: '#/definitions/user_reference'
              external_user_group_reference_list:
                type: array
                description: |
                  List of directory service user groups. These groups are not
                  managed by Nutanix.
                items:
                  $ref: '#/definitions/user_group_reference'
              account_reference_list:
                type: array
                description: List of accounts associated with the project.
                items:
                  $ref: '#/definitions/account_reference'
              environment_reference_list:
                type: array
                description: List of environments associated with the project.
                items:
                  $ref: '#/definitions/environment_reference'

      user_list:
        type: array
        description: |
          The list of user specification to be associated with the project.
        items:
          description: |
            The details of the user such as principal name and
            directory_service_reference. Also contains metadata.
          type: object
          required:
          - operation
          - user
          - metadata
          properties:
            operation:
              description: Indicates the action(add, delete, update)
              type: string
              x-ntnx-enum:
              - ADD
            user:
              $ref: '#/definitions/user'
            metadata:
              type: object
              properties:
                uuid:
                  type: string
                  format: UUID
                  pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                kind:
                  type: string
                  readOnly: true
      user_group_list:
        type: array
        description: |
          The list of user group specification to be associated with the project.
        items:
          description: |
            The details of the user group
          type: object
          required:
          - operation
          - user_group
          - metadata
          properties:
            operation:
              description: Indicates the action(add, delete, update)
              type: string
              x-ntnx-enum:
              - ADD
            user_group:
              $ref: '#/definitions/user_group'
            metadata:
              type: object
              properties:
                uuid:
                  type: string
                  format: UUID
                  pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                kind:
                  type: string
                  readOnly: true

      access_control_policy_list:
        type: array
        description: |
          The list of ACPs to be attached to the users belonging to a project.
        items:
          type: object
          required:
          - operation
          - acp
          - metadata
          properties:
            operation:
              description: Indicates the action(add, delete, update)
              type: string
              x-ntnx-enum:
              - ADD
              - DELETE
              - UPDATE
            acp:
              $ref: '#/definitions/access_control_policy_input'
            metadata:
              type: object
              properties:
                uuid:
                  type: string
                  format: UUID
                  pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                kind:
                  type: string
                  readOnly: true

  access_control_policy_input:
    type: object
    title: Access control policy details
    description: An Access Control Policy resource.
    required:
      - resources
    properties:
      name:
        description: Name of the Access Control Policy.
        type: string
        maxLength: 64
      description:
        description: |
          The description of the association of a role to a user
          in a given context.
        type: string
        maxLength: 1000
      resources:
        description: Access Control Policy resources.
        title: Access Control Policy Resources.
        type: object
        required:
        - role_reference
        properties:
          user_reference_list:
            description: The User(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_reference'
          user_group_reference_list:
            description: The User group(s) being assigned a given role.
            type: array
            items:
              $ref: '#/definitions/user_group_reference'
          role_reference:
            description: The Role being assigned to a given user(s).
            $ref: '#/definitions/role_reference'
          filter_list:
            description: >
              The list of filters, which define the entities.
            type: object
            x-ntnx-one-of:
              - required:
                - context_list
            properties:
              context_list:
                description: >
                  The list of context filters.
                  These are OR filters. The scope-expression-list
                  defines the context, and the filter works in conjunction
                  with the entity-expression-list.
                  Note - the absence of a scope expression in a filter
                  implies global context.
                type: array
                items:
                  $ref: '#/definitions/context_filter'

  project_internal_intent_response:
    type: object
    title: Project Intent Response
    description: Response object for intentful operations on a Project
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_metadata'
      spec:
        $ref: '#/definitions/project_internal'
      status:
        $ref: '#/definitions/project_internal_def_status'

  project_internal_def_status:
    type: object
    title: Project Resource Status, combined with Users and ACPs
    description: A Project resource, combined with Users and ACPs.
    required:
      - project_status
    properties:
      project_status:
        type: object
        title: Project Resource Status
        description: A Project resource.
        required:
          - name
          - resources
        properties:
          name:
            type: string
            description: Project name.
            maxLength: 64
          description:
            type: string
            description: Project description.
            maxLength: 1000
          state:
            description: The state of the project entity.
            type: string
          reason:
            type: string
            readOnly: true
            description: One snake case word.
          message:
            type: string
            readOnly: true
            description: The reason for the state if in error.
          resources:
            type: object
            title: Project Resources
            properties:
              is_default:
                description: |
                  Indicates if it is the default project. A default project is
                  managed by the system and cannot be renamed or removed. If
                  user_reference_list or external_group_list is not specified,
                  then all users are given access to the default project.
                type: boolean
              resource_domain:
                $ref: '#/definitions/resource_domain_resources_status'
              default_subnet_reference:
                $ref: '#/definitions/subnet_reference'
                description: Optional default subnet if one is specified
              subnet_reference_list:
                type: array
                description: List of subnets for the project.
                items:
                  $ref: '#/definitions/subnet_reference'
              user_reference_list:
                type: array
                description: |
                  List of users in the project including all the users from the
                  users group if provided.
                items:
                  $ref: '#/definitions/user_reference'
              external_user_group_reference_list:
                type: array
                description: |
                  List of directory service user groups. These groups are not
                  managed by Nutanix.
                items:
                  $ref: '#/definitions/user_group_reference'
              account_reference_list:
                type: array
                description: List of accounts associated with the project.
                items:
                  $ref: '#/definitions/account_reference'
              environment_reference_list:
                type: array
                description: List of environments associated with the project.
                items:
                  $ref: '#/definitions/environment_reference'
      access_control_policy_list_status:
        type: array
        description: |
          The list of access control policies associates with users in the project.
        items:
          type: object
          description: The acp status and metadata
          properties:
            access_control_policy_status:
              $ref: '#/definitions/access_control_policy_def_status'
            metadata:
              type: object
              properties:
                uuid:
                  type: string
                  format: UUID
                  pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                kind:
                  type: string
                  readOnly: true
  permission:
    type: object
    title: Permission
    description: >
      Permission Input Definition.
      The permission consists of a name and defines the following
      what-operation-can-be-performed-on-which-fields-a-given-kind.
      The fields are defined in a list with type - allowed and disallowed.
    required:
    - name
    - resources
    properties:
      name:
        type: string
        description: Permission name.
        maxLength: 64
      description:
        description: A description or user annotation for the permission.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/permission_resources'

  permission_resources:
    type: object
    title: Permission entity resources.
    description: Permission resources definition.
    required:
    - operation
    - kind
    properties:
      operation:
        description: The operation that is being performed on a given kind.
        type: string
      kind:
        description: The kind on which the operation is being performed.
        type: string
      fields:
        description: >
          The fields that can/cannot be accessed during the specified operation.
          field_name_list will be a list of fields.
          e.g. if field_mode = disallowed, field_name_list = ["xyz"]
          then the list of allowed fields is ALL fields minus xyz
        title: The fields that can be allowed or disallowed during an operation.
        type: object
        required:
          - field_mode
          - field_name_list
        properties:
          field_mode:
            description: Allow or disallow the fields mentioned.
            type: string
            x-ntnx-enum:
            - ALLOWED
            - DISALLOWED
            - NONE
          field_name_list:
            description: The list of fields.
            type: array
            items:
              type: string

  permission_def_status:
    type: object
    title: Permission Status Definition.
    description: Permission Status Definition.
    required:
    - name
    - resources
    properties:
      name:
        type: string
        description: Permission name.
      description:
        description: Human readable description of the permission.
        type: string
      resources:
        $ref: '#/definitions/permission_resources'
      state:
        description: The state of the permission entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  role:
    title: Role.
    description: Role Input Definition.
    type: object
    required:
    - name
    - resources
    properties:
      name:
        description: Role name.
        type: string
        maxLength: 64
      description:
        description: A description or user annotation for the role.
        type: string
        maxLength: 1000
      resources:
        title: Role Resources.
        type: object
        properties:
          permission_reference_list:
            type: array
            description: List of permission references.
            items:
              $ref: '#/definitions/permission_reference'

  role_def_status:
    title: Role status definition.
    description: Role status definition.
    type: object
    required:
    - name
    - resources
    properties:
      name:
        description: Role name.
        type: string
      description:
        description: A description or user annotation for the role.
        type: string
      resources:
        title: Role Resources.
        type: object
        properties:
          permission_reference_list:
            type: array
            description: List of permission entities.
            items:
              $ref: '#/definitions/permission_reference'
      state:
        description: The state of the role entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  groups_get_entities_request:
    title: Get Entities Request
    description: Get Entities Request.
    type: object
    required:
    - entity_type
    properties:
      entity_type:
        description: The entity type that will be requested.
        type: string
      entity_ids:
        description: A set of entities that the request will be scoped to.
        type: array
        items:
          type: string
      availability_zone_scope:
        description: >
          The scope of availability zones from which to fetch the  data.
        type: string
        default: LOCAL
        x-ntnx-enum:
        - LOCAL
        - GLOBAL
      filter_criteria:
        description: >
          FIQL filter criteria that will be used to filter the returned data.
        type: string
      grouping_attribute:
        description: >
          Attribute that will be used to perform a group-by if needed.
        type: string
      grouping_attribute_type:
        $ref: '#/definitions/groups_attribute_type'
      group_count:
        description: The maximum number of groups to return in the result.
        type: integer
        format: int64
      group_offset:
        description: The offset into the total set of groups to return.
        type: integer
        format: int64
      group_sort_attribute:
        description: >
          The name of the attribute that will be used to sort groups.
        type: string
      group_sort_order:
        $ref: '#/definitions/groups_sort_order'
      group_sort_downsample_function:
        $ref: '#/definitions/groups_sort_downsampling_function'
      group_attributes:
        type: array
        items:
          $ref: '#/definitions/groups_requested_attribute'
      group_member_count:
        description: The maximum number of members to return per group.
        type: integer
        format: int64
      group_member_offset:
        description: The offset into the total member set to return per group.
        type: integer
        format: int64
      group_member_sort_attribute:
        description: >
          The name of the attribute that will be used to sort group members.
        type: string
      group_member_sort_order:
        $ref: '#/definitions/groups_sort_order'
      group_member_sort_downsampling_function:
        $ref: '#/definitions/groups_sort_downsampling_function'
      group_member_attributes:
        type: array
        items:
          $ref: '#/definitions/groups_requested_attribute'
      interval_start_ms:
        description: >
          For a time-series query, the start of the interval since the epoch in
          ms. Default is latest value only.
        type: integer
        format: int64
        default: 0
      interval_end_ms:
        description: >
          For a time-series query, the end of the interval since the epoch in
          ms. Default is latest value only.
        type: integer
        format: int64
        default: 0
      number_of_intervals_for_latest_data:
        description: >
          When retrieving latest values, how far back to look as a multiple of
          the downsampling interval for the metric.
        type: integer
        format: int32
      number_of_buckets:
        description: For grouping, how many groups to return.
        type: integer
        format: int32
      bucket_boundary:
        description: For grouping, the boundary to snap to when grouping.
        type: integer
        format: int32
      downsampling_interval:
        description: >
          Downsampling interval to apply to query if override is desired.
        type: integer
        format: int32
      query_name:
        description: A custom name to use for tagging the query when debugging.
        type: string

  groups_get_entities_response:
    title: Get Entities Response
    description: Get Entities Response.
    type: object
    properties:
      total_entity_count:
        type: integer
        format: int64
      filtered_entity_count:
        type: integer
        format: int64
      total_group_count:
        type: integer
        format: int64
      filtered_group_count:
        type: integer
        format: int64
      entity_type:
        type: string
      group_results:
        type: array
        items:
          $ref: '#/definitions/groups_group_result'

  groups_group_result:
    title: Group Result
    description: Group Result.
    type: object
    properties:
      total_entity_count:
        type: integer
        format: int64
      group_by_column_value:
        type: string
      group_summaries:
        $ref: '#/definitions/groups_group_summary_map'
      entity_results:
        type: array
        items:
          $ref: '#/definitions/groups_entity'

  groups_group_summary_map:
    # This is a map from string:groups_field_data
    title: Group Summary Map
    description: Group Summary Info Map.
    type: object
    additionalProperties:
      $ref: '#/definitions/groups_field_data'

  groups_bucket_summary_map:
    # This is a map from bucket_value:bucket_count
    title: Group Buckets Summary Map
    description: Group Bucket Summary Map.
    type: object
    additionalProperties:
      type: integer
      format: int64

  groups_field_data:
   title: Group Summary Data
   description: Group Summary Data.
   type: object
   properties:
     name:
       type: string
       maxLength: 64
     values:
       type: array
       items:
         $ref: '#/definitions/groups_timevalue_pair'
     buckets:
       $ref: '#/definitions/groups_bucket_summary_map'

  groups_timevalue_pair:
    title: Time-Value Pair
    description: Time-Value Pair Data.
    type: object
    properties:
      time:
        type: integer
        format: int64
      values:
        type: array
        items:
          type: string

  groups_entity:
    title: Entity
    description: An Individual Entity.
    type: object
    properties:
      entity_id:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/groups_field_data'

  groups_sort_order:
    title: Entities Request Sort Order
    description: Sort order for entities and entity groups.
    type: string
    x-ntnx-enum:
    - ASCENDING
    - DESCENDING

  groups_attribute_type:
    title: Attribute Type
    description: >
      The type of an attribute being used for grouping - may be continuous or
      discrete.
    type: string
    x-ntnx-enum:
    - CONTINUOUS
    - DISCRETE

  groups_sort_downsampling_function:
    title: Entities Request Downsampling Function
    description: >
      Downsampling function to take time series data and resolve to one value
      for sorting purposes.
    type: string
    x-ntnx-enum:
    - MAX
    - MIN
    - FIRST
    - LAST
    - LATEST

  groups_aggregation_function:
    title: Entities Request Aggregation Function
    description: >
      Downsampling function to take time series data and resolve to one value
      for aggregation purposes.
    type: string
    x-ntnx-enum:
    - SUM
    - AVG
    - MIN
    - MAX
    - LAST
    - COUNT
    - BUCKETS

  groups_requested_attribute:
    title: Entities Request Attribute
    description: >
      An attribute that has been requested to be returned in the response.
    type: object
    required:
    - attribute
    properties:
      attribute:
        type: string
      operation:
        $ref: '#/definitions/groups_aggregation_function'
      ancestor_entity_type:
        type: string
  resource_utilization_spec:
    title: Resource Utilization Specification
    description: specify the limits and units for a resource type
    required:
      - resource_type
    properties:
      resource_type:
        description: The type of resource (i.e. storage, CPUs)
        type: string
        x-ntnx-enum:
          - STORAGE
          - MEMORY
          - VCPUS
          - VMS
      limit:
        description: The resource consumption limit
        type: integer

  resource_utilization_status:
    title: Resource Utilization Status
    description: stores resource utilization and limits for a domain
    required:
      - resource_type
      - units
      - value
    properties:
      resource_type:
        description: The type of resource (for example storage, CPUs)
        type: string
      units:
        description: The units of the resource type
        type: string
      value:
        description: The amount of resource consumed
        type: integer
      limit:
        description: The resource consumption limit (unspecified is unlimited)
        type: integer

  resource_domain_spec:
    title: Resource Domain Spec
    description: Resource domain specification (limits)
    properties:
      resources:
        description: The utilization limits for resource types
        type: array
        items:
          $ref: '#/definitions/resource_utilization_spec'

  resource_domain_resources_status:
    title: Resource Domain Status
    description: The status for a resource domain (limits and values)
    required:
      - resources
    properties:
      resources:
        description: The utilization/limit for resource types
        type: array
        items:
          $ref: '#/definitions/resource_utilization_status'
  image_resources_def_status:
    title: Image status resources
    description: Describes the image status resources object.
    type: object
    properties:
      image_type:
        $ref: "#/definitions/image_type"
      checksum:
        description: >
          Checksum of the image. The checksum is used for image validation if
          the image has a source specified. For images that do not have their
          source specified the checksum is generated by the image service.
        $ref: "#/definitions/checksum"
      source_uri:
        description: >
          The source URI points at the location of a the source image which is
          used to create/update image.
        type: string
      data_source_reference:
        description: >
          Reference to VM disk. The expected kind for VMs Disk is vm_disk. The
          UUID should be the disk device uuid, where the disk device is from
          disk_list from VM status.
        $ref: "#/definitions/reference"
      version:
        description: "The image version"
        $ref: "#/definitions/image_version_status"
      retrieval_uri_list:
        description: >
          List of URIs where the raw image data can be accessed.
        type: array
        items:
          type: string
      size_bytes:
        type: integer
        description: The size of the image in bytes.
        format: long
      architecture:
        $ref: "#/definitions/image_architecture"

  image_resources:
    title: Image spec resources
    description: Describes the image spec resources object.
    type: object
    properties:
      image_type:
        $ref: "#/definitions/image_type"
      checksum:
        description: >
          Checksum of the image. The checksum is used for image validation if
          the image has a source specified. For images that do not have their
          source specified the checksum is generated by the image service.
        $ref: "#/definitions/checksum"
      source_uri:
        description: >
          The source URI points at the location of a the source image which is
          used to create/update image.
        type: string
      data_source_reference:
        description: >
          Reference to VM disk. The expected kind for VMs Disk is vm_disk. The
          UUID should be the disk device uuid, where the disk device is from
          disk_list from VM status.
        $ref: "#/definitions/reference"
      version:
        description: "The image version"
        $ref: "#/definitions/image_version_resources"
      architecture:
        description: >
          Indicates the CPU architecture that the image is compatible with. If
          this is not specified for an image this will default to the CPU
          architecture type of the cluster.
        $ref: "#/definitions/image_architecture"

  image_version_resources:
    title: Image version
    description: >
      The image version, which is composed of a product name and product
      version.
    type: object
    required:
    - product_name
    - product_version
    properties:
      product_name:
        description: >
          Name of the producer/distribution of the image. For example windows
          or red hat.
        type: string
        maxLength: 64
      product_version:
        description: "Version string for the disk image."
        type: string
        maxLength: 64

  image_version_status:
    title: Image version
    description: >
      The image version, which is composed of a product name and product
      version.
    type: object
    required:
    - product_name
    - product_version
    properties:
      product_name:
        description: >
          Name of the producer/distribution of the image. For example windows
          or red hat.
        type: string
      product_version:
        description: "Version string for the disk image."
        type: string

  image_type:
    title: Image type
    description: The type of image.
    type: string
    x-ntnx-enum:
      - DISK_IMAGE
      - ISO_IMAGE

  image_architecture:
    title: Image architecture
    description: The supported CPU architecture for a disk image.
    type: string
    x-ntnx-enum:
      - X86_64
      - PPC64
      - PPC64LE

  image_migrate_input:
    type: object
    title: Input for image migration
    description: |
      Specify the cluster and image(s) from the cluster to migrate to PC
    required:
      - cluster_reference
    properties:
      cluster_reference:
        description: >
          Reference to the PE cluster that currently owns images to be
          migrated.
        $ref: '#/definitions/cluster_reference'
      image_reference_list:
        description : |
          Reference to the images from PE cluster to be migrated
        type: array
        items:
          $ref: '#/definitions/image_reference'

  image_remote_copy_input:
    type: object
    title: Input for image remote copy operation
    description: >
      Specify the remote PC and image(s) from the local cluster
      to copy onto remote PC's cluster
    properties:
      image_reference_list:
        description : >
          Reference to the images from local PC to be used for
          remote copying. These images will be copied to the remote PC cluster
        type: array
        items:
          $ref: '#/definitions/image_reference'

  storage_qos_policy_config_input:
    type: object
    title: Storage Qos Policy Parameters Input.
    description: |
      The policy rule to be enforced depending on the type of policy. For ex -
      provisioned/throttled iops would be set for a storage qos policy.
    required:
      - throttled_iops
    properties:
      throttled_iops:
        description: |
          Throttled iops for the entities being governed by the policy.
        type: integer
        format: int64
        default: -1

  storage_qos_policy_config_output:
    type: object
    title: Storage Qos Policy Parameters Output.
    description: |
      The policy rule to be enforced depending on the type of policy. For ex -
      provisioned/throttled iops would be set for a storage qos policy.
    properties:
      throttled_iops:
        description: |
          Throttled iops for the entities being governed by the policy.
        type: integer
        format: int64

  vm_power_state_mechanism:
    type: object
    title: VM Power State Mechanism
    description: >
      Indicates the mechanism guiding the VM power state transition. Currently
      used for the transition to "OFF" state.
    properties:
      mechanism:
        description: Power state mechanism (ACPI/GUEST/HARD).
        type: string
        x-ntnx-enum:
        - ACPI
        - GUEST
        - HARD
      guest_transition_config:
        $ref: "#/definitions/vm_guest_power_state_transition_config"

  vm_guest_power_state_transition_config:
    type: object
    title: Power State Transition Config
    description: Extra configs related to power state transition.
    properties:
      enable_script_exec:
        description: Indicates whether to execute set script before ngt shutdown/reboot.
        type: boolean
      should_fail_on_script_failure:
        description: Indicates whether to abort ngt shutdown/reboot if script fails.
        type: boolean

  # The input object that defines a VM
  vm_resources:
    type: object
    title: VM Resources
    description: VM Resources Definition.
    properties:
      num_sockets:
        description: Number of vCPU sockets.
        type: integer
        format: int32
        minimum: 1
      num_vcpus_per_socket:
        description: Number of vCPUs per socket.
        type: integer
        format: int32
        minimum: 1
      memory_size_mib:
        description: Memory size in MiB.
        type: integer
        format: int32
        minimum: 1
      guest_os_id:
        description: >
          Guest OS Identifier. For ESX, refer to VMware documentation link
          (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
          for the list of guest OS identifiers.
        type: string
        maxLength: 64
      power_state:
        description: The current or desired power state of the VM.
        type: string
        x-ntnx-enum:
        - "ON"
        - "OFF"
      power_state_mechanism:
        $ref: "#/definitions/vm_power_state_mechanism"
      hardware_clock_timezone:
        description: >
          VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).
        type: string
        maxLength: 64
      disk_list:
        description: Disks attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_disk"
      nic_list:
        description: NICs attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_nic"
      gpu_list:
        description: GPUs attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_gpu"
      parent_reference:
        description: >
          Reference to an entity that the VM should be cloned from.
        $ref: "#/definitions/reference"
      boot_config:
        description: Indicates which device the VM should boot from.
        $ref: "#/definitions/vm_boot_config"
      guest_customization:
        $ref: "#/definitions/guest_customization"
      guest_tools:
        description: Information regarding guest tools.
        $ref: "#/definitions/guest_tools_spec"
      vga_console_enabled:
        description: Indicates whether VGA console should be enabled or not.
        type: boolean
      vnuma_config:
        description: Information regarding vNUMA configuration.
        $ref: "#/definitions/vm_vnuma_config"
      serial_port_list:
        description: Serial ports configured on the VM.
        type: array
        items:
          $ref: "#/definitions/serial_port"
      storage_qos_policy_config:
        description: Storage qos policy parameters applied on the VM.
        $ref: "#/definitions/storage_qos_policy_config_input"

  # The output object that defines a VM
  vm_resources_def_status:
    type: object
    title: VM Resources Status Definition
    description: VM Resources Status Definition.
    properties:
      num_sockets:
        description: Number of vCPU sockets.
        type: integer
        format: int32
      num_vcpus_per_socket:
        description: Number of vCPUs per socket.
        type: integer
        format: int32
      memory_size_mib:
        description: Memory size in MiB.
        type: integer
        format: int32
      guest_os_id:
        description: >
          Guest OS Identifier. For ESX, refer to VMware documentation link
          (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
          for the list of guest OS identifiers.
        type: string
      host_reference:
        $ref: "#/definitions/reference"
      hypervisor_type:
        description: >
          The hypervisor type for the hypervisor the VM is hosted on.
        type: string
        x-ntnx-enum:
         - ESX
         - HyperV
         - AHV
      power_state:
        description: Current power state of the VM.
        type: string
        x-ntnx-enum:
         - "ON"
         - "OFF"
         - "PAUSED"
         - "UNKNOWN"
      power_state_mechanism:
        $ref: "#/definitions/vm_power_state_mechanism"
      hardware_clock_timezone:
        description: >
          VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).
        type: string
      disk_list:
        description: Disks attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_disk"
      nic_list:
        description: NICs attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_nic_output_status"
      gpu_list:
        description: GPUs attached to the VM.
        type: array
        items:
          $ref: "#/definitions/vm_gpu_output_status"
      parent_reference:
        description: >
          Reference to an entity that the VM cloned from.
        $ref: "#/definitions/reference"
      boot_config:
        description: Indicates which device the VM should boot from.
        $ref: "#/definitions/vm_boot_config"
      guest_customization:
        $ref: "#/definitions/guest_customization_status"
      guest_tools:
        description: Information regarding guest tools.
        $ref: "#/definitions/guest_tools_status"
      vga_console_enabled:
        description: Indicates whether VGA console has been enabled or not.
        type: boolean
      protection_type:
        description: >
          The type of protection applied on a VM.
          PD_PROTECTED indicates a VM protected using Prism Element.
          RULE_PROTECTED indicates a VM protected using Prism Central.
        type: string
        x-ntnx-enum:
         - UNPROTECTED
         - PD_PROTECTED
         - RULE_PROTECTED
      vnuma_config:
        description: Information regarding vNUMA configuration.
        $ref: "#/definitions/vm_vnuma_config"
      serial_port_list:
        description: Serial ports configured on the VM.
        type: array
        items:
          $ref: "#/definitions/serial_port"
      storage_qos_policy_config:
        description: Storage qos policy parameters applied on the VM.
        $ref: "#/definitions/storage_qos_policy_config_output"

  guest_tools_spec:
    type: object
    title: Guest Tools information
    description: Information regarding guest tools.
    properties:
      nutanix_guest_tools:
        description: Nutanix Guest Tools information
        $ref: '#/definitions/nutanix_guest_tools_spec'

  guest_tools_status:
    type: object
    title: Guest Tools information
    description: Information regarding guest tools.
    properties:
      nutanix_guest_tools:
        description: Nutanix Guest Tools information
        $ref: '#/definitions/nutanix_guest_tools_status'

  nutanix_guest_tools_spec:
    type: object
    title: Nutanix Guest Tools information
    description: Information regarding Nutanix Guest Tools.
    properties:
      ngt_state:
        description: Nutanix guest tools is installed or not.
        type: string
        x-ntnx-enum:
          - INSTALLED
          - UNINSTALLED
      credentials:
        description: >
          Administrator Credentials of UVM. This is required for installing
          Nutanix Guest Tools on the UVM.
        $ref: "#/definitions/credentials"
      state:
        description: Nutanix Guest Tools is enabled or not.
        type: string
        x-ntnx-enum:
          - ENABLED
          - DISABLED
      iso_mount_state:
        description: >
          Desired mount state of Nutanix Guest Tools ISO.
        type: string
        x-ntnx-enum:
          - MOUNTED
          - UNMOUNTED
      enabled_capability_list:
        description: Application names that are enabled.
        type: array
        items:
          type: string
          x-ntnx-enum:
            - SELF_SERVICE_RESTORE
            - VSS_SNAPSHOT
      version:
        description: Desired Version of Nutanix Guest Tools installed on the VM.
        type: string

  nutanix_guest_tools_status:
    type: object
    title: Nutanix Guest Tools status
    description: Information regarding Nutanix Guest Tools.
    properties:
      version:
        description: Version of Nutanix Guest Tools installed on the VM.
        type: string
      available_version:
        description: Version of Nutanix Guest Tools available on the cluster.
        type: string
      guest_os_version:
        description: Version of the operating system on the VM.
        type: string
      ngt_state:
        description: Nutanix guest tools is installed or not.
        type: string
        x-ntnx-enum:
          - INSTALLED
          - UNINSTALLED
      credentials:
        description: >
          Administrator Credentials of UVM. This is required for installing
          Nutanix Guest Tools on the UVM.
        $ref: "#/definitions/credentials"
      state:
        description: Nutanix Guest Tools is enabled or not.
        type: string
        x-ntnx-enum:
          - ENABLED
          - DISABLED
      iso_mount_state:
        description: >
          Desired mount state of Nutanix Guest Tools ISO.
        type: string
        x-ntnx-enum:
          - MOUNTED
          - UNMOUNTED
      enabled_capability_list:
        description: Application names that are enabled.
        type: array
        items:
          type: string
          x-ntnx-enum:
            - SELF_SERVICE_RESTORE
            - VSS_SNAPSHOT
      is_reachable:
        description: Communication from VM to CVM is active or not.
        type: boolean
      vss_snapshot_capable:
        description: >
          Whether the VM is configured to take VSS snapshots through NGT.
        type: boolean
      vm_mobility_drivers_installed:
        description: Whether VM mobility drivers are installed in the VM.
        type: boolean

  vm_boot_config:
    type: object
    title: VM Boot configuration
    description: >
      Indicates which device a VM should boot from.
    properties:
      boot_device:
        description: >
          Indicates which device a VM should boot from. Boot device takes precdence
          over boot device order. If both are given then specified boot device
          will be primary boot device and remaining devices will be assigned
          boot order according to boot device order field.
        $ref: "#/definitions/vm_boot_device"
      boot_device_order_list:
        description: >
          Indicates the order of device types in which VM should try to boot from.
          If boot device order is not provided the system will decide appropriate
          boot device order.
        type: array
        items:
          type: string
          x-ntnx-enum:
            - CDROM
            - DISK
            - NETWORK

  vm_boot_device:
    type: object
    title: VM Boot device
    description: >
      Indicates which device a VM should boot from. One of disk_address or
      mac_address should be provided.
    x-ntnx-one-of:
      - required:
          - disk_address
      - required:
          - mac_address
    properties:
      disk_address:
        description: Address of disk to boot from.
        $ref: "#/definitions/disk_address"
      mac_address:
        description: MAC address of nic to boot from.
        type: string
        pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        x-example: 50:6b:8d:ee:de:2b

  vm_vnuma_config:
    type: object
    title: VM vNUMA configuration
    description: >
      Indicates how VM vNUMA should be configured
    properties:
      num_vnuma_nodes:
        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
        type: integer
        format: int64

  serial_port:
    type: object
    title: VM serial port connection.
    description: >
      Indicates the configuration of serial ports of the VM.
    properties:
      is_connected:
        description: >
          Indicates whether the serial port connection is connected or not.
        type: boolean
      index:
        description: Index of the serial port.
        type: integer

  # Input object for vm_nics.
  vm_nic:
    title: Virtual Machine NIC
    description: Virtual Machine NIC.
    type: object
    properties:
      uuid:
        description: >
          The NIC's UUID, which is used to uniquely identify this particular
          NIC. This UUID may be used to refer to the NIC outside the context of
          the particular VM it is attached to.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      nic_type:
        description: The type of this NIC. Defaults to NORMAL_NIC.
        type: string
        x-ntnx-enum:
         - NORMAL_NIC
         - DIRECT_NIC
         - NETWORK_FUNCTION_NIC
      mac_address:
        description: The MAC address for the adapter.
        type: string
        pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
      ip_endpoint_list:
        description: |
          IP endpoints for the adapter. Currently, IPv4 addresses are
          supported.
        type: array
        items:
          $ref: '#/definitions/ip_address'
      # Identifier for the network this adapter will be placed on. The meaning
      # of this varies per hypervisor.
      # Only valid if nic_type = NORMAL_NIC or DIRECT_NIC
      subnet_reference:
        $ref: '#/definitions/subnet_reference'
      # Identifier of the network function chain this adapter will be on.
      # Only valid if nic_type = NORMAL_NIC
      network_function_chain_reference:
        $ref: "#/definitions/network_function_chain_reference"
      # Only valid if nic_type = NETWORK_FUNCTION_NIC
      network_function_nic_type:
        description: >
          The type of this Network function NIC. Defaults to INGRESS.
        type: string
        x-ntnx-enum:
          - INGRESS
          - EGRESS
          - TAP
      model:
        description: The model of this NIC.
        type: string
        x-ntnx-enum:
          - VIRTIO
          - E1000
      is_connected:
        description: Whether or not the NIC is connected. True by default.
        type: boolean

  # Output object for vm_nics.
  vm_nic_output_status:
    title: Virtual Machine NIC Status
    description: Virtual Machine NIC Status.
    type: object
    properties:
      uuid:
        description: >
          The NIC's UUID, which is used to uniquely identify this particular
          NIC. This UUID may be used to refer to the NIC outside the context of
          the particular VM it is attached to.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      nic_type:
        description: The type of this NIC. Defaults to NORMAL_NIC.
        type: string
        x-ntnx-enum:
         - NORMAL_NIC
         - DIRECT_NIC
         - NETWORK_FUNCTION_NIC
      mac_address:
        description: The MAC address for the adapter.
        type: string
        pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$

      ip_endpoint_list:
        description: >
          IP endpoints for the adapter. Currently, IPv4 addresses are
          supported.
        type: array
        items:
          $ref: '#/definitions/ip_address'
      # Identifier for the network this adapter will be placed on. The meaning
      # of this varies per hypervisor.
      # Only valid if nic_type = NORMAL_NIC or DIRECT_NIC
      subnet_reference:
        $ref: '#/definitions/subnet_reference'
      # Identifier of the network function chain this adapter will be on.
      # Only valid if nic_type = NORMAL_NIC
      network_function_chain_reference:
        $ref: "#/definitions/network_function_chain_reference"
      # Only valid if nic_type = NETWORK_FUNCTION_NIC
      network_function_nic_type:
        description: >
          The type of this Network function NIC. Defaults to INGRESS.
        type: string
        x-ntnx-enum:
          - INGRESS
          - EGRESS
          - TAP
      floating_ip:
        description: The Floating IP associated with the vnic.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      model:
        description: The model of this NIC.
        type: string
        x-ntnx-enum:
          - VIRTIO
          - E1000
      is_connected:
        description: Whether or not the NIC is connected. True by default.
        type: boolean
      default_gateway_address_list:
        description: Default gateway IP addresses.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      dns_ip_addresses_list:
        description: List of DNS IP addresses.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      dhcp_server_ip:
        description: IP address of the DHCP server.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

  ip_address:
    title: IP Address
    description: An IP address.
    type: object
    properties:
      type:
        description: |
          Address type. It can only be "ASSIGNED" in the spec. If no type is
          specified in the spec, the default type is set to "ASSIGNED".
        type: string
        x-ntnx-enum:
          - ASSIGNED
          - LEARNED
      ip:
        description: Address string.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ip_type:
        description: Indicates whether IP address is DHCP or Static.
        type: string
        x-ntnx-enum:
            - DHCP
            - STATIC
      prefix_length:
        description: Prefix length for the IP address.
        type: integer
        format: int32
        minimum: 0
        maximum: 32
      gateway_address_list:
        description: Gateway IP addresses matching the subnet.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

  # Input object for vm_gpus.
  vm_gpu:
    title: VirtualMachine GPU
    description: Graphics resource information for the Virtual Machine.
    type: object
    properties:
      mode:
        description: The mode of this GPU.
        type: string
        x-ntnx-enum:
         - PASSTHROUGH_GRAPHICS
         - PASSTHROUGH_COMPUTE
         - VIRTUAL
      device_id:
        description: The device ID of the GPU.
        type: integer
        format: int32
      vendor:
        description: The vendor of the GPU.
        type: string
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD

  # Output object for vm_gpus.
  vm_gpu_output_status:
    title: Virtual Machine GPU status
    description: Graphics resource status information for the Virtual Machine.
    type: object
    properties:
      uuid:
        description: UUID of the GPU.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      mode:
        description: The mode of this GPU
        type: string
        x-ntnx-enum:
         - PASSTHROUGH_GRAPHICS
         - PASSTHROUGH_COMPUTE
         - VIRTUAL
      pci_address:
        description: >
          GPU {segment:bus:device:function} (sbdf) address if assigned.
        type: string
      device_id:
        description: The device ID of the GPU.
        type: integer
        format: int32
      vendor:
        description: The vendor of the GPU.
        type: string
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD
      guest_driver_version:
        description: Last determined guest driver version.
        type: string
      name:
        description: Name of the GPU resource.
        type: string
      frame_buffer_size_mib:
        description: GPU frame buffer size in MiB.
        type: integer
        format: int64
      num_virtual_display_heads:
        description: Number of supported virtual display heads.
        type: integer
        format: int32
      fraction:
        description: Fraction of the physical GPU assigned.
        type: integer
        format: int32

  vm_disk:
    title: VirtualMachine Disk (VM Disk)
    description: VirtualMachine Disk (VM Disk).
    type: object
    properties:
      uuid:
        description: >
          The device ID which is used to uniquely identify this particular disk.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      device_properties:
        type: object
        properties:
          disk_address:
            $ref: '#/definitions/disk_address'
          device_type:
            type: string
            default: "DISK"
            x-ntnx-enum:
             - DISK
             - CDROM
             - VOLUME_GROUP
      disk_size_mib:
        description: >
          Size of the disk in MiB. Must match the size specified in
          'disk_size_bytes' - rounded up to the nearest MiB -  when that
          field is present.
        type: integer
        format: int32
        minimum: 1
      disk_size_bytes:
        description: Size of the disk in Bytes.
        type: integer
        format: int64
        minimum: 1
      # A reference to an existing disk or image to clone for the contents of
      # this disk
      data_source_reference:
        $ref: '#/definitions/reference'
      volume_group_reference:
        $ref: '#/definitions/reference'

  disk_address:
    title: Disk Address
    description: Disk Address.
    type: object
    required:
     - adapter_type
     - device_index
    properties:
      adapter_type:
        type: string
        x-ntnx-enum:
         - SCSI
         - IDE
         - PCI
         - SATA
         - SPAPR
      device_index:
        type: integer
  migration_target:
    type: object
    title: Migration target
    description: |
      A migration target is comprised of availability zone reference
      and optionally reference to any particular cluster within that
      availability zone.
    required:
    - availability_zone_reference
    properties:
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  vm_validate_migration_input:
    type: object
    title: Validate migration input definition.
    description: |
      Contains reference to migration target to which the migrate validation
      needs to be checked upon.
    required:
    - migration_target
    properties:
      migration_target:
        $ref: '#/definitions/migration_target'

  vm_validate_migration_output:
    title: Validate migration output definition.
    description: |
      If VM migration is not feasible, it contains detailed list of the
      corresponding errors and warnings. Otherwise none.
    type: array
    items:
      type: object
      x-ntnx-one-of:
        - required:
            - error_code
        - required:
            - warning_code
      properties:
        error_code:
          description: |
            Error due to which VM will be unrecoverable at migration target.
          type: string
          x-ntnx-enum:
          - VIRTUAL_HARDWARE_VERSION_MISMATCH
          - LEGACY_PROTECTION_NOT_SUPPORTED
          - LOCAL_CLUSTER_IN_READ_ONLY_MODE
          - TARGET_NOT_REGISTERED_TO_MANAGEMENT_SERVER
          - UNKNOWN_ERROR
          - UNSUPPORTED_DISK_TYPE
          - UNSUPPORTED_RECOVERY_FROM_ESX_TO_AHV
          - UNSUPPORTED_RECOVERY_FROM_AHV_TO_ESX
          - UNSUPPORTED_HYPERVISOR_TYPE
          - UNSUPPORTED_VOLUME_GROUP_ATTACHMENT
          - VM_WITH_DELTA_DISKS
          - VM_WITH_SHARED_VDISKS
          - VM_WITH_UEFI_FIRMWARE
        warning_code:
          description: |
            Warning due to which VM may not be fully recoverable at migration
            target.
          type: string
          x-ntnx-enum:
          - UNKNOWN_WARNING
          - VM_NGT_MULTIPATHING_ENABLED
          - VM_NGT_NOT_INSTALLED
        unrecoverability_detail:
          description: |
            Detailed message which describes unrecoverability warning or error.
          type: string
        resolution:
          description: |
            Detailed message which describes the resolution for warning or
            error.
          type: string
  # The input object that defines a VM
  mh_vm_resources:
    type: object
    title: VM Resources
    description: VM Resources Definition.
    properties:
      parent_reference:
        $ref: "#/definitions/reference"
      guest_tools:
        description: Information regarding guest tools.
        $ref: "#/definitions/guest_tools_spec"

  # The output object that defines a VM
  mh_vm_resources_def_status:
    type: object
    title: VM Resources Status Definition
    description: VM Resources Status Definition.
    properties:
      hypervisor_type:
        description: >
          The hypervisor type for the hypervisor the VM is hosted on.
        type: string
        x-ntnx-enum:
         - ESX
         - AHV
      hypervisor_specific_id:
        description: >
          The hypervisor specific ID of the VM.
        type: string
      host_reference:
        $ref: "#/definitions/reference"
      parent_reference:
        $ref: "#/definitions/reference"
      guest_tools:
        description: Information regarding guest tools.
        $ref: "#/definitions/guest_tools_status"
      protection_type:
        description: >
          The type of protection applied on a VM.
          PD_PROTECTED indicates a VM protected using Prism Element.
          RULE_PROTECTED indicates a VM protected using Prism Central.
        type: string
        x-ntnx-enum:
         - UNPROTECTED
         - PD_PROTECTED
         - RULE_PROTECTED

  mh_vm:
    type: object
    title: mh_vm Intent Spec with placement specified
    description: An intentful representation of a mh_vm spec
    required:
    - resources
    properties:
      resources:
        $ref: '#/definitions/mh_vm_resources'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  mh_vm_def_status:
    type: object
    title: mh_vm Intent Status with placement specified
    description: An intentful representation of a mh_vm status
    required:
    - name
    - resources
    properties:
      name:
        description: mh_vm Name.
        type: string
      description:
        description: A description for mh_vm.
        type: string
      state:
        description: The state of the mh_vm.
        type: string
      message_list:
        type: array
        description: Any error messages for the mh_vm, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/mh_vm_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
  mh_vm_revert_input:
    type: object
    title: Revert API input
    description: >
      Input object for the revert API. Pass the UUID of the
      vm_recovery_point to which the VM is to be reverted to.
    required:
     - vm_recovery_point_uuid
    properties:
      vm_recovery_point_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  mh_vm_snapshot_input:
    type: object
    title: Snapshot API input
    description: >
      Input object for the snapshot API. User can provide optional UUID of the
      vm_recovery_point that will be created as a result of this operation.
    properties:
      vm_recovery_point_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      expiration_time:
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). If not
          set, then the recovery point never expires.
        type: string
        format: date-time
      recovery_point_type:
        description: Crash consistent or Application Consistent recovery point
        type: string
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
  billing_summary:
    title: Usage details for the current tenant.
    description: >
      Usage details for the current tenant grouped by aggregation unit
      defined in grouped_by.
    type: object
    properties:
      charge_group_list:
        type: array
        items:
          $ref: '#/definitions/billing_summary_charge_group'
      grouped_by:
        description: Aggregation unit based on which charges are grouped by.
        type: string
        x-ntnx-enum:
        - DAILY

  billing_summary_charge_group:
    title: Charges incurred for the date.
    description: Charges incurred for charge_date.
    type: object
    properties:
      charge_date:
        description: date on which charge occurred.
        type: string
        format: date
      charge_amount:
        description: total value to be charge/already charged to customer.
        $ref: '#/definitions/monetary_value'
      quantity:
        description: >
          Total number of billing items for which customer was charged.
        type: integer
        format: int64

  monetary_value:
    title: Monetary value along with currency details.
    description: Monetary value along with currency details.
    type: object
    properties:
      amount:
        description: amount in currency
        type: number
        format: double
      currency_name:
        type: string
        x-ntnx-enum:
        - DOLLAR

  billing_invoice_list:
    title: List of all invoices.
    description: List of all invoices for the current tenant account.
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/billing_invoice'

  billing_invoice:
    title: Invoice details.
    description: Invoice generated for a billing duration.
    type: object
    properties:
      account_name:
        type: string
        description: Name of the billing account.
      invoice_date:
        type: string
        format: date
        description: Date on which this invoice was generated.
      invoice_number:
        type: string
        description: Unique number associated with the invoice.
      invoice_target_date:
        type: string
        format: date
        description: Target date of the invoice.
      due_date:
        type: string
        format: date
        description: Date on which this invoice is due.
      amount:
        $ref: '#/definitions/monetary_value'
        description: Amount that is due.
      balance:
        $ref: '#/definitions/monetary_value'
        description: Amount that due from last invoice.
      status:
        type: string
        x-ntnx-enum:
        - DRAFT
        - POSTED
        description: Status of the invoice.
      invoice_item_list:
        title: Line items of the invoice.
        description: Line items of the invoice.
        type: array
        items:
          $ref: '#/definitions/billing_invoice_item'

  billing_invoice_item:
    title: line item of an invoice.
    description: line item of an invoice.
    type: object
    properties:
      subscription_name:
        type: string
        description: Name of the subscription.
      subscription_id:
        type: string
        description: Id of the subscription.
      service_start_date:
        type: string
        format: date
        description: Date on which this service was started.
      charge_name:
        type: string
        description: Name of the charge plan applicable to the subscription.
      charge_description:
        type: string
        description: >
          Description of the charge plan applicable to the subscription.
      charge_id:
        type: string
        description: Id of the charge plan applicable to the subscription.
      service_end_date:
        type: string
        format: date
        description: Date on which subscription to the line item ends.
      charge_date:
        type: string
        format: date
        description: Date on which this line item will be charged.
      charge_amount:
        $ref: '#/definitions/monetary_value'
        description: Amount that is due for this line item.
      tax_amount:
        $ref: '#/definitions/monetary_value'
        description: Tax amount applicable to this line item.
      quantity:
        type: integer
        format: int32
        description: Number of instances of the line item subscribed.
      charge_type:
        type: string
        description: Nature of the charge.
      processing_type:
        type: string
        description: Type of processing done on the charge.

  unbilled_invoice:
    title: Unbilled usages summary.
    description: Summary of usages not yet invoiced to the user.
    type: object
    properties:
      unbilled_balance:
        $ref: '#/definitions/monetary_value'
        description: >
          Amount that is due for the usage in current bill cycle till date.
      unpaid_balance:
        $ref: '#/definitions/monetary_value'
        description: >
          Amount that is due for non payment or partial payment of last invoice.
      outstanding_balance:
        $ref: '#/definitions/monetary_value'
        description: Total amount that is due till date.
      invoice_item_list:
        title: Summary of usage of billable items.
        description: Summary of usage of individual billable items.
        type: array
        items:
          $ref: '#/definitions/billing_invoice_item'

  account_details:
    title: Account information of a user.
    description: Billing account information of a user.
    type: object
    properties:
      plan_name:
        type: string
        description: Name of the plan that user has subscribed to.
      status:
        type: string
        description: Status of the account indicating if it is active or not.
        x-ntnx-enum:
        - ACTIVE
        - INACTIVE
      account_number:
        type: string
        description: Number associated with the account.
      minimum_charge_amount:
        $ref: '#/definitions/monetary_value'
        description: >
          Amount that will be charged to the customer at the very least.
      subscription_expiry_date:
        type: string
        format: date
        description: Date on which current subscription plan ends.
      prepaid_amount:
        $ref: '#/definitions/monetary_value'
        description: Amount that is paid in advance by the customer.
      next_invoice_date:
        type: string
        format: date
        description: Date on which next invoice will be generated.
  guest_customization:
    type: object
    title: Guest Customization Configuration for creation/modification request
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or
      cloud_init should be provided. Note that guest customization can
      currently only be set during VM creation. Attempting to change it after
      creation will result in an error.
      Additional properties can be specified. For example - in the context of VM
      template creation if "override_script" is set to "True" then the deployer
      can upload their own custom script.
    additionalProperties:
      type: string
    x-ntnx-one-of:
      - required:
          - sysprep
      - required:
          - cloud_init
    properties:
      is_overridable:
        type: boolean
        description: Flag to allow override of customization by deployer.
        default: false
      sysprep:
        type: object
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will
          be generated using these key-value pairs.
        x-ntnx-one-of:
          - required:
              - unattend_xml
          - required:
              - custom_key_values
        properties:
          install_type:
            description: >
              Whether the guest will be freshly installed using this unattend
              configuration, or whether this unattend configuration will be
              applied to a pre-prepared image. Default is "PREPARED".
            type: string
            default: PREPARED
            x-ntnx-enum:
              - FRESH
              - PREPARED
          unattend_xml:
            description: >
              This field contains a Sysprep unattend xml definition, as a
              string. The value must be base64 encoded.
            type: string
            maxLength: 32000 # This limits inputs to ~32k.
          custom_key_values:
            $ref: "#/definitions/custom_generic_key_value_pair"
      cloud_init:
        type: object
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated
          using these key-value pairs.
        x-ntnx-one-of:
          - required:
              - user_data
          - required:
              - custom_key_values
        properties:
          meta_data:
            description: >
              The contents of the meta_data configuration for cloud-init. This
              can be formatted as YAML or JSON. The value must be base64
              encoded.
            type: string
            maxLength: 32000 # This limits inputs to ~32k.
          user_data:
            description: >
              The contents of the user_data configuration for cloud-init. This
              can be formatted as YAML, JSON, or could be a shell script. The
              value must be base64 encoded.
            type: string
            maxLength: 32000 # This limits inputs to ~32k.
          custom_key_values:
            $ref: "#/definitions/custom_generic_key_value_pair"

  guest_customization_status:
    type: object
    title: Guest Customization Configuration for creation/modification request
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or
      cloud_init should be provided. Note that guest customization can
      currently only be set during VM creation. Attempting to change it after
      creation will result in an error.
      Additional properties can be specified. For example - in the context of VM
      template creation if "override_script" is set to "True" then the deployer
      can upload their own custom script.
    additionalProperties:
      type: string
    x-ntnx-one-of:
      - required:
          - sysprep
      - required:
          - cloud_init
    properties:
      is_overridable:
        type: boolean
        description: Flag to allow override of customization by deployer.
      sysprep:
        type: object
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will
          be generated using these key-value pairs.
        x-ntnx-one-of:
          - required:
              - unattend_xml
          - required:
              - custom_key_values
        properties:
          install_type:
            description: >
              Whether the guest will be freshly installed using this unattend
              configuration, or whether this unattend configuration will be
              applied to a pre-prepared image. Default is "PREPARED".
            type: string
            default: PREPARED
            x-ntnx-enum:
              - FRESH
              - PREPARED
          unattend_xml:
            description: >
              This field contains a Sysprep unattend xml definition, as a
              string. The value must be base64 encoded.
            type: string
          custom_key_values:
            $ref: "#/definitions/custom_generic_key_value_pair"
      cloud_init:
        type: object
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated
          using these key-value pairs.
        x-ntnx-one-of:
          - required:
              - user_data
          - required:
              - custom_key_values
        properties:
          meta_data:
            description: >
              The contents of the meta_data configuration for cloud-init. This
              can be formatted as YAML or JSON. The value must be base64
              encoded.
            type: string
          user_data:
            description: >
              The contents of the user_data configuration for cloud-init. This
              can be formatted as YAML, JSON, or could be a shell script. The
              value must be base64 encoded.
            type: string
          custom_key_values:
            $ref: "#/definitions/custom_generic_key_value_pair"

  custom_generic_key_value_pair:
    title: Generic key value pair
    description: Generic key value pair used for custom attributes
    type: object
    additionalProperties:
      type: string
  volume_group:
    type: object
    title: Volume group object
    description: Volume group input spec.
    required:
    - resources
    - name
    properties:
      name:
        type: string
        description: Volume group name.
        maxLength: 64
      description:
        type: string
        description: Volume group description.
        maxLength: 1000
      resources:
        $ref: "#/definitions/volume_group_resources_input"
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  volume_group_def_status:
    type: object
    title: Volume group configuration
    description: Volume group configuration.
    required:
    - resources
    - name
    properties:
      name:
        type: string
        description: Volume group name.
      description:
        type: string
        description: Volume group description.
      resources:
        $ref: "#/definitions/volume_group_resources_output"
      state:
        description: The state of the volume group entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  volume_group_resources_input:
    type: object
    title: Volume group resources
    description: Volume group resources.
    properties:
      parent_reference:
        description: Reference to an entity to clone from.
        $ref: "#/definitions/reference"
      target_secret:
        description: Target Secret in case of CHAP authentication.
        type: string
      load_balance_vm_attachments:
        type: boolean
        description: Whether to enable volume group load balancing.
      sharing_status:
        description: >
          Whether the volume group can be shared across multiple
          iSCSI initiators.
        type: string
        x-ntnx-enum:
         - SHARED
         - NOT_SHARED
      iscsi_target_prefix:
        type: string
        maxLength: 512
        description: iSCSI target prefix-name.
      disk_list:
        type: array
        description: Volume group disk specification.
        items:
          $ref: "#/definitions/volume_disk_resource_input"
      attachment_list:
        type: array
        description: VMs attached to volume group.
        items:
          $ref: "#/definitions/attachment_reference_input"
      flash_mode:
        description: >
          Flash Mode, if enabled all volume disks of the VG will be pinned to
          SSD tier.
        type: string
        x-ntnx-enum:
         - ENABLED
         - DISABLED

  volume_group_resources_output:
    type: object
    title: Volume group resources
    description: Volume group resources.
    properties:
      enabled_authentications:
        description: Which authentication is enabled for VG.
        type: string
        x-ntnx-enum:
          - CHAP
          - NONE
      load_balance_vm_attachments:
        type: boolean
        description: Whether volume group load balancing is enabled.
      sharing_status:
        description: >
          Whether the volume group can be shared across multiple
          iSCSI initiators.
        type: string
        x-ntnx-enum:
         - SHARED
         - NOT_SHARED
      iscsi_target_prefix:
        type: string
        description: iSCSI target prefix-name.
      iscsi_target_name:
        type: string
        description: iSCSI target full name
      size_mib:
        type: integer
        format: int64
        description: The total size of the Volume Group in mib
      size_bytes:
        type: integer
        format: int64
        description: The total size of the Volume Group in bytes
      disk_list:
        type: array
        description: Volume group disk specification.
        items:
          $ref: "#/definitions/volume_disk_resource_output"
      attachment_list:
        type: array
        description: VMs attached to volume group.
        items:
          $ref: "#/definitions/attachment_reference_output"
      flash_mode:
        description: >
          Flash Mode, if enabled all volume disks of the VG will be pinned to
          SSD tier.
        type: string
        x-ntnx-enum:
         - ENABLED
         - DISABLED

  volume_disk_resource_input:
    type: object
    title: Volume disk configuration
    description: Volume disk configuration.
    properties:
      index:
        type: integer
        description: Index of the volume disk in the group.
        minimum: 0
        maximum: 16383
      disk_size_mib:
        type: integer
        format: int64
        description: Size of the disk in MiB.
      disk_size_bytes:
        type: integer
        format: int64
        description: Size of the disk in Bytes.
      data_source_reference:
        $ref: '#/definitions/reference'
        description: >
          An existing disk or image to clone for the contents of this disk.
      storage_container_uuid:
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
        description: Storage container UUID on which to create the disk.

  volume_disk_resource_output:
    type: object
    title: Volume disk configuration
    description: Volume disk configuration.
    properties:
      uuid:
        description: >
          The device ID which is used to uniquely identify this particular
          disk.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      index:
        type: integer
        description: Index of the volume disk in the group.
      disk_size_mib:
        type: integer
        format: int64
        description: Size of the disk in MiB.
      disk_size_bytes:
        type: integer
        format: int64
        description: Size of the disk in Bytes.
      storage_container_uuid:
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
        description: Storage container UUID on which the disk has been created.

  attachment_reference_input:
    type: object
    title: Attached iSCSI initiators
    description: Attached iSCSI initiators.
    x-ntnx-one-of:
      - required:
        - vm_reference
      - required:
        - iscsi_initiator_name
      - required:
        - iscsi_initiator_network_id
    properties:
      vm_reference:
        $ref: '#/definitions/vm_reference'
      iscsi_initiator_name:
        type: string
        maxLength: 64
        description: >
          Name of the iSCSI initiator of the workload outside Nutanix cluster.
      iscsi_initiator_network_id:
        type: string
        description: Ip address of the external client.
      client_secret:
        type: string
        description: Client secret for CHAP authentication.

  attachment_reference_output:
    type: object
    title: Attached iSCSI initiators
    description: Attached iSCSI initiators.
    x-ntnx-one-of:
      - required:
        - vm_reference
      - required:
        - iscsi_initiator_name
      - required:
        - iscsi_initiator_network_id
    properties:
      vm_reference:
        $ref: '#/definitions/vm_reference'
      iscsi_initiator_name:
        type: string
        description: >
          Name of the iSCSI initiator of the workload outside Nutanix cluster.
      iscsi_initiator_network_id:
        type: string
        format: ipv4
        description: Ip address of the external client.
  virtual_network:
    title: Virtual network spec
    description: Virtual network input spec
    required:
      - name
    properties:
      name:
        type: string
        maxLength: 64
      description:
        type: string
        maxLength: 1000
      resources:
        $ref: "#/definitions/virtual_network_resources"

  virtual_network_def_status:
    title: Virtual network status
    description: Virtual network output status
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      resources:
        $ref: "#/definitions/virtual_network_resources_def_status"
      state:
        type: string
        description: The state of the virtual network.
      message_list:
        type: array
        description: >
          Any error messages for the virtual network, if in an error state.
        items:
          $ref: "#/definitions/message_resource"

  virtual_network_resources:
    title: Virtual network resources
    description: Virtual network resources
    type: object
    properties:
      common_domain_name_server_ip_list:
        description: List of domain name server IPs.
        type: array
        items:
          $ref: "#/definitions/address"
      vpn_config:
        description: >
          Per region providing secure connection from on-prem to Xi
          (Only supported on Xi)
        type: string
        x-ntnx-enum:
         - CONNECTED
         - DISCONNECTED
      availability_zone_reference_list:
        description: >
          List of availability zones in Xi from which resources
          are derived (Only supported on Xi)
        type: array
        items:
          $ref: "#/definitions/availability_zone_reference"

  virtual_network_resources_def_status:
    title: Virtual network resources status
    description: Virtual network resources status
    type: object
    properties:
      common_domain_name_server_ip_list:
        description: List of domain name server IPs.
        type: array
        items:
          $ref: "#/definitions/address"
      vpn_config:
        description: >
          Per region providing secure connection from on-prem to Xi
          (Only supported on Xi)
        type: string
        x-ntnx-enum:
         - CONNECTED
         - DISCONNECTED
      availability_zone_reference_list:
        description: >
          List of availability zones in Xi from which resources
          are derived (Only supported on Xi)
        type: array
        items:
          $ref: "#/definitions/availability_zone_reference"
      nat_ip_list:
        description: List of IP addresses used for SNAT.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
  subnet_resources_def_status:
    type: object
    title: Subnet creation/modification status
    description: Subnet creation/modification status.
    properties:
      subnet_type:
        type: string
        x-ntnx-enum:
         - VLAN
         - OVERLAY
      vlan_id:
        type: integer
        format: int32
      ip_config:
        $ref: "#/definitions/ip_config"
      vswitch_name:
        type: string
      network_function_chain_reference:
        $ref: "#/definitions/network_function_chain_reference"
      virtual_network_reference:
        description: >
          The virtual network this subnet belongs to (Only supported on Xi).
        $ref: "#/definitions/virtual_network_reference"
      availability_zone_reference_list:
        description: >
          List of availability zones from which resources are derived
          (Only supported on Xi).
        type: array
        items:
          $ref: "#/definitions/availability_zone_reference"
      external_connectivity_state:
        description: External connectivity state (Only supported on Xi)
        type: string
        x-ntnx-enum:
         - ENABLED
         - DISABLED

  subnet_resources:
    type: object
    title: Subnet creation/modification spec
    description: Subnet creation/modification spec.
    required:
      - subnet_type
    properties:
      subnet_type:
        type: string
        x-ntnx-enum:
         - VLAN
         - OVERLAY
      vlan_id:
        type: integer
        format: int32
        minimum: 0
      ip_config:
        $ref: "#/definitions/ip_config"
      vswitch_name:
        type: string
        maxLength: 64
      network_function_chain_reference:
        $ref: "#/definitions/network_function_chain_reference"
      virtual_network_reference:
        description: >
          The virtual network this subnet belongs to (Only supported on Xi).
        $ref: "#/definitions/virtual_network_reference"
      availability_zone_reference_list:
        description: >
          List of availability zones from which resources are derived
          (Only supported on Xi).
        type: array
        items:
          $ref: "#/definitions/availability_zone_reference"
      external_connectivity_state:
        description: External connectivity state (Only supported on Xi)
        type: string
        x-ntnx-enum:
         - ENABLED
         - DISABLED

  ip_config:
    type: object
    title: IP config
    description: IP config.
    properties:
      subnet_ip:
        description: Subnet IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      prefix_length:
        type: integer
        format: int32
      default_gateway_ip:
        description: Default gateway IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      dhcp_options:
        $ref: "#/definitions/dhcp_options"
      dhcp_server_address:
        $ref: "#/definitions/address"
      pool_list:
        type: array
        items:
          $ref: "#/definitions/ip_pool"

  dhcp_options:
    type: object
    title: DHCP options
    description: Spec for defining DHCP options.
    properties:
      boot_file_name:
        type: string
      domain_name:
        type: string
      domain_name_server_list:
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      domain_search_list:
        type: array
        items:
          type: string
      tftp_server_name:
        type: string

  ip_pool:
    type: object
    title: IP pool
    description: IP pool.
    properties:
      range:
        description: >
          Range of IPs (example: 10.0.0.9 10.0.0.19).
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
  vpn_connection_resources:
    type: object
    title: VPN connection creation/modification spec
    description: VPN connection creation/modification spec.
    required:
      - local_gateway_reference
      - remote_gateway_reference
      - ipsec_config
      - local_gateway_role
    properties:
      local_gateway_reference:
        description: The local VPN gateway reference.
        $ref: '#/definitions/vpn_gateway_reference'
      remote_gateway_reference:
        description: The remote VPN gateway reference.
        $ref: '#/definitions/vpn_gateway_reference'
      ipsec_config:
        $ref: "#/definitions/ipsec_config"
      local_gateway_role:
        description: >
          Local gateway role (acceptor or initiator) in the connection.
        type: string
        x-ntnx-enum:
          - INITIATOR
          - ACCEPTOR

  vpn_connection_resources_def_status:
    type: object
    title: VPN connection creation/modification status
    description: VPN connection creation/modification status.
    properties:
      local_gateway_reference:
        description: The local VPN gateway reference.
        $ref: '#/definitions/vpn_gateway_reference'
      remote_gateway_reference:
        description: The remote VPN gateway reference.
        $ref: '#/definitions/vpn_gateway_reference'
      ipsec_config:
        $ref: "#/definitions/ipsec_config_status"
      local_gateway_role:
        description: >
          Local gateway role (acceptor or initiator) in the connection.
        type: string
        x-ntnx-enum:
          - INITIATOR
          - ACCEPTOR
      ipsec_tunnel_status:
        description: IPSec tunnel status of this connection.
        $ref: "#/definitions/vpn_component_status"
      ebgp_status:
        description: eBGP status of this connection.
        $ref: "#/definitions/vpn_component_status"
      peer_route_prefix_list:
        type: array
        description: IP prefixes learned from the remote gateway over eBGP.
        items:
          $ref: "#/definitions/ip_subnet_status"
      local_route_prefix_list:
        type: array
        description: IP prefixes advertised to the remote gateway over eBGP.
        items:
          $ref: "#/definitions/ip_subnet_status"

  ipsec_config:
    type: object
    title: IPSEC related configuration spec for the VPN connection
    description: IPSEC related configuration spec for the VPN connections.
    properties:
      pre_shared_key:
        description: Shared secret for authentication between gateway peers.
        type: string
        format: password
      local_vti_ip:
        description: Virtual tunnel interface IP of the local VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      remote_vti_ip:
        description: Virtual tunnel interface IP of the remote VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      vti_ip_prefix_length:
        description: IP prefix length of the virtual tunnel interface.
        type: integer
        format: uint16
        minimum: 0
        maximum: 32
      encryption_algorithm:
        description: Encryption algorithm used in IPSEC/IKE.
        type: string
        x-ntnx-enum:
          - AES_256
      authentication_algorithm:
        description: Authentication algorithm used in IPSEC/IKE.
        type: string
        x-ntnx-enum:
          - SHA_256

  ipsec_config_status:
    type: object
    title: IPSEC related configuration status for the VPN connection
    description: IPSEC related configuration status for the VPN connections.
    properties:
      pre_shared_key:
        description: Shared secret for authentication between gateway peers.
        type: string
        format: password
      local_vti_ip:
        description: Virtual tunnel interface IP of the local VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      remote_vti_ip:
        description: Virtual tunnel interface IP of the remote VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      vti_ip_prefix_length:
        description: IP prefix length of the virtual tunnel interface.
        type: integer
      encryption_algorithm:
        description: Encryption algorithm used in IPSEC/IKE.
        type: string
        x-ntnx-enum:
          - AES_256
      authentication_algorithm:
        description: Authentication algorithm used in IPSEC/IKE.
        type: string
        x-ntnx-enum:
          - SHA_256

  vpn_component_status:
    type: object
    title: Object to capture status of various aspects of the VPN connection.
    description: >
      Object to capture status of various aspects of the VPN connection.
    properties:
      state:
        type: string
        x-ntnx-enum:
          - UP
          - DOWN
      detail:
        description: Detailed informational/error string in human-readable form.
        type: string
  vpn_gateway_resources:
    type: object
    title: VPN gateway creation/modification spec
    description: VPN gateway creation/modification spec.
    required:
      - gateway_type
    properties:
      gateway_type:
        description: Whether this is local or remote gateway entity.
        type: string
        x-ntnx-enum:
          - LOCAL
          - REMOTE
      virtual_network_reference:
        description: >
          The virtual network this gateway belongs to. Applies only to local
          gateway entities.
        $ref: "#/definitions/virtual_network_reference"
      public_ip:
        description: Public IP address of this gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ebgp_config:
        description: |
          External BGP configuration needed for this gateway to peer with remote
          gateway and exchange routes.
        $ref: "#/definitions/bgp_config"
      deployment:
        description: Deployment configuration for this gateway.
        $ref: "#/definitions/deployment"
      internal_routing_protocol_config:
        type: object
        description: |
          Describes the routing protocol configuration needed by this gateway to
          peer and learn routes from internal routers using either iBGP or OSFP.
        x-ntnx-one-of:
        - required:
          - ospf_config
        - required:
          - bgp_config
        properties:
          ospf_config:
            $ref: "#/definitions/ospf_config"
          bgp_config:
            $ref: "#/definitions/bgp_config"

  vpn_gateway_resources_def_status:
    type: object
    title: VPN gateway creation/modification status
    description: VPN gateway creation/modification status.
    properties:
      gateway_type:
        description: Whether this is local or remote gateway entity.
        type: string
        x-ntnx-enum:
          - LOCAL
          - REMOTE
      virtual_network_reference:
        description: >
          The virtual network this gateway belongs to. Applies only to local
          gateway entities.
        $ref: "#/definitions/virtual_network_reference"
      public_ip:
        description: Public IP address of this gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ebgp_config:
        description: |
          External BGP configuration needed for this gateway to peer with remote
          gateway and exchange routes.
        $ref: "#/definitions/bgp_config"
      deployment:
        description: Deployment configuration for this gateway.
        $ref: "#/definitions/deployment_status"
      internal_routing_protocol_config:
        type: object
        description: |
          Describes the routing protocol configuration needed by this gateway to
          peer and learn routes from internal routers using either iBGP or OSFP.
        properties:
          ospf_config:
            $ref: "#/definitions/ospf_config"
          bgp_config:
            $ref: "#/definitions/bgp_config_status"
      operational_status:
        description: Operational status of this gateway.
        $ref: "#/definitions/vpn_component_status"

  deployment:
    type: object
    title: Deployment related config for this gateway.
    description: Deployment related config for this gateway.
    properties:
      cluster_reference:
        description: The cluster to deploy the VPN gateway on.
        $ref: '#/definitions/cluster_reference'
      vlan_id:
        description: The network to deploy the VPN gateway on.
        type: integer
        format: uint16
        minimum: 0
        maximum: 4095
      static_ip:
        description: Static private IP address for the VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      default_gateway_ip:
        description: Default gateway IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ip_subnet:
        $ref: "#/definitions/ip_subnet"

  deployment_status:
    type: object
    title: Deployment related status for this gateway.
    description: Deployment related status for this gateway.
    properties:
      cluster_reference:
        description: The cluster to deploy the VPN gateway on.
        $ref: '#/definitions/cluster_reference'
      vlan_id:
        description: The network to deploy the VPN gateway on.
        type: integer
        format: uint16
      static_ip:
        description: Static private IP address for the VPN gateway.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      default_gateway_ip:
        description: Default gateway IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ip_subnet:
        $ref: "#/definitions/ip_subnet_status"
      vm_reference:
        description: >
          Reference to the deployed gateway VM. Applies only to local gateway
          entities.
        $ref: "#/definitions/vm_reference"

  bgp_config:
    type: object
    title: BGP config spec for route peering with other routers and gateways
    description: >
      BGP configuration spec for route peering with other routers and gateways.
    properties:
      router_id:
        description: BGP router id of this gateway.
        type: string
      asn:
        description: ASN used in BGP.
        $ref: "#/definitions/asn"
      peer_ip_list:
        type: array
        description: IP addresses of peers.
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      password:
        description: password for authentication.
        type: string
        format: password

  bgp_config_status:
    type: object
    title: BGP config status for route peering with other routers and gateways
    description: >
      BGP configuration status for route peering with other routers and
      gateways.
    properties:
      router_id:
        description: BGP router id of this gateway.
        type: string
      asn:
        description: ASN used in BGP.
        type: integer
        format: uint32
      peer_ip_list:
        type: array
        description: IP addresses of peers.
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      password:
        description: password for authentication.
        type: string
        format: password

  ospf_config:
    type: object
    title: OSPF configuration for route peering with internal routers.
    description: OSPF configuration for route peering with internal routers.
    properties:
      router_id:
        description: OSPF router id of this gateway.
        type: string
      area_id:
        description: OSPF area id of this gateway.
        type: string
      password_type:
        description: OSPF password type.
        type: string
        x-ntnx-enum:
          - PLAIN_TEXT
          - MD5
      password:
        description: password for authentication.
        type: string
        format: password
  routing_policy_resources_def_status:
    type: object
    title: Routing policy creation/modification status
    description: Routing policy creation/modification status.
    properties:
      virtual_network_reference:
        description: >
          The virtual network this routing policy belongs to.
        $ref: "#/definitions/virtual_network_reference"
      priority:
        type: integer
        format: int16
      source:
        description: >
         The source IP address of traffic that is entering the router.
        $ref: "#/definitions/network_address_status"
      destination:
        description: >
          The destination IP address of traffic that is entering the router.
        $ref: "#/definitions/network_address_status"
      protocol_type:
        description: >
          The IP protocol type of traffic that is entering the router.
        type: string
        x-ntnx-enum:
          - TCP
          - UDP
          - ICMP
          - PROTOCOL_NUMBER
      protocol_parameters:
        description: >
         IP protocol parameters of traffic entering the router.
        $ref: "#/definitions/protocol_parameters_status"
      action:
        description: >
         The action to be taken on traffic entering the router.
        $ref: "#/definitions/routing_policy_action_status"

  routing_policy_resources:
    type: object
    title: Routing Policy creation/modification spec
    description: "Routing Policy creation/modification spec.
      The routing policy matches incoming traffic on the router based
      on the following fields:
         'source', 'destination', 'protocol_type', 'protocol_parameters'.
      Once traffic matches the parameters defined in the policy
      'action' field defines the action that needs to be performed
      on the traffic. 'action' could be permit/deny/reroute."
    required:
      - priority
      - source
      - destination
      - protocol_type
      - action
    properties:
      virtual_network_reference:
        description: >
          The virtual network this routing policy belongs to.
        $ref: "#/definitions/virtual_network_reference"
      priority:
        type: integer
        format: int16
        minimum: 0
        maximum: 1000
      source:
        description: >
          Source of traffic that is entering the router.
        $ref: "#/definitions/network_address"
      destination:
        description: >
         Destination of traffic that is entering the router.
        $ref: "#/definitions/network_address"
      protocol_type:
        type: string
        x-ntnx-enum:
          - ALL
          - TCP
          - UDP
          - ICMP
          - PROTOCOL_NUMBER
      protocol_parameters:
        description: >
         The IP protocol type of traffic that is entering the router.
        $ref: "#/definitions/protocol_parameters"
      action:
        description: >
         The IP protocol type of traffic that is entering the router.
        $ref: "#/definitions/routing_policy_action"

  network_address:
    type: object
    title: Network address
    description: Address (source/destination) of an IP packet. >
      This could be either an ip prefix or a special category like "INTERNET".
    x-ntnx-one-of:
      - required:
        - address_type
      - required:
        - ip_subnet
    properties:
      address_type:
        type: string
        x-ntnx-enum:
         - ALL
         - INTERNET
      ip_subnet:
        $ref: "#/definitions/ip_subnet"

  network_address_status:
    type: object
    title: Network address
    description: Address (source/destination) of an IP packet. >
      This could be either an ip prefix or a special category like "INTERNET".
    x-ntnx-one-of:
      - required:
        - address_type
      - required:
        - ip_subnet
    properties:
      address_type:
        type: string
        x-ntnx-enum:
         - ALL
         - INTERNET
      ip_subnet:
        $ref: "#/definitions/ip_subnet_status"

  protocol_parameters:
    type: object
    title: IP protocol
    description: Routing policy IP protocol parameters
    x-ntnx-one-of:
      - required:
        - tcp
      - required:
        - udp
      - required:
        - icmp
      - required:
        - protocol_number
    properties:
      tcp:
        description: TCP parameters to be matched
        $ref: "#/definitions/tcp"
      udp:
        description: UDP parameters to be matched
        $ref: "#/definitions/udp"
      icmp:
        description: ICMP parameters to be matched
        $ref: "#/definitions/icmp"
      protocol_number:
        type: integer
        format: uint8
        minimum: 0
        maximum: 255

  protocol_parameters_status:
    type: object
    title: IP protocol
    description: Routing policy IP protocol parameters
    x-ntnx-one-of:
      - required:
        - tcp
      - required:
        - udp
      - required:
        - icmp
      - required:
        - protocol_number
    properties:
      tcp:
        description: TCP parameters to be matched
        $ref: "#/definitions/tcp"
      udp:
        description: UDP parameters to be matched
        $ref: "#/definitions/udp"
      icmp:
        description: ICMP parameters to be matched
        $ref: "#/definitions/icmp_status"
      protocol_number:
        type: integer
        format: uint8

  tcp:
    type: object
    title: TCP parameters
    description: TCP parameters to be matched in routing policy.
    properties:
      source_port_range:
        description: Range of TCP source ports
        $ref: "#/definitions/port_range"
      destination_port_range:
        description: Range of TCP destination ports
        $ref: "#/definitions/port_range"

  udp:
    type: object
    title: UDP parameters
    description: UDP parameters to be matched in routing policy
    properties:
      source_port_range:
        description: Range of UDP source ports
        $ref: "#/definitions/port_range"
      destination_port_range:
        description: Range of UDP destination ports
        $ref: "#/definitions/port_range"

  icmp:
    type: object
    title: ICMP parameters
    description: ICMP parameters to be matched in routing policy.
    properties:
      icmp_type:
        type: integer
        format: uint8
        minimum: 0
        maximum: 255
      icmp_code:
        type: integer
        format: uint8
        minimum: 0
        maximum: 255

  icmp_status:
    type: object
    title: ICMP parameters
    description: ICMP parameters to be matched in routing policy.
    properties:
      icmp_type:
        type: integer
        format: uint8
      icmp_code:
        type: integer
        format: uint8

  routing_policy_action:
    type: object
    title: Action
    description: Routing policy action
    required:
      - action
    properties:
      action:
        type: string
        x-ntnx-enum:
          - PERMIT
          - DENY
          - REROUTE
      service_ip_list:
        description: IP addresses of network services in the chain.>
         This field is valid only when action is REROUTE.
        type: array
        minimum: 0
        maximum: 1
        items:
          description: device IP address
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

  routing_policy_action_status:
    type: object
    title: Action
    description: Routing policy action
    required:
      - action
    properties:
      action:
        type: string
        x-ntnx-enum:
          - PERMIT
          - DENY
          - REROUTE
      service_ip_list:
        description: IP addresses of network services in the chain.>
         This field is valid only when action is REROUTE.
        type: array
        items:
          description: device IP address
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
  batch_request:
    type: object
    title: Batch request
    description: Request for batch operations.
    required:
    - api_request_list
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      api_request_list:
        description: A list of API requests in the batch.
        type: array
        items:
          $ref: '#/definitions/api_request'
      execution_order:
        description: |
          The order of execution of the APIs in the batch. Can be either
          Sequential (default value) or Parallel.
        type: string
        default: SEQUENTIAL
        x-ntnx-enum:
        - SEQUENTIAL
        - NON_SEQUENTIAL
      action_on_failure:
        description: |
          If the specified parameter is CONTINUE, the remaining APIs in the batch
          continue to be executed.
        type: string
        default: CONTINUE
        x-ntnx-enum:
        - CONTINUE
        - ABORT

  api_request:
    title: API request
    description: API request
    type: object
    required:
    - path_and_params
    - operation
    properties:
      path_and_params:
        description: |
          The part of the API request that contains information
          such as the path and query.
        type: string
      operation:
        description: The REST method to use.
        type: string
        x-ntnx-enum:
        - DELETE
        - GET
        - HEAD
        - PATCH
        - POST
        - PUT
      body:
        description: The API request specification.
        type: object
        additionalProperties:
          type: object

  batch_response:
    type: object
    title: Batch api success response
    description: List of responses for the API requests in the batch.
    properties:
      api_response_list:
        type: array
        items:
          $ref: '#/definitions/api_response'

  api_response:
    title: API response
    description: API Response
    type: object
    required:
    - path_and_params
    - api_response
    - status
    properties:
      status:
        type: string
      path_and_params:
        type: string
        description: |
          The part of API response that contains information such as the path
          and query.
      api_response:
        type: object
        additionalProperties:
          type: object
  graphql_query:
    type: object
    title: Graphql query.
    description: Graphql query.
    required:
    - query
    properties:
      query:
        type: string
  graphql_response:
    type: object
    title: Graphql api success response.
    description: Graphql api success response.
    properties:
      data:
        type: object
        additionalProperties:
          type: object





  cluster_config_spec:
    type: object
    title: Cluster Configuration
    description: Cluster Configuration.
    properties:
      external_configurations:
        description:  "External Connector Configurations."
        $ref: "#/definitions/external_configurations_spec"
      timezone:
        description: Zone name used in value of TZ environment variable.
        type: string
      enabled_feature_list:
        description: Array of enabled features.
        type: array
        items:
          type: string
          x-ntnx-enum:
          - LOCK_DOWN_ENABLED
          - PASSWORD_REMOTE_LOGIN_ENABLED
          - SHADOW_CLONES_ENABLED
          - COMMON_CRITERIA_MODE_ENABLED
          - SSP_CONFIGURED
          - ACS_ENABLED
          - NETWORK_FLOW_STATS_COLLECTOR_ENABLED
      gpu_driver_version:
        description: GPU driver version.
        type: string
      authorized_public_key_list:
        description: List of valid ssh keys for the cluster.
        type: array
        items:
          $ref: '#/definitions/public_key'
      supported_information_verbosity:
        description: |
          Verbosity level settings for populating support information.
          - 'Nothing': Send nothing
          - 'Basic': Send basic information - skip core dump and hypervisor
                     stats information
          - 'BasicPlusCoreDump': Send basic and core dump information
          - 'All': Send all information
        type: string
        default: BASIC_PLUS_CORE_DUMP
        x-ntnx-enum:
        - NOTHING
        - BASIC
        - BASIC_PLUS_CORE_DUMP
        - ALL
      redundancy_factor:
        description: Cluster supported redundancy factor. Default is 2.
        type: integer
        format: int32
      encryption_status:
        $ref: '#/definitions/encryption_status'
      client_auth:
        $ref: '#/definitions/client_auth'
      certification_signing_info:
        $ref: '#/definitions/certification_signing_info'
      software_map:
        type: object
        description: |
          Map of software on the cluster with software type as the
          key.
        additionalProperties:
          $ref: '#/definitions/cluster_software'
      operation_mode:
        $ref: '#/definitions/cluster_operation_mode'
      domain_awareness_level:
        description: Domain awareness supported on cluster.
        type: string
        default: NODE
        x-ntnx-enum:
        - NODE
        - BLOCK
        - RACK

  cluster_config:
    type: object
    title: Cluster Configuration
    description: Cluster Configuration.
    properties:
      external_configurations:
        description:  "External Connector Configurations."
        $ref: "#/definitions/external_configurations"
      build:
        $ref: '#/definitions/build_info'
        readOnly: true
      service_list:
        $ref: '#/definitions/cluster_service_list'
        readOnly: true
      timezone:
        description: Zone name used in value of TZ environment variable.
        type: string
      enabled_feature_list:
        description: Array of enabled features.
        type: array
        items:
          type: string
          x-ntnx-enum:
          - LOCK_DOWN_ENABLED
          - PASSWORD_REMOTE_LOGIN_ENABLED
          - SHADOW_CLONES_ENABLED
          - COMMON_CRITERIA_MODE_ENABLED
          - SSP_CONFIGURED
          - ACS_ENABLED
          - NETWORK_FLOW_STATS_COLLECTOR_ENABLED
      gpu_driver_version:
        description: GPU driver version.
        type: string
      authorized_public_key_list:
        description: List of valid ssh keys for the cluster.
        type: array
        items:
          $ref: '#/definitions/public_key'
      supported_information_verbosity:
        description: |
          Verbosity level settings for populating support information.
          - 'Nothing': Send nothing
          - 'Basic': Send basic information - skip core dump and hypervisor
                     stats information
          - 'BasicPlusCoreDump': Send basic and core dump information
          - 'All': Send all information
        type: string
        default: BASIC_PLUS_CORE_DUMP
        x-ntnx-enum:
        - NOTHING
        - BASIC
        - BASIC_PLUS_CORE_DUMP
        - ALL
      redundancy_factor:
        description: Cluster supported redundancy factor.
        type: integer
        format: int32
      encryption_status:
        $ref: '#/definitions/encryption_status'
      client_auth:
        $ref: '#/definitions/client_auth'
      ca_certificate_list:
        description: List of cluster trusted CA certificates.
        type: array
        items:
          $ref: '#/definitions/ca_cert'
        readOnly: true
      certification_signing_info:
        $ref: '#/definitions/certification_signing_info'
      ssl_key:
        $ref: '#/definitions/ssl_key'
        readOnly: true
      software_map:
        type: object
        description: |
          Map of software on the cluster with software type as the
          key.
        additionalProperties:
          $ref: '#/definitions/cluster_software'
      cluster_arch:
        description: Cluster architecture.
        type: string
        x-ntnx-enum:
        - X86_64
        - PPC64LE
        readOnly: true
      is_available:
        description: Indicates if cluster is available to contact.
        type: boolean
        readOnly: true
      operation_mode:
        $ref: '#/definitions/cluster_operation_mode'
      management_server_list:
        description: List of cluster management servers.
        type: array
        items:
          $ref: '#/definitions/cluster_management_server'
        readOnly: true
      domain_awareness_level:
        description: Domain awareness supported on cluster.
        type: string
        default: NODE
        x-ntnx-enum:
        - NODE
        - BLOCK
        - RACK

  cluster_software:
    title: Cluster software
    description: Cluster software.
    required:
    - software_type
    - version
    properties:
      software_type:
        $ref: '#/definitions/software_type'
      version:
        type: string
      status:
        description: Current software status.
        type: string
        default: INSTALLED
        x-ntnx-enum:
        - INSTALLED
        - UPGRADING
        - DOWNLOADED

  build_info:
    title: Cluster build details
    description: Cluster build details.
    type: object
    required:
    - build_type
    - version
    - commit_id
    - short_commit_id
    properties:
      build_type:
        description: Build type, one of {dbg, opt, release}.
        type: string
      version:
        description: Numeric version. e.g. "5.5"
        type: string
      full_version:
        description: Full version name.
        type: string
      commit_id:
        description: Last Git commit id which the build is based on.
        type: string
      short_commit_id:
        description: First 6 characters of the last Git commit id.
        type: string
      commit_date:
        description: Date/time of the last commit.
        type: string
        format: date-time

  encryption_status:
    title: Cluster encryption status
    description: Cluster encryption status.
    type: string
    default: NOT_SUPPORTED
    x-ntnx-enum:
    - NOT_SUPPORTED
    - DISABLED
    - ENABLED

  client_auth:
    title: Client authentication config
    description: Client authentication config.
    type: object
    required:
    - status
    properties:
      status:
        description: Status of client authentication.
        type: string
        default: DISABLED
        x-ntnx-enum:
        - ENABLED
        - DISABLED
      name:
        description: Name of CA chain file.
        type: string
        maxLength: 64
        readOnly: true
      ca_chain:
        description: Content of CA chain certificate.
        type: string
        format: byte
        readOnly: true

  ca_cert:
    title: CA certificate info
    description: CA certificate info.
    type: object
    required:
    - ca_name
    - certificate
    properties:
      ca_name:
        description: Name of the certificate authority.
        type: string
      certificate:
        description: Certificate content.
        type: string
        format: byte

  certification_signing_info:
    title: Customer information in Certificate Signing Request
    description: |
      Customer information used in Certificate Signing Request for
      creating digital certificates.
    type: object
    properties:
      country_code:
        description: |
          Two-letter ISO code for Country where customer's organization is
          located.
        type: string
      state:
        description: |
          The Province, Region, County or State where customer business is
          is located.
        type: string
      city:
        description: The Town or City where customer's business is located.
        type: string
      organization:
        description: Name of the customer business.
        type: string
      email_address:
        description: Email address of the certificate administrator.
        type: string
      common_name_suffix:
        description: |
          Common name is by default <node_uuid>.nutanix.com, but if a customer
          wants something instead of nutanix.com they can specify it here.
        type: string
      common_name:
        description: Common name of the organization or host server
        type: string

  ssl_key:
    title: SSL certificate
    description: SSL certificate.
    type: object
    required:
    - key_type
    properties:
      key_name:
        type: string
      key_type:
        $ref: '#/definitions/ssl_key_type'
      signing_info:
         $ref: '#/definitions/certification_signing_info'
      expire_datetime:
        description: UTC date and time in RFC-3339 format when the key expires
        format: date-time
        type: string

  ssl_key_type:
    title: SSL key type
    description: |
      SSL key type. Key types with RSA_2048, ECDSA_256 and ECDSA_384 are
      supported for key generation and importing.
    type: string
    x-ntnx-enum:
    - RSA_2048
    - ECDSA_256
    - ECDSA_384
    - JKS
    - PKCS12
    - RSA_PUBLIC
    - KRB_KEYTAB
    - NONE

  cluster_service_list:
    title: List of Cluster Services
    description: |
      Array of enabled cluster services. For example, a cluster can function
      as both AOS and cloud data gateway.
      - 'AOS': Regular Prism Element
      - 'PRISM_CENTRAL': Prism Central
      - 'CLOUD_DATA_GATEWAY': Cloud backup and DR gateway
      - 'AFS': Cluster for file server
      - 'WITNESS' : Witness cluster
      - 'XI_PORTAL': Xi cluster
      - 'ONE_NODE_CLUSTER': Single node backup cluster
      - 'TWO_NODE_CLUSTER': Two node cluster
    type: array
    items:
      type: string
      default: AOS
      x-ntnx-enum:
      - AOS
      - PRISM_CENTRAL
      - CLOUD_DATA_GATEWAY
      - AFS
      - WITNESS
      - XI_PORTAL
      - ONE_NODE
      - TWO_NODE

  cluster_operation_mode:
    title: Cluster operation mode
    description: >
      Cluster operation mode.
      - 'NORMAL': Cluster is operating normally.
      - 'READ_ONLY': Cluster is operating in read only mode.
      - 'STAND_ALONE': Only one node is operational in the cluster. This is
                       valid only for single node or two node clusters.
      - 'SWITCH_TO_TWO_NODE': Cluster is moving from single node to two node
                              cluster.
      - 'OVERRIDE': Valid only for single node cluster. If the user wants to
                    run vms on a single node cluster in read only mode, he
                    can set the cluster peration mode to override. Writes
                    will be allowed in override mode.
    type: string
    x-ntnx-enum:
    - NORMAL
    - READ_ONLY
    - STAND_ALONE
    - SWITCH_TO_TWO_NODE
    - OVERRIDE

  external_configurations:
    type: object
    title: External Connector Configurations.
    description: External configurations for the connectors.
    properties:
      citrix_connector_config:
        $ref: "#/definitions/citrix_connector_config_details"

  external_configurations_spec:
    type: object
    title: External Connector Configurations.
    description: External configurations for the connectors.
    properties:
      citrix_connector_config:
        $ref: "#/definitions/citrix_connector_config_details_spec"

  citrix_resource_location:
    type: object
    title: Citrix Resource Location.
    description: Resource Location on Citrix Cloud.
    properties:
      id:
        description: The resource location id.
        type: string
      name:
        description: The resource location name.
        type: string

  citrix_connector_config_details:
    type: object
    title: Citrix Connector details.
    description: Citrix Connector details.
    properties:
      client_id:
        description: The client id for the Citrix Cloud.
        type: string
      client_secret:
        description: The client secret for the Citrix Cloud.
        type: string
      customer_id:
        description: The customer id registered with Citrix Cloud.
        type: string
      resource_location:
        $ref: '#/definitions/citrix_resource_location'
      citrix_vm_reference_list:
        description: Reference to the list of vm ids registered with citrix cloud.
        type: array
        items:
          $ref: '#/definitions/vm_reference'

  citrix_resource_location_spec:
    type: object
    title: Citrix Resource Location.
    description: Resource Location on Citrix Cloud.
    properties:
      id:
        description: The resource location id.
        type: string
        maxLength: 200
      name:
        description: The resource location name.
        type: string
        maxLength: 200

  citrix_connector_config_details_spec:
    type: object
    title: Citrix Connector details.
    description: Citrix Connector details.
    properties:
      client_id:
        description: The client id for the Citrix Cloud.
        type: string
        maxLength: 200
      client_secret:
        description: The client secret for the Citrix Cloud.
        type: string
      customer_id:
        description: The customer id registered with Citrix Cloud.
        type: string
        maxLength: 200
      resource_location:
        $ref: '#/definitions/citrix_resource_location_spec'
      citrix_vm_reference_list:
        description: Reference to the list of vm ids registered with citrix cloud.
        type: array
        items:
          $ref: '#/definitions/vm_reference'

  cluster_management_server:
    type: object
    title: Cluster Management Server
    description: Cluster Management server information.
    required:
      - ip
      - type
    properties:
      ip:
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      type:
        type: string
        x-ntnx-enum:
        - VCENTER
      drs_enabled:
        description: Denotes if DRS is enabled or not.
        type: boolean
      status_list:
        description: >
          Array of management server status:
          - 'REGISTERED': Indicates whether the server is registered with
                          Nutanix or not.
          - 'IN_USE': Indicates whether any host is managed by this server or
                      not.
        type: array
        items:
          type: string
          x-ntnx-enum:
          - REGISTERED
          - IN_USE
  cluster_nodes:
    type: object
    title: Cluster Nodes
    description: Node info for this cluster.
    properties:
      hypervisor_server_list:
        type: array
        items:
          $ref: '#/definitions/hypervisor_server'
        readOnly: true

  hypervisor_server:
    type: object
    title: Hypervisor Server
    description: Hypervisor server information.
    required:
      - ip
    properties:
      ip:
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      type:
        type: string
        x-ntnx-enum:
        - VMWARE
        - XEN
        - AHV
        - HYPERV
      version:
        type: string
  cluster_network:
    type: object
    title: Cluster Network Configuration
    description: Cluster network.
    properties:
      external_ip:
        description: The local IP of cluster visible externally.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      external_data_services_ip:
        description: |
          The cluster IP address that provides external entities access to
          various cluster data services.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      external_subnet:
        description: |
          External subnet for cross server communication. The format is
          IP/netmask.
        type: string
        default: 172.16.0.0/255.240.0.0
      internal_subnet:
        description: |
          The internal subnet is local to every server - its not visible
          outside.iSCSI requests generated internally within the appliance
          (by user VMs or VMFS) are sent to the internal subnet. The format is
          IP/netmask.
        type: string
        default: 192.168.5.0/255.255.255.0
      masquerading_ip:
        description: |
          The cluster NAT'd or proxy IP which maps to the cluster local IP.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      masquerading_port:
        description: |
          Port used together with masquerading_ip to connect to the cluster.
        type: integer
        format: int32
      domain_server:
        $ref: '#/definitions/cluster_domain_server'
      nfs_subnet_whitelist:
        description: |
          Comma separated list of subnets (of the form 'a.b.c.d/l.m.n.o') that
          are allowed to send NFS requests to this container. If not specified,
          the global NFS whitelist will be looked up for access permission.
          The internal subnet is always automatically considered part of the
          whitelist, even if the field below does not explicitly specify it.
          Similarly, all the hypervisor IPs are considered part of the
          whitelist. Finally, to permit debugging, all of the SVMs local IPs
          are considered to be implicitly part of the whitelist.
        type: array
        items:
          type: string
      name_server_ip_list:
        description: The list of IP addresses of the name servers.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      ntp_server_ip_list:
        description: The list of IP addresses or FQDNs of the NTP servers.
        type: array
        items:
          type: string
      http_proxy_list:
        description: List of proxies to connect to the service centers.
        type: array
        items:
          $ref: '#/definitions/cluster_network_entity'
      smtp_server:
        $ref: '#/definitions/smtp_server'
      http_proxy_whitelist:
        description: HTTP proxy whitelist.
        type: array
        items:
          $ref: '#/definitions/http_proxy_whitelist'
      default_vswitch_config:
        description: |
          Configuration for the default vswitch (br0) present on all nodes of
          this cluster.
        $ref: '#/definitions/vswitch_config'

  cluster_domain_server:
    title: Domain Server
    type: object
    description: |
      Cluster domain server. Only applied to the cluster with all Hyper-V hosts.
    required:
    - name
    properties:
      name:
        description: |
          Joined domain name. In 'put' request, empty name will unjoin the
          cluster from current domain.
        type: string
      nameserver:
        description: |
          The IP of the nameserver that can resolve the domain name. Must set
          when joining the domain.
        type: string
      domain_credentials:
        $ref: '#/definitions/credentials'

  cluster_network_entity:
    type: object
    title: Cluster Network Entity
    description: Cluster network entity.
    required:
    - address
    properties:
      address:
        $ref: '#/definitions/address'
      credentials:
        $ref: '#/definitions/credentials'
      proxy_type_list:
        type: array
        items:
          type: string
          default: HTTP
          x-ntnx-enum:
          - HTTP
          - HTTPS
          - SOCKS

  smtp_server:
    type: object
    title: SMTP server
    description: SMTP Server.
    required:
    - email_address
    - server
    properties:
      email_address:
        type: string
      server:
        $ref: '#/definitions/cluster_network_entity'
      type:
        type: string
        default: PLAIN
        x-ntnx-enum:
        - PLAIN
        - STARTTLS
        - SSL

  http_proxy_whitelist:
    type: object
    title: HTTP Proxy Whitelist
    description: HTTP Proxy Whitelist.
    required:
    - target
    - target_type
    properties:
      target:
        type: string
      target_type:
        type: string
        x-ntnx-enum:
        - IPV4_ADDRESS
        - IPV4_NETWORK_MASK
        - DOMAIN_NAME_SUFFIX
        - HOST_NAME

  vswitch_config:
    type: object
    title: VSwitch configuration
    description: VSwitch configuration.
    required:
    - nic_teaming_policy
    - uplink_grouping
    properties:
      nic_teaming_policy:
        description: NIC teaming policy.
        type: string
        x-ntnx-enum:
         - ACTIVE_BACKUP
         - BALANCE_SLB
         - BALANCE_TCP
      uplink_grouping:
        description:
          Determines how the ethernet uplinks are selected for this vswitch.
        type: string
        x-ntnx-enum:
         - NO_UPLINKS
         - ALL
         - ALL_1G
         - ALL_10G
         - ALL_25G
         - ALL_40G
         - ALL_100G
  cloud_credentials_resources:
    title: Cloud Credentials resources
    description: Cloud credentials resources
    type: object
    required:
    - cloud_type
    properties:
      is_default:
        description: Indicates if it is the default credentials
        type: boolean
      cloud_type:
        $ref: '#/definitions/cloud_type'
      key_id:
        description: Access key for AWS, or subscription id for Azure
        type: string
      secure_id:
        description: >
          Secret access key for AWS, or full file path of the Azure client
          certificate file(<file_name>.pem)
        type: string

  cloud_credentials:
    title: Cloud Credentials Spec
    description: Cloud credentials spec
    type: object
    required:
    - name
    - resources
    properties:
      name:
        description: User friendly name for the credentials.
        type: string
        maxLength: 64
      resources:
         $ref: '#/definitions/cloud_credentials_resources'

  cloud_credentials_def_status:
    title: Cloud credentials Configuration
    description: Cloud credentials configuration
    type: object
    required:
    - id
    - name
    - resources
    properties:
      id:
        description: ID to uniquely identify cloud credentials
        type: integer
        format: int64
      name:
        description: Credentials name.
        type: string
      state:
        description: The state of the entity.
        readOnly: true
        type: string
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/cloud_credentials_resources'
  ca_chain_spec:
    title: CA chain spec
    description: CA chain spec
    type: object
    required:
    - name
    - ca_chain
    properties:
      name:
        description: The name of the CA Chain file
        type: string
        maxLength: 64
      ca_chain:
        description: Content of CA chain
        type: string
        format: byte

  certificate_spec_upload_input:
    title: Input spec for certificate upload
    description: Input spec for certificate upload.
    type: object
    required:
    - spec_list
    properties:
      spec_list:
        description: List of certificate specs
        type: array
        items:
          $ref: '#/definitions/certificate_spec'

  certificate:
    title: Certificate content
    description: Certificate content
    type: object
    required:
    - content
    properties:
      content:
        description: Certificate content
        type: string
        format: byte

  certificate_spec:
    title: Certificate info
    description: Certificate info
    type: object
    required:
    - certificate
    properties:
      name:
        description: Certificate file name
        type: string
        maxLength: 64
      certificate:
        description: Certificate content
        type: string
        format: byte

  csrs_spec:
    title: Spec for CSRs download
    description: |
      Spec for CSRs download. If node UUID list is empty, all cluster nodes will
      be assumed.
    type: object
    properties:
      node_uuid_list:
        type: array
        items:
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  pemkey_spec:
    type: object
    title: SSL key
    description: SSL key
    required:
    - type
    - key
    - cert
    properties:
      name:
        type: string
        maxLength: 64
      type:
        $ref: '#/definitions/ssl_key_type'
      key:
        type: string
        format: byte
      cert:
        type: string
        format: byte
      ca_chain:
        type: string
        format: byte



  multicluster_config_intent_input:
    type: object
    title: Multicluster config intent input
    description: An intentful representation of a multicluster config spec.
    required:
     - api_version
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/multicluster_config_metadata'
      spec:
        $ref: '#/definitions/multicluster_config_spec'

  multicluster_config_intent_response:
    type: object
    title: Multicluster config intent response
    description: An intentful representation of a multicluster config response.
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/multicluster_config_metadata'
      spec:
        $ref: '#/definitions/multicluster_config_spec'
      status:
        $ref: '#/definitions/multicluster_config_def_status'

  multicluster_config_spec:
    type: object
    title: Specification for multicluster configuration request
    description: Specification for multicluster configuration request.
    required:
    - resources
    properties:
      resources:
        description: Multicluster config resources.
        type: object
        required:
        - execution_plan
        - spec_list
        properties:
          upgrade_schedule:
            $ref: '#/definitions/execution_schedule'
          execution_plan:
            $ref: '#/definitions/execution_plan'
          spec_list:
            type: array
            items:
              $ref: '#/definitions/cluster_intent_input'

  execution_plan:
    title: Execution plan for multiple requests
    description: Execution plan for multiple requests.
    type: string
    default: PARALLEL
    x-ntnx-enum:
    - SEQUENTIAL
    - PARALLEL

  execution_schedule:
    type: object
    title: Execution schedule for requests
    description: Execution schedule for requests.
    required:
    - start_time
    properties:
      start_time:
        description: Start time to execute a request.
        type: string
        format: date-time
      timeout_secs:
        description: Time out in seconds for a request execution.
        type: integer
        format: int64
      time_zone:
        description: Name of specified time zone.
        type: string

  multicluster_config_def_status:
    type: object
    title: Status for multicluster configuration request
    description: Status for multicluster configuration request.
    properties:
      state:
        description: The state of the multicluster configuration request.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  ssp_config_input:
    type: object
    title: Extra information for ssp configuration migration.
    description: Extra information for ssp configuration migration.
    properties:
      directory_service_service_account:
        $ref: '#/definitions/credentials'
      should_skip_migration:
        description: >
          Migration can be skipped or not. If this flag is set to True,
          migration will be skipped and the Prism Element will be directly
          marked as migration completed. Default is False.
        type: boolean

  ssp_migration_status:
    type: object
    title: SSP configuration migration state.
    description: SSP configuration migration state.
    properties:
      task_uuid:
        description: Resultant task UUID for the submitted request.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$


  # The input object that defines a cluster
  cluster:
    type: object
    title: Cluster Definition
    description: Cluster Definition.
    properties:
      name:
        description: Cluster Name.
        type: string
      resources:
        description: Cluster resources.
        type: object
        properties:
          config:
            $ref: '#/definitions/cluster_config_spec'
          network:
            $ref: '#/definitions/cluster_network'
          runtime_status_list:
            description: Cluster onging operations.
            type: array
            items:
              type: string
              x-ntnx-enum:
              - UPGRADE_QUEUED
              - UPGRADE_CANCELLED
              - UPGRADE_SCHEDULED
              - SSP_CONFIG_MIGRATED

  # The output object that defines a cluster
  cluster_def_status:
    type: object
    title: Cluster Status
    description: |
      Cluster status definition.  A Nutanix cluster is comprised of three or
      more Nutanix nodes. Each node in the cluster contains memory, CPU, RAM,
      and storage (SSD/HDD). Each node in the cluster runs standard hypervisor
      such as VMware vSphere, Microsoft Hyper-V, or AHV. A Controller VM (CVM)
      runs on each node in the cluster. The CVM enables each node to share
      local storage from all nodes in the cluster.
    required:
    - resources
    properties:
      name:
        description: Cluster Name.
        type: string
      state:
        description: The state of the cluster entity.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        description: Cluster resources.
        type: object
        required:
        - config
        - network
        properties:
          config:
            $ref: '#/definitions/cluster_config'
          nodes:
            $ref: '#/definitions/cluster_nodes'
          network:
            $ref: '#/definitions/cluster_network'

          analysis:
            $ref: '#/definitions/cluster_analysis'

          runtime_status_list:
            description: Cluster current attributes and onging operations.
            type: array
            items:
              type: string
              x-ntnx-enum:
              - UPGRADE_QUEUED
              - UPGRADE_CANCELLED
              - UPGRADE_IN_PROGRESS
              - UPGRADE_SCHEDULED
              - HAVE_SELF_ENCRYPTING_DRIVE
              - SSP_CONFIG_OWNER

  cluster_analysis:
    title: Cluster Analysis Statistics
    type: object
    description: Cluster analysis related values.
    properties:
      vm_efficiency_map:
        type: object
        readOnly: true
        description: |
          Map of cluster efficiency which includes numbers of inefficient
          vms. The value is populated by analytics on PC.
        additionalProperties:
          type: string
  network_port_bindings:
    title: Port binding
    description: Port binding
    type: array
    items:
      type: object
      properties:
        network_uuid:
          description: Uuid of network
          type: string
        host_port:
          description: Port number of host
          type: string

  network_port_bindings_status:
    title: Port binding status
    description: Port binding status
    type: array
    items:
      type: object
      properties:
        network_uuid:
          description: Uuid of network
          type: string
        host_port:
          description: Port number of host
          type: string
        ip_addr:
          description: Ip address of container.
          type: string

  container_options:
    title: Container options
    description: Container options required to run the container.
    type: object
    properties:
      num_cpu_shares:
        description: Number of cpu shares.
        type: integer
        format: int32
        minimum: 1
        default: 1024
      memory_mib:
        description: Memory in MiBs.
        type: integer
        format: int32
        default: 1024
      restart_policy:
        description: Container restart policy.
        type: string
      volume_mount_map:
        description: Map of Volume Group name to mount path.
        additionalProperties:
          type: string
      network_port_bindings:
        description:  >
          Map of port bindings, key is container port and
          value is a list of host side network port binding.
        additionalProperties:
          $ref: '#/definitions/network_port_bindings'
      environments:
        description: Map of environment variable names and values.
        additionalProperties:
          type: string
      command:
        description: Command to be executed in the container.
        type: string
      container_runtime:
        description: Name of container runtime.
        type: string
        x-ntnx-enum:
          - DOCKER
      container_additional_options:
        description: Additional options to be used for container.
        type: string

  container_resources:
    title: Container Resources
    description: Container Resources Definition.
    type: object
    required:
      -  image_name
    properties:
      image_name:
        description: Image name to be used for container.
        type: string
        maxLength: 64
      registry_reference:
        description: Reference to container registry.
        $ref: "#/definitions/docker_registry_reference"
      container_options:
        description: Various options for container.
        $ref: "#/definitions/container_options"
      subnet_reference_list:
        description: Networks associated with this container.
        type: array
        items:
          $ref: "#/definitions/subnet_reference"
      volume_reference_list:
        description: Referenced volumes associated with this container.
        type: array
        items:
          $ref: "#/definitions/volume_group_reference"
      volume_list:
        description: Volumes associated with this container.
        type: array
        items:
          $ref: "#/definitions/volume_group"
      container_state:
        description: Desired state of the container.
        type: string
        x-ntnx-enum:
          - IMAGE_DOWNLOADED
          - CREATED
          - RUNNING
          - STOPPED
          - KILLED
          - REMOVED
          - DELETED
          - PAUSED

  container_options_status:
    title: Container options
    description: Container options in use by the container
    type: object
    properties:
      num_cpu_shares:
        description: Number of cpu shares.
        type: integer
        format: int32
      memory_mib:
        description: Memory in MiBs.
        type: integer
        format: int32
      restart_policy:
        description: Container restart policy.
        type: string
      volume_mount_map:
        description: Map of Volume Group name to mount path.
        additionalProperties:
          type: string
      network_port_bindings:
        description: List of port mappings, key is container port binding, value is host port binding
        additionalProperties:
          $ref: '#/definitions/network_port_bindings_status'
      environments:
        description: Map of environment variable names and values.
        additionalProperties:
          type: string
      command:
        description: Command to be executed for the container.
        type: string
      container_runtime:
        description: Name of container runtime.
        type: string
        x-ntnx-enum:
          - DOCKER
      container_additional_options:
        description: Additional options to be used for container.
        type: string

  container_resources_def_status:
    title: Container Resources Status Definition
    description: Container Resources Status Definition.
    type: object
    required:
    -  image_name
    properties:
      image_name:
        description: Image name used for container.
        type: string
      registry_reference:
        description: Reference to container registry.
        $ref: "#/definitions/docker_registry_reference"
      container_options:
        description: Various options for container.
        $ref: "#/definitions/container_options_status"
      subnet_reference_list:
        description: Networks associated with this container.
        type: array
        items:
          $ref: "#/definitions/subnet_reference"
      volume_reference_list:
        description: Referenced Volumes associated with this container.
        type: array
        items:
          $ref: "#/definitions/volume_group_reference"
      volume_list:
        description: Volumes associated with this container.
        type: array
        items:
          $ref: "#/definitions/volume_group_def_status"
      runtime_name:
        description: Name of container given by runtime.
        type: string
      container_state:
        description: Current state of the Container.
        type: string
        x-ntnx-enum:
          - QUEUED
          - IMAGE_DOWNLOADED
          - CREATED
          - RUNNING
          - STOPPED
          - KILLED
          - REMOVED
          - DELETED
          - PAUSED
          - FAILED

  # The input object that defines a container.
  container:
    title: Container Entity
    description: Container Entity Definition.
    type: object
    required:
      - resources
    properties:
      name:
        description: Container name.
        type: string
        maxLength: 64
      resources:
        $ref: "#/definitions/container_resources"

  container_def_status:
    type: object
    title: Container Status Definition
    description: Container Status Definition.
    required:
      -  resources
      -  name
    properties:
      state:
        description: State of the container.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      name:
        description: Container name.
        type: string
      resources:
        $ref: "#/definitions/container_resources_def_status"
  # The input object that defines the configuration for a Physical
  # Availability Zone
  physical_availability_zone:
    type: object
    title: Physical Availability Zone Configuration
    description: Physical Availability Zone Configuration definition.
    required:
      - resources
    properties:
      resources:
        type: object
        description: Physical Availability Zone Configuration resources.
        required:
          - external_url
          - xlb_virtual_address
          - olb_virtual_address
        properties:
          external_url:
            description: External URL for the Physical Availability Zone.
            type: string
          idp_service_provider_name:
            description: IDP Service Provider name.
            type: string
          my_nutanix_domain:
            description: My Nutanix Domain Address used for IDP Registration.
            type: string
          billing_domain:
            description: Billing Domain Address.
            type: string
          xlb_virtual_address:
            description: XLB Virtual IP address.
            $ref: '#/definitions/address'
          olb_virtual_address:
            description: OLB Virtual IP address.
            $ref: '#/definitions/address'
          cloud_uuid:
            description: Reference to the Infra Cloud this physical AZ belongs.
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          ntp_server_list:
            description: List of NTP Server addresses.
            type: array
            items:
              type: string
              maxLength: 255
          cell_fqdn_list:
            description: List of cell FQDN mapped to the cluster.
            type: array
            items:
              type: string
          pulse_configuration:
            type: object
            title: Pulse Configuration
            description: Pulse Configuration.
            required:
              - enable_pulse
              - enable_default_nutanix_email
            properties:
              enable_pulse:
                description: Indicates if pulse should be enabled.
                type: boolean
                default: true
              enable_default_nutanix_email:
                description: >
                  Indicates if default Nutanix email address should be
                  configured for pulse notification.
                type: boolean
                default: true
              email_contact_list:
                description: List of default email contacts.
                type: array
                items:
                  type: string
                  pattern: (^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)
  key_set_response:
    type: object
    title: JSON Web Key Set
    description: Physical Availability Zone's JSON Web Key Set (JWKS).
    properties:
      keys:
        description: List of JSON Web Keys
        type: array
        items:
          $ref: '#/definitions/json_web_key'

  json_web_key:
    type: object
    title: JSON Web Key
    description: JSON Web Key.
    required:
    - alg
    - use
    - kty
    - "n"
    - e
    properties:
      alg:
        description: Algorithm intended for use with the key
        type: string
        x-ntnx-enum:
        - RSA256
      use:
        description: How the key should be used
        type: string
        x-ntnx-enum:
        - SIG
      kty:
        description: Key type
        type: string
        x-ntnx-enum:
        - RSA
      kid:
        description: Unique identifier for the key
        type: string
      "n":
        description: RSA modulus value
        type: string
      e:
        description: RSA key value (exponent) for key blinding
        type: string
  provider_oauth_token:
    type: object
    title: Oauth token from Oauth2 provider
    description: Oauth token from Oauth2 provider
    required:
    - access_token
    - token_type
    - expires_in
    - refresh_token
    - scope
    properties:
      access_token:
        description: access_token to be used for accessing gateway
        type: string
      token_type:
        description: Only value possible is "bearer".
        type: string
        readOnly: true
      expires_in:
        description: Token expiration time in seconds
        type: integer
        format: int64
        default: 3600
      refresh_token:
        description: Refresh_token which can used to get new token
        type: string
      scope:
        type: string
        description: Scope string with individual scopes separated by space

  oauth_token:
    type: object
    title: Oauth token
    description: Oauth token information
    required:
    - access_token
    - token_type
    - expires_in
    - refresh_token
    - scopes
    properties:
      access_token:
        description: access_token to be used for accessing gateway
        type: string
      token_type:
        description: Only value possible is "bearer".
        type: string
        readOnly: true
      expires_in:
        description: Token expiration time in seconds
        type: integer
        format: int64
      refresh_token:
        description: refresh_token which can used to get new token
        type: string
      scopes:
        type: array
        items:
          type: string
          description: scope which the token grants

  oauth_generate_token_request:
    type: object
    title: Oauth token generate request
    description: Oauth token generate request
    required:
      - client_name
      - client_description
      - scopes
    properties:
      client_name:
        type: string
        maxLength: 64
        description: client name of the Oauth Client
      client_description:
        type: string
        maxLength: 1000
        description: client description of the Oauth Client
      scopes:
        type: array
        items:
          type: string
          description: entry for default scopes
      expires_in:
        description: Token expiration time in seconds
        type: integer
        format: int64

  oauth_generate_token_response:
    type: object
    title: Oauth token generate response
    description: Oauth token generate response
    required:
      - client_id
      - client_secret
      - oauth_token
    properties:
      client_id:
        type: string
        description: client id of the Oauth Client
      client_secret:
        type: string
        description: client secret of the Oauth Client
      oauth_token:
         $ref: '#/definitions/oauth_token'
  oauth_client_list:
    type: object
    title: Oauth Client list
    description: Oauth Client list
    required:
      - metadata
      - entities
    properties:
      metadata:
        $ref: '#/definitions/oauth_client_list_metadata'
      entities:
        type: array
        items:
          $ref: '#/definitions/oauth_client_response'
  oauth_client_input:
    type: object
    title: Oauth client
    description: Oauth client information
    required:
      - client_name
      - client_description
      - redirect_uris
      - default_scopes
    properties:
      client_name:
        type: string
        maxLength: 64
        description: client name of the Oauth Client
      client_description:
        type: string
        maxLength: 1000
        description: client description of the Oauth Client
      redirect_uris:
        type: array
        items:
          type: string
          description: entry for redirect URIs (A list of redirect uris)
      default_scopes:
        type: array
        items:
          type: string
          description: entry for default scopes (Default scopes of the client)
  oauth_client_response:
    type: object
    title: Oauth Client response
    description: Oauth client information
    required:
      - client_id
      - client_secret
      - client_name
      - client_description
      - redirect_uris
      - default_scopes
    properties:
      client_id:
        type: string
        description: client id of the Oauth Client (A random string)
      client_secret:
        type: string
        description: client secret of the Oauth Client (A random string)
      client_name:
        type: string
        maxLength: 64
        description: client name of the Oauth Client
      client_description:
        type: string
        maxLength: 1000
        description: client description of the Oauth Client
      redirect_uris:
        type: array
        items:
          type: string
          description: entry for redirect URIs (A list of redirect uris)
      default_scopes:
        type: array
        items:
          type: string
          description: entry for default scopes (Default scopes of the client)
  okta_config_input:
    title: Okta Config to save.
    description: Okta Config to save.
    type: object
    required:
      - client_id
      - redirect_address
    properties:
      enabled:
        description: Enable Okta Login.
        type: boolean
        default: true
      enable_ssl_verification:
        description: Enable Okta SSL verification.
        type: boolean
        default: false
      base_url:
        description: Base URL for Okta.
        type: string
        default: "https://nutanix.okta.com"
        maxLength: 100
      client_id:
        description: Client ID for this machine.
        type: string
        maxLength: 100
      discovery_path:
        description: Hosted Okta configuration path.
        type: string
        default: ".well-known/openid-configuration"
        maxLength: 100
      leeway_in_minutes:
        description: Leeway for Okta token validity in minutes.
        type: integer
        format: int32
        minimum: 5
        default: 5
      redirect_endpoint:
        description: Redirect endpoint for Okta.
        type: string
        default: "okta/callback"
        maxLength: 100
      log_token:
        description: Log the Okta token for debug.
        type: boolean
        default: false
      redirect_address:
        description: Redirect IP address after Okta sign in.
        $ref: '#/definitions/address'
      client_secret:
        description: Client Secret for this machine.
        type: string

  okta_config_response:
    title: Okta Config.
    description: Okta Config.
    type: object
    required:
      - client_id
      - redirect_address
    properties:
      enabled:
        description: Enable Okta Login.
        type: boolean
        default: true
      enable_ssl_verification:
        description: Enable Okta SSL verification.
        type: boolean
        default: false
      base_url:
        description: Base URL for Okta.
        type: string
        default: "https://nutanix.okta.com"
        maxLength: 100
      client_id:
        description: Client ID for this machine.
        type: string
        maxLength: 100
      discovery_path:
        description: Hosted Okta configuration path.
        type: string
        default: ".well-known/openid-configuration"
        maxLength: 100
      leeway_in_minutes:
        description: Leeway for Okta token validity in minutes.
        type: integer
        format: int32
        minimum: 5
        default: 5
      redirect_endpoint:
        description: Redirect endpoint for Okta.
        type: string
        default: "okta/callback"
        maxLength: 100
      log_token:
        description: Log the Okta token for debug.
        type: boolean
        default: false
      redirect_address:
        description: Redirect IP address after Okta sign in.
        $ref: '#/definitions/address'
      encrypted_client_secret_location:
        description: Client Secret for this machine.
        type: string

  okta_redirect_config_response:
    title: Okta Config.
    description: Okta Config.
    type: object
    required:
      - base_url
      - client_id
      - redirect_address
    properties:
      base_url:
        description: Base URL for Okta.
        type: string
        maxLength: 100
      client_id:
        description: Client ID for this machine.
        type: string
        maxLength: 100
      redirect_address:
        description: Redirect IP address after Okta sign in.
        $ref: '#/definitions/address'
  category_key:
    type: object
    title: Category Key definition.
    description: Category key definition.
    required:
      - name
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      name:
        type: string
        description: Name of the category.
        maxLength: 64
      description:
        description: Description of the category.
        type: string
        maxLength: 1000

  category_value:
    type: object
    title: Category Value definition.
    description: Category value definition.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      value:
        description: Value for the category.
        type: string
        maxLength: 64
      description:
        type: string
        description: Description of the category value.
        maxLength: 1000

  category_key_status:
    type: object
    title: Category Key Definition.
    description: Category Key Definition.
    required:
      - name
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      name:
        type: string
        description: Name of the category.
        maxLength: 64
      description:
        description: Description of the category.
        type: string
        maxLength: 1000
      system_defined:
        description: Specifying whether its a system defined category.
        type: boolean
        readOnly: true

  category_value_status:
    type: object
    title: Category Value Definition.
    description: Category value definition.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      name:
        type: string
        description: The name of the category.
        maxLength: 64
        readOnly: true
      value:
        description: The value of the category.
        type: string
        maxLength: 64
      description:
        type: string
        description: Description of the category value.
        maxLength: 1000
      system_defined:
        description: Specifying whether its a system defined category.
        type: boolean
        readOnly: true

  category_key_list_response:
    title: Category key list response.
    description: Category key list response.
    type: object
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/category_list_metadata'
      entities:
        type: array
        items:
          $ref: '#/definitions/category_key_status'

  category_value_list_response:
    title: Category value list response.
    description: Category Value list response.
    type: object
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/category_list_metadata'
      entities:
        type: array
        items:
          $ref: '#/definitions/category_value_status'

  category_query_input:
    title: Category Query Input
    description: Categories query input object.
    type: object
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      group_member_count:
        description: The maximum number of members to return per group.
        type: integer
        format: int64
      group_member_offset:
        description: The offset into the total member set to return per group.
        type: integer
        format: int64
      usage_type:
        $ref: '#/definitions/category_query_usage_type'
      category_filter:
        $ref: '#/definitions/category_filter'

  category_query_response:
    title: Category Query Response
    description: Categories query response object.
    type: object
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        description: Response metadata.
        type: object
        properties:
          total_matches:
            description: Total number of matched results.
            type: integer
            format: int64
          group_member_count:
            description: The maximum number of records to return per group.
            type: integer
            format: int64
          group_member_offset:
            description: |
              The offset into the total records set to return per group.
            type: integer
            format: int64
          usage_type:
            $ref: '#/definitions/category_query_usage_type'
      results:
        type: array
        items:
          type: object
          properties:
            kind:
              description: The entity kind.
              type: string
            total_entity_count:
              description: Total number of the matched results.
              type: integer
              format: int64
            filtered_entity_count:
              description: Total number of filtered results.
              type: integer
              format: int64
            entity_any_reference_list:
              description: List of entity references.
              type: array
              items:
                $ref: "#/definitions/entity_reference"

  category_query_usage_type:
    title: Query Usage Type
    description: |
      USED_IN - to get policies in which specified categories are used.
      APPLIED_TO - to get entities attached to specified categories.
    type: string
    x-ntnx-enum:
    - USED_IN
    - APPLIED_TO

  entity_reference:
    title: Entity Reference.
    description: Reference to an entity.
    type: object
    properties:
      kind:
        description: Kind of the reference.
        type: string
      uuid:
        description: UUID of the entity.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: Name of the entity.
        type: string
        maxLength: 64
      type:
        description: The type of filter being used.
        type: string
        x-ntnx-enum:
        - CATEGORIES_MATCH_ALL
        - CATEGORIES_MATCH_ANY
      categories:
        description: Categories for the entity.
        type: object
        additionalProperties:
          type: string
  idempotence_identifiers_input:
    type: object
    title: Idempotence object
    description: Resources for the idempotence identifier kind.
    required:
    - count
    properties:
      client_identifier:
        type: string
        description: The client identifier string.
      count:
        type: integer
        default: 1
        description: The number of idempotence identifiers provided.
      valid_duration_in_minutes:
        type: integer
        description: >
          Number of minutes from creation time for which idempotence identifier UUID list is valid.
          The default is 15 minutes, and can be controlled by the GFLAG idempotence_uuid_default_valid_duration_mins
        default: 15
  idempotence_identifiers_response:
    type: object
    title: Idempotence identifier status definition.
    description: Idempotence identifier status definition.
    required:
     - count
     - uuid_list
    properties:
      client_identifier:
        type: string
        description: The client identifier string.
      count:
        type: integer
        default: 1
        description: The number of idempotence identifiers provided.
      expiration_time:
        type: string
        format: date-time
        description: The expiration time (with reference to system time). Value is creation time + valid_duration
      uuid_list:
        type: array
        items:
          type: string
          description: UUID to identify the relationship <to be updated>
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          format: UUID

  identifier_input:
    type: object
    title: The input definition.
    description: The input definition object
    required:
      - name_list
    properties:
      name_list:
        type: array
        description: The list of names for which UUID is to be generated.
        items:
          type: string
  identifier_response:
    type: object
    title: A list of UUID5 corresponding to the provided names.
    description: A list of UUID5 corresponding to the provided names.
    properties:
      name_uuid_list:
        type: array
        description: The list of name to salted UUID5 mapping(s).
        items:
          $ref: '#/definitions/name_identifier_map'
  name_identifier_map:
    type: object
    title: A mapping of name to salted UUID5's.
    description: A mapping of name to the generated / salted UUID5.
    properties:
      name:
        type: string
      identifier:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-5[0-9a-f]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: c4a760a8-dbcf-5254-a0d9-6a4474bd1b62

  recovery_plan_resources:
    type: object
    title: Recovery Plan resources
    description: Recovery Plan resources
    properties:
      parameters:
        type: object
        description: >
          Parameters for the Recovery Plan.
        properties:
          network_mapping_list:
            description: >
              Network mappings to be used for the Recovery Plan. This will be
              represented by array of network mappings across the Availability
              Zones. Each entry of network mapping will have Availability Zone
              URL, recovery and test network information.
              For example, Let RNx denote the recovery network information and
              TNx denote the test network information. As per below matrix,
              while performing failover action from Availability Zone AZ1 to
              AZ2, RN1 will be mapped to RN4 and while performing test failover
              from AZ1 to AZ2, RN1 will be mapped to TN4.
              [[(AZ1 URL, RN1, TN1), (AZ2 URL, RN4, TN4),
                (AZ3 URL, RN7, TN7)],
               [(AZ1 URL, RN2, TN2), (AZ2 URL, RN5, TN5),
                (AZ3 URL, RN8, TN8)],
               [(AZ1 URL, RN3, TN3), (AZ2 URL, RN6, TN6)]]
            type: array
            items:
              type: object
              properties:
                availability_zone_network_mapping_list:
                  description: >
                    Mapping of networks across the Availability Zones.
                  type: array
                  items:
                    type: object
                    required:
                      - availability_zone_url
                    properties:
                      availability_zone_url:
                        description: >
                          URL of the Availability Zone.
                        type: string
                      recovery_network:
                        description: >
                          Network in which VMs will be recovered on migrate/
                          failover action on the Recovery Plan.
                        $ref: '#/definitions/recovery_plan_network'
                      test_network:
                        description: >
                          Network in which VMs will be recovered on test
                          failover action on the Recovery Plan.
                        $ref: '#/definitions/recovery_plan_network'
          floating_ip_assignment_list:
            description: >
              Floating IP assignment for VMs upon recovery in an Availability
              Zone. This is applicable only for the public cloud Availability
              Zones.
            type: array
            items:
              type: object
              required:
                - availability_zone_url
              properties:
                availability_zone_url:
                  description: >
                    URL of the Availability Zone.
                  type: string
                vm_ip_assignment_list:
                  description: >
                    IP assignment for VMs upon recovery in the specified
                    Availability Zone.
                  type: array
                  items:
                    type: object
                    required:
                      - vm_reference
                      - vm_nic_information
                    properties:
                      vm_reference:
                        description: Reference to the VM entity.
                        $ref: '#/definitions/vm_reference'
                      vm_nic_information:
                        description: >
                          Information about vnic to which floating IP has to be
                          assigned.
                        type: object
                        required:
                          - uuid
                        properties:
                          uuid:
                            description: >
                              Uuid of the vnic of the VM to which floating IP
                              has to be assigned.
                            type: string
                            format: UUID
                            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                          ip:
                            description: >
                              IP address associated with vnic for which
                              floating IP has to be assigned on failover.
                            type: string
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                      test_floating_ip_config:
                        description: >
                          Configuration for floating IP assignment on test
                          failover.
                        $ref: '#/definitions/recovery_plan_floating_ip_config'
                      recovery_floating_ip_config:
                        description: >
                          Configuration for floating IP assignment on failover.
                        $ref: '#/definitions/recovery_plan_floating_ip_config'
      stage_list:
        description: >
          Input for the stages of the Recovery Plan. Each stage will perform
          a predefined type of task. For example, a stage can perform the
          recovery of the entities specified in a stage.
        type: array
        items:
          $ref: '#/definitions/recovery_plan_stage'
      failure_action:
        description: >
          Action to be taken on failure of execution of the Recovery Plan.
        $ref: "#/definitions/recovery_plan_failure_action"

  recovery_plan_floating_ip_config:
    type: object
    title: >
      Floating IP configuration for a VM
    description: >
      Configuration for assigning floating IP to a VM on the execution of the
      Recovery Plan.
    x-ntnx-one-of:
    - required:
      - ip
    - required:
      - should_allocate_dynamically
    properties:
      ip:
        description: >
          IP to be assigned to VM, in case of failover.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      should_allocate_dynamically:
        description: >
          Whether to allocate the floating IPs for the VMs dynamically.
        type: boolean

  recovery_plan_network:
    type: object
    title: >
      Network configuration for the Recovery Plan
    description: >
      Network configuration to be used for performing network mapping and IP
      preservation/mapping on Recovery Plan execution.
    properties:
      name:
        description: >
          Name of the network.
        type: string
        maxLength: 64
      virtual_network_reference:
        description: Reference to the Virtual Network.
        $ref: '#/definitions/virtual_network_reference'
      subnet_list:
        type: array
        description: >
          List of subnets for the network.
        items:
          $ref : "#/definitions/recovery_plan_subnet_config"

  recovery_plan_subnet_config:
    type: object
    title: >
      Subnet configuration for the Recovery Plan
    description: >
      Subnet configuration for network mapping in the Recovery Plan.
    required:
      - gateway_ip
      - prefix_length
    properties:
      gateway_ip:
        description: >
          Gateway IP address for the subnet.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      prefix_length:
        description: >
          Prefix length for the subnet.
        type: integer
        format: int32
        minimum: 0
        maximum: 32
      external_connectivity_state:
        description: >
          External connectivity state of the subnet. This is applicable
          only for the subnet to be created in public cloud Availability
          Zone.
        type: string
        x-ntnx-enum:
          - ENABLED
          - DISABLED

  recovery_plan_stage:
    type: object
    title: Information about a stage in the Recovery Plan
    description: >
      A stage specifies the work to be performed when the Recovery Plan is
      executed. A stage work can be execute an user script or recover entities
      in case of failover. If there are multiple entities to recover in a
      stage, all of them will be recovered in parallel.
    required:
      - stage_work
    properties:
      stage_uuid:
        description: UUID of stage.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      execution_condition:
        type: object
        description: >
          Condition when this stage will be executed. For example, A condition
          can be like, execute this stage in a particular Availability Zone.
        properties:
          availability_zone_url:
            description: >
              URL of the Availability Zone.
            type: string
          action_type:
            description: >
              Type of action for which this stage will be executed.
              For example, a script can be executed when test action
              is performed on the Recovery Plan.
            type: string
            x-ntnx-enum:
              - MIGRATE
              - FAILOVER
              - TEST_FAILOVER
      failure_action:
        description: >
          Action to be taken on failure of execution of a stage.
        $ref: "#/definitions/recovery_plan_failure_action"
      delay_time_secs:
        description: >
          Amount of time in seconds to delay the execution of next stage after
          execution of current stage.
        type: integer
        format: int64
      stage_work:
        type: object
        description: >
          Information about work to be performed as part of this stage on
          execution. Only one of recover_entities or script has to be
          provided.
        x-ntnx-one-of:
        - required:
          - recover_entities
        - required:
          - script
        properties:
          recover_entities:
            description: >
              Information about entities to be recovered. This can be either
              explicit entity list or entity filter to identify list of
              entities to be recovered.
            $ref: '#/definitions/recover_entities'
          script:
            description: >
              Information about script to be executed.
            $ref: '#/definitions/script'

  recovery_plan_failure_action:
    type: object
    title: Action to be taken on failure of execution of the Recovery Plan
    description: >
      Action to be taken on failure of execution of the Recovery Plan.
    required:
      - action_type
    properties:
      action_type:
        description: >
          Type of action to be taken. Based on this action further
          execution of Recovery Plan will be continued or aborted.
        default: "CONTINUE"
        type: string
        x-ntnx-enum:
          - CONTINUE
          - ABORT

  recover_entities:
    type: object
    title: Information about entities to be recovered
    description: >
      Information about entities to be recovered.
    required:
      - entity_info_list
    properties:
      vm_power_state:
        description: Power state of the VMs after recovery.
        type: string
        default: "ON"
        x-ntnx-enum:
          - "ON"
          - "OFF"
      script_list:
        description: >
          Information about scripts to be executed on all the guest VMs
          recovered for this stage.
        type: array
        items:
          $ref: '#/definitions/script'
      entity_info_list:
        description: >
          Information about entities to be recovered as part of this stage.
          For VM, entity information will include set of scripts to be executed
          after recovery of VM. Only one of categories or any_entity_reference
          has to be provided.
        type: array
        items:
          type: object
          x-ntnx-one-of:
          - required:
            - categories
          - required:
            - any_entity_reference
          properties:
            categories:
              type: object
              description: Categories for filtering entities.
              additionalProperties:
                type: string
            any_entity_reference:
              description: Information about entity to be recovered.
              $ref: '#/definitions/reference'
            vm_power_state:
              description: Power state of the VMs after recovery.
              type: string
              default: "ON"
              x-ntnx-enum:
                - "ON"
                - "OFF"
            script_list:
              description: >
                Information about the scripts to be executed on the guest VMs
                after recovery.
              type: array
              items:
                $ref: '#/definitions/script'

  script:
    type: object
    title: Information about the script to be executed
    description: Information about the script to be executed.
    required:
      - text
    properties:
      name:
        description: Name of the user script.
        type: string
      type:
        description: Type of the script.
        type: string
        x-ntnx-enum:
          - BASH
          - POWERSHELL
      text:
        description: Script text.
        type: string
      guest_os_type:
        description: >
          OS type of the guest VM where the script need to be run. This is
          applicable only for the scripts which needs to be run inside the
          guest VM.
        type: string
        x-ntnx-enum:
          - WINDOWS
          - LINUX
      timeout:
        description: Timeout for the script execution.
        type: integer
        format: int64
      credentials:
        description: Credential for execution of the script.
        type: object
        properties:
          username:
            description: Username for performing operation on the guest VM.
            type: string
          type:
            description: Type of credential.
            type: string
            x-ntnx-enum:
              - PASSWORD
              - SSHKEY
          secret:
            description: >
              Text of secret. This can be password or SSH key based on
              credential type.
            type: string

  recovery_plan:
    type: object
    title: Recovery Plan creation/modification spec
    description: Recovery Plan creation/modification spec
    required:
     - name
     - resources
    properties:
      name:
        description: Recovery Plan name
        type: string
        maxLength: 64
      description:
        description: A description or user annotation for the Recovery Plan.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/recovery_plan_resources'

  recovery_plan_def_status:
    type: object
    title: Recovery Plan status
    description: Recovery Plan status
    required:
     - name
     - resources
     - recovery_availability_zone_order_list
    properties:
      state:
        description: The state of the Recovery Plan entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      name:
        description: Recovery Plan name
        type: string
      description:
        description: A description or user annotation for the Recovery Plan.
        type: string
      resources:
        $ref: '#/definitions/recovery_plan_resources'
      recovery_availability_zone_order_list:
        description: >
          List of recovery Availability Zones order list per local Availability
          Zone. In case of public cloud, recovery Availability Zones order
          for each of the Availability Zones will be reported. For example,
          Let AZ1 and AZ2 be the two Availability Zones for a public cloud and
          OnPrem be the on-premise Availability Zone. If entities on OnPrem is
          protected by a Protection Rule with Availabilty Zone order [OnPrem,
          AZ1, AZ2], then recovery_availability_zone_order_list will be
          [{AZ1, [OnPrem, AZ1, AZ2]}, {AZ2, [OnPrem, AZ1, AZ2]}]
        type: array
        items:
          type: object
          required:
            - availability_zone_url
          properties:
            availability_zone_url:
              description: >
                URL of the Availability Zone.
              type: string
            availability_zone_order_list:
              description: >
                List of recovery Availability Zone orders for entities in the
                Recovery Plan. More than one entry in this list indicates
                entities in Recovery Plan are protected by the Protection Rules
                with different recovery Availability Zone order and makes
                Recovery Plan invalid.
              type: array
              items:
                properties:
                  availability_zone_list:
                    description: List of Availability Zones.
                    type: array
                    items:
                      type: object
                      properties:
                        availability_zone_url:
                          description: >
                            URL of the Availability Zone.
                          type: string
      latest_validation_time:
        description: Time when latest validation was done for Recovery Plan.
        type: string
        format: date-time
      latest_test_time:
        description: Time when latest test was done for Recovery Plan.
        type: string
        format: date-time

  recovery_plan_entities:
    type: object
    title: Entities associated with Recovery Plan
    description: >
      Entities associated with Recovery Plan. It includes the live entities
      and the entites for which Recovery Points are available.
    required:
      - entities_per_availability_zone_list
    properties:
      entities_per_availability_zone_list:
        description: >
          List of entities and recovery Availability Zones order list per local
          Availability Zone. In case of public cloud, entity list and recovery
          Availability Zones order for each of the Availability Zones will be
          reported. For example, Let AZ1 and AZ2 be the two Availability Zones
          for a public cloud and OnPrem be the on-premise Availability Zone.
          If VMs VM1 and VM2 on OnPrem is protected by a Protection Rule with
          Availabilty Zone order [OnPrem, AZ1, AZ2], then
          entities_per_availability_zone_list will be
          [{AZ1, [[OnPrem, AZ1, AZ2]], [{VM1}, {VM2}]},
           {AZ2, [[OnPrem, AZ1, AZ2]], [{VM1}, {VM2}]}].
          All the Availability Zones should have same Availability Zone order
          for a valid Recovery Plan.
        type: array
        items:
          type: object
          required:
            - availability_zone_url
          properties:
            availability_zone_url:
              description: >
                URL of the Availability Zone.
              type: string
            availability_zone_order_list:
              description: >
                List of recovery Availability Zone orders for entities in the
                Recovery Plan. More than one entry in this list indicates
                entities in Recovery Plan are protected by the Protection
                Rules with different recovery Availability Zone order and makes
                Recovery Plan invalid.
              type: array
              items:
                properties:
                  availability_zone_list:
                    description: List of Availability Zones.
                    type: array
                    items:
                      type: object
                      properties:
                        availability_zone_url:
                          description: >
                            URL of the Availability Zone.
                          type: string
            entity_list:
              description: >
                List of protected entities associated with Recovery Plan. This
                list includes the entities which are live and the entities for
                which Recovery Points are present on the Availability Zone.
              type: array
              items:
                required:
                  - any_entity_reference
                  - is_recovery_point
                properties:
                  any_entity_reference:
                    description: Reference to the entity.
                    $ref: '#/definitions/reference'
                  recovery_availability_zone_order_index:
                    description: >
                      Index of recovery Availability Zone order for this entity
                      in availability_zone_order_list. Index starts at 0.
                    type: integer
                    format: int32
                  is_recovery_point:
                    description: >
                      On the Availability Zone, whether the live entity is
                      present or the Recovery Points for the entity are
                      present. This will be set to true, only if the Recovery
                      Points for the entity are present on the Availability
                      Zone and not the live entity.
                    type: boolean
  recovery_plan_job:
    type: object
    title: Resources for Recovery Plan Job creation.
    description: Resources for Recovery Plan Job creation.
    required:
      - name
      - resources
    properties:
      name:
        description: Recovery Plan Job name.
        type: string
        maxLength: 64
      resources:
        description: Resources for Recovery Plan Job.
        $ref: '#/definitions/recovery_plan_job_resources'

  recovery_plan_job_response:
    type: object
    title: >
      Response for a Recovery Plan Job create/update/detete request.
    description: >
      Response for a Recovery Plan Job create/update/delete request.
    properties:
      task_uuid:
        description: >
          UUID of the task created for handling the request.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  recovery_plan_job_resources:
    type: object
    title: Recovery Plan Job resources definition.
    description: Recovery Plan Job resources definition.
    required:
      - recovery_plan_reference
      - execution_parameters
    properties:
      recovery_plan_reference:
        description: >
          Reference to the Recovery Plan for which this Recovery Plan Job
          is created.
        $ref: '#/definitions/recovery_plan_reference'
      execution_parameters:
        description: >
          Parameters for execution of the Recovery Plan Job.
        type: object
        required:
          - failed_availability_zone_list
          - recovery_availability_zone_list
          - action_type
        properties:
          failed_availability_zone_list:
            description: >
              Availability Zones that have failed.
            type: array
            items:
              $ref: '#/definitions/availability_zone_information'
          recovery_availability_zone_list:
            description: >
              Availability Zones wherein entities need to be recovered.
            type: array
            items:
              $ref: '#/definitions/availability_zone_information'
          action_type:
            description: >
              Type of action performed by the Recovery Plan Job.
            type: string
            x-ntnx-enum:
              - VALIDATE
              - MIGRATE
              - FAILOVER
              - TEST_FAILOVER
          recovery_reference_time:
            description: >
              Time with respect to which Recovery Plan Job has to be executed.
              This time will be used as reference time with respect to which
              latest snapshot will have to be restored in case of failover.
              For example, if failover is required to be done using snapshot
              created on or before yesterday '2:00' PM, then
              recovery_reference_time will be set to this time.
            type: string
            format: date-time
          should_continue_on_validation_failure:
            description: >
              Whether to ignore the validation failures(e.g. Network
              mapping is missing for some networks on failed Availability Zone,
              Virtual network missing.) for the Recovery Plan
              actions MIGRATE, FAILOVER, TEST_FAILOVER and execute the Recovery
              Plan.
            type: boolean
            default: false

  availability_zone_information:
    type: object
    title: Availability Zone information
    description: >
      Availability Zone information.
    required:
      - availability_zone_url
    properties:
      availability_zone_url:
        description: >
          URL of the Availability Zone.
        type: string
      cluster_reference_list:
        description: >
          List of cluster references. This is applicable only in scenario
          where failed and recovery clusters both are managed by the same
          Availability Zone.
        type: array
        items:
          $ref: '#/definitions/cluster_reference'

  recovery_plan_validation_message:
    type: object
    title: Validation message for Recovery Plan validation report.
    description: >
      Validation message used to report Recovery Plan errors and warnings.
    required:
      - validation_type
      - message
    properties:
      validation_type:
        description: Type of validation.
        type: string
        x-ntnx-enum:
          - ENTITY
          - NETWORK
          - RECOVERY_POINT
          - CATEGORY
          - CONNECTIVITY
          - INFRASTRUCTURE
      message:
        description: Message describing validation error or warning.
        type: string
      affected_any_reference_list:
        description: List of affected entities for this validation message.
        type: array
        items:
          $ref: "#/definitions/reference"
      impact_message_list:
        description: >
          Impact of the validation message on the Recovery Plan actions.
        type: array
        items:
          type: string
      cause_and_resolution_message_list:
        description: >
          List of causes and resolutions for the validation warning or error.
        type: array
        items:
          type: object
          required:
            - cause
          properties:
            cause:
              description: Cause of the validation warning or error.
              type: string
            resolution_list:
              description: Steps to resolve the warning or error.
              type: array
              items:
                type: string

  recovery_plan_job_def_status:
    type: object
    title: Recovery Plan Job status.
    description: Recovery Plan Job status.
    required:
      - name
      - resources
    properties:
      name:
        description: Recovery Plan Job name.
        type: string
      resources:
        description: Recovery Plan Job resources.
        $ref: '#/definitions/recovery_plan_job_resources'
      recovery_plan_specification:
        description: >
          Specification of the Recovery Plan on which the Recovery Plan Job is
          being executed.
        type: object
        required:
         - name
         - resources
        properties:
          name:
            description: Recovery Plan name
            type: string
          description:
            description: User provided description for the Recovery Plan.
            type: string
          resources:
            $ref: '#/definitions/recovery_plan_resources'
      start_time:
        description: Time when the Recovery Plan Job was created.
        type: string
        format: date-time
      end_time:
        description: Time when the Recovery Plan Job execution ended.
        type: string
        format: date-time
      validation_information:
        description: >
          The errors and warnings related to the Recovery Plan validation.
          Validation of the Recovery Plan will be done for all the actions
          performed on it. If there is any validation error for action other
          than validation, then the Recovery Plan execution will not be done.
        type: object
        properties:
          errors_list:
            description: >
              List of errors related to the Recovery Plan. These errors need
              to be resolved before any action can be executed on the
              Recovery Plan.
            type: array
            items:
              $ref: '#/definitions/recovery_plan_validation_message'
          warnings_list:
            description: >
              List of warnings related to the Recovery Plan. These warnings
              do not prevent actions on the Recovery Plan.
            type: array
            items:
              $ref: '#/definitions/recovery_plan_validation_message'
      execution_status:
        description: >
          Execution status of the Recovery Plan Job.
        $ref: '#/definitions/recovery_plan_job_execution_phases_status'
      cleanup_status:
        description: >
          Status of cleanup performed on the Recovery Plan Job. This is
          applicable only for the Recovery Plan Jobs created for TEST action
          on the Recovery Plan.
        $ref: '#/definitions/recovery_plan_job_execution_phases_status'
      user_test_execution_result:
        description: >
          Status of the test execution of the Recovery Plan as provided by user.
        properties:
          is_execution_successful:
            description: Whether the test execution was successful.
            type: boolean
          user_comments:
            description: Comments from user on test execution.
            type: string
          scheduled_cleanup_time:
            description: >
              Time at which entities created for the Recovery Plan test
              failover will be deleted.
            type: string
            format: date-time

  recovery_plan_job_execution_phases_status:
    type: object
    title: Execution status of phases in the Recovery Plan Job execution.
    description: >
      Execution status of three phases Preprocessing, Operation, Postprocessing
      in the Recovery Plan Job execution.
    required:
      - status
      - percentage_complete
    properties:
      status:
        description: State of execution of the Recovery Plan Job.
        type: string
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - COMPLETED
          - FAILED
          - ABORTED
          - COMPLETED_WITH_WARNING
          - FAILED_WITH_WARNING
      percentage_complete:
        description: Percentage completed for Recovery Plan Job.
        type: integer
        format: int32
      preprocessing_status:
        description: >
          Status of the steps performed before the recovery of the entities for
          the Recovery Plan Job.
        $ref: '#/definitions/recovery_plan_job_step_status'
      operation_status:
        description: >
          Status of the steps performed for the recovery of the entities for
          the Recovery Plan Job.
        $ref: '#/definitions/recovery_plan_job_step_status'
      postprocessing_status:
        description: >
          Status of steps performed after the recovery for the entities for the
          Recovery Plan Job.
        $ref: '#/definitions/recovery_plan_job_step_status'

  recovery_plan_job_execution_status:
    type: object
    title: Execution status of the Recovery Plan Job
    description: >
      Execution of the Recovery Plan is done in three phases Preprocessing,
      Operation and Postprocessing.
    properties:
      preprocessing_status:
        description: >
          Status of the steps performed before the recovery of VMs for
          the Recovery Plan Job. For example, a network might be created as
          part of failover operation on the Recovery Plan before recovery of
          the VMs.
        $ref: '#/definitions/recovery_plan_job_phase_execution_status'
      operation_status:
        description: >
          Status of the steps performed for the recovery of entities for the
          Recovery Plan Job. For example, VM will be restored from a Recovery
          point in case of failover.
        $ref: '#/definitions/recovery_plan_job_phase_execution_status'
      postprocessing_status:
        description: >
          Status of steps performed after the recovery of the entities for the
          Recovery Plan Job. For example, a dynamically created network on
          failover operation can be deleted when the VMs are migrated back to
          the source Availability Zone.
        $ref: '#/definitions/recovery_plan_job_phase_execution_status'

  recovery_plan_job_phase_execution_status:
    title: Execution status of a phase in the Recovery Plan Job execution.
    description: >
      Each phase of the Recovery Plan execution has an array of steps executed.
      A step UUID and its parent UUID can be used to form the trees for
      execution status of the phases in the Recovery Plan execution. A step
      with no parent becomes the root node of a tree. For operation phase in
      the Recovery Plan execution, there will be one tree for each of the
      stages in the Recovery Plan. UUID of a stage will be the step UUID
      of the root node for corresponding tree. For example, Let RP be a
      Recovery Plan with only one stage with UUID StageUuid and this stage has
      only one VM VM1. Let an action on the Recovery Plan requires two
      operations 'Clone VM from Snapshot' and 'Power On VM' for the VM
      recovery. Let a step execution staus be
      specified by {UUID of the step, UUID of the parent step, Execution
      Status}. On the execution of the Recovery Plan RP, a step with UUID
      StageUuid will be created. Let VM1RecoveryUuid be the UUID of the step
      created for handling the recovery of the VM VM1 and StepVmCloneUuid,
      StepVmPowerOnUuid be the UUID of the sub-steps for operations 'Clone
      VM from Snapshot' and 'Power On VM' for the recovery of VM1, then
      recovery_plan_job_stages_execution_status will be
      [{StageUuid, nil, Execution Status},
       {VM1RecoveryUuid, StageUuid, Execution Status},
       {StepVmCloneUuid, VM1RecoveryUuid, Execution Status},
       {StepVmPowerOnUuid, VM1RecoveryUuid, Execution Status}]
    type: object
    properties:
      status:
        description: Execution state of a phase of Recovery Plan Job execution.
        type: string
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - COMPLETED
          - FAILED
          - ABORTED
      percentage_complete:
        description: >
          Percentage completed for a phase of the Recovery Plan Job execution.
        type: integer
        format: int32
      step_execution_status_list:
        description: >
          List of execution status of steps for a phase of the Recovery Plan
          Job execution.
        type: array
        items:
          $ref: '#/definitions/recovery_plan_job_step_execution_status'

  recovery_plan_job_step_execution_status:
    title: Execution status of a step.
    description: >
      A step executes an action and can have sub-steps required to perfom
      the action. Each step has its own UUID, parent UUID and status of
      the action it is/was performing.
    type: object
    required:
      - step_uuid
      - operation_type
      - status
    properties:
      step_uuid:
        description: UUID of a step.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      parent_step_uuid:
        description: >
          UUID of the parent step.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      operation_type:
        description: Type of operation being performed.
        type: string
        x-ntnx-enum:
          - "DELAY"
          - "STAGE_RECOVERY"
          - "ENTITY_RECOVERY"
          - "ENTITY_MIGRATION"
          - "ENTITY_RESTORATION"
          - "ENTITY_SNAPSHOT_SYNC"
          - "VM_POWER_ON"
          - "ASSIGN_FLOATING_IP"
          - "IP_CUSTOMIZATION"
          - "NETWORK_CREATION"
          - "NETWORK_DELETION"
      any_entity_reference:
        description: >
          Reference to the entity on which step is performing action.
        $ref: "#/definitions/reference"
      status:
        description: Status of this step.
        type: string
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - COMPLETED
          - FAILED
          - ABORTED
      message:
        description: User readable output/error if any.
        type: string
      start_time:
        description: Time when this step started.
        type: string
        format: date-time
      end_time:
        description: Time when this step ended.
        type: string
        format: date-time
      percentage_complete:
        description: Percentage of step completed.
        type: integer
        format: int32
      step_sequence_number:
        description: >
          Sequence number of the step among its siblings. This can be used for
          ordering the sub-steps for a step.
        type: integer
        format: int64

  recovery_plan_job_step_status:
    type: object
    title: Status of a step in the Recovery Plan Job execution.
    description: Status of a step in the Recovery Plan Job execution.
    required:
      - status
      - percentage_complete
    properties:
      status:
        description: State of a step.
        type: string
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - COMPLETED
          - FAILED
          - ABORTED
      percentage_complete:
        description: Percentage completed for a step.
        type: integer
        format: int32

  recovery_plan_job_action_input:
    type: object
    title: Inputs for the actions on the Recovery Plan Job
    description: Inputs for the actions on the Recovery Plan Job.
    properties:
      user_test_execution_result:
        description: >
          Additional meta-data given by the user on the execution status of the
          test of the Recovery Plan. This is applicable only for the cleanup
          action on the Recovery Plan Job created for test execution of the
          Recovery Plan.
        properties:
          is_execution_successful:
            description: Whether the test execution was successful.
            type: boolean
          user_comments:
            description: Comments from user on the test execution.
            type: string
          scheduled_cleanup_time:
            description: >
              Time at which entities created for the Recovery Plan test
              failover will be deleted.
            type: string
            format: date-time
  docker_registry:
    type: object
    title: Docker Registry spec
    description: Docker registry spec
    required:
    - name
    - resources
    properties:
      name:
        type: string
        description: Name of the docker registry
      resources:
        $ref: '#/definitions/docker_registry_resources'

  docker_registry_def_status:
    type: object
    title: Docker Registry
    description: Docker registry
    required:
    - name
    - resources
    properties:
      name:
        type: string
        description: Name of the docker registry
      resources:
        $ref: '#/definitions/docker_registry_resources'
      state:
        description: The state of the entity
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  docker_registry_resources:
    type: object
    title: Docker Registry Resources
    description: Docker registry resources
    required:
    - username
    - url
    - password
    properties:
      username:
        type: string
        description: User name of the docker registry
        maxLength: 64
      password:
        type: string
        description: Password of the user for the docker registry
      url:
        type: string
        description: URL of the docker registry
      certificate:
        type: string
        description: Certificate required for the private docker registry
      is_enabled:
        type: boolean
        description: |
          Flag to indicate whether the docker registry is enabled or not.
          If unset, defaults to False.
      is_system_default:
        type: boolean
        readOnly: true
        description: |
          Flag to indicate whether the docker registry is a system default

  docker_registry_image_search_list_intent_response:
    type: object
    title: Docker registry image search results response
    description: Docker registry image search results response
    required:
      - metadata
      - api_version
    properties:
      metadata:
        $ref: '#/definitions/docker_registry_list_metadata'
      entity_list:
        type: array
        items:
          $ref: '#/definitions/docker_registry_image_status'
        readOnly: true
      api_version:
        $ref: '#/definitions/api_version'

  docker_registry_image_status:
    type: object
    title: Docker registry image search result
    description: Docker registry image search result
    required:
      - name
      - is_official
      - owner
      - tag_list
    properties:
      name:
        type: string
        description: Repository name
        maxLength: 64
      description:
        type: string
        description: Repository description
        maxLength: 1000
      is_official:
        type: boolean
        description: Whether it is an official Docker Hub image
      owner:
        type: string
        description: Owner user name
      tag_list:
        type: array
        items:
          $ref: '#/definitions/docker_registry_image_tag'

  docker_registry_image_tag:
    type: object
    title: Docker Hub tagged image
    description: Docker Hub tagged image
    required:
      - name
      - size_mib
      - modified_date
    properties:
      name:
        type: string
        description: Image tag name
        maxLength: 64
      size_mib:
        type: integer
        format: int64
        description: Size of the image in MiB
      modified_date:
        type: string
        format: date-time
        description: Last modified date in RFC 3339
  # Network function definition
  network_function_resource:
    type: object
    title: Network function resource definition
    description: network function resource definition.
    required:
      - network_function_type
      - category_filter
    properties:
      network_function_type:
        description: The type of the network function.
        type: string
        x-ntnx-enum:
          - INLINE
          - TAP
      category_filter:
        description: Category filter for this network function.
        $ref: '#/definitions/category_filter'
  # Network function chain definition
  network_function_chain_resource:
    type: object
    title: network function chain resource definition
    description: network function chain resource definition.
    properties:
      network_function_list:
        description: Referenced network functions in the chain.
        type: array
        items:
          $ref: '#/definitions/network_function_resource'

  # The input object that defines a network function chain
  network_function_chain:
    type: object
    title: network function chain Input Definition
    description: network function chain Input Definition.
    required:
     - name
     - resources
    properties:
      name:
        description: Network function chain name.
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/network_function_chain_resource'
      cluster_reference:
        description: UUID of cluster that hosts the network function chain.
        $ref: '#/definitions/cluster_reference'

  # The output object that defines a network function chain
  network_function_chain_def_status:
    type: object
    title: Network function chain status definition
    description: Network function chain status definition.
    required:
     - name
     - resources
    properties:
      name:
        description: Network function chain name.
        type: string
      resources:
        $ref: '#/definitions/network_function_chain_resource'
      cluster_reference:
        description: UUID of cluster that hosts the network function chain.
        $ref: '#/definitions/cluster_reference'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  network_security_rule:
    title: Network security rule
    description: "Network security rule"
    required:
      - name
      - resources
    properties:
      name:
        type: string
        maxLength: 64
      description:
        type: string
        maxLength: 1000
      resources:
        $ref: "#/definitions/network_security_rule_resources"

  network_security_rule_def_status:
    title: Network security rule status
    description: "Network security rule status"
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: "#/definitions/network_security_rule_resources"

  network_security_rule_resources:
    title: Network security rule resources
    description: "Network security rule resources"
    type: object
    x-ntnx-one-of:
      - required:
        - app_rule
      - required:
        - isolation_rule
      - required:
        - quarantine_rule
    properties:
      app_rule:
        title: App rule
        description: >
            These rules govern what flows are allowed. Target group
            is a required attribute.  Empty inbound_allow_list will not
            anything into target group. Empty outbound_allow_list will allow
            everything from target group.
        type: object
        properties:
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            type: array
            items:
              $ref: '#/definitions/network_rule'
          outbound_allow_list:
            type: array
            items:
              $ref: '#/definitions/network_rule'
          action:
            description: Type of deployment of the rule.
            type: string
            x-ntnx-enum:
             - APPLY
             - MONITOR
      isolation_rule:
        title: Isolation rule
        description: "These rules are used for environmental isolation."
        type: object
        properties:
          first_entity_filter:
            description: "The set of categories that matching VMs need to have."
            $ref: '#/definitions/category_filter'
          second_entity_filter:
            description: "The set of categories that matching VMs need to have."
            $ref: '#/definitions/category_filter'
          action:
            description: Type of action.
            type: string
            x-ntnx-enum:
             - APPLY
             - MONITOR
      quarantine_rule:
        title: Quarantine rule
        description: >
            These rules are used for quarantining suspected VMs.
            Target group is a required attribute.  Empty inbound_allow_list
            will not allow anything into target group. Empty
            outbound_allow_list will allow everything from target group.
        type: object
        properties:
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            type: array
            items:
              $ref: '#/definitions/network_rule'
          outbound_allow_list:
            type: array
            items:
              $ref: '#/definitions/network_rule'
          action:
            description: Type of action.
            type: string
            x-ntnx-enum:
             - APPLY
             - MONITOR

  network_rule:
    title: Network rule
    description: "Network rule"
    type: object
    properties:
      peer_specification_type:
        type: string
        description: The set of categories that matching VMs need to have.
        x-ntnx-enum:
         - ALL
         - FILTER
         - IP_SUBNET
      filter:
        description: "The set of categories that matching VMs need to have."
        $ref: '#/definitions/category_filter'
      ip_subnet:
        $ref: "#/definitions/ip_subnet"
      protocol:
        type: string
        description: "Select a protocol to allow.  Multiple protocols can be
            allowed by repeating network_rule object.  If a protocol is not
            configured in the network_rule object then it is allowed."
        x-ntnx-enum:
         - ALL
         - ICMP
         - TCP
         - UDP
      tcp_port_range_list:
        type: array
        description: "List of TCP ports that are allowed by this rule."
        items:
          $ref: "#/definitions/port_range"
      udp_port_range_list:
        type: array
        description: "List of UDP ports that are allowed by this rule."
        items:
          $ref: "#/definitions/port_range"
      icmp_type_code_list:
        type: array
        description: "List of ICMP types and codes allowed by this rule."
        items:
          type: object
          properties:
            type:
              type: integer
              format: int32
            code:
              type: integer
              format: int32
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
      expiration_time:
        type: string
        description: "Timestamp of expiration time."
        maxLength: 64

  target_group:
    title: Target group
    description: "Target group"
    type: object
    properties:
      peer_specification_type:
        description: "Way to identify the object for which rule is applied."
        type: string
        x-ntnx-enum:
         - FILTER
      filter:
        description: "The set of categories that matching VMs need to have."
        $ref: '#/definitions/category_filter'
      default_internal_policy:
        description: "Default policy for communication within target group."
        type: string
        x-ntnx-enum:
         - ALLOW_ALL
         - DENY_ALL
  software_list_intent_response:
    type: object
    title: List of software
    description: Available software on Nutanix portal
    required:
    - metadata
    - entities
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/software_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/portal_software'

  # To support new software type, add software type in both path parameter
  # and common.yaml
  portal_software:
    type: object
    title: Software information
    description: Software information from Nutanix Portal
    properties:
      software_type:
        $ref: '#/definitions/software_type'
      version:
        description: Software version string
        type: string
      size_bytes:
        description: Total size of the software file in bytes
        type: integer
        format: int64
      md5sum:
        description: MD5 checksum of the software file
        type: string
      compatible_pe_version_list:
        description: List of Prism Element compatible versions
        type: array
        items:
          type: string
      compatible_version_list:
        description: |
          List of software versions that this version can be upgraded from
        type: array
        items:
          type: string
      release_date:
        description: |
          Release date of this software in RFC3339 format.
        type: string
        format: date-time
      release_note_url:
        description: |
          URL to point to the support portal release note of this software.
          Currently only set and used for NOS releases
        type: string
      upgrade_notification:
        $ref: '#/definitions/upgrade_notification'

  upgrade_notification:
    title: Pre upgrade notification
    description: Pre upgrade notification
    type: object
    properties:
      title:
        description: Title of the notification
        type: string
      proceed_message:
        type: string
      cancel_message:
        type: string
      description_item_list:
        description: Description items of the notification
        type: array
        items:
          $ref: '#/definitions/description_item'

  description_item:
    type: object
    title: Description item of upgrade notification
    description: Description item of upgrade notification
    properties:
      severity_level:
        type: string
      message:
        type: string
      affected_release_list:
        description: Earlier releases to which the notification applies.
        type: array
        items:
          type: string
  # The input object that defines the specification of a new prism central
  prism_central:
    type: object
    title: Prism Central
    description: Prism central deployment definition.
    required:
      - resources
    properties:
      resources:
        type: object
        description: Prism central deployment resources.
        required:
          - version
          - pc_vm_list
        properties:
          version:
            description: The desired version of Prism Central.
            type: string
          should_auto_register:
            description: >
              Indicates if the new prism central should be automatically
              register to the cluster.
            type: boolean
            default: false
          virtual_ip:
            description: >
              The desired virtual IP address of Prism Central cluster.
            type: string
            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          initial_password:
            description: Initial boot up password for new created Prism Central.
            type: string
            format: password
          pc_vm_list:
            type: array
            items:
              $ref: '#/definitions/pc_vm'





  prism_central_nodes:
    type: object
    title: Prism Central Nodes
    description: Prism central nodes definition.
    required:
      - resources
    properties:
      resources:
        type: object
        description: Prism central nodes resources.
        required:
          - pc_vm_list
        properties:
          pc_vm_list:
            type: array
            items:
              $ref: '#/definitions/pc_vm'

  prism_central_request_status:
    type: object
    title: Prism central cluster expansion status
    description: Prism central cluster expansion status definition.
    required:
      - task_uuid
      - resources
    properties:
      task_uuid:
        description: Task UUID.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      resources:
        $ref: '#/definitions/prism_central_nodes'


  pc_vm:
    type: object
    title: Prism central VM configuration
    description: Prism central VM configuration.
    required:
      - vm_name
      - num_sockets
      - memory_size_bytes
      - data_disk_size_bytes
      - nic_list
    properties:
      vm_uuid:
        description: VM uuid.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      vm_name:
        description: VM name.
        maxLength: 64
        type: string
      container_uuid:
        description: Container uuid.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      num_sockets:
        description: Number of sockets allocated per VM.
        type: integer
        format: int64
      memory_size_bytes:
        description: Memory in bytes.
        type: integer
        format: int64
      data_disk_size_bytes:
        description: Data disk size in bytes.
        type: integer
        format: int64
      dns_server_ip_list:
        description: Array of DNS IP addresses.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$

      cluster_reference:
        description: >
          Reference to the cluster where this prism central VM needs to be
          deployed.
        $ref: '#/definitions/cluster_reference'
      power_state:
        description: The current power state of the VM.
        type: string
        readOnly: true
        x-ntnx-enum:
        - "ON"
        - "OFF"
      status:
        description: Prism central VM status
        type: string
        readOnly: true
        x-ntnx-enum:
          - NORMAL
          - TO_BE_ADDED
          - OK_TO_BE_REMOVED
          - NEW_NODE

      nic_list:
        type: array
        items:
          $ref: '#/definitions/pc_vm_nic_configuration'

  pc_vm_nic_configuration:
    title: Virtual Machine NIC
    description: Virtual Machine NIC.
    type: object
    properties:
      ip_list:
        description: Network IP address.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      network_configuration:
        $ref: '#/definitions/network_config'

  network_config:
    type: object
    title: Network Configuration for PC VM.
    description: Network Configuration for PC VM.
    properties:
      network_uuid:
        description: Network uuid.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      subnet_mask:
        description: Subnet mask IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      default_gateway:
        description: Gateway IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
  # The input object that defines a rackable unit.
  rackable_unit_resources:
    type: object
    title: Rackable Unit Entity
    description: Rackable Unit input definition
    properties:
      rack_reference:
        description: The reference of rack, which this rackable unit belongs to
        $ref: '#/definitions/rack_reference'

  # Rackable Unit definition.
  rackable_unit:
    type: object
    title: Rackable Unit Entity
    description: Rackable Unit entity definition
    properties:
      resources:
        $ref: '#/definitions/rackable_unit_resources'

  # The output object that defines a rackable unit.
  rackable_unit_def_status:
    type: object
    title: Rackable Unit Entity Status
    description: >
      Rackable unit entity status definition. A rackable unit is the physical
      chassis which contains a set of nodes. This entity is currently defined in
      context of a cluster only. Hence, multiple rackable unit entities may be
      present with same serial and same model, if they belong to different
      clusters (when viewed from PC).
    required:
      - serial
      - model
      - resources
    properties:
      serial:
        description: The rackable unit serial
        type: string
      model:
        description: The rackable unit model
        type: string
      resources:
        $ref: '#/definitions/rackable_unit_resources'
      state:
        description: The state of the rackable unit entity
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  host:
    type: object
    title: Host Input definition
    description: Host Definition.
    required:
    - resources
    properties:
      name:
        description: Host Name.
        type: string
        maxLength: 64
      resources:
        description: Host resources.
        type: object
        properties:
          controller_vm:
            $ref: '#/definitions/controller_vm'
          windows_domain:
            $ref: '#/definitions/windows_domain'
          failover_cluster:
            $ref: '#/definitions/failover_cluster'


  # The output object that defines a host
  host_def_status:
    type: object
    title: Host Status
    description: Host Status definition.
    required:
    - resources
    properties:
      name:
        description: Host Name.
        type: string
      cluster_reference:
        $ref: '#/definitions/reference'
      state:
        description: The state of the entity
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        description: Host resources.
        type: object
        title: Host Resources
        properties:
          cpu_model:
            description: Host CPU model.
            type: string
          cpu_capacity_hz:
            description: Host CPU capacity.
            type: integer
            format: int64
          num_cpu_cores:
            description: Number of CPU cores on Host.
            type: integer
            format: int64
          num_cpu_sockets:
            description: Number of CPU sockets.
            type: integer
            format: int64
          memory_capacity_mib:
            description: Host memory capacity in MiB.
            type: integer
            format: int64
          serial_number:
            description: Node serial number.
            type: string
          monitoring_state:
            description: Host monitoring status.
            type: string
            x-ntnx-enum:
            - MONITORED
            - NOT_MONITORED
          host_nics_id_list:
            description: Host NICs.
            type: array
            items:
              type: string
          windows_domain:
            $ref: '#/definitions/windows_domain'
          failover_cluster:
            $ref: '#/definitions/failover_cluster'
          ipmi:
            $ref: '#/definitions/ipmi'
          controller_vm:
            $ref: '#/definitions/controller_vm'
          hypervisor:
            $ref: '#/definitions/hypervisor'
          block:
            $ref: '#/definitions/block'
          rackable_unit_reference:
            $ref: '#/definitions/rackable_unit_reference'
          host_disks_reference_list:
            type: array
            items:
              $ref: '#/definitions/disk_reference'
          gpu_list:
            description: List of GPUs on the host.
            type: array
            items:
              $ref: '#/definitions/host_gpu'
          gpu_driver_version:
            description: Host GPU driver version.
            type: string
          host_type:
            description: Host type.
            type: string
            x-ntnx-enum:
              - HYPER_CONVERGED
              - COMPUTE_ONLY

  hypervisor:
    description: Host Hypervisor information.
    type: object
    title: Hypervisor Info
    required:
    - ip
    properties:
      ip:
        description: Hypervisor IP.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      hypervisor_full_name:
        description: Full name of hypervisor running on Host.
        type: string
      num_vms:
        description: Num of VMs running on this Host.
        type: integer
        format: int64

  controller_vm:
    description: Host controller vm information.
    type: object
    title: Host Controller VM Info
    required:
    - ip
    properties:
      ip:
        description: Controller VM IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
        readOnly: true
      nat_ip:
        description: Controller VM NAT IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      nat_port:
        description: Controller VM NAT port.
        type: integer
        format: int32
      oplog_usage:
        $ref: '#/definitions/oplog_usage'

  # Oplog Usage
  oplog_usage:
    description: oplog disk usage.
    type: object
    title: Host oplog disk usage stats
    properties:
      oplog_disk_pct:
        description: Oplog disk size used in percentage.
        type: number
        format: float
      oplog_disk_size:
        description: Size of oplog disk in bytes.
        type: integer
        format: int64

  ipmi:
    description: Host IPMI info.
    type: object
    title: Host IPMI info
    required:
    - ip
    properties:
      ip:
        description: IPMI IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$


  # Host serial info
  block:
    description: Host block config info.
    type: object
    title: Host block information
    properties:
      block_serial_number:
        description: Rackable unit serial number.
        type: string
      block_model:
        description: Rackable unit model name.
        type: string

  windows_domain:
    description: Hyper-V node domain.
    type: object
    title: Hyper-v Domain
    required:
    - domain_credential
    properties:
      name:
        description: >
          The name of the node to be renamed to during domain-join. If not
          given,a new name will be automatically assigned.
        type: string
      domain_name:
        description: Full name of domain.
        type: string
      organization_unit_path:
        description: Path to organization unit in the domain.
        type: string
      name_prefix:
        description: The name prefix in the domain in case of CPS deployment.
        type: string
      name_server_ip:
        description: >
          The ip of name server that can resolve the domain name. Required
          during joining domain.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      domain_credential:
        $ref: '#/definitions/credentials'

  failover_cluster:
    description: Hyper-V failover cluster.
    title: Hyper-v failover cluster
    required:
    - domain_credential
    properties:
      name:
        description: Name of the failover cluster.
        type: string
      ip:
        description: IP address of the failover cluster.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      domain_credential:
        $ref: '#/definitions/credentials'

  # Host GPU information
  host_gpu:
    type: object
    title: Host GPU
    description: Host GPU.
    properties:
      name:
        description: Name of the host GPU.
        type: string
      mode:
        description: The type of this GPU.
        type: string
        x-ntnx-enum:
         - PASSTHROUGH_GRAPHICS
         - PASSTHROUGH_COMPUTE
         - VIRTUAL
      device_id:
        description: The device ID of the GPU.
        type: integer
        format: int32
      vendor:
        description: The vendor of the GPU.
        type: string
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD
      status:
        description: Current status of the physical GPU.
        type: string
        x-ntnx-enum:
          - UNUSED
          - USED_FOR_PASSTHROUGH
          - USED_FOR_VIRTUAL
      index:
        description: The index of the vGPU within physical GPU resource.
        type: integer
        format: int32
      num_vgpus_allocated:
        description: >
          The number of vGPU instances allocated for this physical GPU resource.
        type: integer
        format: int32
      assignable:
        description: Whether this vGPU instance can be allocated to a VM.
        type: boolean
      pci_address:
        description: GPU {segment:bus:device:function} (sbdf) address.
        type: string
      numa_node:
        description: NUMA node this GPU belongs to.
        type: integer
        format: int32
      guest_driver_version:
        description: Last determined guest driver version.
        type: string
      frame_buffer_size_mib:
        description: GPU frame buffer size in MiB.
        type: integer
        format: int64
      num_virtual_display_heads:
        description: Number of supported virtual display heads.
        type: integer
        format: int32
      max_resolution:
        description: Maximum resolution per display head.
        type: string
      fraction:
        description: Fraction of the physical GPU.
        type: integer
        format: int32
      uuid:
        description: UUID of the GPU.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      license_list:
        # Each entry is of the form "license_id:license_string".
        description: List of license types associated with this GPU.
        type: array
        items:
          type: string
      consumer_reference:
        # Describes who this host_gpu is attached to (kind, uuid)
        $ref: '#/definitions/reference'

  host_ipmi_cmd_result:
    type: object
    title: IPMI Command
    description: IPMI Command
    properties:
      result:
        type: string
        description: Result of the command

  host_ipmi_args:
    type: object
    title: IPMI Args
    description: Arguments to the IPMI command
    required:
     - args
    properties:
      args:
        type: string
        description: IPMI arguments
  # The dummy input object will be changed when update disk api is finalized
  disk:
    title: Disk specification.
    description: Disk specification.
    type: object

  # The output object that defines a disk
  disk_def_status:
    title: Disk object
    description: Disk object.
    type: object
    required:
      - resources
    properties:
      state:
        description: The state of the disk.
        type: string
      message_list:
        type: array
        description: Any error messages for the disk, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        description: Disk resources.
        type: object
        properties:
          serial_number:
            description: Disk serial number.
            type: string
          slot_number:
            description: Disk location in a node.
            type: integer
            format: int32
          mount_path:
            description: Mount path.
            type: string
          model:
            description: Disk model.
            type: string
          vendor:
            description: Disk vendor.
            type: string
          storage_tier_type:
            description: Storage tier type.
            type: string
            x-ntnx-enum:
             - PCIE_SSD
             - SATA_SSD
             - HDD
          storage_pool_uuid:
            description: Storage pool uuid.
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          host_reference:
            $ref: '#/definitions/reference'
          size_bytes:
            description: Disk size in bytes.
            type: integer
            format: int64
          firmware_version:
            description: Firmware version.
            type: string
          state_list:
            $ref: '#/definitions/disk_state_list'
          enabled_features_list:
            description: |
              Disk feature flags
              - 'CanAddAsNewDisk': Flag to indicate if this disk can be added as
                 new disk.
              - 'CanAddAsOldDisk': Flag to indicate if the disk can be added as
                 old disk.
              - 'BootDisk': Flag to indicate if its a boot disk.
              - 'OnlyBootDisk': Flag to indicate if the disk is boot only and
                 no disk operation to be run on it.
              - 'SelfEncryptingEnabled': Flag to indicate if the disk has self
                 encryption enabled.
              - 'PasswordProtected': Flag to indicate if the disk is password
                 protected.
            type: array
            items:
              type: string
              x-ntnx-enum:
              - CAN_ADD_AS_NEW_DISK
              - CAN_ADD_AS_OLD_DISK
              - BOOT_DISK
              - ONLY_BOOT_DISK
              - SELF_ENCRYPTING_ENABLED
              - PASSWORD_PROTECTED

  # Disk state configuration
  disk_state_list:
    title: Disk State List
    description: |
      Array of disk states
      - 'DataMigrationInitiated': Data Migration Initiated.
      - 'MarkedForRemovalButNotDetachable': Marked for removal, data
         migration is in progress.
      - 'ReadyToDetach': Flag to indicate the disk is detachable.
      - 'DataMigrated': Flag to indicate if data migration is completed for
         this disk.
      - 'MarkedForRemoval': Flag to indicate if the disk is marked for
         removal.
      - 'Online': Flag to indicate if the disk is online.
      - 'Bad': Flag to indicate if the disk is bad.
      - 'Mounted': Flag to indicate if the disk is mounted.
      - 'UnderDiagnosis': Flag to indicate if the disk is under diagnosis.
    type: array
    items:
      type: string
      x-ntnx-enum:
      - DATA_MIGRATION_INITIATED
      - MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE
      - READY_TO_DETACH
      - DATA_MIGRATED
      - MARKED_FOR_REMOVAL
      - ONLINE
      - BAD
      - MOUNTED
      - UNDER_DIAGNOSIS
  remote_connection_token:
    type: object
    title: Token info
    description: Token information for communicating with remote peer
    properties:
      access_token:
        description: Access token
        type: string
      refresh_token:
        description: Refresh token
        type: string
      client_id:
        description: Client Id
        type: string
      client_secret:
        description: Client Secret
        type: string
      refresh_token_endpoint:
        description: Refresh token endpoint
        type: string

  # Remote Connection info
  remote_connection_info:
    type: object
    title: Connection info
    description: Connection information
    properties:
      token:
        $ref: '#/definitions/remote_connection_token'
      peer_remote_connection_uuid:
        description: Connection UUID for remote Peer
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      cluster_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        description: UUID of cluster
      node_address_list:
        type: array
        items:
          $ref: '#/definitions/address'
      cluster_function:
        type: string
        description: cluster function string
        x-ntnx-enum:
          - ACCESS_GRANT_SYSTEM
          - AOS
          - JUMP_BOX
          - PRISM_CENTRAL
          - XI_PORTAL
      additional_capabilities:
        type: array
        items:
          type: string
          description: Additional capabilities to enable. Set by Initiator.
          x-ntnx-enum:
            - SEED_REMOTE_AZ
            - IGNORE_MISSING_REMOTE_PORT

  basic_credential:
    type: object
    title: Basic Credentials to connect with remote endpoint
    description: Basic Credentials to connect with remote endpoint
    properties:
      username:
        description: |
          username of authorized user on remote cluster,
          must for BASIC auth_type
        type: string
      password:
        description: |
          password of authorized user on remote cluster,
          must for BASIC auth_type
        type: string

  remote_connection_credential:
    type: object
    title: Credential to connect with remote endpoint
    description: Credentials to connect with remote endpoint
    properties:
      auth_type:
        description: Type of credentials to use
        type: string
        x-ntnx-enum:
          - BASIC
          - BEARER
      basic_credential:
        $ref: '#/definitions/basic_credential'
      bearer_token:
        description: |
          token to use with bearer authorization, must for BEARER auth_type
        type: string

  # Remote Connection resource
  remote_connection_resources:
    type: object
    title: Remote connection resources
    description: Remote connection resources
    properties:
      remote_address:
        $ref: '#/definitions/address'
      remote_credential:
        $ref: '#/definitions/remote_connection_credential'
      role:
        description: Role of the cluster in remote connection
        x-ntnx-enum:
          - INITIATOR
          - ACCEPTOR
        type: string
        default: INITIATOR
      local_connection_info:
        $ref: '#/definitions/remote_connection_info'
      remote_connection_info:
        $ref: '#/definitions/remote_connection_info'

  # The object that defines a Remote Connection
  remote_connection:
    type: object
    title: Remote connection information
    description: Remote connection information.
    required:
     - name
     - description
     - resources
    properties:
      name:
        description: Remote connection name.
        type: string
        maxLength: 64
      description:
        description: Remote connection description
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/remote_connection_resources'

  # The output object that defines a Remote Connection
  remote_connection_def_status:
    type: object
    title: Remote connection status definition
    description: Remote connection status definition
    required:
     - name
     - description
     - resources
    properties:
      name:
        description: Remote connection name
        type: string
      description:
        description: Remote connection description
        type: string
      resources:
        $ref: '#/definitions/remote_connection_resources'
      state:
        description: The state of the remote connection entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  remote_rpc_request_input:
    description: Request spec for performing remote RPC execution.
    title: Request spec for performing remote RPC execution
    required:
    - rpc_payload
    properties:
      rpc_payload:
        description: Argument to be passed to the RPC in bytes.
        type: string
        format: bytes
  availability_zone_resources:
    type: object
    title: Availability Zone resources
    description: Availability Zone resources
    required:
     - management_plane_type
    properties:
      management_url:
        description: |
          Identifier of the management plane. This could be the URL of the
          PC or the FQDN of Xi portal.
        type: string
      management_plane_type:
        description: |
          This defines the type of management entity. Its value can be Xi,
          PC, AWS, Azure or Local. Local AZs are auto-created and cannot
          be deleted. How to talk to management entity will be decided
          based on the type of management plane.
        type: string
        x-ntnx-enum:
         - PC
         - Xi
         - Local
      region:
        description: |
          Cloud region where the data will be replicated to. Based on the
          cloud provider type the available list of regions will differ.
        type: string
      credentials:
        description: |
          Credentials required to connect to a specific management plane.
        type: object
        properties:
          pc:
            description: Credentials for connecting to Prism Central.
            type: object
            required:
              - remote_connection_reference
            properties:
              remote_connection_reference:
                description: |
                  Reference to the remote connection entity for PC
                  communication.
                $ref: "#/definitions/remote_connection_reference"

  availability_zone:
    type: object
    title: Availability Zone creation/modification spec
    description: Availability Zone creation/modification spec
    required:
     - name
     - resources
    properties:
      name:
        description: Availability Zone Name
        type: string
      resources:
        $ref: '#/definitions/availability_zone_resources'

  availability_zone_def_status:
    type: object
    title: Availability Zone creation/modification spec
    description: Availability Zone creation/modification spec
    required:
     - name
     - resources
    properties:
      name:
        description: Availability Zone Name
        type: string
      resources:
        $ref: '#/definitions/availability_zone_resources'
  entity_sync_input:
    type: object
    title: Entity sync input definition.
    description: Entity sync request parameters.
    properties:
      should_override:
        description: |
          Indicates whether to override entities in case of conflicts.
        type: boolean
  protection_rule_resources:
    type: object
    title: Protection Rule resources
    description: |
      Protection rule encodes the overall topology of all the availability
      zones where the entity is replicated to. This encoding allows the system
      to figure out where the entity should be running in the case of one or
      more availability zone failures.
    required:
     - ordered_availability_zone_list
     - availability_zone_connectivity_list
    properties:
      start_time:
        description: |
          Time of the day, the policy will be started. This is in "<x>h:<y>m"
          format. The values must be between 00h:00m and 23h:59m. For example
          user specified 18h:00m and the current time is 17h:00m then the first
          snapshot will be captured at 18h:00m. If the current time is 19h:00m
          then the first snapshot will be captured at 18h:00m next day. If not
          set, policy will be applicable immediately.
        type: string
      ordered_availability_zone_list:
        description: |
          A list of availability zones, each of which, receives a replica
          of the data for the entities protected by this protection rule.
          The order of the availability zones in the list determines the
          preference order (highest to lowest) for the entity to run in the
          case of failure of one or more availability zones. For example,
          if this list is [A, B, C, D], then the entity will prefer to run
          on A unless A has failed, in which case, the entity will run on
          the second choice, B. Failover of the entity is not automatic but
          this information is used by DR runbook to failover an entity to
          the desired availability zone.
        type: array
        items:
          type: object
          properties:
            availability_zone_url:
              description: |
                The FQDN or IP address of the availability zone. Every
                Prism Central deployment acts as an availability zone.
              type: string
            cluster_uuid:
              description: |
                UUID of specific cluster to which we will be replicating.
                This need to set only if availability zone is of type PC.
              type: string
              pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      availability_zone_connectivity_list:
        description: |
          This encodes the datapipes between various availability zones and
          the backup policy of the pipes. For example, [1, 2, 3600],
          [2, 3, 3600], [4, 5, 15000], [2, 6, 4200]. Note 2 here means
          the entry at index 2 in the ordered_availability_zone_list.
          And 3600 is the RPO (Recovery Point Objective) in seconds between
          the two availability zones.
        type: array
        items:
          type: object
          properties:
            source_availability_zone_index:
              description: |
                Index of the availability zone in
                ordered_availability_zone_list. This represents the source
                availability zone where the entity is running. Index starts
                at 0.
              type: integer
              format: int32
            destination_availability_zone_index:
              description: |
                Index of the availability zone in
                ordered_availability_zone_list. This represents the
                availability zone where the entity needs to be replicated
                to. Index starts at 0.
              type: integer
              format: int32
            snapshot_schedule_list:
              description: |
                Snapshot schedules for the pair of the availability zones.
              type: array
              items:
                type: object
                properties:
                  recovery_point_objective_secs:
                    description: |
                      A recovery point objective (RPO) is the maximum
                      acceptable amount of data loss. RPO is measured in
                      time (in seconds) and then dictates disaster recovery
                      procedures. For example, if the RPO is set to 30
                      minutes, then a backup of the entity is required to
                      be done every 30 minutes.
                    type: integer
                    format: int32
                  snapshot_type:
                    description: |
                      Crash consistent or Application Consistent snapshot
                    type: string
                    x-ntnx-enum:
                     - CRASH_CONSISTENT
                     - APPLICATION_CONSISTENT
                  local_snapshot_retention_policy:
                    description: |
                      The following describes the local snapshot retention
                      policy corresponding to the snapshot schedule.
                    $ref: '#/definitions/snapshot_retention_policy'
                  remote_snapshot_retention_policy:
                    description: |
                      The following describes the snapshot retention policy
                      for a given replication target availability zone.
                    $ref: '#/definitions/snapshot_retention_policy'
      category_filter:
        description: Filters for entities to be included for protection.
        $ref: '#/definitions/category_filter'

  snapshot_retention_policy:
    type: object
    title: Snapshot Retention Policy
    description: |
      This describes the snapshot retention policy for this
      availability zone. This translates into how many snapshots
      taken as part of this protection rule need to be retained
      on this availability zone.
    properties:
      num_snapshots:
        description: |
          Number of snapshots need to be retained. This will be set in case of
          linear snapshot retention.
        type: integer
        format: int32
      rollup_retention_policy:
        type: object
        title: Snapshot Retention Policy for rollup schedules
        description: |
          Maximum snapshot retention time with rollup schedules.
        properties:
          snapshot_interval_type:
            description: |
              Snapshot interval period.
            type: string
            x-ntnx-enum:
             - HOURLY
             - DAILY
             - WEEKLY
             - MONTHLY
             - YEARLY
          multiple:
            description: |
              Multiplier to 'snapshot_interval_type'. For example if
              'snapshot_interval_type' is "YEARLY" and 'multiple' is 5, then 5
              years worth of rollup snapshots will be retained.
            type: integer
            format: int32

  protection_rule:
    type: object
    title: Protection Rule creation/modification spec
    description: protection Rule creation/modification spec
    required:
     - name
     - resources
    properties:
      name:
        description: Protection Rule name
        type: string
        maxLength: 64
      description:
        description: A description for the protection rule.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/protection_rule_resources'

  protection_rule_def_status:
    type: object
    title: Protection Rule creation/modification status
    description: Protection Rule creation/modification status
    required:
     - name
     - resources
    properties:
      name:
        description: Protection Rule name
        type: string
      state:
        description: The state of the protection rule.
        type: string
      message_list:
        type: array
        description: |
          Any error messages for the protection rule, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      description:
        description: A description for the protection rule.
        type: string
      resources:
        $ref: '#/definitions/protection_rule_resources'

  affected_entity_list:
    type: object
    title: Entity information list
    description: |
      Contains the list of entities. The entity information contains
      entity_kind, entity_name and entity_uuid.
    required:
      - entity_list
    properties:
      entity_list:
        type: array
        items:
          $ref: "#/definitions/affected_entity"

  affected_entity:
    type: object
    title: Entity information
    description: |
      Information about an entity that is affected by a protection rule. This
      is like a union, at a time either VM or VG reference will be set.
    properties:
      vm_reference:
        description: Reference to the VM entity.
        $ref: '#/definitions/vm_reference'
      conflicting_protection_rule_list:
        description: |
          List of reference to conflicting protection rules for an entity. If
          an entity is filtered by multiple protection rules, Kanon service can
          not protect that entity. We will flag those entities along with the
          protection rules. This is set only incase if the entity has conflicts.
        type: array
        items:
          type: object
          properties:
            protection_rule_reference:
              description: |
                Protection rule reference that has conflicts over this entity.
              $ref: '#/definitions/protection_rule_reference'
  report_instance:
    type: object
    title: Report instance definition.
    description: Report instance creation/modification spec.
    required:
     - resources
    properties:
      name:
        description: Report instance name.
        type: string
        maxLength: 64
      resources:
        type: object
        title: Report Instance.
        description: Report instance resources.
        required:
          - report_config_reference
        properties:
          description:
            description: |
              Description of the report. This will be part of generated report.
            type: string
            maxLength: 1000
          report_config_reference:
            $ref: '#/definitions/report_config_reference'
          save_instance:
            description: Generated instance saved or not.
            type: boolean
          data_start_time:
            description: |
              UTC date and time in "%Y-%m-%d %H:%M:%S" format for data
              collection start point.
            type: string
            format: date-time
          data_end_time:
            description: |
              UTC date and time in "%Y-%m-%d %H:%M:%S" format for data
              collection end point.
            type: string
            format: date-time
          recipient_list:
            description: Recipients in addition to specified on the report config.
            type: array
            maxItems: 100
            items:
              $ref: '#/definitions/recipient'
          runtime_key_values:
            $ref: '#/definitions/generic_key_value_pair'

  report_instance_def_status:
    type: object
    title: Report instance definition.
    description: Report instance creation/modification spec.
    required:
     - name
     - resources
    properties:
      name:
        description: Report instance name.
        type: string
      state:
        description: The state of the cluster entity.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        type: object
        title: Report Instance.
        description: Report instance resources.
        properties:
          description:
            description: Description of the report.
            type: string
          report_config_reference:
            $ref: '#/definitions/report_config_reference'
          generation_status:
            description: Generation status of the report.
            type: string
          error_message:
            description: Error message when generation failed.
            type: string
          save_instance:
            description: Generated instance saved or not.
            type: boolean
          data_start_time:
            description: |
              UTC date and time in "%Y-%m-%d %H:%M:%S" format for data
              collection start point.
            type: string
            format: date-time
          data_end_time:
            description: |
              UTC date and time in "%Y-%m-%d %H:%M:%S" format for data
              collection end point.
            type: string
            format: date-time
          recipient_list:
            description: |
              Recipients in addition to specified on the report config.
            type: array
            items:
              $ref: '#/definitions/recipient'
          runtime_key_values:
            $ref: '#/definitions/generic_key_value_pair'
  report_config:
    type: object
    title: Report Config creation/modification spec
    description: Report Config creation/modification spec.
    required:
     - name
     - resources
    properties:
      name:
        description: Name of the report config.
        type: string
        maxLength: 64
      resources:
        type: object
        title: Report Config Resources.
        description: Report config resources definition.
        required:
         - template
        properties:
          description:
            description: Description of the common report config.
            type: string
            maxLength: 1000
          schedule:
            $ref: '#/definitions/schedule'
          start_time_offset_secs:
            description: Start time for data collection during report generation.
            type: integer
            format: int64
          end_time_offset_secs:
            description: End time for data collection during report generation.
            type: integer
            format: int64
          retention_policy:
            $ref: '#/definitions/retention_policy'
          notification_policy:
            $ref: '#/definitions/notification_policy'
          template_spec_version:
            description: Version of the template spec.
            type: string
          template:
            $ref: '#/definitions/report_template'

  report_config_def_status:
    type: object
    title: Report Config creation/modification spec.
    description: Report Config creation/modification spec.
    required:
     - name
     - resources
    properties:
      name:
        description: Name of the report config.
        type: string
      state:
        description: The state of the report config entity.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        type: object
        title: Report Config Resources.
        description: Description of report config.
        properties:
          description:
            description: Description of the common report config.
            type: string
          schedule:
            $ref: '#/definitions/schedule'
          start_time_offset_secs:
            description: Offset for start time for data collection during report generation.
            type: integer
            format: int64
          end_time_offset_secs:
            description: Offset for end time for data collection during report generation.
            type: integer
            format: int64
          out_of_box_report:
            description: Flag specifying if Report Config is a pre defined report.
            type: boolean
          retention_policy:
            $ref: '#/definitions/retention_policy'
          notification_policy:
            $ref: '#/definitions/notification_policy'
          template_spec_version:
            description: Version of the template spec.
            type: string
          template:
            $ref: '#/definitions/report_template'

  report_template:
    type: object
    title: Report Template.
    description: Report Template.
    required:
     - template_rows
    properties:
      name:
        description: Name of the report template.
        type: string
        maxLength: 64
      template_rows:
        description: List of template rows.
        type: array
        items:
          $ref: '#/definitions/template_row'
      sections:
        description: List of sections.
        type: array
        items:
          $ref: '#/definitions/section'
      report_customization:
        description: Report level customizations.
        $ref: '#/definitions/report_customization'

  notification_policy:
    type: object
    title: Notification policy.
    description: Notification policy.
    properties:
      email_config:
        $ref: '#/definitions/email_config'

  email_config:
    type: object
    title: Report Email Configuration.
    description: Report Email configuration.
    properties:
      recipient_list:
        description: Email recipients list.
        type: array
        maxItems: 100
        items:
          $ref: '#/definitions/recipient'
      email_subject:
        description: Subject of email to be sent for report.
        type: string
      email_body:
        description: Content of the email body.
        type: string

  recipient:
    type: object
    title: Recipient Details.
    description: Recipient of the report email.
    properties:
      email_address:
        description: Email address of the recipient.
        type: string
        pattern: (^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)
      recipient_name:
        description: Name of the recipient.
        type: string
        maxLength: 64

  retention_policy:
    type: object
    title: Generated Report retention policy.
    description: |
      Retention policy for generated reports. Only one of retention_time_secs and instance_count
      should be specified.
    properties:
      retention_time_secs:
        description: Retention period in seconds for the generated reports.
        type: integer
        format: int64
      instance_count:
        description:  Number of the instances to be be retained.
        type: integer
        format: int64

  template_row:
    type: object
    title: Template Row Details.
    description: Template Row Details.
    properties:
      row_element_list:
        type: array
        description: List of row elements.
        items:
          $ref: '#/definitions/row_element'

  row_element:
    type: object
    title: Row Element Details.
    description: |
      Row Element Details. Each row element consists of either a widget config or a
      section Id.
    x-ntnx-one-of:
    - required:
      - section_id
    - required:
      - widget_id
    - required:
      - widget_config
    properties:
      section_id:
        type: string
        description: Identifier for the section.
      widget_id:
        type: string
        description: Identifier for a predefined widget.
      widget_config:
        $ref: '#/definitions/widget_config'

  widget_config:
    type: object
    title: Configuration of the widget.
    description: Configuration of the widget.
    required:
     - widget_type
    properties:
      entity_type:
        description: Type of the entity.
        type: string
      widget_heading:
        description: Heading for a widget.
        type: string
        maxLength: 64
      widget_description:
        description: Description of the entity.
        type: string
        maxLength: 1000
      widget_field_list:
        type: array
        description: List of selected fields for the widget.
        items:
          $ref: '#/definitions/widget_field_descriptor'
      widget_type:
        description: |
          Type of widget. Widget type can be one of these.
            - bar_chart
            - config_summary
            - count_summary
            - line_chart
            - metric_summary_chart
            - metric_summary_text
            - table
            - text
        type: string
      widget_size:
        description: Size of the widget.
        type: string
        x-ntnx-enum:
         - SMALL
         - LARGE
         - FULLSPAN
      repetition_criteria:
        $ref: '#/definitions/repetition_criteria'
      widget_data_projection:
        $ref: '#/definitions/widget_data_projection'

  widget_data_projection:
    type: object
    title: Widget Data Projection.
    description:  Filtering, sorting and limit properties for the data to collected.
    properties:
      filter_criteria:
        description: FIQL criteria that will be used to filter the returned data.
        type: string
      sort_column:
        description: Entity Property based on which the result data is to be sorted.
        type: string
      sort_order:
        description: Order of sorting.
        type: string
        x-ntnx-enum:
         - ASCENDING
         - DESCENDING
      limit:
        description: |
          Limit on the maximum number of entities to be represented in the
          widget. A limit value of more than 10 would not be entertained.
        type: integer
        minimum: 0
        format: int64
      sort_key:
        description: Aggregation to be used while sorting time-series data.
        type: string
        x-ntnx-enum:
         - MAX
         - FIRST
         - MIN
         - LAST
         - LATEST
      custom_key_values:
        $ref: '#/definitions/generic_key_value_pair'

  widget_field_descriptor:
    type: object
    title: Widget Field Descriptor.
    description: Description of a field of a widget (eg. column in a table).
    properties:
      label:
        description: Human-readable label for widget fields.
        type: string
      property:
        description: Entity attribute/metric to be selected for the widget.
        type: string
      aggregation_operator:
        description: Used when aggregating the field data from multiple values.
        type: string
        x-ntnx-enum:
         - SUM
         - MAX
         - MIN
         - AVG
         - LAST
         - COUNT

  repetition_criteria:
    type: object
    title: Repetition Criteria.
    description: Criteria for repeating a widget/section.
    required:
     - entity_type
    properties:
      entity_type:
        description: Type of the entity.
        type: string
      repetition_rule:
        description: Rule based on which the widget/section will be repeating.
        type: string

  section:
    type: object
    title: Section Details.
    description: Section Details. Section is a group of widgets.
    required:
     - section_id
    properties:
      template_rows:
        description: List of template rows.
        type: array
        items:
          $ref: '#/definitions/template_row'
      repetition_criteria:
        $ref: '#/definitions/repetition_criteria'
      name:
        description: Name of the section.
        type: string
        maxLength: 64
      description:
        description: Description of the section.
        type: string
        maxLength: 1000
      section_id:
        description: Identifier for a section. This should be unique in a report config.
        type: string
        maxLength: 64

  report_customization:
    type: object
    title: Report customizations.
    description: Report-level customizations.
    properties:
      header_html:
        description: Custom header HTML for the report.
        type: string
      footer_html:
        description: Custom footer HTML for the report.
        type: string
      logo_image_uuid:
        description: Custom logo for the report as selected by the user.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      css_style_sheet:
        description: Global cascadable style for the report.
        type: string
      overridable_style_sheet:
        description: |
          Global overridable style for the report in the form of a
          serialized JSON. This will be used for page number style in header.
        type: string
  report_notification_spec:
    type: object
    title: Report Instance notification spec.
    description: Report Instance notification spec.
    required:
      - report_config_reference
    properties:
      report_config_reference:
        $ref: '#/definitions/report_config_reference'
      email_subject:
        description: Subject of the email that will be sent.
        type: string
        maxLength: 256
      email_body:
        description: Custom content of the email.
        type: string
        maxLength: 1000
      recipient_list:
        description: Recipients in addition to those specified in report config.
        type: array
        maxItems: 100
        items:
          $ref: '#/definitions/recipient'
      instance_reference_list:
        description: List of the instances for which email should be sent.
        type: array
        maxItems: 32
        items:
          $ref: '#/definitions/report_instance_reference'

  resource_upload_response:
    type: object
    title: Report resources upload response.
    description: Report resources upload response.
    properties:
      resource_uuid:
        description: UUID of the resource uploaded.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  service_account:
    type: object
    title: Directory service service-account
    description: Credentials to connect to the directory service.
    required:
    - username
    - password
    properties:
      username:
        type: string
        description: The username to connect to the directory service.
      password:
        type: string
        description: The password to authenticate the request.

  directory_service:
    type: object
    title: Directory service
    description: The configuration details of the directory service.
    required:
    - resources
    - name
    properties:
      name:
        type: string
        description: The name of the directory service.
        maxLength: 64
      resources:
        title: Directory service resources
        type: object
        description: The details of the directory service.
        required:
        - url
        - domain_name
        - directory_type
        - service_account
        properties:
          url:
            type: string
            description: URL of the directory.
            maxLength: 2000
          domain_name:
            type: string
            description: The domain name of the directory service.
          directory_type:
            description: Type of the directory service.
            type: string
            x-ntnx-enum:
            - ACTIVE_DIRECTORY
            - OPEN_LDAP
          open_ldap_configuration:
            description: Configuration for OpenLDAP.
            $ref: '#/definitions/open_ldap_configuration'
          admin_group_reference_list:
            type: array
            description: |
              List of admin user groups available in the directory service.
            items:
              $ref: '#/definitions/user_group_reference'
          admin_user_reference_list:
            type: array
            description: |
              The list of admin users available in the directory service.
            items:
              $ref: '#/definitions/user_reference'
          service_account:
            $ref: '#/definitions/service_account'

  directory_service_def_status:
    type: object
    title: Directory service
    description: Details of the directory service.
    required:
    - resources
    - name
    properties:
      name:
        type: string
        description: Name of the directory service.
      resources:
        title: Directory service resources
        type: object
        description: The configuration details of the directory service.
        required:
        - url
        - domain_name
        - directory_type
        - service_account
        properties:
          url:
            type: string
            description: URL of the directory.
          domain_name:
            type: string
            description : The domain name of the directory service.
          directory_type:
            description: Type of the directory service.
            type: string
            x-ntnx-enum:
            - ACTIVE_DIRECTORY
            - OPEN_LDAP
          open_ldap_configuration:
            description: Configuration for OpenLDAP.
            $ref: '#/definitions/open_ldap_configuration_def_status'
          admin_group_reference_list:
            type: array
            description: |
              List of admin user groups available in the directory service.
            items:
              $ref: '#/definitions/user_group_reference'
          admin_user_reference_list:
            type: array
            description: |
              The list of admin users available in the directory service.
            items:
              $ref: '#/definitions/user_reference'
          service_account:
            description: |
              Validates and connects to the directory service with the given
              credentials.
            $ref: '#/definitions/service_account'
      state:
        description: The state of the directory service configuration.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  open_ldap_configuration:
    type: object
    title: OpenLDAP Configuration.
    description: Configuration for OpenLDAP directory service.
    required:
    - user_configuration
    - user_group_configuration
    properties:
      user_configuration:
        type: object
        required:
        - user_object_class
        - user_search_base
        - username_attribute
        properties:
          user_object_class:
            type: string
            description: >
              The object class in the OpenLDAP system that corresponds to users.
            maxLength: 64
          user_search_base:
            type: string
            description: The base DN for user search.
            maxLength: 200
          username_attribute:
            type: string
            description: >
              Unique identifier for each user which can be used in authentication.
            maxLength: 64
      user_group_configuration:
        type: object
        required:
        - group_object_class
        - group_search_base
        - group_member_attribute
        - group_member_attribute_value
        properties:
          group_object_class:
            type: string
            description: >
              The object class in the OpenLDAP system that corresponds to groups.
            maxLength: 64
          group_search_base:
            type: string
            description: >
              The base DN for group search.
            maxLength: 200
          group_member_attribute:
            type: string
            description: >
              The attribute in a group that associates users to the group.
            maxLength: 64
          group_member_attribute_value:
            type: string
            description: >
              The user attribute value that will be used in group entity
              to associate user to the group.
            maxLength: 64

  open_ldap_configuration_def_status:
    type: object
    title: OpenLDAP Configuration.
    description: Configuration for OpenLDAP directory service.
    required:
    - user_configuration
    - user_group_configuration
    properties:
      user_configuration:
        type: object
        required:
        - user_object_class
        - user_search_base
        - username_attribute
        properties:
          user_object_class:
            type: string
            description: >
              The object class in the OpenLDAP system that corresponds to users.
          user_search_base:
            type: string
            description: The base DN for user search.
          username_attribute:
            type: string
            description: >
              Unique identifier for each user which can be used in authentication.
      user_group_configuration:
        type: object
        required:
        - group_object_class
        - group_search_base
        - group_member_attribute
        - group_member_attribute_value
        properties:
          group_object_class:
            type: string
            description: >
              The object class in the OpenLDAP system that corresponds to groups.
          group_search_base:
            type: string
            description: >
              The base DN for group search.
          group_member_attribute:
            type: string
            description: >
              The attribute in a group that associates users to the group.
          group_member_attribute_value:
            type: string
            description: >
              The user attribute value that will be used in group entity
              to associate user to the group.


  directory_service_search_metadata:
    type: object
    title: Directory service search metadata
    description: The parameters to search for directory service.
    required:
    - query
    properties:
      query:
        type: string
        description: The search string.
      searched_attribute_list:
        type: array
        description: |
          The attributes for search operation. If not specified, search is
          performed with the common name.
        items:
          type: string
      is_wildcard_search:
        type: boolean
        default: true
        description: |
          The attribute that tells if the query is a wildcard match or exact match query.
      returned_attribute_list:
        type: array
        description: |
          The attributes the search operation returns. If not available, a list
          of default attributes is returned.
        items:
          type: string

  directory_service_search_response:
    type: object
    title: Directory service search response
    description: The response returned for directory service search operation.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/directory_service_search_metadata"
      domain_name:
        type: string
        description: The domain name of the directory service.
      search_result_list:
        type: array
        items:
          $ref: '#/definitions/entity'

  entity:
    type: object
    title: Directory service search response
    description: The response returned for directory service search operation.
    properties:
      name:
        type: string
        description: The name of the entity in canonical format.
        maxLength: 64
      type:
        type: string
        description: User or group in the directory service.
      attribute_list:
        type: array
        items:
          $ref: '#/definitions/attribute'

  attribute:
    type: object
    title: Directory service search attributes response
    description: The attributes for the directory service.
    properties:
      name:
        type: string
        description: Name of the attribute.
      value_list:
        type: array
        description: Value of the attribute.
        items:
          type: string
  identity_provider:
    type: object
    title: Identity provider details
    description: The configuration details of the identity provider.
    required:
      - resources
      - name
    properties:
      name:
        description: Identity Provider name.
        type: string
        maxLength: 64
      resources:
        description: Urls and other info about the IDP.
        type: object
        x-ntnx-one-of:
          - required:
            - idp_metadata
          - required:
            - idp_properties
        properties:
          idp_metadata:
            description: Metadata in xml format with IDP details.
            type: string
          idp_properties:
            description: Urls and other info about the IDP.
            type: object
            required:
              - idp_url
              - login_url
              - certificate
            properties:
              idp_url:
                type: string
                description: URL of the Identity provider.
                maxLength: 2000
              login_url:
                type: string
                description: Login URL of the Identity provider.
                maxLength: 2000
              logout_url:
                type: string
                description: Logout URL of the Identity provider.
                maxLength: 2000
              error_url:
                type: string
                description: Error URL of the Identity provider.
                maxLength: 2000
              certificate:
                type: string
                description: Cert for verification.

  identity_provider_def_status:
    type: object
    title: Identity provider details
    description: Details of the identity provider.
    required:
      - resources
      - name
    properties:
      name:
        description: Identity Provider name.
        type: string
        maxLength: 64
      resources:
        description: Urls and other info about the IDP.
        type: object
        properties:
          idp_metadata:
            description: Metadata in xml format with IDP details.
            type: string
          idp_properties:
            description: Urls and other info about the IDP.
            type: object
            required:
              - idp_url
              - login_url
              - certificate
            properties:
              idp_url:
                type: string
                description: URL of the Identity provider.
                maxLength: 2000
              login_url:
                type: string
                description: Login URL of the Identity provider.
                maxLength: 2000
              logout_url:
                type: string
                description: Logout URL of the Identity provider.
                maxLength: 2000
              error_url:
                type: string
                description: Error URL of the Identity provider.
                maxLength: 2000
              certificate:
                type: string
                description: Cert for verification.
  search_request:
    title: Search Request.
    description: Search Request.
    type: object
    properties:
      user_query:
        description: User Query.
        type: string
        maxLength: 256
      generate_autocompletions_only:
        description: Only generate auto completions.
        type: boolean
      explicit_query:
        description: Set to true if user pressed enter.
        type: boolean
      query_context:
        description: Context sharing between Search client and Search backend
        type: string
        maxLength: 1024
      query_term_list:
        description: >
         Structured representation that infers intent
         unambiguously.UI will echo this information back to the backend.
         Essentially, it is like a search result link. The list has an item
         corresponding to every query term.
        type: array
        items:
         $ref: '#/definitions/query_term'

  query_term:
    title: Single Query Term.
    description: Interpretations corresponding to a single query term.
    type: object
    properties:
     term:
      description: The string corresponding to a single query term.
      type: string
     token_list:
      description: All possible interpretations of the term.
      type: array
      items:
       $ref: '#/definitions/token'

  token:
   title: Token.
   description: Interpretation of a query term.
   type: object
   properties:
    match_type:
     description: Match type of the query term (e.g. exact, prefix).
     type: string
    display_context:
     description: Underlying representation of the token.
     $ref: '#/definitions/expression'
    identifier:
     description: Identifier corresponding to the token.
     $ref: '#/definitions/expression'
    additional_context:
     description: Any additional information we have about the token.
     type: array
     items:
      $ref: '#/definitions/expression'

  expression:
   description: Context about the query term.
   title: Expression.
   type: object
   properties:
    entity_type:
     description: The entity type that the term represents.
     type: string
    property_type:
     description: Whether the term is an attribute, metric, action.
     type: string
    property_name:
     description: Name of the attribute, metric, action.
     type: string
    operator:
     description: >
      If the term is a filter (LHS operator RHS), then this
      represents the operator.
     type: string
    value:
     description: In case of a filter, this represents the RHS.
     type: string

  query_result:
    title: Query Result.
    description: This stores the response for the search request.
    type: object
    properties:
      user_query:
        description: User Query.
        type: string
        maxLength: 256
      query_interpretation:
        description: Interpretation of user typed query.
        type: string
      query_time:
        description: Time taken by user query.
        type: integer
        format: int64
      query_context:
        description: Context sharing between Search client and Search backend
        type: string
        maxLength: 1024
  nucalm_service_config_input:
    title: NuCalm service configuration.
    description: Input body to configure NuCalm service.
    type: object
    properties:
      state:
        description: The desired state of NuCalm service.
        type: string
        x-ntnx-enum:
        - ENABLE
      enable_nutanix_apps:
        description: Flag indicating whether to enable Nutanix apps.
        type: boolean
      perform_validation_only:
        description: >
          Flag indicating whether to do NuCalm enablement validation
          only.
        type: boolean

  microseg_service_config_input:
    title: Microsegmentation configuration.
    description: Input body to configure Microsegmentation.
    type: object
    x-ntnx-one-of:
      - required:
        - state
      - required:
        - is_validation_only
    properties:
      state:
        description: The desired state of Microsegmentation.
        type: string
        x-ntnx-enum:
        - ENABLE
        - DISABLE
      is_validation_only:
        description: >
          Flag indicating whether to do Microsegmentation enablement validation
          only.
        type: boolean

  disaster_recovery_service_config_input:
    title: Disaster Recovery service configuration.
    description: Input body to configure Disaster Recovery service.
    type: object
    required:
      - state
    properties:
      state:
        description: The desired state of Disaster Recovery service.
        type: string
        x-ntnx-enum:
        - ENABLE

  service_response:
    type: object
    title: >
      Response for service enablement/disablement request.
    description: >
      Response for service enablement/disablement request.
    properties:
      task_uuid:
        description: >
          UUID of the task created for handling the request.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  service_config_status:
    title: Service configuration state.
    description: Service configuration state.
    type: object
    properties:
      task_uuid:
        description: >
          Enablement task UUID for the submitted request. This will not be
          populated when validation only is done.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      validation_result_list:
        description: >
          Validation results of the service enablement. Will
          only be populated when user does validation_only operation.
        type: array
        items:
          $ref: '#/definitions/validation_result'
      configuration_info:
        $ref: '#/definitions/configuration_info'

  validation_result:
    title: Service enablement validation item.
    description: Service enablement validation item.
    type: object
    properties:
      name:
        type: string
      has_passed:
        description: Whether the validation passed.
        type: boolean
      reason:
        description: >
          Reason of failed validation. Will only be populated when
          validation fails.
        type: string

  configuration_info:
    title: Information needed prior to enable the service
    description: >
      Information needed by the caller before they enable the service
    type: object
    properties:
      additional_memory:
        description: Additional memory (in GiB) required to enable the service
        type: integer
        format: int64
      original_memory_bytes:
        description: Original memory (in bytes)
        type: number
        format: double
      additional_memory_bytes:
        description: Additional memory (in bytes) required to enable the service
        type: number
        format: double

  xfit_service_input:
    title: Xfit service configuration.
    description: Input body to configure xfit service.
    type: object
    properties:
      state:
        description: The desired state of xfit service.
        type: string
        x-ntnx-enum:
        - ENABLE
      validation_only:
        description: >
          Flag indicating whether to do Xfit enablement validation
          only.
        type: boolean

  service_enablement_status:
    title: The enablement status of a service.
    description: >
      The status of the service - whether it is disabled by default, if an
       enablement is in progress, what is the current status.
    type: object
    properties:
      service_enablement_status:
        type: string
        x-ntnx-enum:
        - DISABLED
        - ENABLING
        - ENABLED
      service_enablement_timestamp:
        description: >
          Date and time at which the service was enabled.  Currently this
          is used only for Microsegmentation.
        type: string
        format: date-time
      service_capabilities:
        type: object
        description: >
          Capabilities of this service. For example if the service can be
          enabled/disabled.
        properties:
          can_enable:
            description: Whether the service can be enabled.
            $ref: '#/definitions/service_capability'
          can_disable:
            description: Whether the service can be disabled.
            $ref: '#/definitions/service_capability'

  service_capability:
    title: The capability of the service.
    description: >
      The capability of a service for a desired state. If not capable, reasons
      for the same should be populated.
    type: object
    properties:
      state:
        description: >
          The current state of the capability. For example, if a service can
          be enabled or not.
        type: boolean
      validation_message_list:
        description: >
          List of messages explaining the current state of the capability.
          For example, if a service cannot be enabled, this list will contain
          the reasons for the same.
        type: array
        items:
          type: object
          properties:
            validation_type:
              description: >
                The type of validation performed.
              type: string
              x-ntnx-enum:
              - PC_REGISTERED_TO_HOST_PE
              - MEMORY_CHECK_ON_HOST_PE
            error_detail:
              description: >
                The error detail for the validation failure.
              type: string

  cluster_capability_status:
    title: The capability status of a cluster for a feature.
    description: >
      The capability of a cluster for a feature - whether a cluster is
      capable for enabling a feature or not.
    type: object
    properties:
      cluster_capability_list:
        description: >
          Capability of the feature per cluster managed by Prism Central.
        type: array
        items:
          $ref: '#/definitions/cluster_capability'

  cluster_capability:
    title: Status of capability of each cluster for a feature.
    description: Feature capability on a cluster.
    type: object
    properties:
      cluster_uuid:
        description: >
          Cluster UUID of a cluster managed by Prism Central.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      cluster_name:
        description: Name of the cluster.
        type: string
      aos_version:
        description: AOS version of the cluster.
        type: string
      hypervisor_list:
        description: Type and version of hypervisors on the cluster.
        type: array
        items:
          $ref: '#/definitions/hypervisor_info'
      is_capable:
        description: If this cluster is capable for a feature.
        type: boolean

  hypervisor_info:
    title: Hypervisor type and version on a cluster.
    description: Hypervisor info for a cluster.
    type: object
    properties:
      hypervisor_type:
        type: string
      hypervisor_version:
        type: string
  message_resource:
    title: Message.
    description: message.
    type: object
    required:
    - message
    - reason
    properties:
      message:
        description: If state is ERROR, a message describing the error.
        type: string
      reason:
        description: If state is ERROR, a machine-readable snake-cased string.
        type: string
        x-ntnx-enum:
        # Please maintain message list in alphabetical order.
        - ACCESS_DENIED
        - ACCESS_FORBIDDEN
        - ACTION_NOT_SUPPORTED
        - AUTHENTICATION_REQUIRED
        - BEARER_TOKEN_EXPIRED
        - BEARER_TOKEN_BAD_SIGNATURE
        - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
        - CATEGORY_NAME_VALUE_MISMATCH
        - CONFIGURATION_INCOMPLETE
        - CONCURRENT_REQUESTS_NOT_ALLOWED
        - DEFAULT_PROJECT_UNAVAILABLE
        - DESERIALIZATION_FAILED
        - DIRECTORY_SERVICE_CONNECTION_FAILED
        - ENTITY_ALREADY_EXISTS
        - ENTITY_DELETION_FAILED
        - ENTITY_IS_READONLY
        - ENTITY_NAME_UUID_MISMATCH
        - ENTITY_NOT_CONFIGURED
        - ENTITY_NOT_FOUND
        - ENTITY_SAVE_ERROR
        - ENTITY_UPDATE_FAILED
        - IDEMPOTENCE_UUID_CREATION_FAILED
        - IDP_NOT_REACHABLE
        - INTERNAL_ERROR
        - INVALID_ARGUMENT
        - INVALID_AZ_NAME
        - INVALID_CONTENT_TYPE
        - INVALID_DATA_FORMAT
        - INVALID_PORTAL_CONFIGURATION
        - INVALID_REQUEST
        - INVALID_UUID
        - INVALID_OWNER_REFERENCE
        - INTERNAL_AZ_PROXY_SETUP_ERROR
        - INTERNAL_ERROR_REMOTE_REQUEST
        - INTERNAL_ROLE_ACCESS_DENIED
        - INCORRECT_EVENTS_FILTER
        - MISSING_ATTRIBUTE
        - MISSING_CURRENT_USER_METADATA
        - NAME_NOT_IN_DOMAIN
        - NO_RESPONSE_RECEIVED_FROM_PORTAL
        - PE_NOT_PAIRED_WITH_PC
        - PC_NOT_PAIRED_WITH_XI_PORTAL
        - REFERENCE_ERROR
        - RESERVED_ROLE_ACCESS_DENIED
        - REQUEST_NOT_SUPPORTED
        - REMOTE_CLUSTER_IP_FETCH_FAILED
        - REMOTE_CLUSTER_NOT_CONNECTED
        - REMOTE_CONNECTION_EXISTS
        - REMOTE_CONNECTION_NOT_FOUND
        - REPORT_CONFIG_NOT_FOUND
        - REPORTING_RESOURCE_NOT_FOUND
        - REPORTING_INTERNAL_ERROR
        - SERVICE_UNAVAILABLE
        - SEARCH_RESULT_PROCESSING_ERROR
        - TOO_MANY_REQUESTS
        - UNCONFIGURED_API_KEY
        - UNCONFIGURED_PORTAL_CONNECTION
        - UNSPECIFIED_EVENTS_FILTER
        - UNSUPPORTED_AZ_PROXY_API
        - UNSUPPORTED_MEDIA_TYPE_ERROR
        - UPLOAD_TO_S3_FAILED
        - VALIDATION_ERROR
        - INVALID_SSL_CERTIFICATE
        - ERROR_ATTACHING_FILE_TO_CASE
        - SPEC_UPDATE_ERROR
        - SPEC_INCOMPATIBLE_ERROR
        - CLOUD_UNREACHABLE_ERROR
        - INVALID_CLOUD_CREDENTIALS
        - IDP_PORTAL_UNREACHABLE
        - SELF_PAIRING_NOT_ALLOWED
        - PAIRING_FAILED
        - PAIRING_NOT_ALLOWED
        - CLOUD_TRUST_EXISTS
        - DUPLICATE_CLOUD_TRUST
        - DUPLICATE_CLOUD_TRUST_ON_REMOTE
      details:
        type: object
        readOnly: true
        description: Custom key-value details relevant to the status.
        additionalProperties:
          type: string
  affinity_rule:
    type: object
    title: Affinity Rule
    description: >
      Defines an affinity rule between a set of VM categories to a set of
      Host categories.
    required:
      - name
    properties:
      name:
        description: Name of the rule.
        type: string
        maxLength: 64
      description:
        description: Description of the rule.
        type: string
        maxLength: 1000
      resources:
        type: object
        properties:
          affinity_type:
            description: |
              Type of affinity being defined.
              VM_TO_HOST - VM categories to Host categories.
            type: string
            x-ntnx-enum:
             - VM_TO_HOST
          entity_filter_list:
            description: >
              List of entity filters across whom affinities are being defined.
            type: array
            items:
              $ref: '#/definitions/category_filter'

  affinity_rule_def_status:
    type: object
    title: Affinity Rule Status
    description: Describes the current status of the affinity rule.
    properties:
      name:
        description: Name of the rule.
        type: string
      description:
        description: Description of the rule.
        type: string
      resources:
        type: object
        properties:
          affinity_type:
            description: |
              Type of affinity defined.
              VM_TO_HOST - VM categories to Host categories.
            type: string
            x-ntnx-enum:
             - VM_TO_HOST
          entity_filter_list:
            description: >
              List of entity filters across whom affinities are being defined.
            type: array
            items:
              $ref: '#/definitions/category_filter'
      state:
        description: Describes if the affinity rule has been defined or not.
        type: string
  common_report_config:
    type: object
    title: Common Report Config creation/modification spec.
    description: Common Report Config creation/modification spec.
    required:
     - name
     - resources
    properties:
      name:
        description: Name of the common report config.
        type: string
        maxLength: 64
      resources:
        type: object
        title: Common Report Config Resources.
        description: Common report config resources definition.
        properties:
          description:
            description: Description of the common report config.
            type: string
            maxLength: 1000
          retention_policy:
            $ref: '#/definitions/retention_policy'
          notification_policy:
            $ref: '#/definitions/notification_policy'
          report_customization:
            $ref: '#/definitions/report_customization'

  common_report_config_def_status:
    type: object
    title: Common Report Config creation/modification status.
    description: Common Report Config creation/modification status.
    required:
     - name
     - resources
    properties:
      name:
        description: Name of the common report config.
        type: string
      state:
        description: The state of the common report config entity.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        type: object
        title: Common Report Config Resources.
        description: Common report config resources definition.
        properties:
          description:
            description: Description of the common report config.
            type: string
          retention_policy:
            $ref: '#/definitions/retention_policy'
          notification_policy:
            $ref: '#/definitions/notification_policy'
          report_customization:
            $ref: '#/definitions/report_customization'
            # Report customization, retention policy, email config
            # definitions can be found in report_config schema





  # The input object that defines an App Store Item resource
  marketplace_item:
    type: object
    title: Marketplace item information
    description: Detailed spec for creation of an marketplace item
    required:
      - name
      - resources
    properties:
      name:
        description: Marketplace item name
        type: string
        maxLength: 64
      description:
        description: Marketplace item description
        type: string
        maxLength: 5000
      resources:
        $ref: '#/definitions/marketplace_item_input_resources'

  # The output object that defines an App Store Item resource
  marketplace_item_def_status:
    type: object
    title: Marketplace item information
    description: Detailed information about marketplace item
    required:
      - name
      - resources
    properties:
      name:
        description: Marketplace item name
        type: string
      description:
        description: Marketplace item description
        type: string
      state:
        description: The state of the entity
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/marketplace_item_output_resources'

  # Input for marketplace item
  marketplace_item_input_resources:
    type: object
    title: Description of the marketplace item
    description: Description of the marketplace item
    required:
      - app_blueprint_template
      - author
    properties:
      app_attribute_list:
        type: array
        description: Attributes of this app.
        items:
          type: string
          x-ntnx-enum:
          - FEATURED
      icon_reference_list:
        type: array
        items:
          $ref: '#/definitions/marketplace_icon'
      app_blueprint_template:
        type: object
        description: >
          This is an opaque object that represents the information required to
          launch an app.
        properties:
          spec:
            $ref: '#/definitions/blueprint_upload'
          status:
            $ref: '#/definitions/blueprint_download_def_status'
      app_state:
        type: string
        description: >
          State indicating if marketplace item is approved, pending or rejected
        default: PENDING
        x-ntnx-enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - PUBLISHED
      version:
        type: string
        description: >
          Indicates version of the App that this marketplace item represents
        maxLength: 64
      app_group_uuid:
        description: >
          UUID for the group of MPIs which are versions of the same App
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      app_source:
        type: string
        description: >
          Indicates whether the app is Global(Marketplace item) or Local(User created)
        default: LOCAL
        x-ntnx-enum:
        - LOCAL
        - GLOBAL_STORE
      change_log:
        type: string
        description: >
          Change log for this version of the app
        maxLength: 5000
      project_reference_list:
        type: array
        description: The projects this marketplace item has been assigned to
        items:
          $ref: '#/definitions/project_reference'
      author:
        type: string
        description: Person or company which developed the app
        maxLength: 64

  # Output for marketplace item
  marketplace_item_output_resources:
    type: object
    title: Description of the marketplace item
    description: Description of the marketplace item
    required:
      - app_blueprint_template
      - author
    properties:
      app_attribute_list:
        type: array
        description: Attributes of this app.
        items:
          type: string
          x-ntnx-enum:
          - FEATURED
      icon_reference_list:
        type: array
        items:
          $ref: '#/definitions/marketplace_icon'
      app_blueprint_template:
        type: object
        description: >
          This is an opaque object that represents the information required to
          launch an app.
        properties:
          spec:
            $ref: '#/definitions/blueprint_upload'
          status:
            $ref: '#/definitions/blueprint_download_def_status'
      app_state:
        type: string
        description: >
          State indicating if marketplace item is approved, pending or rejected
        default: PENDING
        x-ntnx-enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - PUBLISHED
      version:
        type: string
        description: >
          Indicates version of the App that this marketplace item represents
        maxLength: 64
      app_group_uuid:
        description: >
          UUID for the group of MPIs which are versions of the same App
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      app_source:
        type: string
        description: >
          Indicates whether the app is Global(Marketplace item) or Local(User created)
        default: LOCAL
        x-ntnx-enum:
        - LOCAL
        - GLOBAL_STORE
      change_log:
        type: string
        description: >
          Change log for this version of the app
        maxLength: 5000
      project_reference_list:
        type: array
        description: The projects this marketplace item has been assigned to
        items:
          $ref: '#/definitions/project_reference'
      author:
        type: string
        description: Person or company which developed the app

  marketplace_icon:
    type: object
    title: Description of icon used by app
    description: Description of icon used by app
    required:
      - icon_reference
      - icon_type
    properties:
      icon_reference:
        $ref: '#/definitions/file_item_reference'
      icon_type:
        type: string
        x-ntnx-enum:
        - ICON
        - FEATURED_ICON
        - SCREENSHOT
  # The input object that defines a VM snapshot
  vm_snapshot:
    description: The input object that defines a VM snapshot
    type: object
    title: VM snapshot input definitions
    properties:
      name:
        description: Name of the snapshot
        type: string
        maxLength: 64
      expiration_time_msecs:
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
        type: integer
      resources:
        title: Snapshot Resources
        type: object
        properties:
          entity_uuid:
            description: |
              UUID of the base entity for which snapshot need to be taken
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      snapshot_type:
        description: Crash consistent or Application Consistent snapshot
        type: string
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT

  vm_snapshot_def_status:
    description: The output object that defines a VM snapshot
    type: object
    title: VM snapshot output definitions
    required:
      - snapshot_file_list
    properties:
      name:
        description: Name of the snapshot
        type: string
      state:
        description: The state of the VM snapshot.
        type: string
      message_list:
        type: array
        description: Any error messages for the {kind}}, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      consistency_group_uuid:
        description: |
          This field is same for all the entities (irrespective of kind) that
          were snapshotted together.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      expiration_time_msecs:
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
        type: integer
      location_agnostic_uuid:
        description: |
          If a snapshot is replicated to a different clusters, then all the
          instances of same snapshot will share this UUID.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      resources:
        title: Snapshot Resources
        type: object
        properties:
          entity_uuid:
            description: |
              UUID of the base entity for which snapshot need to be taken
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      snapshot_type:
        description: Crash consistent or Application Consistent snapshot
        type: string
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
      snapshot_file_list:
        description: |
          Describes the files that are included in the snapshot.
        type: array
        items:
          type: object
          properties:
            file_path:
              description: |
                Pathname of the file that participated in the snapshot.
              type: string
            snapshot_file_path:
              description: Pathname of the snapshot of the file.
              type: string
  file_item_resources_def_status:
    title: File item object
    description: File item object
    type: object
    properties:
      checksum:
        description: "Checksum of the file_item. Should only be set when being
                      used to validate an file_item when setting the source of
                      an file_item, otherwise this is generated by file_item
                      service."
        $ref: "#/definitions/checksum"
      source_uri:
        description: "URI that points at the file to create the file_item
                      from."
        type: string
      source_auth:
        description: "Authentication object needed to fetch the source."
        $ref: "#/definitions/source_auth"
      data_source_reference:
        description: "Reference to VM disk or image. The expected kind for VMs
                      is vm_disk and for Images is image. In case of VM Disk
                      the UUID should be the disk device uuid, where the disk
                      device is from disk_list from VM status. In case of
                      Images the UUID should be the UUID of the image."
        $ref: "#/definitions/reference"
      retrieval_uri_list:
        description: "List of URIs where the raw file_item data can be
                      accessed."
        type: array
        items:
          type: string
      size_bytes:
        type: integer
        format: long

  file_item_resources:
    title: File item spec object
    description: File item spec object
    type: object
    properties:
      checksum:
        description: "Checksum of the file_item. Should only be set when being
                      used to validate an file_item when setting the source of
                      an file_item, otherwise this is generated by file_item
                      service."
        $ref: "#/definitions/checksum"
      source_uri:
        description: "URI that points at the file to create the file_item
                      from."
        type: string
      source_auth:
        description: "Authentication object needed to fetch the source."
        $ref: "#/definitions/source_auth"
      data_source_reference:
        description: "Reference to VM disk or image. The expected kind for VMs
                      is vm_disk and for Images is image. In case of VM Disk
                      the UUID should be the disk device uuid, where the disk
                      device is from disk_list from VM status. In case of
                      Images the UUID should be the UUID of the image."
        $ref: "#/definitions/reference"

  source_auth:
    title: File item source authentication object.
    description: File item source authentication object.
    type: object
    properties:
      basic_auth:
        description: "Basic authentication credentials used to access the
                      source for the file item."
        $ref: "#/definitions/credentials"
      aws_auth:
        description: >
          Access credentials for Amazon AWS (access key and
          secret key).
        $ref: "#/definitions/aws_credentials"
  datacenter_resources:
    type: object
    title: Datacenter Entity
    description: Datacenter entity definition
    required:
      - availability_zone_reference
    properties:
      address:
        $ref: '#/definitions/postal_address'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

  datacenter:
    type: object
    title: Datacenter Entity
    description: Datacenter entity definition
    required:
      - name
      - resources
    properties:
      name:
        description: The datacenter name
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/datacenter_resources'

  datacenter_def_status:
    type: object
    title: Datacenter Entity Status
    description: Datacenter entity status definition
    required:
      - name
      - resources
    properties:
      name:
        description: The datacenter name
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/datacenter_resources'
  cloud_type:
    title: Cloud Type
    description: Types of cloud.
    type: string
    x-ntnx-enum:
      - ONPREM_CLOUD
      - NUTANIX_HOSTED_CLOUD
      - AWS
      - AZURE
  cell_resources:
    type: object
    title: Cell Entity
    description: Datacenter logical cell entity definition.
    required:
      - cell_class
      - datacenter_reference
    properties:
      cell_class:
        description: |
          Human readable tag that denotes the type of hardware in a cell as well
          as the networking equipment and setup.
        type: string
        maxLength: 100
      datacenter_reference:
        $ref: '#/definitions/datacenter_reference'

  cell:
    type: object
    title: Cell Entity
    description: Cell entity definition
    required:
      - name
      - resources
    properties:
      name:
        description: Name of the cell
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/cell_resources'

  cell_def_status:
    type: object
    title: Cell entity status
    description: Cell entity status definition
    required:
      - name
      - resources
    properties:
      name:
        description: Name of the cell
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/cell_resources'
  # The input object that defines a rack.
  rack_resources:
    type: object
    title: Rack Entity
    description: Rack entity definition
    properties:
      location:
        description: The rack location
        type: string
      cell_reference:
        $ref: '#/definitions/cell_reference'

  # Rack definition.
  rack:
    type: object
    title: Rack Entity
    description: Rack entity definition
    required:
      - name
      - resources
    properties:
      name:
        description: Name of the rack
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/rack_resources'

  # The output object that defines a rack.
  rack_def_status:
    type: object
    title: Rack Entity Status
    description: Rack entity status defintion
    required:
      - name
      - resources
    properties:
      name:
        description: Rack Name
        type: string
      resources:
        $ref: '#/definitions/rack_resources'
      state:
        description: The state of the rack entity
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  validate_rack_config_input:
    type: object
    title: Validate Rack Configuration Input
    description: >
      List of rack_config objects, which represent a group of racks.
    properties:
      rack_list:
        type: array
        items:
          $ref: '#/definitions/rack_config'

  rack_config:
    type: object
    title: Rack Config
    description: >
      Map of rack's name to the hosts it contains. The rack may or may not exist
      in the cluster yet.
    properties:
      rack_name:
        type: string
        maxLength: 64
      host_list:
        type: array
        items:
          $ref: '#/definitions/host_reference'

  validate_rack_config_output:
    type: object
    title: Rack Config Validation output
    description: Rack Config Validation output.
    properties:
      error_list:
        description: List of errors describing why the validation failed.
        type: array
        items:
          type: string
  network_device_resources:
    type: object
    title: Network Device Entity
    description: Network device entity definition
    properties:
      description:
        type: string
        maxLength: 500
      component:
        $ref: '#/definitions/datacenter_component'
      device_class:
        description: A well known string for network device class information
        type: string
        maxLength: 100
      device_serial:
        description: Device serial number
        type: string
        maxLength: 100
      current_firmware_version:
        description: The current firmware version
        type: string
        maxLength: 50
      target_firmware_version:
        description: The target firmware version
        type: string
        maxLength: 50
      upgrade_status:
        description: upgrade status
        type: string
        maxLength: 25
      ip_address:
        description: device IP address
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      model:
        description: device model
        type: string
        maxLength: 50
      rack_reference:
        $ref: '#/definitions/rack_reference'

  network_device:
    type: object
    title: Network device entity
    description: Network device entity definition
    required:
      - resources
    properties:
      name:
        description: An optional name for the device
        type: string
        maxLength: 50
      description:
        description: An optional description for the device
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/network_device_resources'

  network_device_def_status:
    type: object
    title: Network device Entity Status
    description: Network device entity status definition
    required:
      - resources
    properties:
      name:
        description: An optional name for the device
        type: string
        maxLength: 50
      description:
        description: An optional description for the device
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/network_device_resources'
  underlay_subnet_resources:
    type: object
    title: Underlay subnet entity
    description: Underlay subnet entity definition
    required:
      - gateway
      - netmask
    properties:
      netmask:
        description: Netmask (could be in CIDR or IP format)
        type: string
        maxLength: 50
      gateway:
        description: Gateway IP address
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      datacenter_reference:
        $ref: '#/definitions/datacenter_reference'

  underlay_subnet:
    type: object
    title: Underlay subnet Entity
    description: |
      Underlay subnet entity definition. It is for hardware device subnets, used by
      datacenter management software to persist/configure devices.
    required:
      - resources
    properties:
      name:
        description: The underlay subnet name
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/underlay_subnet_resources'

  underlay_subnet_def_status:
    type: object
    title: Underlay subnet Entity Status
    description: underlay subnet entity status definition
    required:
      - resources
    properties:
      name:
        description: The underlay subnet name
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/underlay_subnet_resources'
  duration:
    type: string
    title: Duration for streaming policies
    description: Duration for streaming policies
    x-ntnx-enum: &Duration
      - THIRTY_SECONDS
      - ONE_MINUTE
      - FIVE_MINUTES
      - TEN_MINUTES
      - THIRTY_MINUTES
      - ONE_HOUR
      - TWO_HOURS

  streaming_policy:
    type: object
    title: Streaming Policy Entity
    description: Streaming Policy Entity
    required:
      - name
      - description
      - resources
    properties:
      name:
        description: Policy name
        type: string
        maxLength: 64
      description:
        description: Policy description
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/streaming_policy_request_details'

  streaming_policy_def_status:
    type: object
    title: Streaming Policy Entity
    description: Streaming Policy Entity
    required:
      - name
      - description
      - resources
    properties:
      name:
        description: Policy name
        type: string
      description:
        description: Policy description
        type: string
      resources:
        $ref: '#/definitions/streaming_policy_details'
      state:
        type: string
        description: The state of the streaming policy.
      message_list:
        type: array
        description: >
          Any error messages for the streaming policy, if in an error state.
        items:
          $ref: "#/definitions/message_resource"

  streaming_policy_details:
    type: object
    title: Streaming Policy details
    description: Streaming Policy details
    required:
    - sql_query
    properties:
      sql_query:
        description: Policy as SQL string
        type: string
      window_duration:
        description: Time window on which policy needs to be applied
        type: string
        default: FIVE_MINUTES
        x-ntnx-enum: *Duration
      execution_frequency:
        description: How often policy needs to be evaluated
        type: string
        default: FIVE_MINUTES
        x-ntnx-enum: *Duration
      is_enabled:
        description: If policy is enabled
        default: true
        type: boolean

  streaming_policy_request_details:
    type: object
    title: Streaming policy request details
    description: Streaming policy request details
    required:
    - sql_query
    properties:
      sql_query:
        description: Policy as SQL string
        type: string
        maxLength: 2000
      window_duration:
        description: Time window on which policy needs to be applied
        type: string
        default: FIVE_MINUTES
        x-ntnx-enum: *Duration
      execution_frequency:
        description: How often policy needs to be evaluated
        type: string
        default: FIVE_MINUTES
        x-ntnx-enum: *Duration
      is_enabled:
        description: If policy is enabled
        type: boolean
        default: true
  severity:
    title: Alert severity
    description: Alert severity
    type: string
    x-ntnx-enum:
      - critical
      - warning
      - info



  indicator:
    title: Information about a monitored metric crossed threshold.
    type: object
    description: It is a symptom that caused the alert.
    properties:
      metric_name:
        description: The metric key name
        type: string
      metric_display_name:
        description:  The metric display name in English
        type: string
      unit:
        description:  Data unit.
        type: string
      wait_time_in_usecs:
        description: |
          How long the indicator had been lasted before raised the issue
        type: integer
        format: int64
      trigger_time:
        description: |
          The time that this indicator was created.  It is the
          source metric time.
        type: string
        format: date-time
      last_value:
        description: The last raw value that caused the indicator.
        $ref: "#/definitions/param_value"
      threshold:
        description: The threshold used for comparison.
        $ref: "#/definitions/param_value"
      comparison_operator:
        description: The comparison operator used in this evaluation
        type: string
        x-ntnx-enum:
          - EQUAL_TO
          - GREATER_THAN
          - GREATER_THAN_OR_EQUAL_TO
          - LESS_THAN
          - LESS_THAN_OR_EQUAL_TO
          - CONTAINS
      condition_type:
        description: |
          Indicating if this symptom is caused by static threshold
          or anomaly (dynamic threshold) evaluation.  If an indicator is raised,
          there may have another indicator indicating the safe guard zone value.
        type: string
        x-ntnx-enum:
          - STATIC_THRESHOLD
          - ANOMALY
          - SAFETY_ZONE

  alert_state:
    title: Information about an alert state.
    type: object
    description: The status data construct for acknowledgement and resolution.
    properties:
      is_true:
        description: A boolean status for acknowledgement or resolution
        type: boolean
      user:
        description: Name of the user who change this alert status.
        type: string
      is_auto_resolved:
        description: |
          It is automatically resolved or user manually resolved.  Currently,
          it is limtied to the resolution only.
        type: boolean
      time:
        description: The time the alert status was changed.
        type: string
        format: date-time

  cause_analysis:
    title: Alert cause analysis
    type: object
    description: The root cause analysis and possible resolutions.
    properties:
      cause_list:
        type: array
        items:
          type: string
      resolution_list:
        type: array
        items:
          type: string

  alert_resources:
    type: object
    title: Alert entity
    description: Alert entity definition.
    required:
      - type
      - title
      - severity
    properties:
      type:
        description: |
          A preconfigured, or dynamically created alert type or alert type UUID.
          For example, A1128 for the storage pool space usage exceeded alerts,
          or, a real UUID for user defined alert policy.
        type: string
      title:
        description: Alert title
        type: string
      default_message:
        description: Alert message.
        type: string
      severity:
        description: Alert instance severity.
        $ref: '#/definitions/severity'
      impact_type_list:
        description: |
          The area this alert could impact.
        type: array
        items:
          type: string
          maxLength: 64
      classification_list:
        description: Component classification
        type: array
        items:
          type: string
          maxLength: 64
      source_entity:
        description: The entity that causes the alert.
        type: object
        properties:
          cluster_uuid:
            description: |
              The UUID for the cluster that contained the source entity
              at the alert creation time.
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          entity:
            $ref: "#/definitions/entity_info"
      affected_entity_list:
        description: |
          A list of entities causing and/or related to this alert.
        type: array
        items:
          $ref: "#/definitions/entity_info"
      parameters:
        description: Alert notification type specific parameters.
        type: object
        additionalProperties:
          $ref: "#/definitions/param_value"
      indicator_list:
        description: The symptoms that caused this alert
        type: array
        items:
          $ref: "#/definitions/indicator"
      possible_cause_list:
        description: |
          An ordered list of the possible causes and resolutions for the alert.
        type: array
        items:
          $ref: "#/definitions/cause_analysis"
      creation_time:
        description: The time that this alert was created.
        type: string
        format: date-time
      last_update_time:
        description:  The last time this alert was updated.  System sets this.
        type: string
        format: date-time
      severity_trail_list:
        description: |
          The field has a list of information alert severity change history. If
          the alert is duplicated without severity change, then, that instance
          will not be saved here.
        type: array
        items:
          type: object
          properties:
            severity:
              $ref: '#/definitions/severity'
            severity_change_time:
              type: string
              format: date-time
      latest_occurrence_time:
        description: |
          Alert instances could be dedupped by the system.  However, the last
          time this similar alert was received is still be updated in this
          field.
        type: string
        format: date-time
      is_user_defined:
        description: The alert is raised by user defined policy or not.
        type: boolean
      acknowledged_status:
        description: |
          This indicates the acknowlegement status, time, and who did it.
        $ref: "#/definitions/alert_state"
      resolution_status:
        description: This indicates the resolution status, time, and who did it.
        $ref: "#/definitions/alert_state"

  alert:
    type: object
    title: Alert Entity
    description: Alert entity definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/alert_resources'

  alert_def_status:
    type: object
    title: Alert entity status
    description: Alert entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/alert_resources'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'

  alert_notification_input:
    type: object
    title: Alert creation informtion
    description: The information required for creating an alert.
    required:
      - notification_type
      - severity
    properties:
      source_entity:
        description: The entity which causes the alert.
        $ref: '#/definitions/reference'
      notification_type:
        description: The notification definition for this type of alerts.
        type: string
      severity:
        description: Alert instance severity.
        $ref: '#/definitions/severity'
      parameters:
        description: Alert notification type specific parameters.
        type: object
        additionalProperties:
          $ref: "#/definitions/param_value"

  alert_action_input:
    title: Alert acknowlegement or resolution input.
    description: Alert acknowlegement or resolution input parameters.
    type: object
    properties:
      alert_uuid_list:
        description: |
          A list of alert UUIDs to be acknowledged or resolved.  If the list is
          empty, that means resolve all alerts in the system.
        type: array
        items:
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  value_range:
    title: Parameter value range.
    description: Describes a parameter's value range.
    type: object
    properties:
      minimum:
        description: |
          The minimum value (or the length, if the value data type is string).
        type: integer
        format: int32
      maximum:
        description: |
          The maximum value (or the length, if the value data type is string).
        type: integer
        format: int64
      pattern:
        description: A valid regex expression.
        type: string
        maxLength: 256

  param_descriptor:
    type: object
    title: Action component parameter descriptor
    description: The metadata describes what a parameter is.
    required:
      - name
      - display_name
      - element_data_type
    properties:
      name:
        description: parameter name
        type: string
        maxLength: 64
      display_name:
        description: parameter display name
        type: string
        maxLength: 64
      element_data_type:
        description: |
          The parameter's data type.  If the parameter is a list, it is the
          element data type.
        type: string
        x-ntnx-enum:
          - BOOLEAN
          - LONG
          - DOUBLE
          - STRING
          - ENTITY_INFO
      range:
        description: parameter value range.
        $ref: "#/definitions/value_range"
      is_required:
        description: Is this parameter optional.
        type: boolean
      is_array:
        description:  Is this parameter a list or a scalar value
        type: boolean
      is_secret:
        description: |
          Is this parameter a secret like password, security token?
        type: boolean
      choice_list:
        description: |
          The parameter can only be one of the choices in this ordered list.
          We do not support choice list of elements with complex type.
        type: array
        items:
          type: object
          description: parameter choice list element.
          properties:
            name:
              description: the name of the choice item.
              type: string
            value:
              description: |
                The value of the choice item.  The data type should match the
                one defined in element_data_type.
              $ref: "#/definitions/param_value"
      default_value:
        description: |
          The default value of this parameter.  We do not support default
          value for complex type
        $ref: "#/definitions/param_value"

  action_service_component_type:
    type: object
    title: Generic action service component type construct
    description: |
      This is the generic construct for both action type and trigger type.
    required:
      - name
      - display_name
      - description
    properties:
      name:
        description: A preconfigured, or dynamically created component type.
        type: string
        maxLength: 64
      display_name:
        description: Action service component display name.
        type: string
        maxLength: 64
      description:
        description: Action service component type description.
        type: string
        maxLength: 255
      global_parameters:
        description: |
          The rule parameters globally available to every component to use.
          This is provided by system, not by action type or trigger type
          service.
        readOnly: true
        additionalProperties:
          $ref: "#/definitions/param_descriptor"
      input_parameters:
        description: |
          The component required input parameter descriptors.  The key is the
          parameter name
        additionalProperties:
          $ref: "#/definitions/param_descriptor"
      output_parameters:
        description: |
          The component output parameter descriptors. The key is the parameter
          name.
        additionalProperties:
          $ref: "#/definitions/param_descriptor"
      group_list:
        description: |
          The group/bucket in which the component falls into.
        type: array
        items:
          type: string

  component_instance_parameters:
    type: object
    title: Component instance parameters
    description: |
      The trigger or action required input parameter value map, or the output
      parameters.
    additionalProperties:
      type: string

  display_metadata:
    type: object
    title: Action service component display metadata
    description: |
      The json formated display metadata for action service components, triggers
      and actions.
    additionalProperties:
       type: string
  action_type:
    type: object
    title: Action type entity
    description: Action type entity definition.
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_service_component_type'

  action_type_def_status:
    type: object
    title: Action type entity status
    description: Action type entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_type'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  action_instance_resources:
    type: object
    title: Action instance
    description: Action instance object for example action templates.
    required:
      - action_type_uuid
    properties:
      action_type_uuid:
        description: the action type UUID.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      display_name:
        description: |
          Each action instance already has a default display name from action
          type.  However, users could change an action instance with a different
          display name.
        type: string
        maxLength: 255
      input_parameter_values:
        description: The input parameter value mappings for the action instance.
        $ref: "#/definitions/component_instance_parameters"

  action_instance:
    type: object
    title: Action instance entity
    description: Action instance entity definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_instance_resources'

  action_instance_def_status:
    type: object
    title: Action instance entity status
    description: Action instance entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_instance_resources'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  action_trigger_type:
    type: object
    title: Trigger type entity
    description: Trigger type entity definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_service_component_type'

  action_trigger_type_def_status:
    type: object
    title: Action trigger type entity status
    description: Action trigger type entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_trigger_type'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  trigger_instance_object:
    type: object
    title: Trigger instance
    description: Trigger instance object.
    required:
      - action_trigger_type_reference
    properties:
      action_trigger_type_reference:
        $ref: '#/definitions/action_trigger_type_reference'
      display_name:
        description: |
          Trigger display name.  This is for display name, hence ready-only.
        type: string
        readOnly: true
      input_parameter_values:
        description: The trigger user entered input parameters.
        $ref: "#/definitions/component_instance_parameters"
      output_parameters:
        description: |
          The trigger output parameter descriptors.  Came from trigger type.
        readOnly: true
        additionalProperties:
          $ref: "#/definitions/param_descriptor"

  action_instance_object:
    type: object
    title: Action instance
    description: Action instance object.
    required:
      - action_type_reference
      - should_continue_on_failure
    properties:
      action_type_reference:
        $ref: '#/definitions/action_type_reference'
      display_name:
        description: |
          Each action instance already has a default display name from action
          type.  However, users could change an action instance with a different
          display name.
        type: string
        maxLength: 255
      input_parameter_values:
        description: The action user entered input parameters.
        $ref: "#/definitions/component_instance_parameters"
      output_parameters:
        description: The action output parameter descriptors.
        additionalProperties:
          $ref: "#/definitions/param_descriptor"
      should_continue_on_failure:
        description: |
          When this action execution fails, the rule execution should
          continue to the next action or not.
        type: boolean
      timeout_retry:
        description: |
          When this action execution times out, should it be retried or not
        type: boolean
      max_retries:
        description: |
          This field applies to on_timeout enum retry choice.  When this
          action execution times out, the rule execution will retry the
          execution until the max retry number is exceeded.
        type: integer
        format: int32
        maximum: 5

  action_rule_resources:
    type: object
    title: Action rule entity
    description: Action rule entity definition
    required:
      - trigger_list
      - action_list
    properties:
      name:
        description: The action rule name
        type: string
        maxLength: 64
      is_enabled:
        description: is the rule enabled or disabled.
        type: boolean
      should_validate:
        description: |
          The rule should be validated or not.  If True, then, the rule will be
          validated before saving.  If the validation failed, the spec status
          message list will have errors.
        type: boolean
      validated:
        description: Is this been validated to trur or not.
        readOnly: true
        type: boolean
      execution_user_reference:
        description: |
          This will incidate who this rule will be executed on behalf of.
          It will be a user uuid.
        $ref: "#/definitions/user_reference"
      global_parameters:
        description: |
          The rule level global parameter descriptors. This is provided by
          the system.
        readOnly: true
        additionalProperties:
          $ref: "#/definitions/param_descriptor"
      trigger_list:
        description:  The only trigger that the rule has.
        type: array
        items:
          $ref: '#/definitions/trigger_instance_object'
      action_list:
        description: Ordered list of the actions to execute in this rule.
        type: array
        items:
          $ref: "#/definitions/action_instance_object"

  action_rule:
    type: object
    title: Action rule entity
    description: Action rule entity definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_rule_resources'

  action_rule_def_status:
    type: object
    title: Action rule entity status
    description: Action rule entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_rule_resources'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  execution_status:
    title:  Action execution status or action rule execution status.
    description: The execution status of an action or an action rule.
    type: string
    x-ntnx-enum:
      - SUCCEEDED
      - FAILED
      - ABORTED
      - TIMEDOUT
      - INPROGRESS
  action_result:
    title: Action execution result
    description:  |
      The execution result from a rule execution of an action
      instance.  It should include input parameters and output parameters.
    type: object
    required:
      - execution_start_time
      - action_type_reference
      - execution_status
    properties:
      execution_start_time:
        description: the timestamp that this action was invoked.
        type: string
        format: date-time
      execution_end_time:
        description: the timestamp that this action invocation finished.
        type: string
        format: date-time
      execution_status:
        description: the action execution status
        $ref: '#/definitions/execution_status'
      error_message_list:
        description: |
          A list of error messages if failed, or if timed out.  For actions that
          have rule's on_timeout property set to RETRY, each of the retry could
          have one timeout message.
        type: array
        items:
          type: string
      action_type_reference:
        description: the action type for the action.
        $ref: '#/definitions/action_type_reference'
      action_type_display_name:
        description: the display name
        type: string
      input_parameter_values:
        description: The ordered action input parameters.
        $ref: "#/definitions/component_instance_parameters"
      output_parameter_values:
        description: Trigger output parameters.
        $ref: "#/definitions/component_instance_parameters"

  trigger_info:
    title: Trigger information.
    description: The information about the triggering.
    type: object
    required:
      - trigger_time
      - action_trigger_type_reference
    properties:
      action_trigger_type_reference:
        description: |
          The trigger type that triggered this rule execution.
          For example, an alert or an event.  For manual trigger,  it will
          be the user entity.
        $ref: "#/definitions/action_trigger_type_reference"
      trigger_type_display_name:
        description: |
          The trigger display name.  Default to trigger type display name.
        type: string
      trigger_time:
        description: The time that this trigger happened
        type: string
        format: date-time
      input_parameter_values:
        description: The ordered action input parameters.
        $ref: "#/definitions/component_instance_parameters"
      output_parameter_values:
        description: Trigger output parameters.
        $ref: "#/definitions/component_instance_parameters"

  action_rule_result_resources:
    title: Action rule result entity
    description: Action rule result entity definition
    type: object
    required:
      - action_rule_reference
      - execution_status
      - trigger_info_list
      - action_result_list
    properties:
      action_rule_reference:
        $ref: "#/definitions/action_rule_reference"
      execution_status:
        description: The overall rule execution status.
        $ref: '#/definitions/execution_status'
      execution_start_time:
        description: The time the first action started execution.
        type: string
        format: date-time
      execution_end_time:
        description: The time the last action finished execution.
        type: string
        format: date-time
      rule_parameter_values:
        description: |
          The global parameters provided by the action rule.  They could be
          used by actions.
        $ref: "#/definitions/component_instance_parameters"
      trigger_info_list:
        description: The information about the triggers.
        type: array
        items:
          $ref: "#/definitions/trigger_info"
      action_result_list:
        description: Ordered list of action execution results.
        type: array
        items:
          $ref: "#/definitions/action_result"

  action_rule_result:
    type: object
    title: Action type entity
    description: Action type entity definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_rule_result_resources'

  action_rule_result_def_status:
    type: object
    title: Action type entity status
    description: Action type entity status definition
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/action_rule_result_resources'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  support_case:
    type: object
    title: Support Case creation/modification spec.
    description: Support Case creation/modification spec.
    required:
     - resources
     - subject
    properties:
      subject:
        description: Subject of the support case.
        type: string
        maxLength: 140
      description:
        description: Description of the support case.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/support_case_resources'

  support_case_def_status:
    type: object
    title: Support Case creation/modification spec.
    description: Support Case creation/modification spec.
    required:
     - resources
     - subject
    properties:
      subject:
        description: Subject of the support case.
        type: string
      description:
        description: Description of the support case.
        type: string
      state:
        description: The state of the support case entity.
        readOnly: true
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/support_case_response'

  support_case_resources:
    type: object
    title: Support Case Resources.
    description: Support case resources definition.
    required:
     - contact_details
    properties:
      serial_number:
        description: Serial Number of the block for which help is needed.
        type: string
      priority:
        description: >
          Priority of the support case being created.
          Examples
            "P1": "P1 - Emergency"
            "P2": "P2 - Critical"
            "P3": "P3 - Normal"
            "P4": "P4 - Low"
            "RFE": "RFE - Request for Enhancement"
        type: string
        x-ntnx-enum:
         - P1
         - P2
         - P3
         - P4
         - RFE
      case_type:
        description: Type of the support case being opened.
        type: string
      cluster_reference:
        description: >
          Reference of the cluster for which logs and health checks need to
          be uploaded.
        $ref: '#/definitions/cluster_reference'
      log_collector:
        $ref: '#/definitions/log_collector_support_case_upload'
      ncc_checks:
        $ref: '#/definitions/ncc_checks_support_case_upload'
      contact_details:
        $ref: '#/definitions/contact_information'
      additional_notification_list:
        description: >
          List of email addresses of the extra recipients
          who need to be notified for case management.
        type: array
        maxItems: 3
        items:
          $ref: '#/definitions/contact_information'
      nos_version:
        description: Nos version of the block for which support case is opened.
        type: string
      hypervisor_version:
        description: Hypervisor version for which support case is opened.
        type: string

  support_case_response:
    type: object
    title: Support Case Resources.
    description: Support case Resources definition.
    properties:
      serial_number:
        description: Serial Number of the block for which help is needed.
        type: string
      priority:
        description: >
          Priority of the support case being created
          Example P4-Low, P3-Normal, P2-Critical, P1-Emergency.
        type: string
        x-ntnx-enum:
         - P1
         - P2
         - P3
         - P4
         - RFE
      case_type:
        description: Type of the support case being opened.
        type: string
      cluster_reference:
        description: >
          Reference of the cluster for which logs and health checks need to
          be uploaded.
        $ref: '#/definitions/cluster_reference'
      log_collector:
        $ref: '#/definitions/log_collector_support_case_upload'
      ncc_checks:
        $ref: '#/definitions/ncc_checks_support_case_upload'
      contact_details:
        $ref: '#/definitions/contact_information'
      additional_notification_list:
        description: >
          List of email addresses of the extra recipients
          who need to be notified for case management.
        type: array
        maxItems: 3
        items:
          $ref: '#/definitions/contact_information'
      case_number:
        description: >
          Support Case Number. This is the pretty version of case as
          visible to the user. Example "00151752"
        type: string
      case_id:
        description: >
          Support Case Id. This is the id to be used to query support details.
          Example "500W0000003w3FEIAY"
        type: string
      creator_name:
        description: Name of the person who created the case.
        type: string
      status:
        description: Status of the case.
        type: string
      owner:
        description: Owner of the case.
        type: string
      creation_date:
        description: Date on which the case was created.
        type: string
        format: date-time
      custom_key_values:
        $ref: "#/definitions/generic_key_value_pair"
      nos_version:
        description: Nos version of the block for which support case is opened.
        type: string
      hypervisor_version:
        description: Hypervisor version for which support case is opened.
        type: string

  support_case_template_response:
    type: object
    title: Support case template.
    description: Support Case template.
    properties:
      template:
        description: Requested Template.
        type: string

  log_collector_support_case_upload:
    type: object
    title: Log Collector object.
    description: Log Collector object.
    properties:
      num_hours:
        description: Number of hours for which log has to be collected.
          Starts from current time - no_of_hours till current time.
        type: integer
        format: int32
      start_time:
        description: |
          Start time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        type: string
        format: date-time
      end_time:
        description: |
          End time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        type: string
        format: date-time
      anonymize_output:
        description: Flag for anonymized log collection.
        type: boolean

  ncc_checks_support_case_upload:
    type: object
    title: NCC checks object.
    description: Input for execution of NCC checks.
    properties:
      ncc_check_list:
        description: List of ncc checks to run.
        type: array
        items:
          type: string
      should_send_email:
        description: Flag specifying whether an email is to be sent.
        type: boolean
  blackout_resources:
    type: object
    title: Blackout resources
    description: Blackout object definition
    required:
      - feature_list
      - scope_entity_list
      - schedule_list
    properties:
      feature_list:
        description: A list of features that this blackout is applied to.
        type: array
        items:
          type: string
      scope_entity_list:
        description: |
          The list of 1) entity type, or 2) entity type + uuid_list, will
          define the targeted entities.  Any entities contained inside the
          targeted entities are affected by this blackout schedule.
          If it is case 1), where the uuid_list is empty, then, it means the
          blackout applies to all the entities of this entity_type.  For
          example, blackout for all clusters, the entity_type = "cluster", the
          uuid_list will be empty.  If the uuid_list is not empty, then, the
          blackout is applied to only these entities in the uuid_list.
        type: array
        items:
          type: object
          required:
            - entity_type
          properties:
            entity_type:
              type: string
            uuid_list:
              type: array
              items:
                type: string
                pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      schedule_list:
        description: |
          A list of time schedules for the blackout.  For example, if the
          blackout is for every Monday and Friday, 10:00 - 11:00 am,
          3:00-5:00 pm, then, there will be 2 items:
            schedule1: day_of_week = Monday,Friday, Time = 10:00 - 11:00 am
            schedule2: day_of_week = Monday,Friday, 3:00 - 5:00 pm
        type: array
        items:
          $ref: '#/definitions/schedule'

  blackout:
    type: object
    title: Blackout entity
    description: |
      The blackout entity defines the time period when clusters are in
      maintenance mode or special circumstance, special actions need to be
      skipped, for example, alerts (like user defined alerts) and anomalies
      should not be raised.
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/blackout_resources'

  blackout_def_status:
    type: object
    title: Blackout entity status
    description: Blackout entity status
    required:
      - resources
    properties:
      resources:
        $ref: '#/definitions/blackout_resources'
      state:
        description: The state of the entity.
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
  direct_connect_resources:
    type: object
    title: Direct connect create/modify spec
    description: "Direct connect spec"
    required:
     - service_provider
     - bandwidth_mbps
    properties:
      service_provider:
        description: |
          The name of the service provider to be utilized for this direct
          connnect.
        type: string
        maxLength: 64
      bandwidth_mbps:
        description: Direct connect total bandwidth in Mbps.
        type: integer
        format: int32
        minimum: 1

  direct_connect_resources_def_status:
    type: object
    title: Direct connect create/modify status
    description: "Direct connect create/modify status"
    properties:
      service_provider:
        description: |
          The name of the service provider to be utilized for this direct connect
        type: string
      bandwidth_mbps:
        description: Direct connect total bandwidth in Mbps.
        type: integer
        format: int32
      provisioning_status:
        description: The provisioning status of the direct connect.
        type: string
        x-ntnx-enum:
        # Direct connect create is pending provisioning from service provider.
        - PENDING_CREATE
        # Direct connect update is pending provisioning from service provider.
        - PENDING_UPDATE
        # Direct connect delete is pending provisioning from service provider.
        - PENDING_DELETE
        # Direct connect link is up. It is ready for use.
        - PROVISIONED
  public_cidr_resources:
    type: object
    title: Public cidr create/modify spec
    description: Public cidr spec
    properties:
      region:
        description: Region of the location.
        type: string
      cidr_type:
        description: Type of the cidr pool.
        type: string
        x-ntnx-enum:
        # Cidr pool is for floating ips.
        - FLOATING_IP
        # Cidr pool is for direct connects.
        - DIRECT_CONNECT
        # Cidr pool is for snat.
        - SNAT
      cidr_list:
        description: >
          List of public CIDRs.
        type: array
        items:
          type: string
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(\d|[1-2]\d|3[0-2]))$

  public_cidr_resources_def_status:
    title: Public cidr create/modify status
    description: Public cidr create/modify status
    $ref: "#/definitions/public_cidr_resources"
  direct_connect_virtual_interface_resources:
    type: object
    title: Direct connect virtual interface create/modify spec
    description: "Direct connect virtual interface spec."
    required:
     - direct_connect_reference
     - virtual_network_reference
     - peer_asn
     - peer_ip_prefix
    properties:
      direct_connect_reference:
        description: Direct connect reference.
        $ref: "#/definitions/direct_connect_reference"
      virtual_network_reference:
        description: Virtual network reference for private virtual interface.
        $ref: "#/definitions/virtual_network_reference"
      peer_asn:
        description: Customer peering autonomous system number (ASN).
        $ref: "#/definitions/asn"
      peer_ip_prefix:
        description: Customer peering IPv4 /30 or /31 prefix.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(\d|[1-2]\d|3[0-2]))$
      md5:
        description: md5 hash for bgp peering.
        type: string

  direct_connect_virtual_interface_resources_def_status:
    title: Direct connect virtual interface create/modify status
    description: "Direct connect virtual interface create/modify status"
    type: object
    properties:
      peering_state:
        description: The peering state of the direct connect virtual interface.
        type: string
        x-ntnx-enum:
        - UP
        - DOWN
      nutanix_peer_asn:
        description: Nutanix peering autonomous system number.
        type: integer
        format: uint32
      nutanix_peer_ip:
        description: Nutanix peering IP address.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      direct_connect_reference:
        description: Direct connect reference.
        $ref: "#/definitions/direct_connect_reference"
      virtual_network_reference:
        description: Virtual network reference for private virtual interface.
        $ref: "#/definitions/virtual_network_reference"
      peer_asn:
        description: Customer peering autonomous system number (ASN).
        type: integer
        format: uint32
      peer_ip_prefix:
        description: Customer peering IPv4 /30 or /31 prefix.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/(\d|[1-2]\d|3[0-2]))$
      md5:
        description: md5 hash for bgp peering.
        type: string
  placement_spec:
    type: object
    title: Entity placement spec
    description: Entity placement spec.
    x-ntnx-one-of:
    - required:
      - entity_spec_list
      - tenant_uuid
      - hypervisor_type
      - operation_type
      - source_availability_zone_url
    - required:
      - preferred_cluster_uuid
      - source_availability_zone_url
    properties:
      entity_spec_list:
        description: List of entity specs.
        type: array
        items:
          $ref: '#/definitions/entity_spec'
      tenant_uuid:
        description: UUID of the tenant.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      hypervisor_type:
        description: >
          Preferred hypervisor type for the entities.
        type: string
        x-ntnx-enum:
        - ESX
        - AHV
        - HYPERV
      operation_type:
        description: Operation to be performed for entities.
        type: string
        x-ntnx-enum:
        - REPLICATION
        - MIGRATION
      source_availability_zone_url:
        description: |
          URL of the source availability zone. Based on this, the mapped load
          balancer ip address and port of the replication target will be
          returned.
        type: string
      preferred_cluster_uuid:
        description: |
          Uuid of the cluster which is preferred to be the replication target.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  entity_spec:
    type: object
    title: Entity specs
    description: Specification of the entities which need to be placed.
    required:
     - vm_spec
    properties:
      vm_spec:
        description: VM config specification.
        $ref: '#/definitions/vm_spec'

  vm_spec:
    type: object
    title: VM specification
    description: Details of the VM.
    required:
     - uuid
    properties:
      uuid:
        description: |
          The UUID which is used to uniquely identify this VM.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      num_vcpus:
        description: Number of vCPUs needed.
        type: integer
        format: uint64
      num_cores_per_vcpu:
        description: Number of cores per vCPU.
        type: integer
        format: uint64
      memory_bytes:
        description: Amount of memory needed in bytes.
        type: integer
        format: uint64
      virtual_hardware_version:
        description: Virtual hardware version of the VM.
        type: integer
        format: int64
      vm_disk_list:
        description: List of associated VM virtual disks.
        type: array
        items:
          $ref: '#/definitions/disk_spec'

  disk_spec:
    type: object
    title: VM virtual disk specification
    description: Details of the VM virtual disk.
    required:
     - uuid
     - total_size_bytes
    properties:
      uuid:
        description: |
          The device ID which is used to uniquely identify this particular disk.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      total_size_bytes:
        description: Total size of the disk in bytes.
        type: integer
        format: uint64

  placement_detail:
    type: object
    title: Placement details
    description: Details of the cluster where the entity need to be placed.
    required:
     - cluster_reference
     - cluster_ip
    properties:
      cluster_reference:
        description: Reference to the cluster.
        $ref: '#/definitions/cluster_reference'
      cluster_ip:
        description: IP of the cluster.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      cluster_port:
        description: Port of the cluster.
        type: integer
  aws_resource_state:
    title: Resource State
    description: State of the AWS resource
    type: string
    x-ntnx-enum:
      - AVAILABLE
      - PENDING

  aws_tag_list:
    title: AWS Tags
    description:  The AWS Tags associated with any AWS resource
    type: array
    items:
      description: Generic key value pair.
      type: object
      required:
       - key
       - value
      properties:
        key:
          description: Tag Key
          type: string
        value:
          description: Tag value
          type: string

  aws_region_resources_def_status:
    type: object
    title:  aws_region resources
    description: aws_region resources
    properties:
      name:
        description: The name of the AWS region
        type: string
      endpoint:
        description: The region end point
        type: string

  aws_availability_zone_resources_def_status:
    type: object
    title: aws_availability_zone resources
    description: aws_availability_zone resources
    properties:
      name:
        description: Name of the AWS availability zone.
        type: string
      state:
        description: The state of the availability zone.
        type: string
        x-ntnx-enum:
         - AVAILABLE
         - INFORMATION
         - IMPAIRED
         - UNAVAILABLE
      region:
        description: Name of the region the zone belongs to.
        type: string

  aws_role_resources_def_status:
    type: object
    title: aws_role resources
    description: aws_role resources
    properties:
      name:
        description: Name of the AWS role.
        type: string

  aws_key_pair_resources_def_status:
    type: object
    title: aws_key_pair resources
    description: aws_key_pair resources
    properties:
      name:
        description: Name of the AWS key pair.
        type: string

  aws_machine_type_resources_def_status:
    type: object
    title: aws_machine_type resources
    description: aws_machine_type resources
    properties:
      name:
        description: The machine type name.
        type: string

  aws_volume_type_resources_def_status:
    type: object
    title: aws_volume_type resources
    description: aws_volume_type resources
    properties:
      name:
        description: The volume type name.
        type: string
  aws_vpc_resources_def_status:
    type: object
    title: AWS VPC resources
    description: AWS VPC resources
    properties:
      id:
        description: The AWS ID of the VPC.
        type: string
        pattern: ^vpc-[a-f0-9]{1,17}$
      state:
        $ref: '#/definitions/aws_resource_state'
      cidr_block:
        description: The CIDR block for the VPC.
        type: string
        maxLength: 64
      instance_tenancy:
        $ref: '#/definitions/instance_tenancy'
      is_default:
        description: Whether the VPC is the default VPC.
        type: boolean
      classic_link_enabled:
        description: Whether ClassicLink is enabled.
        type: boolean
      tag_list:
        $ref: '#/definitions/aws_tag_list'

  instance_tenancy:
    title: Instance Tenancy
    description: |
      The supported tenancy options for instances launched into the VPC.
    type: string
    x-ntnx-enum:
     - DEFAULT
     - DEDICATED
  aws_subnet_resources_def_status:
    type: object
    title: AWS subnet creation/modification status
    description: 'AWS Subnet creation/modification status.'
    properties:
      id:
        description: The AWS ID of the subnet.
        type: string
        pattern: ^subnet-[a-f0-9]{1,17}$
      cidr_block:
        description: The CIDR block assigned to the subnet.
        type: string
        maxLength: 64
      state:
        $ref: '#/definitions/aws_resource_state'
      vpc_id:
        description: The AWS ID of the VPC the subnet is in.
        type: string
        pattern: ^vpc-[a-f0-9]{1,17}$
      tag_list:
        $ref: '#/definitions/aws_tag_list'
  aws_image_resources_def_status:
    type: object
    title: AWS image resources
    description: AWS image resources
    properties:
      id:
        description: The AWS ID of the AMI.
        type: string
        pattern: ^ami-[a-f0-9]{1,17}$
      architecture:
        description: Architecture of the AWS image (e.g. i386, x86_64)
        type: string
      hypervisor:
        description: The supported hypervisor.
        type: string
      platform:
        description: Platform of the image (e.g. Windows)
        type: string
      virtualization_type:
        description: Type of virtualization supported.
        type: string
      root_device_type:
        description: Root device type (e.g. ebs, instance-store)
        type: string
      kernel_id:
        description: Kernal AWS ID of the image.
        type: string
      tag_list:
        $ref: '#/definitions/aws_tag_list'
      root_device_name:
        description: Root device name (e.g. /dev/sda1, /dev/sda2)
        type: string
  aws_security_group_resources_def_status:
    type: object
    title: AWS Security Group resources
    description: AWS Security Group resources
    properties:
      id:
        description: The AWS ID of the security group.
        type: string
        pattern: ^sg-[a-f0-9]{1,17}$
      vpc_id:
        description: The AWS ID of the VPC for the security group.
        type: string
        pattern: ^vpc-[a-f0-9]{1,17}$
      tag_list:
        $ref: '#/definitions/aws_tag_list'
  aws_elastic_ip_resources_def_status:
    type: object
    title: AWS elastic IP creation/modification status
    description: 'AWS elastic IP creation/modification status.'
    properties:
      public_ip_address:
        description: The Elastic IP address
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      private_ip_address:
        description: >
          The private IP address associated with the
          Elastic IP (only for VPC)
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      instance_id:
        description: >
          The AWS ID of the instance the address is associated with.
        type: string
        pattern: ^i-[a-f0-9]{1,17}$
      domain:
        description: Indicates whether the address is an EC2 or VPC address.
        type: string
        x-ntnx-enum:
         - STANDARD
         - VPC
      allocation_id:
        description: The allocation AWS ID for the address (only for VPC)
        type: string
      association_id:
        description: The association AWS ID for the address (only for VPC)
        type: string
      network_interface_id:
        description: >
          The network interface (if any) that the address is associated
          with (only for VPC).
        type: string
      network_interface_owner_id:
        description: The owner AWS ID (only for VPC).
        type: string
  # The input object that defines a VM
  aws_vm_resources:
    type: object
    title: AWS VM Resources
    description: AWS VM Resources Definition.
    properties:
      account_uuid:
        description: The AWS account to which the instance belongs.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      region:
        description: The region to which the instance belongs.
        type: string
        pattern: ^[a-z]{2}-[a-z]*-[1-9]{1}$
      image_id:
        description: The AWS ID of the AMI on the instance.
        type: string
        pattern: ^ami-[a-f0-9]{1,17}$
      key_name:
        description: The name of the key pair used to launch the instance
        type: string
      instance_profile_name:
        description: |
          The name of the IAM Instance Profile (IIP) associated with the
          instance
        type: string
      instance_type:
        description: The type of instance e.g.'t1.micro', 'm1.small'
        type: string
        maxLength: 64
      vpc_id:
        description: The VPC AWS ID, if running in VPC.
        type: string
        pattern: ^vpc-[a-f0-9]{1,17}$
      subnet_id:
        description: The subnet within the VPC the instance belongs to.
        type: string
        pattern: ^subnet-[a-f0-9]{1,17}$
      private_ip_address:
        description: >
          The specific available IP from the subnet assigned to
          the instance.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      instance_initiated_shutdown_behavior:
        description: >
          Specifies whether the instance stops or terminates on
          instance-initiated shutdown.
        type: string
        x-ntnx-enum:
         - STOP
         - TERMINATE
      block_device_map:
        $ref: '#/definitions/aws_block_device_map'
      security_group_list:
        description: >
          AWS IDs of the security groups associated with the instance.
        $ref: '#/definitions/aws_security_group_list'
      state:
        description: "Instance's desired state."
        type: string
        x-ntnx-enum:
        # These are states that users can provide, the full set of states
        # is larger.
         - RUNNING
         - REBOOTING
         - STOPPED
      associate_public_ip_address:
        description: >
          Indicates whether the network interface receives a public IP
          address.Can associate a public IP address with a network interface
          only if it has a device index of eth0 and if it is a new network
          interface (not an existing one).
        type: boolean
      user_data:
        description: User data passed to launch the instance
        type: string
        maxLength: 16000
      availability_zone:
        description: The zone on which the instance is to be created.
        type: string
      tag_list:
        $ref: '#/definitions/aws_tag_list'

  # The output object that defines an AWS VM
  aws_vm_resources_def_status:
    type: object
    title: VM Resources Status Definition
    description: VM Resources Status Definition.
    properties:
      id:
        description: The AWS ID of the instance.
        type: string
        pattern: ^i-[a-f0-9]{1,17}$
      account_uuid:
        description: The AWS account to which the instance belongs.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      region:
        description: The region to which the instance belongs.
        type: string
        pattern: ^[a-z]{2}-[a-z]*-[1-9]{1}$
      image_id:
        description: The AWS ID of the AMI on the instance.
        type: string
        pattern: ^ami-[a-f0-9]{1,17}$
      key_name:
        description: The name of the key pair used to launch the instance
        type: string
      instance_profile_name:
        description: |
          The name of the IAM Instance Profile (IIP) associated with the
          instance.
        type: string
      instance_type:
        description: The type of instance e.g.'t1.micro', 'm1.small'
        type: string
        maxLength: 64
      vpc_id:
        description: The VPC AWS ID, if running in VPC.
        type: string
        pattern: ^vpc-[a-f0-9]{1,17}$
      subnet_id:
        description: The subnet within the VPC the instance belongs to.
        type: string
        pattern: ^subnet-[a-f0-9]{1,17}$
      public_ip_address:
        description: The public IP of the instance
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      private_ip_address:
        description: >
          The specific available IP from the subnet assigned to
          the instance.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      instance_initiated_shutdown_behavior:
        description: >
          Specifies whether the instance stops or terminates on
          instance-initiated shutdown.
        type: string
        x-ntnx-enum:
         - STOP
         - TERMINATE
      block_device_map:
        $ref: '#/definitions/aws_block_device_map_output_status'
      security_group_list:
        description: >
          AWS IDs of the security groups associated with the instance.
        $ref: '#/definitions/aws_security_group_list'
      state:
        description: "Instance's current state."
        type: string
        x-ntnx-enum:
         - PENDING
         - RUNNING
         - SHUTTING_DOWN
         - TERMINATED
         - STOPPING
         - STOPPED
      public_dns_name:
        description: The public DNS name of the instance.
        type: string
      private_dns_name:
        description: The private DNS name of the instance.
        type: string
      root_device_type:
        description: The root device type
        type: string
        x-ntnx-enum:
         - EBS
         - INSTANCE_STORE
      platform:
        description: Platform of the instance e.g. Windows
        type: string
      console_output:
        description: Console output of the instance
        type: string
        format: bytes
      launch_time:
        description: The time the instance was launched
        type: string
      availability_zone:
        description: The zone on which the instance is created
        type: string
      tag_list:
        $ref: '#/definitions/aws_tag_list'

  # Input object for AWS block device map.
  aws_block_device_map:
    title: AWS Block Device Map
    description: Describes the EBS Volumes associated.
    type: object
    properties:
      root_disk:
        description: Root disk of the instance.
        $ref: '#/definitions/aws_instance_disk'
      data_disk_list:
        description: Data disks of the instance.
        type: array
        items:
          $ref: '#/definitions/aws_instance_disk'

  aws_block_device_map_output_status:
    title: AWS Block Device Map Output Status
    description: Describes the EBS Volumes associated.
    type: object
    properties:
      root_disk:
        description: Root disk of the instance.
        $ref: '#/definitions/aws_instance_disk_output_status'
      data_disk_list:
        description: Data disks of the instance.
        type: array
        items:
          $ref: '#/definitions/aws_instance_disk_output_status'

  # Input object for AWS instance disk.
  aws_instance_disk:
    title: AWS Instance Disk
    description: AWS Instance Disk
    type: object
    properties:
      device_name:
        description: Device name e.g. /dev/sdb
        type: string
      size_gb:
        description: Size of volumes in GB.
        type: integer
        format: int64
      delete_on_termination:
        description: Status of delete on termination.
        type: boolean
      snapshot_id:
        description: AWS snapshot ID.
        type: string
      volume_type:
        description: Type of the Volume.
        type: string
        x-ntnx-enum:
         - GP2
         - IO1
         - ST1
         - SC1
         - STANDARD
      iops:
        description: >
          The requested number of I/O operations per second that the volume can
          support for provisioned IOPS (SSD) volumes (io1).
          Minimum = 100 IOPS and Maximum = 20000 IOPS.
        type: integer
        format: int64

  # Output object for AWS instance disk
  aws_instance_disk_output_status:
    title: AWS Instance Disk Status
    description: AWS Instance Disk Status
    type: object
    properties:
      id:
        description: AWS ID of the volume.
        type: string
      device_name:
        description: Device name e.g. /dev/sdb
        type: string
      size_gb:
        description: Size of volumes in GB.
        type: integer
        format: int64
      delete_on_termination:
        description: Status of delete on termination.
        type: boolean
      snapshot_id:
        description: AWS snapshot ID.
        type: string
      status:
        description: The status of the Volume.
        type: string
        x-ntnx-enum:
         - CREATING
         - ATTACHING
         - ATTACHED
         - AVAILABLE
         - IN_USE
         - DELETING
         - DELETED
         - ERROR
      volume_type:
        description: Type of the Volume.
        type: string
        x-ntnx-enum:
         - GP2
         - IO1
         - ST1
         - SC1
         - STANDARD
      iops:
        description: >
          The requested number of I/O operations per second that the volume can
          support for provisioned IOPS (SSD) volumes (io1).
          Minimum = 100 IOPS and Maximum = 20000 IOPS.
        type: integer
        format: int64
      availability_zone:
        description: The zone on which the EBS volume is created
        type: string
      tag_list:
        $ref: '#/definitions/aws_tag_list'

  aws_security_group_list:
    title: AWS Security Group List
    description: List of AWS security group IDs.
    type: array
    items:
      type: object
      properties:
        security_group_id:
          description: AWS ID of the security group
          type: string
          pattern: ^sg-[a-f0-9]{1,17}$
  # defined here instead of using template because of additionalProperties
  app_custom_intent_input:
    type: object
    title: app Intent Entity
    description: An intentful representation of an app
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'
      spec:
        $ref: '#/definitions/app'

  app_resources:
    type: object
    title: Resources for Application.
    description: Resources for Application.
    required:
      - variable_list
      - deployment_list
      - action_list
      - credential_list
    properties:
      deployment_list:
        description: List of Deployment Spec for Application.
        type: array
        items:
          $ref: '#/definitions/app_deployment_input'
      credential_list:
        description: Credential list for appspec
        type: array
        items:
          $ref: '#/definitions/app_credential_input'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      action_list:
        description: List of Action for Application.
        type: array
        items:
          $ref: '#/definitions/app_action_input'
      app_blueprint_reference:
        $ref: '#/definitions/blueprint_reference'
      app_blueprint_config_reference:
        $ref: '#/definitions/blueprint_reference'
      app_profile_config_reference:
        $ref: '#/definitions/app_profile_reference'
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      dependency_list:
        type: array
        description: Dependencies or edges between callrunbook tasks formed by usage of macros in child tasks
        items:
          $ref: '#/definitions/blueprint_dependency_list'

  app_resources_def_status:
    type: object
    title: Status for Application.
    description: Status for Application.
    required:
      - variable_list
      - deployment_list
      - action_list
      - credential_list
      - app_blueprint_reference
      - app_state
    properties:
      source_marketplace_name:
        description: Name of the marketplace item used to create this app
        type: string
      source_marketplace_version:
        description: Version of the marketplace item used to create this app
        type: string
      deployment_list:
        description: List of Deployment Spec for Application.
        type: array
        items:
          $ref: '#/definitions/app_deployment_response'
      credential_list:
        description: Credential list for appspec
        type: array
        items:
          $ref: '#/definitions/app_credential_response'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: List of Action for Application.
        type: array
        items:
          $ref: '#/definitions/app_action_response'
      app_blueprint_reference:
        $ref: '#/definitions/blueprint_reference'
      app_blueprint_config_reference:
        $ref: '#/definitions/blueprint_reference'
      app_profile_config_reference:
        $ref: '#/definitions/app_profile_reference'
      app_state:
        type: string
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      dependency_list:
        type: array
        description: Dependencies or edges between callrunbook tasks formed by usage of macros in child tasks
        items:
          $ref: '#/definitions/blueprint_dependency_list'

  app_actionrun_response:
    type: object
    title: app actionrun response format
    description: Response object for action_run, contains action_run_log
    required:
     - api_version
     - metadata
     - status
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'
      spec:
        $ref: '#/definitions/app_actionrun_spec'
      status:
        $ref: '#/definitions/app_actionrun_status'

  app_actionrun_input:
    type: object
    title: app actionrun request format
    description: Request object for action_run, contains action_run_log
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'
      spec:
        $ref: '#/definitions/app_actionrun_spec'

  app_actionrun_spec:
    type: object
    title: Spec for action launch.
    description: Spec for action launch.
    properties:
      target_uuid:
        description: The target entity on which that action will be running.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      target_kind:
        description: type of target entity.
        type: string
      args:
        description: Argument that need to be passed in action run. It is a dictionary of name-values.
        type: array
        items:
          $ref: '#/definitions/app_actionrun_args'

  app_actionrun_status:
    type: object
    title: Status of action_run
    description: Status of action_run
    properties:
      runlog_uuid:
        description: App creation runlog uuid.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID

  app_actionrun_args:
    type: object
    title: Argument format for action run
    description: Argument format for action run
    properties:
      name:
        description: Name of the Argument field.
        type: string
        maxLength: 64
      value:
        description: Value of the Argument field.
        type: string

  app_runlog_list:
    type: object
    title:  runlog entity list
    description: Runlog entity list of the app
    required:
      - metadata
      - api_version
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/app_runlog_list_metadata"
      entities:
        type: array
        items:
          $ref: "#/definitions/app_runlog_response"

  app_runlog_response:
    type: object
    title: Response containing the current state of the runlog
    description: Response containing the current state of the runlog
    required:
      - api_version
      - metadata
      - status
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/app_runlog_metadata"
      status:
        $ref: "#/definitions/app_runlog_resources"

  app_runlog_resources:
    type: object
    title: Runlog resources
    description: Runlog resources
    required:
      - type
      - is_critical
      - reason_list
    properties:
      application_reference:
        description: application reference
        $ref: '#/definitions/app_reference'
      type:
        description: type of runlog
        type: string
        x-ntnx-enum:
          - TaskRunlog
          - RunbookRunlog
          - ActionRunlog
          - PolicyRunlog
      element_type:
        description: type of element this runlog refers to.
        type: string
        x-ntnx-enum:
          - Substrate
          - Package
          - Service
          - Deployment
          - Application
          - LoadBalancer
          - SubstrateElement
          - PackageElement
          - ServiceElement
          - DeploymentElement
      element_reference:
          $ref: '#/definitions/entity_reference'
      parent_reference:
        description: parent reference
        $ref: '#/definitions/app_runlog_reference'
      root_reference:
        description: root reference
        $ref: '#/definitions/app_runlog_reference'
      task_reference:
        description: task reference
        $ref: '#/definitions/app_task_reference'
      call_runbook_reference:
        description: call runbook task reference
        $ref: '#/definitions/app_task_reference'
      action_reference:
        description: action reference
        $ref: '#/definitions/entity_reference'
      userdata_reference:
        description: user data reference
        $ref: '#/definitions/entity_reference'
      is_critical:
        description: critical or non-critical runlog
        type: boolean
        default: false
      is_runlog_archived:
        description: Describe if action runlog is archived
        type: boolean
        default: false
      reason_list:
        type: array
        description: reasons of failure if any
        items:
          type: string

  app_runlog_output_response:
    type: object
    title: Response containing the last 10 lines of output
    description: Response containing the last 10 lines of output
    required:
      - api_version
      - metadata
      - status
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/app_runlog_metadata"
      status:
        $ref: "#/definitions/app_runlog_output_status"


  app_runlog_output_status:
    type: object
    title: Runlog output
    description: Runlog output
    required:
      - output_list
    properties:
      output_list:
        type: array
        description: application runlog resources
        items:
            $ref: '#/definitions/app_runlog_output'

  app_runlog_output:
    type: object
    title: Response of app runlog result output
    description: Response of app runlog response output
    properties:
      trl_id:
        type: string
      output:
        type: string
  account_resources:
    type: object
    title: Account resources
    description: Account resources
    required:
      - type
      - data
    properties:
      type:
        type: string
      data:
        additionalProperties: true
        type: object
        description: Account data

  account_resources_def_status:
    type: object
    title: Account resources
    description: Account resources
    required:
      - type
      - data
    properties:
      type:
        type: string
      data:
        additionalProperties: true
        type: object
        description: Account data
  app_runlog_archive_list_response:
    type: object
    title: App Archive List Response
    description: App Archive List Response
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/app_runlog_archive_response'

  app_runlog_archive_response:
    type: object
    title: App Archive Response
    description: App Archive Response
    properties:
      end_time:
        type: string
        format: date-time
        description: Till time for archive.
      start_time:
        type: string
        format: date-time
        description: From time for archive.
      creation_time:
        type: string
        format: date-time
        description: Creation time of archive.
      is_available:
        type: boolean
        description: Archive available flag.
      uuid:
        description: Archive file uuid.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      name:
        description: Archive file name.
        type: string
  vmware_list_metadata:
    type: object
    title: Metadata for vmware meta apis
    description: |
      All vmware meta api calls  will have this metadata block as input
    properties:
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
  environment_resources:
    type: object
    title: Resources for Environment.
    description: Resources for Environment.
    properties:
      substrate_definition_list:
        description: Substrate definitions for Environment.
        type: array
        items:
          $ref: '#/definitions/app_substrate_input'
      credential_definition_list:
        description: Credential definitions for Environment.
        type: array
        items:
          $ref: '#/definitions/app_credential_input'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_input'

  environment_resources_def_status:
    type: object
    title: Status of the environment
    description: Status of the environment
    properties:
      substrate_definition_list:
        description: Substrate definitions for Environment.
        type: array
        items:
          $ref: '#/definitions/app_substrate_response'
      credential_definition_list:
        description: Credential definitions for Environment.
        type: array
        items:
          $ref: '#/definitions/app_credential_response'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      project_reference:
        description: The project the environment is in.
        $ref: "#/definitions/project_reference"
  blueprint_dependency_list:
      type: object
      title: Depends on Definition for Application.
      description: Depends on definition for Application.
      required:
        - getter_resource_kind
        - getter_resource_name
        - setter_resource_attr
        - setter_resource_kind
        - setter_resource_name
        - action_resource_kind
        - action_resource_name
        - action_name
      properties:
        from_resource_kind:
          description: |
          type: string
        getter_resource_kind:
          description: |
          type: string
        getter_resource_name:
          description: |
          type: string
        setter_resource_attr:
          description: |
          type: string
        setter_resource_kind:
          description: |
          type: string
        setter_resource_name:
          description: |
          type: string
        action_resource_kind:
          description: |
          type: string
        action_resource_name:
          description: |
          type: string
        action_name:
          description: |
          type: string

  blueprint_launch_spec:
    type: object
    title: Spec for Blueprint launch.
    description: Spec for Blueprint launch.
    properties:
      resources:
        description: Runtime updated blueprint spec.
        $ref: '#/definitions/blueprint_resources'
      description:
        description: description for blueprint launch
        type: string
        maxLength: 5000
      application_name:
        description: Application name by which the application need to be created.
        type: string
      app_profile_reference:
        $ref: '#/definitions/app_profile_reference'

  blueprint_launch_response_status:
    type: object
    title: Status of the Blueprint launch.
    description: Status of the Blueprint launch.
    properties:
      request_id:
        description: Request id to track the launch process
        type: string

  blueprint_launch_input:
    type: object
    title: Launch Blueprint request.
    description: Launch Blueprint request.
    required:
      - api_version
      - metadata
      - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/blueprint_metadata"
      spec:
        $ref: "#/definitions/blueprint_launch_spec"

  blueprint_launch_response:
    type: object
    title: Response containing the application UUID and create action runlog uuid
    description: Response containing the application UUID and create action and runlog uuid
    required:
      - api_version
      - metadata
      - status
      - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/blueprint_metadata"
      spec:
        $ref: "#/definitions/blueprint_launch_spec"
      status:
        $ref: "#/definitions/blueprint_launch_response_status"

  blueprint_clone_response:
    type: object
    title: Response containing the UUID of the cloned blueprint
    description: Response containing the UUID of the cloned blueprint
    required:
      - blueprint_uuid
    properties:
      blueprint_uuid:
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID

  blueprint_pending_launches_response:
    type: object
    title: Response containing the state of the launch
    description: Response containing status, milestone reached and application uuid
    required:
      - state
      - milestone
      - bp_name
      - app_name
    properties:
      state:
        description: state of launch which can be pending, running, success, failure
        type: string
      milestone:
        description: gives more granularity in status
        type: string
      application_uuid:
        description: application UUID present after the status moves to success
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      bp_name:
        description: name of the blueprint
        type: string
      app_name:
        description: name of the application
        type: string
      blueprint_uuid:
        description: blueprint uuid
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      details:
        description: additional details about the status of launch
        type: string

  blueprint_pending_launches_status:
    type: object
    title: Status of the launch
    description: Response containing state, milestone reached and application uuid
    properties:
      state:
        description: Status of the launch
        type: string
      milestone:
        description: gives more granularity in status
        type: string
      application_uuid:
        description: application UUID present after the status moves to success
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      bp_name:
        description: name of the blueprint
        type: string
      app_name:
        description: name of the application
        type: string
      blueprint_uuid:
        description: blueprint uuid
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      details:
        description: additional details about the status of launch
        type: string
      message_list:
        description: Message list for app blueprint
        type: array
        items:
          $ref: '#/definitions/message_resource'

  blueprint_pending_launches_list_response:
    type: object
    title: Response containing all the pending bp launches
    description: Response containing all the bp launch requests which have not completed
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_list_metadata_output'
      entites:
        type: array
        items:
          $ref: '#/definitions/blueprint_pending_launches_resource'

  blueprint_pending_launches_resource:
    type: object
    title: blueprint launches in progress response
    description: Response object for the launches in progress for app blueprints
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      status:
        $ref: '#/definitions/blueprint_pending_launches_status'

  blueprint_clone_input:
    type: object
    title: Clone Blueprint request.
    description: Clone Blueprint request.
    required:
      - metadata
      - blueprint_name
    properties:
      metadata:
        $ref: "#/definitions/blueprint_metadata"
      blueprint_name:
        type: string
        maxLength: 64

  blueprint_marketplace_launch_input:
    type: object
    title: Launch Marketplace Blueprint request.
    description: Launch Blueprint request.
    required:
      - api_version
      - metadata
      - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/blueprint_metadata"
      spec:
        $ref: "#/definitions/blueprint_marketplace_launch_spec"

  blueprint_marketplace_launch_spec:
    type: object
    title: Spec for Blueprint launch.
    description: Spec for Blueprint launch.
    required:
      - resources
      - app_blueprint_name
    properties:
      resources:
        description: Blueprint spec of the marketplace blueprint.
        $ref: '#/definitions/blueprint_upload_resources'
      environment_uuid:
        description: Environment uuid.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      app_blueprint_name:
        description: Name of the app blueprint to be created.
        type: string
      description:
        description: Description for the marketplace item
        type: string
      source_marketplace_version:
        type: string
        description: >
          Indicates version of the source marketplace item of the app blueprint
      source_marketplace_name:
        type: string
        description: >
          Name of the source marketplace item of the app blueprint

  blueprint_marketplace_launch_response:
    type: object
    title: Response containing the UUID of the newly created app blueprint object
    description: Response containing the UUID of the newly created app blueprint object
    required:
      - api_version
      - metadata
      - status
      - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/blueprint_metadata"
      spec:
        $ref: "#/definitions/blueprint_marketplace_launch_spec"
      status:
        $ref: "#/definitions/blueprint_marketplace_launch_response_status"

  blueprint_marketplace_launch_response_status:
    type: object
    title: Status of the Blueprint.
    description: Status of the Blueprint.
    properties:
      app_blueprint_uuid:
        description: AppBlueprint uuid.
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
        format: UUID
      resources:
        $ref: "#/definitions/blueprint_resources_def_status"
      description:
        description: Description for the marketplace item
        type: string
  blueprint_download_def_status:
    type: object
    title: App blueprint download status
    description: App blueprint download status
    required:
    - name
    - resources
    properties:
      name:
        type: string
      description:
        type: string
      state:
        type: string
      message_list:
        type: array
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/blueprint_download_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
  #


# defined here instead of using template because of additionalProperties

  blueprint_custom_intent_input:
    type: object
    title: blueprint Intent Entity
    description: An intentful representation of a blueprint
    required:
     - api_version
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      spec:
        $ref: '#/definitions/blueprint'

  blueprint_resources:
    type: object
    title: Resources for Blueprint.
    description: Resources for Blueprint.
    properties:
      service_definition_list:
        description: Service definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_service_input'
      package_definition_list:
        description: Package definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_package_input'
      substrate_definition_list:
        description: Substrate definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_substrate_input'
      app_profile_list:
        description: App profile definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_profile_input'
      credential_definition_list:
        description: Credential definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_credential_input'
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference'
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      type:
        description: Type of blueprint
        type: string
        maxLength: 64



  blueprint_resources_def_status:
    type: object
    title: Status of the Blueprint.
    description: Status of the Blueprint.
    properties:
      service_definition_list:
        description: Service definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_service_response'
      package_definition_list:
        description: Package definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_package_response'
      substrate_definition_list:
        description: Substrate definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_substrate_response'
      app_profile_list:
        description: App profile definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_profile_response'
      credential_definition_list:
        description: Credential definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_credential_response'
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference'
      is_cloned:
        description: Cloned or original blueprint
        type: boolean
        default: false
      state:
        description: |
        type: string
      message_list:
        description: Message list for app blueprint
        type: array
        items:
          $ref: '#/definitions/message_resource'
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      type:
        description: Type of blueprint
        type: string
        maxLength: 64
  #





# defined here instead of using template because of additionalProperties

  blueprint_upload_custom_intent_input:
    type: object
    title: blueprint Intent Entity
    description: An intentful representation of a blueprint
    required:
     - api_version
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      spec:
        $ref: '#/definitions/blueprint_upload'

  blueprint_upload_resources:
    type: object
    title: Resources for Blueprint.
    description: Resources for Blueprint.
    properties:
      service_definition_list:
        description: Service definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_service_input_upload'
      package_definition_list:
        description: Package definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_package_input_upload'
      substrate_definition_list:
        description: Substrate definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_substrate_input_upload'
      app_profile_list:
        description: App profile definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_profile_input_upload'
      credential_definition_list:
        description: Credential definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_credential_input_upload'
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference_upload'
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      type:
        description: Type of blueprint
        type: string
        maxLength: 64


  blueprint_download_intent_response:
    type: object
    title: blueprint Intent Response
    description: Response object for intentful operations on a blueprint
    required:
     - api_version
     - metadata
     - spec
     - status
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      spec:
        $ref: '#/definitions/blueprint_upload'
      status:
        $ref: '#/definitions/blueprint_download_def_status'


  blueprint_download_resources_def_status:
    type: object
    title: Status of the Blueprint.
    description: Status of the Blueprint.
    properties:
      service_definition_list:
        description: Service definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_service_response_download'
      package_definition_list:
        description: Package definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_package_response_download'
      substrate_definition_list:
        description: Substrate definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_substrate_response_download'
      app_profile_list:
        description: App profile definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_profile_response_download'
      credential_definition_list:
        description: Credential definitions for Blueprint.
        type: array
        items:
          $ref: '#/definitions/app_credential_response_download'
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference_upload'
      is_cloned:
        description: Cloned or original blueprint
        type: boolean
        default: false
      state:
        description: |
        type: string
      message_list:
        description: Message list for app blueprint
        type: array
        items:
          $ref: '#/definitions/message_resource'
      client_attrs:
        additionalProperties: true
        description: Data needed for clients.
        type: object
      type:
        description: Type of blueprint
        type: string
        maxLength: 64
  blueprint_upload:
    type: object
    title: App blueprint upload kind
    description: App blueprint upload kind
    required:
    - name
    - resources
    properties:
      name:
        type: string
        maxLength: 64
      description:
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/blueprint_upload_resources'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  blueprint_upload_output:
    type: object
    title: Upload AppBlueprint output
    description: The UUID of the newly created AppBlueprint
    properties:
      uuid:
        description: UUID of the newly created AppBlueprint
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0


  gcp_list_metadata:
    type: object
    title: Metadata for GCP list calls
    description: All GCP list calls will have this metadata block as input
    properties:
      offset:
        type: integer
        format: int32
        minimum: 0
        description: Offset from the start of the entity list
      length:
        type: integer
        format: int32
        minimum: 1
        description: The number of records to retrieve relative to the offset
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.




  app_action_input:
    title: Action for Application
    description: Action definition for Application
    type: object
    properties:
      uuid:
        description: |
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        maxLength: 64
      critical:
        description: action critical flag
        type: boolean
        default: false
      attrs:
        additionalProperties: true
        description: action attrs
        type: object
      runbook:
        description: |
          Action runbooks
        $ref: "#/definitions/app_runbook_input"

  app_action_response:
    title: Action for Application
    description: Action definition for Application
    type: object
    properties:
      uuid:
        description: |
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        maxLength: 64
      critical:
        description: action critical flag
        type: boolean
        default: false
      attrs:
        additionalProperties: true
        description: action attrs
        type: object
      runbook:
        description: |
          Action runbooks
        $ref: "#/definitions/app_runbook_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for action
        type: array
        items:
          $ref: '#/definitions/message_resource'







  app_action_input_upload:
    title: Action for Application
    description: Action definition for Application
    type: object
    properties:
      uuid:
        description: |
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        maxLength: 64
      critical:
        description: action critical flag
        type: boolean
        default: false
      attrs:
        additionalProperties: true
        description: action attrs
        type: object
      runbook:
        description: |
          Action runbooks
        $ref: "#/definitions/app_runbook_input_upload"

  app_action_response_download:
    title: Action for Application
    description: Action definition for Application
    type: object
    properties:
      uuid:
        description: |
        type: string
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        format: UUID
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        maxLength: 64
      critical:
        description: action critical flag
        type: boolean
        default: false
      attrs:
        additionalProperties: true
        description: action attrs
        type: object
      runbook:
        description: |
          Action runbooks
        $ref: "#/definitions/app_runbook_response_download"
      state:
        description: |
        type: string
      message_list:
        description: Message list for action
        type: array
        items:
          $ref: '#/definitions/message_resource'








  app_cost_input:
    type: object
    title: Cost for Application
    description: Cost definition for Application
    required:
      - name

      - uuid

      - type
      - interval
      - value
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LIVE
          - STATIC
      interval:
        description: |
        type: string
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
      value:
        description: |
        type: string

  app_cost_response:
    type: object
    title: Cost for Application
    description: Cost definition for Application
    required:
      - name

      - uuid

      - type
      - interval
      - value
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LIVE
          - STATIC
      interval:
        description: |
        type: string
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
      value:
        description: |
        type: string
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'











  app_cost_input_upload:
    type: object
    title: Cost for Application
    description: Cost definition for Application
    required:
      - name

      - type
      - interval
      - value
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LIVE
          - STATIC
      interval:
        description: |
        type: string
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
      value:
        description: |
        type: string

  app_cost_response_download:
    type: object
    title: Cost for Application
    description: Cost definition for Application
    required:
      - name

      - type
      - interval
      - value
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LIVE
          - STATIC
      interval:
        description: |
        type: string
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
      value:
        description: |
        type: string
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'





  app_deployment_element:
    type: object
    title: Deployment for Application
    description: Deployment definition for Application
    required:
      - substrate_element_local_reference
    properties:
      substrate_element_local_reference:
        $ref: '#/definitions/app_substrate_reference'
      package_element_local_reference_list:
        description: List of references for packages
        type: array
        items:
          $ref: '#/definitions/app_package_reference'
      state:
        description: |
        type: string

  app_deployment_input:
    type: object
    title: Deployment definition for Application.
    description: Deployment definition for Application.
    required:
      - uuid
      - name
      - min_replicas
      - max_replicas
      - substrate
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      state:
        description: |
        type: string
      package_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_input'
      service_list:
        description: List of references for services
        type: array
        items:
          $ref: '#/definitions/app_service_input'
      config_reference:
        $ref: "#/definitions/app_blueprint_deployment_reference"
      substrate:
        $ref: '#/definitions/app_substrate_input'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input"
      brownfield_instance_list:
        description: list of brownfield elements
        type: array
        items:
          $ref: '#/definitions/brownfield_instance_input'
      type:
        description: |
        type: string
        default: GREENFIELD
        x-ntnx-enum:
          - BROWNFIELD
          - GREENFIELD

  app_deployment_response:
    type: object
    title: Deployment Definition for Application.
    description: Deployment definition for Application.
    required:
      - uuid
      - name
      - min_replicas
      - max_replicas
      - state
      - substrate_configuration
      - message_list
      - element_list
      - current_replicas
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      state:
        description: |
        type: string
      package_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_response'
      service_list:
        description: List of references for services
        type: array
        items:
          $ref: '#/definitions/app_service_response'
      substrate_configuration:
        $ref: '#/definitions/app_substrate_response'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      message_list:
        description: Message list for deployment
        type: array
        items:
          $ref: '#/definitions/message_resource'
      element_list:
        type: array
        items:
          $ref: '#/definitions/app_deployment_element'
      current_replicas:
        type: integer
      config_reference:
        $ref: "#/definitions/app_blueprint_deployment_reference"






  brownfield_instance_input:
    type: object
    title: brownfield instance list
    description: Brownfield instance list
    required:
      - instance_id
    properties:
      instance_id:
        description: Id of the vm
        type: string
        maxLength: 64
      instance_name:
        description: Name of the vm
        type: string
        maxLength: 64
      address:
        description: Address of the vm
        type: array
        items:
          type: string
      platform_data:
        additionalProperties:
          type: string





  blueprint_deployment_input:
    type: object
    title: Deployment definition for Application.
    description: Deployment definition for Application.
    required:
      - name

      - uuid

      - substrate_local_reference
      - min_replicas
      - max_replicas
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      package_local_reference_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_reference'
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference'
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      brownfield_instance_list:
        description: brownfield map
        type: array
        items:
          $ref: '#/definitions/brownfield_instance_input'
      type:
        description: |
        type: string
        default: GREENFIELD
        x-ntnx-enum:
          - BROWNFIELD
          - GREENFIELD
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      action_list:
        description: List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input"

  blueprint_deployment_response:
    title: Deployment Definition for Application.
    description: Deployment definition for Application.
    type: object
    required:
      - name

      - uuid

      - substrate_local_reference
      - min_replicas
      - max_replicas
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      package_local_reference_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_reference'
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference'
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      brownfield_instance_list:
        description: brownfield map
        type: array
        items:
          $ref: '#/definitions/brownfield_instance_input'
      type:
        description: |
        type: string
        default: GREENFIELD
        x-ntnx-enum:
          - BROWNFIELD
          - GREENFIELD
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for blueprint deployment
        type: array
        items:
          $ref: '#/definitions/message_resource'











  blueprint_deployment_input_upload:
    type: object
    title: Deployment definition for Application.
    description: Deployment definition for Application.
    required:
      - name

      - substrate_local_reference
      - min_replicas
      - max_replicas
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      package_local_reference_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_reference_upload'
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      brownfield_instance_list:
        description: brownfield map
        type: array
        items:
          $ref: '#/definitions/brownfield_instance_input'
      type:
        description: |
        type: string
        default: GREENFIELD
        x-ntnx-enum:
          - BROWNFIELD
          - GREENFIELD
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'
      action_list:
        description: List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input_upload"

  blueprint_deployment_response_download:
    title: Deployment Definition for Application.
    description: Deployment definition for Application.
    type: object
    required:
      - name

      - substrate_local_reference
      - min_replicas
      - max_replicas
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      package_local_reference_list:
        description: List of references for the packages
        type: array
        items:
          $ref: '#/definitions/app_package_reference_upload'
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      min_replicas:
        description: Minimum replicas for the deployment.
        type: string
        default: "1"
      max_replicas:
        description: Maximum replicas for the deployment.
        type: string
        default: "1"
      fault_domain_scope:
        description: |
        type: string
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
      num_fault_tolerance:
        description: |
        type: integer
        format: int64
      percent_fault_tolerance:
        description: |
        type: integer
        format: int64
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      brownfield_instance_list:
        description: brownfield map
        type: array
        items:
          $ref: '#/definitions/brownfield_instance_input'
      type:
        description: |
        type: string
        default: GREENFIELD
        x-ntnx-enum:
          - BROWNFIELD
          - GREENFIELD
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response_download'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response_download"
      state:
        description: |
        type: string
      message_list:
        description: Message list for blueprint deployment
        type: array
        items:
          $ref: '#/definitions/message_resource'


  app_package_input:
    title: Package for Application
    description: Package definition for Application
    type: object
    required:
      - name

      - uuid

      - type
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      version:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      service_local_reference_list:
        description: References of the service.
        type: array
        items:
          $ref: '#/definitions/app_service_reference'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      config_reference:
        $ref: "#/definitions/app_package_reference"
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input"

  app_package_response:
    title: Package for Application
    description: Package definition for Application
    type: object
    required:
      - name

      - uuid

      - type
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      version:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      service_local_reference_list:
        description: References of the service.
        type: array
        items:
          $ref: '#/definitions/app_service_reference'
      variable_list:
         description: |
         type: array
         items:
           $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
           List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for package
        type: array
        items:
          $ref: '#/definitions/message_resource'
      account_reference:
        $ref: '#/definitions/account_reference'
      config_reference:
        $ref: "#/definitions/app_package_reference"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_package_element"
      service_element_local_reference_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_service_element"
  # This is to avoid recursive definitions
  app_package_element:
    title: Package element for Application
    description: Package definition for Application
    type: object
    required:
      - name

      - uuid

      - type
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      version:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      service_local_reference_list:
        description: References of the service.
        type: array
        items:
          $ref: '#/definitions/app_service_reference'
      variable_list:
         description: |
         type: array
         items:
           $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
           List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for package
        type: array
        items:
          $ref: '#/definitions/message_resource'





  app_profile_input_upload:
    type: object
    title: App profile resource
    description: App profile resources
    required:
      - name

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      deployment_create_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/blueprint_deployment_input_upload'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input_upload"

  app_profile_response_download:
    type: object
    title: App profile resources
    description: App profile resources
    required:
      - name

      - state
      - message_list
      - dependency_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
      description:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      deployment_create_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/blueprint_deployment_response_download'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response_download'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response_download"
      state:
        description: |
        type: string
      message_list:
        description: Message list for blueprint deployment
        type: array
        items:
          $ref: '#/definitions/message_resource'
      dependency_list:
        type: array
        items:
          $ref: '#/definitions/blueprint_dependency_list'


  app_profile_input:
    type: object
    title: App profile resource
    description: App profile resources
    required:
      - name

      - uuid

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      deployment_create_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/blueprint_deployment_input'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input"

  app_profile_response:
    type: object
    title: App profile resources
    description: App profile resources
    required:
      - name

      - uuid

      - state
      - message_list
      - dependency_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
      description:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      deployment_create_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/blueprint_deployment_response'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for blueprint deployment
        type: array
        items:
          $ref: '#/definitions/message_resource'
      dependency_list:
        type: array
        items:
          $ref: '#/definitions/blueprint_dependency_list'





  app_package_input_upload:
    title: Package for Application
    description: Package definition for Application
    type: object
    required:
      - name

      - type
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      version:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      service_local_reference_list:
        description: References of the service.
        type: array
        items:
          $ref: '#/definitions/app_service_reference_upload'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'
      config_reference:
        $ref: "#/definitions/app_package_reference_upload"
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input_upload"

  app_package_response_download:
    title: Package for Application
    description: Package definition for Application
    type: object
    required:
      - name

      - uuid

      - type
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      version:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      service_local_reference_list:
        description: References of the service.
        type: array
        items:
          $ref: '#/definitions/app_service_reference'
      variable_list:
         description: |
         type: array
         items:
           $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
           List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for package
        type: array
        items:
          $ref: '#/definitions/message_resource'
      account_reference:
        $ref: '#/definitions/account_reference_upload'
      config_reference:
        $ref: "#/definitions/app_package_reference_upload"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_package_element"
      service_element_local_reference_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_service_element"


  app_service_input:
    title: Service for Application
    description: Service definition for Application
    type: object
    required:
      - name

      - uuid

      - variable_list
      - action_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      port_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_service_port'
      depends_on_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/entity_reference"
      singleton:
        description: |
          If True, then this service can only be in a deployment with replica 1
        type: boolean
        default: false
      tier:
        description: Service tier name
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      config_reference:
        $ref: "#/definitions/app_service_reference"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      action_list:
        description: |
          List of references to service action
        type: array
        items:
          $ref: "#/definitions/app_action_input"


  app_service_response:
    title: Service for Application
    description: Service definition for Application
    type: object
    required:
      - name

      - uuid

      - state
      - action_list
      - variable_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      port_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_service_port'
      depends_on_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/entity_reference"
      singleton:
        description: |
          If True, then this service can only be in a deployment with replica 1
        type: boolean
        default: false
      tier:
        description: Service tier name
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for service
        type: array
        items:
          $ref: '#/definitions/message_resource'
      config_reference:
        $ref: "#/definitions/app_service_reference"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_service_element"






  app_runbook_input:
    title: Runbook for Application
    description: Runbook definition for Application
    type: object
    required:
      - name

      - uuid

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      main_task_local_reference:
          $ref: '#/definitions/app_task_reference'
      task_definition_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_task_input"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'

  app_runbook_response:
    title: Runbook for Application
    description: Runbook definition for Application
    type: object
    required:
      - name

      - uuid

      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      main_task_local_reference:
          $ref: '#/definitions/app_task_reference'
      task_definition_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_task_response"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'









  app_runbook_input_upload:
    title: Runbook for Application
    description: Runbook definition for Application
    type: object
    required:
      - name

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      main_task_local_reference:
          $ref: '#/definitions/app_task_reference_upload'
      task_definition_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_task_input_upload"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'

  app_runbook_response_download:
    title: Runbook for Application
    description: Runbook definition for Application
    type: object
    required:
      - name

      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      main_task_local_reference:
          $ref: '#/definitions/app_task_reference_upload'
      task_definition_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_task_response_download"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response_download'
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'





  app_service_input_upload:
    title: Service for Application
    description: Service definition for Application
    type: object
    required:
      - name

      - variable_list
      - action_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      port_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_service_port'
      depends_on_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/entity_reference"
      singleton:
        description: |
          If True, then this service can only be in a deployment with replica 1
        type: boolean
        default: false
      tier:
        description: Service tier name
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      config_reference:
        $ref: "#/definitions/app_service_reference_upload"
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'
      action_list:
        description: |
          List of references to service action
        type: array
        items:
          $ref: "#/definitions/app_action_input_upload"


  app_service_response_download:
    title: Service for Application
    description: Service definition for Application
    type: object
    required:
      - name

      - uuid

      - state
      - action_list
      - variable_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      port_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_service_port'
      depends_on_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/entity_reference"
      singleton:
        description: |
          If True, then this service can only be in a deployment with replica 1
        type: boolean
        default: false
      tier:
        description: Service tier name
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for service
        type: array
        items:
          $ref: '#/definitions/message_resource'
      config_reference:
        $ref: "#/definitions/app_service_reference_upload"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_service_element"
  # This is to avoid recursive definitions
  app_service_element:
    title: Service element for Application
    description: Service definition for Application
    type: object
    required:
      - name

      - uuid

      - state
      - action_list
      - variable_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      port_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_service_port'
      depends_on_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/entity_reference"
      singleton:
        description: |
          If True, then this service can only be in a deployment with replica 1
        type: boolean
        default: false
      tier:
        description: Service tier name
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: Message list for service
        type: array
        items:
          $ref: '#/definitions/message_resource'

  app_service_port:
    type: object
    title: Port for Application Service.
    description: Port for Application Service.
    required:
      - target_port
      - protocol
    properties:
      target_port:
        description: |
        type: string
      protocol:
        description: |
        type: string
      endpoint_name:
        description: |
        type: string


  app_substrate_input:
    title: Substrate definition
    description: Substrate definition
    type: object
    required:

      - uuid

      - name
      - type
      - variable_list
      - action_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - GCP_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
          - VMWARE_VM
      create_spec:
        additionalProperties: true
        description: Spec of the substrate
        type: object
      os_type:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      instance_name:
        description: |
        type: string
        maxLength: 64
      instance_id:
        description: |
        type: string
        maxLength: 64
      instance_power_state:
        description: |
        type: string
      instance_address:
        description: |
        type: string
      platform_data:
        description: |
        type: string
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_input'
      config_reference:
        $ref: "#/definitions/app_substrate_reference"
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input"

  app_substrate_response:
    title: Deployment Sustrate Definition for Application.
    description: Substrate info for deployment
    type: object
    required:

      - uuid

      - name
      - type
      - variable_list
      - action_list
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - GCP_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
          - VMWARE_VM
      create_spec:
        additionalProperties: true
        description: Spec of the substrate
        type: object
      os_type:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      instance_name:
        description: |
        type: string
        maxLength: 64
      instance_id:
        description: |
        type: string
        maxLength: 64
      instance_power_state:
        description: |
        type: string
      instance_address:
        description: |
        type: string
      platform_data:
        description: |
        type: string
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/message_resource'
      account_reference:
        $ref: '#/definitions/account_reference'
      config_reference:
        $ref: "#/definitions/app_substrate_reference"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_substrate_element"

  app_substrate_readiness_probe:
    type: object
    title: Readiness probe for substrate
    description: Readiness probe for substrate
    properties:
      connection_type:
        description: |
        type: string
        x-ntnx-enum:
          - SSH
          - POWERSHELL
      connection_port:
        description: |
        type: integer
        default: 22
      login_credential_local_reference:
        $ref: "#/definitions/app_credential_reference"
      timeout_secs:
        description: |
        type: string
      address:
        description: |
        type: string
      disable_readiness_probe:
        description: |
        type: boolean
  # This is to avoid recursive definitions
  app_substrate_element:
    title: Substrate element for Application
    description: Substrate element definition for Application
    type: object
    required:

      - uuid

      - name
      - type
      - variable_list
      - action_list
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - GCP_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
          - VMWARE_VM
      create_spec:
        additionalProperties: true
        description: Spec of the substrate
        type: object
      os_type:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      instance_name:
        description: |
        type: string
        maxLength: 64
      instance_id:
        description: |
        type: string
        maxLength: 64
      instance_power_state:
        description: |
        type: string
      instance_address:
        description: |
        type: string
      platform_data:
        description: |
        type: string
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/message_resource'





  app_substrate_input_upload:
    title: Substrate definition
    description: Substrate definition
    type: object
    required:

      - name
      - type
      - variable_list
      - action_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - GCP_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
          - VMWARE_VM
      create_spec:
        additionalProperties: true
        description: Spec of the substrate
        type: object
      os_type:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      instance_name:
        description: |
        type: string
        maxLength: 64
      instance_id:
        description: |
        type: string
        maxLength: 64
      instance_power_state:
        description: |
        type: string
      instance_address:
        description: |
        type: string
      platform_data:
        description: |
        type: string
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe_upload'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'
      config_reference:
        $ref: "#/definitions/app_substrate_reference_upload"
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_input_upload"

  app_substrate_response_download:
    title: Deployment Sustrate Definition for Application.
    description: Substrate info for deployment
    type: object
    required:

      - uuid

      - name
      - type
      - variable_list
      - action_list
      - state
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - GCP_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
          - VMWARE_VM
      create_spec:
        additionalProperties: true
        description: Spec of the substrate
        type: object
      os_type:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      instance_name:
        description: |
        type: string
        maxLength: 64
      instance_id:
        description: |
        type: string
        maxLength: 64
      instance_power_state:
        description: |
        type: string
      instance_address:
        description: |
        type: string
      platform_data:
        description: |
        type: string
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      variable_list:
        description: List of variables
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      action_list:
        description: |
          List of references to action
        type: array
        items:
          $ref: "#/definitions/app_action_response"
      state:
        description: |
        type: string
      message_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/message_resource'
      account_reference:
        $ref: '#/definitions/account_reference_upload'
      config_reference:
        $ref: "#/definitions/app_substrate_reference_upload"
      element_list:
        description: |
        type: array
        items:
          $ref: "#/definitions/app_substrate_element"

  app_substrate_readiness_probe_upload:
    type: object
    title: Readiness probe for substrate
    description: Readiness probe for substrate
    properties:
      connection_type:
        description: |
        type: string
        x-ntnx-enum:
          - SSH
          - POWERSHELL
      connection_port:
        description: |
        type: integer
        default: 22
      login_credential_local_reference:
        $ref: "#/definitions/app_credential_reference_upload"
      timeout_secs:
        description: |
        type: string
      address:
        description: |
        type: string
      disable_readiness_probe:
        description: |
        type: boolean








  app_task_input:
    title: Task for Application
    description: Task definition for Application
    type: object
    required:
      - name

      - uuid

      - type
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
      target_any_local_reference:
          $ref: '#/definitions/entity_reference'
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        description: task timeout
        type: string
      retries:
        description: Number of retries for the task
        type: string
      child_tasks_local_reference_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_task_reference'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input'

  app_task_response:
    title: Task for Application
    description: Task definition for Application
    type: object
    required:
      - name

      - uuid

      - type
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
      target_any_local_reference:
          $ref: '#/definitions/entity_reference'
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        description: task timeout
        type: string
      retries:
        description: Number of retries for the task
        type: string
      child_tasks_local_reference_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_task_reference'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response'
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'











  app_task_input_upload:
    title: Task for Application
    description: Task definition for Application
    type: object
    required:
      - name

      - type
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
      target_any_local_reference:
          $ref: '#/definitions/entity_reference'
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        description: task timeout
        type: string
      retries:
        description: Number of retries for the task
        type: string
      child_tasks_local_reference_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_task_reference_upload'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_input_upload'

  app_task_response_download:
    title: Task for Application
    description: Task definition for Application
    type: object
    required:
      - name

      - type
      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 128
      description:
        description: |
        type: string
        maxLength: 1000
      type:
        description: |
        type: string
      target_any_local_reference:
          $ref: '#/definitions/entity_reference'
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        description: task timeout
        type: string
      retries:
        description: Number of retries for the task
        type: string
      child_tasks_local_reference_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_task_reference_upload'
      variable_list:
        description: |
        type: array
        items:
          $ref: '#/definitions/app_variable_response_download'
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'








  app_credential_input:
    type: object
    title: Credential for application
    description: Credential for application
    required:
      - name

      - uuid

      - type
      - username
      - secret
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      username:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - PASSWORD
          - KEY
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      passphrase:
        additionalProperties: true
        type: object
        description: Credential passphrase object associated with the provided key
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object

  app_credential_response:
    type: object
    title: Credential for Application
    description: Credential definition for Application
    required:
      - name

      - uuid

      - type
      - username
      - secret
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      username:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - PASSWORD
          - KEY
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      passphrase:
        additionalProperties: true
        type: object
        description: Credential passphrase object associated with the provided key
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'







  app_variable_input:
    type: object
    title: Variable definition for application.
    description: Variable definition for application.
    required:
      - name

      - uuid

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      label:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
      attrs:
        additionalProperties: true
        description: |
        type: object
      val_type:
        description: |
        type: string
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
      value:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object


  app_variable_response:
    type: object
    title: Variable definition for application.
    description: Variable definition for application.
    required:
      - name

      - uuid

      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      label:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
      attrs:
        additionalProperties: true
        description: |
        type: object
      val_type:
        description: |
        type: string
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
      value:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      state:
        description: |
        type: string
      message_list:
        description: Message list for variable
        type: array
        items:
          $ref: '#/definitions/message_resource'










  app_variable_input_upload:
    type: object
    title: Variable definition for application.
    description: Variable definition for application.
    required:
      - name

    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      label:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
      attrs:
        additionalProperties: true
        description: |
        type: object
      val_type:
        description: |
        type: string
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
      value:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object


  app_variable_response_download:
    type: object
    title: Variable definition for application.
    description: Variable definition for application.
    required:
      - name

      - state
      - message_list
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      label:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
      attrs:
        additionalProperties: true
        description: |
        type: object
      val_type:
        description: |
        type: string
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
      value:
        description: |
        type: string
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      state:
        description: |
        type: string
      message_list:
        description: Message list for variable
        type: array
        items:
          $ref: '#/definitions/message_resource'











  app_credential_input_upload:
    type: object
    title: Credential for application
    description: Credential for application
    required:
      - name

      - type
      - username
      - secret
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      username:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - PASSWORD
          - KEY
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      passphrase:
        additionalProperties: true
        type: object
        description: Credential passphrase object associated with the provided key
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object

  app_credential_response_download:
    type: object
    title: Credential for Application
    description: Credential definition for Application
    required:
      - name

      - type
      - username
      - secret
    properties:
      uuid:
        description: |
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: |
        type: string
        maxLength: 64
      description:
        description: |
        type: string
        maxLength: 1000
      username:
        description: |
        type: string
      type:
        description: |
        type: string
        x-ntnx-enum:
          - PASSWORD
          - KEY
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      passphrase:
        additionalProperties: true
        type: object
        description: Credential passphrase object associated with the provided key
      editables:
        additionalProperties: true
        description: >
          Runtime editable attributes for this entity. The structure for this is a dictionary.
          The keys in this dictionary should be the name of the attribute on the entity.
          If the attribute is editable, the value should be true, else false.
          If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
        type: object
      state:
        description: |
        type: string
      message_list:
        description: Message list
        type: array
        items:
          $ref: '#/definitions/message_resource'
  floating_ip_resources:
    type: object
    title: Floating IP association request
    description: "Associate Floating IP to NIC"
    properties:
      vm_nic_reference:
        description: NIC with which the floating IP is associated.
        $ref: "#/definitions/vm_nic_reference"
      # fixed_ip - We can add an option for  fixed IP
      # when we support  multiple IPs per vnic.

  floating_ip_resources_def_status:
    type: object
    title: Floating IP allocation status
    description: "Floating IP allocation status."
    properties:
      vm_nic_reference:
        description: NIC with which the floating IP is associated.
        $ref: "#/definitions/vm_nic_reference"
      floating_ip:
        description: The Floating IP associated with the vnic.
        type: string
        pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      # fixed_ip - We can add an option for  fixed IP
      # when we support  multiple IPs per vnic.
  marketplace_item_render_input:
    type: object
    title: Render marketplace item input spec
    description: >
      Source spec that describes an entity like a VM, Image that
      should be translated into an marketplace item
    required:
      - name
      - input_type
      - input_spec
    properties:
      name:
        description: Name of the rendered marketplace item
        type: string
        maxLength: 64
      description:
        description: A description for the rendered marketplace item
        type: string
        maxLength: 1000
      input_type:
        type: string
        x-ntnx-enum:
          - VM_REFERENCE
          - VM_REFERENCE_WITH_CUSTOMIZATION
          - IMAGE_REFERENCE
      input_spec:
        title: Spec for the given entity type
        type: object
        description: Spec based on the type
        x-ntnx-one-of:
          - required:
              - vm_reference
          - required:
              - vm_reference_with_customization
          - required:
              - image_reference
        properties:
          vm_reference:
            $ref: '#/definitions/vm_reference'
          vm_reference_with_customization:
            $ref: '#/definitions/vm_reference_with_customization'
          image_reference:
            $ref: '#/definitions/image_reference'

  marketplace_item_render_output:
    type: object
    title: Render marketplace item output
    description: The UUID of the newly created Marketplace item
    properties:
      uuid:
        description: UUID of the newly created Marketplace item
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  vm_reference_with_customization:
    type: object
    title: Reference to a VM along with customization spec
    description: >
      Spec that describes a VM reference along with its customization config.
    required:
      - vm_reference
      - vm_customization
    properties:
      vm_reference:
        $ref: '#/definitions/vm_reference'
      vm_customization:
        $ref: '#/definitions/guest_customization'
  marketplace_item_config:
    type: object
    title: Enable or disable Nutanix apps
    description: Enable or disable Nutanix apps
    required:
      - enable_nutanix_apps
    properties:
      enable_nutanix_apps:
        type: boolean
        description: Whether to enable or disable Nutanix apps
  task_list_intent_response:
    type: object
    title: Task entity list
    description: Task entity list.
    required:
      - api_version
      - metadata
      - entities
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: "#/definitions/task_list_metadata_output"
      entities:
        type: array
        items:
          $ref: "#/definitions/task"

  task_poll_input:
    type: object
    title: Input for the task poll
    description: Input for a task poll
    required:
    - poll_timeout_seconds
    - task_uuid_list
    properties:
      poll_timeout_seconds:
        type: integer
        format: int32
        minimum: 0
        maximum: 30
        description: Poll timeout in seconds
      task_uuid_list:
        type: array
        title: List of task UUIDs to poll on
        description: List of task UUIDs to poll on
        items:
          type: string
          format: UUID
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  task_poll_response:
    type: object
    title: Response from a task poll request
    description: Response from a task poll request
    properties:
      has_poll_timed_out:
        type: boolean
        description: Did the poll timeout before all polled tasks completed
      entities:
        type: array
        items:
          $ref: "#/definitions/task"

  task:
    title: Task resources
    description: Task details
    type: object
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      uuid:
        description: UUID of the task.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0
      logical_timestamp:
        description: The logical timestamp
        type: integer
        format: int64
      progress_message:
        description: Description of what currently the task is doing
        type: string
      operation_type:
        description: Type of the operation tracked by the task
        type: string
      percentage_complete:
        description: The completion percentage for the task
        type: integer
        format: int32
      status:
        description: Task status
        type: string
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - SUCCEEDED
          - ABORTED
          - SUSPENDED
          - FAILED
      parent_task_reference:
        description: Reference to the parent task
        $ref: '#/definitions/task_reference'
      subtask_reference_list:
        description: Reference to the sub-tasks
        type: array
        items:
          $ref: '#/definitions/task_reference'
      cluster_reference:
        description: Reference to the cluster the task is being executed on
        $ref: '#/definitions/cluster_reference'
      creation_time:
        type: string
        format: date-time
        description: >
          UTC date and time in RFC-3339 format when task was created
      last_update_time:
        type: string
        format: date-time
        description: >
          UTC date and time in RFC-3339 format when task was last updated
      start_time:
        type: string
        format: date-time
        description: >
          UTC date and time in RFC-3339 format when Task execution started
      completion_time:
        type: string
        format: date-time
        description: >
          UTC date and time in RFC-3339 format when Task execution completed
      entity_reference_list:
        type: array
        items:
          $ref: '#/definitions/reference'
      error_code:
        description: >
          In case of task failure this field will provide the error code
        type: string
      error_detail:
        description: >
          In case of task failure this field will provide the error description
        type: string
  cloud_trust:
    type: object
    title: Cloud Pairing creation/modification spec.
    description: Cloud Pairing creation/modification spec.
    required:
      - resources
    properties:
      name:
        description: Cloud Trust name.
        type: string
        maxLength: 64
      description:
        description: A description or user annotation for the cloud trust.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/cloud_trust_resources'

  cloud_trust_def_status:
    type: object
    title: Cloud Pairing status.
    description: Cloud Pairing status.
    required:
      - resources
    properties:
      name:
        description: Cloud Trust name.
        type: string
      description:
        description: A description or user annotation for the cloud trust.
        type: string
      resources:
        $ref: '#/definitions/cloud_trust_response'

  cloud_trust_resources:
    type: object
    title: Cloud Trusts Resources.
    description: Cloud trusts resources definition.
    properties:
      cloud_type:
        description: Type of cloud to pair to.
        $ref: '#/definitions/cloud_type'
      url:
        description: URL of the Cloud (Nutanix hosted cloud/ Onprem Cloud) to pair to.
        type: string
        maxLength: 2083
      username:
        description: Username to be used for basic authentication.
        type: string
      password:
        description: Password to be used for basic authentication.
        type: string

  cloud_trust_response:
    type: object
    title: Cloud Trusts Response.
    description: Cloud trusts response definition.
    required:
      - remote_connection_reference
    properties:
      cloud_type:
        description: Type of cloud to pair to.
        $ref: '#/definitions/cloud_type'
      url:
        description: URL of the Cloud (Nutanix hosted cloud/ Onprem Cloud) to pair to.
        type: string
        maxLength: 2083
      username:
        description: Username to be used for basic authentication.
        type: string
      password:
        description: Password to be used for basic authentication.
        type: string
      remote_connection_reference:
        description: >
          Reference of the remote connection created while cloud pairing
        $ref: '#/definitions/remote_connection_reference'
  entity_sync_rule_resources:
    type: object
    title: Entity sync rule resources
    description: |
      Entity sync rule encodes the list of entity kinds which needs to be
      synced.
    properties:
      kind_list:
        description: List of kinds of the entities which needs to be synced.
        type: array
        items:
          type: string
          x-ntnx-enum:
            - PROTECTION_RULE
            - RECOVERY_PLAN

  entity_sync_rule:
    type: object
    title: Entity sync rule creation/modification spec
    description: Entity sync rule creation/modification spec.
    required:
     - name
     - resources
    properties:
      name:
        description: Entity sync rule name.
        type: string
        maxLength: 64
      description:
        description: A description or user annotation for the entity sync rule.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/entity_sync_rule_resources'

  entity_sync_rule_def_status:
    type: object
    title: Entity sync rule creation/modification status
    description: Entity sync rule creation/modification status.
    required:
     - name
     - resources
    properties:
      name:
        description: Entity sync rule name.
        type: string
      description:
        description: A description or user annotation for the entity sync rule.
        type: string
      resources:
        $ref: '#/definitions/entity_sync_rule_resources'

  list_entities_to_sync_response:
    type: array
    title: Response of list_entities_to_sync
    description: |
      List of entities that needs to be synced to connected Availability Zones.
    items:
      type: object
      required:
        - target_availability_zone_reference
      properties:
        target_availability_zone_reference:
          description: |
            Reference to the target Availability Zone where entities need to be
            synced.
          $ref: '#/definitions/availability_zone_reference'
        sync_entity_list:
          type: array
          items:
            type: object
            properties:
              operation_type:
                title: Sync operation type
                description: Type of the sync operation.
                type: string
                x-ntnx-enum:
                  - UPDATE
                  - DELETE
              entity_reference_list:
                description: |
                  List of references of entities that will be synced.
                type: array
                items:
                  $ref: "#/definitions/reference"
              categories:
                description: |
                  Set of categories that will be synced, represented as a
                  dictionary of category key -> list of category values.
                  e.g.{"env":["env1", "env2"]}
                type: object
                additionalProperties:
                  type: string
  cloud_config_response:
    type: object
    title: Nutanix Hosted Cloud Config Response.
    description: Nutanix hosted cloud Config response definition.
    required:
      - url
    properties:
      url:
        description: URL of the Nutanix hosted Cloud.
        type: string
        maxLength: 2083
  tenant:
    type: object
    title: Tenant definition.
    description: Tenant definition.
    required:
      - uuid
    properties:
      uuid:
        type: string
        description: UUID of the tenant.
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        type: string
        description: name of the tenant.
        maxLength: 64
      idp_tenant_identifier:
        description: IDP Tenant Identifier.
        type: string
        maxLength: 64
  # The input object that defines a qos policy.
  qos_policy_resources:
    type: object
    title: Qos Policy Resources
    description: Qos Policy Resources Definition.
    required:
      - type
      - parameters
    properties:
      type:
        description: |
          The type of qos policy - whether it's a storage qos policy or a
          network qos policy.
        type: string
        x-ntnx-enum:
          - STORAGE
      parameters:
        description: The qos policy rule to be applied.
        type: object
        x-ntnx-one-of:
          - required:
              - storage_qos_policy_parameters
        properties:
          storage_qos_policy_parameters:
            description: Storage qos policy parameters.
            $ref: "#/definitions/storage_qos_policy_config_input"
      filter_list:
        description: |
          List of entities on which the policy is to be applied.
        type: array
        items:
          $ref: "#/definitions/context_filter"
      report_config:
        description: Report generation inputs for a qos policy.
        $ref: "#/definitions/qos_policy_report_config"

  # The output object that defines a qos policy.
  qos_policy_resources_def_status:
    type: object
    title: Qos Policy Resources Status Definition
    description: Qos Policy Resources Status Definition.
    properties:
      type:
        description: |
          The type of qos policy - whether it's a storage qos policy or a
          network qos policy.
        type: string
        x-ntnx-enum:
          - STORAGE
      parameters:
        description: The qos policy rule to be applied.
        type: object
        properties:
          storage_qos_policy_parameters:
            description: Storage qos policy parameters.
            $ref: "#/definitions/storage_qos_policy_config_output"
      filter_list:
        description: List of entities on which the policy is to be applied.
        type: array
        items:
          $ref: "#/definitions/context_filter"
      report_config:
        description: Report configuration output.
        type: object
        properties:
          report_config_uuid:
            description: |
              Report config UUID to get all generated reports for the policy.
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          qos_policy_report_config:
            description: Report generation parameters passed to the policy.
            $ref: "#/definitions/qos_policy_report_config"

  qos_policy_report_config:
    type: object
    title: Qos Policy Report Generation Parameters.
    description: |
      Qos policy report generation and retention parameters.
    required:
      - reporting_schedule
      - retention_count
    properties:
      reporting_schedule:
        description: Report generation periodicity.
        $ref: "#/definitions/schedule"
      retention_count:
        description: Number of reports to be retained.
        type: integer
        format: int32
        default: 1
  ngt_policy:
    type: object
    title: NGT policy spec
    description: NGT policy spec.
    required:
      - resources
    properties:
      name:
        description: NGT policy name.
        type: string
        maxLength: 64
      description:
        description: A description or user annotation for the ngt policy.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/ngt_policy_resources'

  ngt_policy_def_status:
    type: object
    title: NGT policy status
    description: NGT policy status.
    required:
      - resources
    properties:
      name:
        description: Ngt policy name.
        type: string
      description:
        description: A description or user annotation for the ngt policy.
        type: string
      resources:
        $ref: '#/definitions/ngt_policy_resources'

  ngt_policy_resources:
    type: object
    title: NGT policy Resources
    description: NGT policy resources definition.
    required:
      - type
    properties:
      type:
        description: The type of ngt policy.
        type: string
        x-ntnx-enum:
          - REBOOT
      filter_list:
        description: List of entities on which the policy is to be applied.
        type: array
        items:
          $ref: "#/definitions/context_filter"
      parameters:
        description: The parameters based on policy rule to be applied.
        type: object
        x-ntnx-one-of:
          - required:
            - reboot_ngt_policy_parameters
        properties:
          reboot_ngt_policy_parameters:
            $ref: "#/definitions/reboot_ngt_policy_parameters"

  reboot_ngt_policy_parameters:
    type: object
    title: Reboot NGT policy parameters
    description: NGT reboot policy object.
    required:
      - schedule_type
    properties:
      schedule_type:
        description: Type of Schedule for policy enforcement.
        type: string
        x-ntnx-enum:
          - IMMEDIATE
          - LATER
      schedule:
        type: object
        description: Schedule for policy enforcement.
        x-ntnx-one-of:
          - required:
            - start_time
          - required:
            - day_time
        properties:
          start_time:
            description: |
              Start time of the schedule.
              The time should be specified in this manner.
              date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit)
              "T" time-hour(2digit) ":" time-minute(2digit) ":" time-second
              (2digit) [.] "Z"  or ("+" / "-") time-hour(2digit) ":"
              time-minute(2digit)
              Examples
              - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds
                after the 23rd hour of April 12th, 1985 in UTC.
              - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57
                seconds after the 16th hour of December 19th, 1996 with an offset
                of -08:00 from UTC (Pacific Standard Time).
                Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
            type: string
            format: date-time
          day_time:
            $ref: "#/definitions/day_time"
      apply_once:
        description: Flag for policies to be applied only once.
        type: boolean
        default: false

  day_time:
    type: object
    title: Day and Time at which NGT policy should be triggered
    description: Day and Time at which NGT policy should be triggered.
    required:
      - day_of_week
      - time
    properties:
      time:
        description: |
          Time of the day, the policy will be started. This is in "<x>h:<y>m"
          format. The values must be between 00h:00m and 23h:59m. For example
          user specified 18h:00m and the current time is 17h:00m then the first
          snapshot will be captured at 18h:00m. If the current time is 19h:00m
          then the first snapshot will be captured at 18h:00m next day. If not
          set, policy will be applicable immediately.
        type: string
      day_of_week:
        description: Day of week the policy has to take effect.
        type: string
        x-ntnx-enum:
          - SUNDAY
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY



  permission_metadata:
    title: permission metadata
    type: object
    description: The permission kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: permission
        x-ntnx-enum:
        - permission

      project_reference:
        description: The project the permission is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: permission uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: permission name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the permission
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when permission was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when permission was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  permission_list_metadata:
    type: object
    title: Metadata for permission list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: permission
        x-ntnx-enum:
        - permission
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  permission_list_metadata_output:
    type: object
    title: Metadata for permission list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: permission
        x-ntnx-enum:
        - permission
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  permission_reference:
    title: Reference to a permission
    type: object
    description: The reference to a permission
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: permission
        x-ntnx-enum:
        - permission
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  permission_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: permission
        x-ntnx-enum:
        - permission
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  role_metadata:
    title: role metadata
    type: object
    description: The role kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: role
        x-ntnx-enum:
        - role

      project_reference:
        description: The project the role is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: role uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: role name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the role
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when role was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when role was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  role_list_metadata:
    type: object
    title: Metadata for role list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: role
        x-ntnx-enum:
        - role
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  role_list_metadata_output:
    type: object
    title: Metadata for role list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: role
        x-ntnx-enum:
        - role
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  role_reference:
    title: Reference to a role
    type: object
    description: The reference to a role
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: role
        x-ntnx-enum:
        - role
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  role_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: role
        x-ntnx-enum:
        - role
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  project_metadata:
    title: project metadata
    type: object
    description: The project kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: project
        x-ntnx-enum:
        - project

      project_reference:
        description: The project the project is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: project uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: project name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the project
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when project was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when project was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  project_list_metadata:
    type: object
    title: Metadata for project list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: project
        x-ntnx-enum:
        - project
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  project_list_metadata_output:
    type: object
    title: Metadata for project list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: project
        x-ntnx-enum:
        - project
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  project_reference:
    title: Reference to a project
    type: object
    description: The reference to a project
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: project
        x-ntnx-enum:
        - project
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  project_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: project
        x-ntnx-enum:
        - project
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  ssh_user_metadata:
    title: ssh_user metadata
    type: object
    description: The ssh_user kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ssh_user
        x-ntnx-enum:
        - ssh_user

      project_reference:
        description: The project the ssh_user is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: ssh_user uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: ssh_user name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the ssh_user
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when ssh_user was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when ssh_user was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  ssh_user_list_metadata:
    type: object
    title: Metadata for ssh_user list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: ssh_user
        x-ntnx-enum:
        - ssh_user
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  ssh_user_list_metadata_output:
    type: object
    title: Metadata for ssh_user list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: ssh_user
        x-ntnx-enum:
        - ssh_user
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  ssh_user_reference:
    title: Reference to a ssh_user
    type: object
    description: The reference to a ssh_user
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ssh_user
        x-ntnx-enum:
        - ssh_user
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  ssh_user_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ssh_user
        x-ntnx-enum:
        - ssh_user
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  user_metadata:
    title: user metadata
    type: object
    description: The user kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user
        x-ntnx-enum:
        - user

      project_reference:
        description: The project the user is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: user uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: user name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the user
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when user was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when user was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  user_list_metadata:
    type: object
    title: Metadata for user list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: user
        x-ntnx-enum:
        - user
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  user_list_metadata_output:
    type: object
    title: Metadata for user list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: user
        x-ntnx-enum:
        - user
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  user_reference:
    title: Reference to a user
    type: object
    description: The reference to a user
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user
        x-ntnx-enum:
        - user
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  user_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user
        x-ntnx-enum:
        - user
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  user_group_metadata:
    title: user_group metadata
    type: object
    description: The user_group kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user_group
        x-ntnx-enum:
        - user_group

      project_reference:
        description: The project the user_group is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: user_group uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: user_group name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the user_group
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when user_group was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when user_group was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  user_group_list_metadata:
    type: object
    title: Metadata for user_group list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: user_group
        x-ntnx-enum:
        - user_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  user_group_list_metadata_output:
    type: object
    title: Metadata for user_group list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: user_group
        x-ntnx-enum:
        - user_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  user_group_reference:
    title: Reference to a user_group
    type: object
    description: The reference to a user_group
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user_group
        x-ntnx-enum:
        - user_group
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  user_group_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: user_group
        x-ntnx-enum:
        - user_group
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  access_control_policy_metadata:
    title: access_control_policy metadata
    type: object
    description: The access_control_policy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: access_control_policy
        x-ntnx-enum:
        - access_control_policy

      project_reference:
        description: The project the access_control_policy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: access_control_policy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: access_control_policy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the access_control_policy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when access_control_policy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when access_control_policy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  access_control_policy_list_metadata:
    type: object
    title: Metadata for access_control_policy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: access_control_policy
        x-ntnx-enum:
        - access_control_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  access_control_policy_list_metadata_output:
    type: object
    title: Metadata for access_control_policy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: access_control_policy
        x-ntnx-enum:
        - access_control_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  access_control_policy_reference:
    title: Reference to a access_control_policy
    type: object
    description: The reference to a access_control_policy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: access_control_policy
        x-ntnx-enum:
        - access_control_policy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  access_control_policy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: access_control_policy
        x-ntnx-enum:
        - access_control_policy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  resource_domain_metadata:
    title: resource_domain metadata
    type: object
    description: The resource_domain kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_domain
        x-ntnx-enum:
        - resource_domain

      project_reference:
        description: The project the resource_domain is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: resource_domain uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: resource_domain name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the resource_domain
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when resource_domain was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when resource_domain was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  resource_domain_list_metadata:
    type: object
    title: Metadata for resource_domain list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: resource_domain
        x-ntnx-enum:
        - resource_domain
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  resource_domain_list_metadata_output:
    type: object
    title: Metadata for resource_domain list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: resource_domain
        x-ntnx-enum:
        - resource_domain
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  resource_domain_reference:
    title: Reference to a resource_domain
    type: object
    description: The reference to a resource_domain
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_domain
        x-ntnx-enum:
        - resource_domain
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  resource_domain_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_domain
        x-ntnx-enum:
        - resource_domain
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  resource_charge_metadata:
    title: resource_charge metadata
    type: object
    description: The resource_charge kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_charge
        x-ntnx-enum:
        - resource_charge

      project_reference:
        description: The project the resource_charge is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: resource_charge uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: resource_charge name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the resource_charge
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when resource_charge was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when resource_charge was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  resource_charge_list_metadata:
    type: object
    title: Metadata for resource_charge list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: resource_charge
        x-ntnx-enum:
        - resource_charge
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  resource_charge_list_metadata_output:
    type: object
    title: Metadata for resource_charge list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: resource_charge
        x-ntnx-enum:
        - resource_charge
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  resource_charge_reference:
    title: Reference to a resource_charge
    type: object
    description: The reference to a resource_charge
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_charge
        x-ntnx-enum:
        - resource_charge
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  resource_charge_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: resource_charge
        x-ntnx-enum:
        - resource_charge
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vm_metadata:
    title: vm metadata
    type: object
    description: The vm kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm
        x-ntnx-enum:
        - vm

      project_reference:
        description: The project the vm is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_list_metadata:
    type: object
    title: Metadata for vm list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm
        x-ntnx-enum:
        - vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_list_metadata_output:
    type: object
    title: Metadata for vm list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm
        x-ntnx-enum:
        - vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_reference:
    title: Reference to a vm
    type: object
    description: The reference to a vm
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm
        x-ntnx-enum:
        - vm
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm
        x-ntnx-enum:
        - vm
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vm_disk_metadata:
    title: vm_disk metadata
    type: object
    description: The vm_disk kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_disk
        x-ntnx-enum:
        - vm_disk

      project_reference:
        description: The project the vm_disk is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm_disk uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm_disk name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm_disk
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm_disk was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm_disk was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_disk_list_metadata:
    type: object
    title: Metadata for vm_disk list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_disk
        x-ntnx-enum:
        - vm_disk
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_disk_list_metadata_output:
    type: object
    title: Metadata for vm_disk list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_disk
        x-ntnx-enum:
        - vm_disk
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_disk_reference:
    title: Reference to a vm_disk
    type: object
    description: The reference to a vm_disk
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_disk
        x-ntnx-enum:
        - vm_disk
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_disk_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_disk
        x-ntnx-enum:
        - vm_disk
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vm_nic_metadata:
    title: vm_nic metadata
    type: object
    description: The vm_nic kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_nic
        x-ntnx-enum:
        - vm_nic

      project_reference:
        description: The project the vm_nic is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm_nic uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm_nic name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm_nic
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm_nic was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm_nic was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_nic_list_metadata:
    type: object
    title: Metadata for vm_nic list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_nic
        x-ntnx-enum:
        - vm_nic
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_nic_list_metadata_output:
    type: object
    title: Metadata for vm_nic list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_nic
        x-ntnx-enum:
        - vm_nic
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_nic_reference:
    title: Reference to a vm_nic
    type: object
    description: The reference to a vm_nic
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_nic
        x-ntnx-enum:
        - vm_nic
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_nic_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_nic
        x-ntnx-enum:
        - vm_nic
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vm_gpu_metadata:
    title: vm_gpu metadata
    type: object
    description: The vm_gpu kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_gpu
        x-ntnx-enum:
        - vm_gpu

      project_reference:
        description: The project the vm_gpu is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm_gpu uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm_gpu name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm_gpu
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm_gpu was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm_gpu was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_gpu_list_metadata:
    type: object
    title: Metadata for vm_gpu list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_gpu
        x-ntnx-enum:
        - vm_gpu
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_gpu_list_metadata_output:
    type: object
    title: Metadata for vm_gpu list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_gpu
        x-ntnx-enum:
        - vm_gpu
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_gpu_reference:
    title: Reference to a vm_gpu
    type: object
    description: The reference to a vm_gpu
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_gpu
        x-ntnx-enum:
        - vm_gpu
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_gpu_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_gpu
        x-ntnx-enum:
        - vm_gpu
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  volume_group_metadata:
    title: volume_group metadata
    type: object
    description: The volume_group kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: volume_group
        x-ntnx-enum:
        - volume_group

      project_reference:
        description: The project the volume_group is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: volume_group uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: volume_group name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the volume_group
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when volume_group was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when volume_group was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  volume_group_list_metadata:
    type: object
    title: Metadata for volume_group list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: volume_group
        x-ntnx-enum:
        - volume_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  volume_group_list_metadata_output:
    type: object
    title: Metadata for volume_group list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: volume_group
        x-ntnx-enum:
        - volume_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  volume_group_reference:
    title: Reference to a volume_group
    type: object
    description: The reference to a volume_group
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: volume_group
        x-ntnx-enum:
        - volume_group
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  volume_group_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: volume_group
        x-ntnx-enum:
        - volume_group
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  customization_spec_metadata:
    title: customization_spec metadata
    type: object
    description: The customization_spec kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: customization_spec
        x-ntnx-enum:
        - customization_spec

      project_reference:
        description: The project the customization_spec is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: customization_spec uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: customization_spec name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the customization_spec
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when customization_spec was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when customization_spec was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  customization_spec_list_metadata:
    type: object
    title: Metadata for customization_spec list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: customization_spec
        x-ntnx-enum:
        - customization_spec
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  customization_spec_list_metadata_output:
    type: object
    title: Metadata for customization_spec list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: customization_spec
        x-ntnx-enum:
        - customization_spec
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  customization_spec_reference:
    title: Reference to a customization_spec
    type: object
    description: The reference to a customization_spec
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: customization_spec
        x-ntnx-enum:
        - customization_spec
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  customization_spec_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: customization_spec
        x-ntnx-enum:
        - customization_spec
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  image_metadata:
    title: image metadata
    type: object
    description: The image kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: image
        x-ntnx-enum:
        - image

      project_reference:
        description: The project the image is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: image uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: image name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the image
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when image was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when image was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  image_list_metadata:
    type: object
    title: Metadata for image list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: image
        x-ntnx-enum:
        - image
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  image_list_metadata_output:
    type: object
    title: Metadata for image list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: image
        x-ntnx-enum:
        - image
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  image_reference:
    title: Reference to a image
    type: object
    description: The reference to a image
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: image
        x-ntnx-enum:
        - image
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  image_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: image
        x-ntnx-enum:
        - image
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  subnet_metadata:
    title: subnet metadata
    type: object
    description: The subnet kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: subnet
        x-ntnx-enum:
        - subnet

      project_reference:
        description: The project the subnet is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: subnet uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: subnet name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the subnet
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when subnet was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when subnet was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  subnet_list_metadata:
    type: object
    title: Metadata for subnet list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: subnet
        x-ntnx-enum:
        - subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  subnet_list_metadata_output:
    type: object
    title: Metadata for subnet list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: subnet
        x-ntnx-enum:
        - subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  subnet_reference:
    title: Reference to a subnet
    type: object
    description: The reference to a subnet
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: subnet
        x-ntnx-enum:
        - subnet
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  subnet_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: subnet
        x-ntnx-enum:
        - subnet
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vpn_connection_metadata:
    title: vpn_connection metadata
    type: object
    description: The vpn_connection kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_connection
        x-ntnx-enum:
        - vpn_connection

      project_reference:
        description: The project the vpn_connection is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vpn_connection uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vpn_connection name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vpn_connection
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vpn_connection was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vpn_connection was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vpn_connection_list_metadata:
    type: object
    title: Metadata for vpn_connection list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vpn_connection
        x-ntnx-enum:
        - vpn_connection
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vpn_connection_list_metadata_output:
    type: object
    title: Metadata for vpn_connection list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vpn_connection
        x-ntnx-enum:
        - vpn_connection
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vpn_connection_reference:
    title: Reference to a vpn_connection
    type: object
    description: The reference to a vpn_connection
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_connection
        x-ntnx-enum:
        - vpn_connection
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vpn_connection_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_connection
        x-ntnx-enum:
        - vpn_connection
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vpn_gateway_metadata:
    title: vpn_gateway metadata
    type: object
    description: The vpn_gateway kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_gateway
        x-ntnx-enum:
        - vpn_gateway

      project_reference:
        description: The project the vpn_gateway is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vpn_gateway uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vpn_gateway name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vpn_gateway
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vpn_gateway was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vpn_gateway was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vpn_gateway_list_metadata:
    type: object
    title: Metadata for vpn_gateway list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vpn_gateway
        x-ntnx-enum:
        - vpn_gateway
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vpn_gateway_list_metadata_output:
    type: object
    title: Metadata for vpn_gateway list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vpn_gateway
        x-ntnx-enum:
        - vpn_gateway
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vpn_gateway_reference:
    title: Reference to a vpn_gateway
    type: object
    description: The reference to a vpn_gateway
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_gateway
        x-ntnx-enum:
        - vpn_gateway
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vpn_gateway_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vpn_gateway
        x-ntnx-enum:
        - vpn_gateway
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  routing_policy_metadata:
    title: routing_policy metadata
    type: object
    description: The routing_policy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: routing_policy
        x-ntnx-enum:
        - routing_policy

      project_reference:
        description: The project the routing_policy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: routing_policy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: routing_policy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the routing_policy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when routing_policy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when routing_policy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  routing_policy_list_metadata:
    type: object
    title: Metadata for routing_policy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: routing_policy
        x-ntnx-enum:
        - routing_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  routing_policy_list_metadata_output:
    type: object
    title: Metadata for routing_policy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: routing_policy
        x-ntnx-enum:
        - routing_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  routing_policy_reference:
    title: Reference to a routing_policy
    type: object
    description: The reference to a routing_policy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: routing_policy
        x-ntnx-enum:
        - routing_policy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  routing_policy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: routing_policy
        x-ntnx-enum:
        - routing_policy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  batch_metadata:
    title: batch metadata
    type: object
    description: The batch kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: batch
        x-ntnx-enum:
        - batch

      project_reference:
        description: The project the batch is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: batch uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: batch name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the batch
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when batch was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when batch was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  batch_list_metadata:
    type: object
    title: Metadata for batch list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: batch
        x-ntnx-enum:
        - batch
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  batch_list_metadata_output:
    type: object
    title: Metadata for batch list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: batch
        x-ntnx-enum:
        - batch
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  batch_reference:
    title: Reference to a batch
    type: object
    description: The reference to a batch
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: batch
        x-ntnx-enum:
        - batch
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  batch_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: batch
        x-ntnx-enum:
        - batch
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  cluster_metadata:
    title: cluster metadata
    type: object
    description: The cluster kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cluster
        x-ntnx-enum:
        - cluster

      project_reference:
        description: The project the cluster is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: cluster uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: cluster name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the cluster
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when cluster was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when cluster was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  cluster_list_metadata:
    type: object
    title: Metadata for cluster list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: cluster
        x-ntnx-enum:
        - cluster
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cluster_list_metadata_output:
    type: object
    title: Metadata for cluster list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: cluster
        x-ntnx-enum:
        - cluster
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cluster_reference:
    title: Reference to a cluster
    type: object
    description: The reference to a cluster
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cluster
        x-ntnx-enum:
        - cluster
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  cluster_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cluster
        x-ntnx-enum:
        - cluster
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  directory_service_metadata:
    title: directory_service metadata
    type: object
    description: The directory_service kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: directory_service
        x-ntnx-enum:
        - directory_service

      project_reference:
        description: The project the directory_service is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: directory_service uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: directory_service name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the directory_service
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when directory_service was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when directory_service was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  directory_service_list_metadata:
    type: object
    title: Metadata for directory_service list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: directory_service
        x-ntnx-enum:
        - directory_service
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  directory_service_list_metadata_output:
    type: object
    title: Metadata for directory_service list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: directory_service
        x-ntnx-enum:
        - directory_service
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  directory_service_reference:
    title: Reference to a directory_service
    type: object
    description: The reference to a directory_service
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: directory_service
        x-ntnx-enum:
        - directory_service
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  directory_service_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: directory_service
        x-ntnx-enum:
        - directory_service
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  identity_provider_metadata:
    title: identity_provider metadata
    type: object
    description: The identity_provider kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: identity_provider
        x-ntnx-enum:
        - identity_provider

      project_reference:
        description: The project the identity_provider is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: identity_provider uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: identity_provider name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the identity_provider
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when identity_provider was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when identity_provider was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  identity_provider_list_metadata:
    type: object
    title: Metadata for identity_provider list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: identity_provider
        x-ntnx-enum:
        - identity_provider
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  identity_provider_list_metadata_output:
    type: object
    title: Metadata for identity_provider list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: identity_provider
        x-ntnx-enum:
        - identity_provider
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  identity_provider_reference:
    title: Reference to a identity_provider
    type: object
    description: The reference to a identity_provider
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: identity_provider
        x-ntnx-enum:
        - identity_provider
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  identity_provider_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: identity_provider
        x-ntnx-enum:
        - identity_provider
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  container_metadata:
    title: container metadata
    type: object
    description: The container kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: container
        x-ntnx-enum:
        - container

      project_reference:
        description: The project the container is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: container uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: container name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the container
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when container was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when container was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  container_list_metadata:
    type: object
    title: Metadata for container list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: container
        x-ntnx-enum:
        - container
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  container_list_metadata_output:
    type: object
    title: Metadata for container list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: container
        x-ntnx-enum:
        - container
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  container_reference:
    title: Reference to a container
    type: object
    description: The reference to a container
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: container
        x-ntnx-enum:
        - container
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  container_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: container
        x-ntnx-enum:
        - container
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  oauth_metadata:
    title: oauth metadata
    type: object
    description: The oauth kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth
        x-ntnx-enum:
        - oauth

      project_reference:
        description: The project the oauth is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: oauth uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: oauth name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the oauth
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when oauth was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when oauth was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  oauth_list_metadata:
    type: object
    title: Metadata for oauth list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: oauth
        x-ntnx-enum:
        - oauth
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  oauth_list_metadata_output:
    type: object
    title: Metadata for oauth list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: oauth
        x-ntnx-enum:
        - oauth
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  oauth_reference:
    title: Reference to a oauth
    type: object
    description: The reference to a oauth
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth
        x-ntnx-enum:
        - oauth
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  oauth_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth
        x-ntnx-enum:
        - oauth
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  oauth_client_metadata:
    title: oauth_client metadata
    type: object
    description: The oauth_client kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth_client
        x-ntnx-enum:
        - oauth_client

      project_reference:
        description: The project the oauth_client is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: oauth_client uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: oauth_client name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the oauth_client
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when oauth_client was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when oauth_client was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  oauth_client_list_metadata:
    type: object
    title: Metadata for oauth_client list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: oauth_client
        x-ntnx-enum:
        - oauth_client
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  oauth_client_list_metadata_output:
    type: object
    title: Metadata for oauth_client list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: oauth_client
        x-ntnx-enum:
        - oauth_client
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  oauth_client_reference:
    title: Reference to a oauth_client
    type: object
    description: The reference to a oauth_client
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth_client
        x-ntnx-enum:
        - oauth_client
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  oauth_client_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: oauth_client
        x-ntnx-enum:
        - oauth_client
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  cloud_credentials_metadata:
    title: cloud_credentials metadata
    type: object
    description: The cloud_credentials kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_credentials
        x-ntnx-enum:
        - cloud_credentials

      project_reference:
        description: The project the cloud_credentials is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: cloud_credentials uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: cloud_credentials name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the cloud_credentials
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when cloud_credentials was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when cloud_credentials was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  cloud_credentials_list_metadata:
    type: object
    title: Metadata for cloud_credentials list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: cloud_credentials
        x-ntnx-enum:
        - cloud_credentials
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cloud_credentials_list_metadata_output:
    type: object
    title: Metadata for cloud_credentials list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: cloud_credentials
        x-ntnx-enum:
        - cloud_credentials
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cloud_credentials_reference:
    title: Reference to a cloud_credentials
    type: object
    description: The reference to a cloud_credentials
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_credentials
        x-ntnx-enum:
        - cloud_credentials
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  cloud_credentials_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_credentials
        x-ntnx-enum:
        - cloud_credentials
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  changed_regions_metadata:
    title: changed_regions metadata
    type: object
    description: The changed_regions kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: changed_regions
        x-ntnx-enum:
        - changed_regions

      project_reference:
        description: The project the changed_regions is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: changed_regions uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: changed_regions name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the changed_regions
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when changed_regions was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when changed_regions was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  changed_regions_list_metadata:
    type: object
    title: Metadata for changed_regions list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: changed_regions
        x-ntnx-enum:
        - changed_regions
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  changed_regions_list_metadata_output:
    type: object
    title: Metadata for changed_regions list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: changed_regions
        x-ntnx-enum:
        - changed_regions
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  changed_regions_reference:
    title: Reference to a changed_regions
    type: object
    description: The reference to a changed_regions
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: changed_regions
        x-ntnx-enum:
        - changed_regions
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  changed_regions_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: changed_regions
        x-ntnx-enum:
        - changed_regions
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  category_metadata:
    title: category metadata
    type: object
    description: The category kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: category
        x-ntnx-enum:
        - category

      project_reference:
        description: The project the category is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: category uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: category name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the category
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when category was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when category was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  category_list_metadata:
    type: object
    title: Metadata for category list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: category
        x-ntnx-enum:
        - category
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  category_list_metadata_output:
    type: object
    title: Metadata for category list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: category
        x-ntnx-enum:
        - category
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  category_reference:
    title: Reference to a category
    type: object
    description: The reference to a category
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: category
        x-ntnx-enum:
        - category
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  category_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: category
        x-ntnx-enum:
        - category
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  idempotence_identifiers_metadata:
    title: idempotence_identifiers metadata
    type: object
    description: The idempotence_identifiers kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: idempotence_identifiers
        x-ntnx-enum:
        - idempotence_identifiers

      project_reference:
        description: The project the idempotence_identifiers is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: idempotence_identifiers uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: idempotence_identifiers name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the idempotence_identifiers
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when idempotence_identifiers was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when idempotence_identifiers was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  idempotence_identifiers_list_metadata:
    type: object
    title: Metadata for idempotence_identifiers list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: idempotence_identifiers
        x-ntnx-enum:
        - idempotence_identifiers
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  idempotence_identifiers_list_metadata_output:
    type: object
    title: Metadata for idempotence_identifiers list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: idempotence_identifiers
        x-ntnx-enum:
        - idempotence_identifiers
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  idempotence_identifiers_reference:
    title: Reference to a idempotence_identifiers
    type: object
    description: The reference to a idempotence_identifiers
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: idempotence_identifiers
        x-ntnx-enum:
        - idempotence_identifiers
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  idempotence_identifiers_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: idempotence_identifiers
        x-ntnx-enum:
        - idempotence_identifiers
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  recovery_plan_metadata:
    title: recovery_plan metadata
    type: object
    description: The recovery_plan kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan
        x-ntnx-enum:
        - recovery_plan

      project_reference:
        description: The project the recovery_plan is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: recovery_plan uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: recovery_plan name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the recovery_plan
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when recovery_plan was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when recovery_plan was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  recovery_plan_list_metadata:
    type: object
    title: Metadata for recovery_plan list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: recovery_plan
        x-ntnx-enum:
        - recovery_plan
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  recovery_plan_list_metadata_output:
    type: object
    title: Metadata for recovery_plan list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: recovery_plan
        x-ntnx-enum:
        - recovery_plan
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  recovery_plan_reference:
    title: Reference to a recovery_plan
    type: object
    description: The reference to a recovery_plan
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan
        x-ntnx-enum:
        - recovery_plan
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  recovery_plan_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan
        x-ntnx-enum:
        - recovery_plan
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  recovery_plan_job_metadata:
    title: recovery_plan_job metadata
    type: object
    description: The recovery_plan_job kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan_job
        x-ntnx-enum:
        - recovery_plan_job

      project_reference:
        description: The project the recovery_plan_job is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: recovery_plan_job uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: recovery_plan_job name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the recovery_plan_job
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when recovery_plan_job was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when recovery_plan_job was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  recovery_plan_job_list_metadata:
    type: object
    title: Metadata for recovery_plan_job list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: recovery_plan_job
        x-ntnx-enum:
        - recovery_plan_job
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  recovery_plan_job_list_metadata_output:
    type: object
    title: Metadata for recovery_plan_job list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: recovery_plan_job
        x-ntnx-enum:
        - recovery_plan_job
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  recovery_plan_job_reference:
    title: Reference to a recovery_plan_job
    type: object
    description: The reference to a recovery_plan_job
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan_job
        x-ntnx-enum:
        - recovery_plan_job
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  recovery_plan_job_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: recovery_plan_job
        x-ntnx-enum:
        - recovery_plan_job
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  docker_registry_metadata:
    title: docker_registry metadata
    type: object
    description: The docker_registry kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: docker_registry
        x-ntnx-enum:
        - docker_registry

      project_reference:
        description: The project the docker_registry is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: docker_registry uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: docker_registry name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the docker_registry
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when docker_registry was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when docker_registry was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  docker_registry_list_metadata:
    type: object
    title: Metadata for docker_registry list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: docker_registry
        x-ntnx-enum:
        - docker_registry
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  docker_registry_list_metadata_output:
    type: object
    title: Metadata for docker_registry list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: docker_registry
        x-ntnx-enum:
        - docker_registry
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  docker_registry_reference:
    title: Reference to a docker_registry
    type: object
    description: The reference to a docker_registry
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: docker_registry
        x-ntnx-enum:
        - docker_registry
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  docker_registry_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: docker_registry
        x-ntnx-enum:
        - docker_registry
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  virtual_network_metadata:
    title: virtual_network metadata
    type: object
    description: The virtual_network kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: virtual_network
        x-ntnx-enum:
        - virtual_network

      project_reference:
        description: The project the virtual_network is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: virtual_network uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: virtual_network name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the virtual_network
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when virtual_network was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when virtual_network was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  virtual_network_list_metadata:
    type: object
    title: Metadata for virtual_network list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: virtual_network
        x-ntnx-enum:
        - virtual_network
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  virtual_network_list_metadata_output:
    type: object
    title: Metadata for virtual_network list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: virtual_network
        x-ntnx-enum:
        - virtual_network
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  virtual_network_reference:
    title: Reference to a virtual_network
    type: object
    description: The reference to a virtual_network
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: virtual_network
        x-ntnx-enum:
        - virtual_network
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  virtual_network_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: virtual_network
        x-ntnx-enum:
        - virtual_network
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  floating_ip_metadata:
    title: floating_ip metadata
    type: object
    description: The floating_ip kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: floating_ip
        x-ntnx-enum:
        - floating_ip

      project_reference:
        description: The project the floating_ip is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: floating_ip uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: floating_ip name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the floating_ip
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when floating_ip was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when floating_ip was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  floating_ip_list_metadata:
    type: object
    title: Metadata for floating_ip list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: floating_ip
        x-ntnx-enum:
        - floating_ip
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  floating_ip_list_metadata_output:
    type: object
    title: Metadata for floating_ip list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: floating_ip
        x-ntnx-enum:
        - floating_ip
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  floating_ip_reference:
    title: Reference to a floating_ip
    type: object
    description: The reference to a floating_ip
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: floating_ip
        x-ntnx-enum:
        - floating_ip
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  floating_ip_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: floating_ip
        x-ntnx-enum:
        - floating_ip
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  network_function_metadata:
    title: network_function metadata
    type: object
    description: The network_function kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function
        x-ntnx-enum:
        - network_function

      project_reference:
        description: The project the network_function is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: network_function uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: network_function name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the network_function
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when network_function was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when network_function was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  network_function_list_metadata:
    type: object
    title: Metadata for network_function list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: network_function
        x-ntnx-enum:
        - network_function
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_function_list_metadata_output:
    type: object
    title: Metadata for network_function list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: network_function
        x-ntnx-enum:
        - network_function
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_function_reference:
    title: Reference to a network_function
    type: object
    description: The reference to a network_function
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function
        x-ntnx-enum:
        - network_function
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  network_function_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function
        x-ntnx-enum:
        - network_function
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  network_function_chain_metadata:
    title: network_function_chain metadata
    type: object
    description: The network_function_chain kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function_chain
        x-ntnx-enum:
        - network_function_chain

      project_reference:
        description: The project the network_function_chain is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: network_function_chain uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: network_function_chain name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the network_function_chain
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when network_function_chain was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when network_function_chain was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  network_function_chain_list_metadata:
    type: object
    title: Metadata for network_function_chain list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: network_function_chain
        x-ntnx-enum:
        - network_function_chain
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_function_chain_list_metadata_output:
    type: object
    title: Metadata for network_function_chain list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: network_function_chain
        x-ntnx-enum:
        - network_function_chain
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_function_chain_reference:
    title: Reference to a network_function_chain
    type: object
    description: The reference to a network_function_chain
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function_chain
        x-ntnx-enum:
        - network_function_chain
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  network_function_chain_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_function_chain
        x-ntnx-enum:
        - network_function_chain
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  network_security_rule_metadata:
    title: network_security_rule metadata
    type: object
    description: The network_security_rule kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_security_rule
        x-ntnx-enum:
        - network_security_rule

      project_reference:
        description: The project the network_security_rule is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: network_security_rule uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: network_security_rule name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the network_security_rule
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when network_security_rule was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when network_security_rule was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  network_security_rule_list_metadata:
    type: object
    title: Metadata for network_security_rule list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: network_security_rule
        x-ntnx-enum:
        - network_security_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_security_rule_list_metadata_output:
    type: object
    title: Metadata for network_security_rule list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: network_security_rule
        x-ntnx-enum:
        - network_security_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_security_rule_reference:
    title: Reference to a network_security_rule
    type: object
    description: The reference to a network_security_rule
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_security_rule
        x-ntnx-enum:
        - network_security_rule
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  network_security_rule_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_security_rule
        x-ntnx-enum:
        - network_security_rule
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  software_metadata:
    title: software metadata
    type: object
    description: The software kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: software
        x-ntnx-enum:
        - software

      project_reference:
        description: The project the software is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: software uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: software name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the software
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when software was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when software was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  software_list_metadata:
    type: object
    title: Metadata for software list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: software
        x-ntnx-enum:
        - software
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  software_list_metadata_output:
    type: object
    title: Metadata for software list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: software
        x-ntnx-enum:
        - software
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  software_reference:
    title: Reference to a software
    type: object
    description: The reference to a software
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: software
        x-ntnx-enum:
        - software
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  software_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: software
        x-ntnx-enum:
        - software
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  prism_central_metadata:
    title: prism_central metadata
    type: object
    description: The prism_central kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central
        x-ntnx-enum:
        - prism_central

      project_reference:
        description: The project the prism_central is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: prism_central uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: prism_central name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the prism_central
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when prism_central was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when prism_central was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  prism_central_list_metadata:
    type: object
    title: Metadata for prism_central list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: prism_central
        x-ntnx-enum:
        - prism_central
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  prism_central_list_metadata_output:
    type: object
    title: Metadata for prism_central list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: prism_central
        x-ntnx-enum:
        - prism_central
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  prism_central_reference:
    title: Reference to a prism_central
    type: object
    description: The reference to a prism_central
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central
        x-ntnx-enum:
        - prism_central
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  prism_central_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central
        x-ntnx-enum:
        - prism_central
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  prism_central_nodes_metadata:
    title: prism_central_nodes metadata
    type: object
    description: The prism_central_nodes kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central_nodes
        x-ntnx-enum:
        - prism_central_nodes

      project_reference:
        description: The project the prism_central_nodes is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: prism_central_nodes uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: prism_central_nodes name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the prism_central_nodes
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when prism_central_nodes was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when prism_central_nodes was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  prism_central_nodes_list_metadata:
    type: object
    title: Metadata for prism_central_nodes list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: prism_central_nodes
        x-ntnx-enum:
        - prism_central_nodes
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  prism_central_nodes_list_metadata_output:
    type: object
    title: Metadata for prism_central_nodes list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: prism_central_nodes
        x-ntnx-enum:
        - prism_central_nodes
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  prism_central_nodes_reference:
    title: Reference to a prism_central_nodes
    type: object
    description: The reference to a prism_central_nodes
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central_nodes
        x-ntnx-enum:
        - prism_central_nodes
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  prism_central_nodes_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: prism_central_nodes
        x-ntnx-enum:
        - prism_central_nodes
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  rackable_unit_metadata:
    title: rackable_unit metadata
    type: object
    description: The rackable_unit kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rackable_unit
        x-ntnx-enum:
        - rackable_unit

      project_reference:
        description: The project the rackable_unit is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: rackable_unit uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: rackable_unit name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the rackable_unit
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when rackable_unit was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when rackable_unit was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  rackable_unit_list_metadata:
    type: object
    title: Metadata for rackable_unit list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: rackable_unit
        x-ntnx-enum:
        - rackable_unit
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  rackable_unit_list_metadata_output:
    type: object
    title: Metadata for rackable_unit list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: rackable_unit
        x-ntnx-enum:
        - rackable_unit
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  rackable_unit_reference:
    title: Reference to a rackable_unit
    type: object
    description: The reference to a rackable_unit
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rackable_unit
        x-ntnx-enum:
        - rackable_unit
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  rackable_unit_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rackable_unit
        x-ntnx-enum:
        - rackable_unit
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  physical_availability_zone_metadata:
    title: physical_availability_zone metadata
    type: object
    description: The physical_availability_zone kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: physical_availability_zone
        x-ntnx-enum:
        - physical_availability_zone

      project_reference:
        description: The project the physical_availability_zone is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: physical_availability_zone uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: physical_availability_zone name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the physical_availability_zone
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when physical_availability_zone was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when physical_availability_zone was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  physical_availability_zone_list_metadata:
    type: object
    title: Metadata for physical_availability_zone list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: physical_availability_zone
        x-ntnx-enum:
        - physical_availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  physical_availability_zone_list_metadata_output:
    type: object
    title: Metadata for physical_availability_zone list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: physical_availability_zone
        x-ntnx-enum:
        - physical_availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  physical_availability_zone_reference:
    title: Reference to a physical_availability_zone
    type: object
    description: The reference to a physical_availability_zone
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: physical_availability_zone
        x-ntnx-enum:
        - physical_availability_zone
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  physical_availability_zone_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: physical_availability_zone
        x-ntnx-enum:
        - physical_availability_zone
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  host_metadata:
    title: host metadata
    type: object
    description: The host kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: host
        x-ntnx-enum:
        - host

      project_reference:
        description: The project the host is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: host uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: host name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the host
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when host was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when host was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  host_list_metadata:
    type: object
    title: Metadata for host list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: host
        x-ntnx-enum:
        - host
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  host_list_metadata_output:
    type: object
    title: Metadata for host list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: host
        x-ntnx-enum:
        - host
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  host_reference:
    title: Reference to a host
    type: object
    description: The reference to a host
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: host
        x-ntnx-enum:
        - host
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  host_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: host
        x-ntnx-enum:
        - host
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  disk_metadata:
    title: disk metadata
    type: object
    description: The disk kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: disk
        x-ntnx-enum:
        - disk

      project_reference:
        description: The project the disk is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: disk uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: disk name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the disk
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when disk was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when disk was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  disk_list_metadata:
    type: object
    title: Metadata for disk list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: disk
        x-ntnx-enum:
        - disk
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  disk_list_metadata_output:
    type: object
    title: Metadata for disk list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: disk
        x-ntnx-enum:
        - disk
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  disk_reference:
    title: Reference to a disk
    type: object
    description: The reference to a disk
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: disk
        x-ntnx-enum:
        - disk
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  disk_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: disk
        x-ntnx-enum:
        - disk
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  remote_connection_metadata:
    title: remote_connection metadata
    type: object
    description: The remote_connection kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: remote_connection
        x-ntnx-enum:
        - remote_connection

      project_reference:
        description: The project the remote_connection is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: remote_connection uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: remote_connection name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the remote_connection
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when remote_connection was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when remote_connection was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  remote_connection_list_metadata:
    type: object
    title: Metadata for remote_connection list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: remote_connection
        x-ntnx-enum:
        - remote_connection
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  remote_connection_list_metadata_output:
    type: object
    title: Metadata for remote_connection list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: remote_connection
        x-ntnx-enum:
        - remote_connection
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  remote_connection_reference:
    title: Reference to a remote_connection
    type: object
    description: The reference to a remote_connection
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: remote_connection
        x-ntnx-enum:
        - remote_connection
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  remote_connection_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: remote_connection
        x-ntnx-enum:
        - remote_connection
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  multicluster_config_metadata:
    title: multicluster_config metadata
    type: object
    description: The multicluster_config kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: multicluster_config
        x-ntnx-enum:
        - multicluster_config

      project_reference:
        description: The project the multicluster_config is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: multicluster_config uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: multicluster_config name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the multicluster_config
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when multicluster_config was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when multicluster_config was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  multicluster_config_list_metadata:
    type: object
    title: Metadata for multicluster_config list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: multicluster_config
        x-ntnx-enum:
        - multicluster_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  multicluster_config_list_metadata_output:
    type: object
    title: Metadata for multicluster_config list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: multicluster_config
        x-ntnx-enum:
        - multicluster_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  multicluster_config_reference:
    title: Reference to a multicluster_config
    type: object
    description: The reference to a multicluster_config
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: multicluster_config
        x-ntnx-enum:
        - multicluster_config
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  multicluster_config_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: multicluster_config
        x-ntnx-enum:
        - multicluster_config
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  availability_zone_metadata:
    title: availability_zone metadata
    type: object
    description: The availability_zone kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: availability_zone
        x-ntnx-enum:
        - availability_zone

      project_reference:
        description: The project the availability_zone is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: availability_zone uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: availability_zone name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the availability_zone
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when availability_zone was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when availability_zone was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  availability_zone_list_metadata:
    type: object
    title: Metadata for availability_zone list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: availability_zone
        x-ntnx-enum:
        - availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  availability_zone_list_metadata_output:
    type: object
    title: Metadata for availability_zone list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: availability_zone
        x-ntnx-enum:
        - availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  availability_zone_reference:
    title: Reference to a availability_zone
    type: object
    description: The reference to a availability_zone
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: availability_zone
        x-ntnx-enum:
        - availability_zone
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  availability_zone_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: availability_zone
        x-ntnx-enum:
        - availability_zone
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  protection_rule_metadata:
    title: protection_rule metadata
    type: object
    description: The protection_rule kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: protection_rule
        x-ntnx-enum:
        - protection_rule

      project_reference:
        description: The project the protection_rule is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: protection_rule uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: protection_rule name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the protection_rule
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when protection_rule was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when protection_rule was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  protection_rule_list_metadata:
    type: object
    title: Metadata for protection_rule list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: protection_rule
        x-ntnx-enum:
        - protection_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  protection_rule_list_metadata_output:
    type: object
    title: Metadata for protection_rule list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: protection_rule
        x-ntnx-enum:
        - protection_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  protection_rule_reference:
    title: Reference to a protection_rule
    type: object
    description: The reference to a protection_rule
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: protection_rule
        x-ntnx-enum:
        - protection_rule
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  protection_rule_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: protection_rule
        x-ntnx-enum:
        - protection_rule
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  report_instance_metadata:
    title: report_instance metadata
    type: object
    description: The report_instance kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_instance
        x-ntnx-enum:
        - report_instance

      project_reference:
        description: The project the report_instance is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: report_instance uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: report_instance name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the report_instance
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when report_instance was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when report_instance was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  report_instance_list_metadata:
    type: object
    title: Metadata for report_instance list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: report_instance
        x-ntnx-enum:
        - report_instance
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  report_instance_list_metadata_output:
    type: object
    title: Metadata for report_instance list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: report_instance
        x-ntnx-enum:
        - report_instance
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  report_instance_reference:
    title: Reference to a report_instance
    type: object
    description: The reference to a report_instance
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_instance
        x-ntnx-enum:
        - report_instance
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  report_instance_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_instance
        x-ntnx-enum:
        - report_instance
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  report_config_metadata:
    title: report_config metadata
    type: object
    description: The report_config kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_config
        x-ntnx-enum:
        - report_config

      project_reference:
        description: The project the report_config is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: report_config uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: report_config name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the report_config
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when report_config was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when report_config was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  report_config_list_metadata:
    type: object
    title: Metadata for report_config list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: report_config
        x-ntnx-enum:
        - report_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  report_config_list_metadata_output:
    type: object
    title: Metadata for report_config list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: report_config
        x-ntnx-enum:
        - report_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  report_config_reference:
    title: Reference to a report_config
    type: object
    description: The reference to a report_config
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_config
        x-ntnx-enum:
        - report_config
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  report_config_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: report_config
        x-ntnx-enum:
        - report_config
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  affinity_rule_metadata:
    title: affinity_rule metadata
    type: object
    description: The affinity_rule kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: affinity_rule
        x-ntnx-enum:
        - affinity_rule

      project_reference:
        description: The project the affinity_rule is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: affinity_rule uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: affinity_rule name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the affinity_rule
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when affinity_rule was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when affinity_rule was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  affinity_rule_list_metadata:
    type: object
    title: Metadata for affinity_rule list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: affinity_rule
        x-ntnx-enum:
        - affinity_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  affinity_rule_list_metadata_output:
    type: object
    title: Metadata for affinity_rule list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: affinity_rule
        x-ntnx-enum:
        - affinity_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  affinity_rule_reference:
    title: Reference to a affinity_rule
    type: object
    description: The reference to a affinity_rule
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: affinity_rule
        x-ntnx-enum:
        - affinity_rule
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  affinity_rule_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: affinity_rule
        x-ntnx-enum:
        - affinity_rule
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  common_report_config_metadata:
    title: common_report_config metadata
    type: object
    description: The common_report_config kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: common_report_config
        x-ntnx-enum:
        - common_report_config

      project_reference:
        description: The project the common_report_config is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: common_report_config uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: common_report_config name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the common_report_config
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when common_report_config was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when common_report_config was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  common_report_config_list_metadata:
    type: object
    title: Metadata for common_report_config list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: common_report_config
        x-ntnx-enum:
        - common_report_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  common_report_config_list_metadata_output:
    type: object
    title: Metadata for common_report_config list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: common_report_config
        x-ntnx-enum:
        - common_report_config
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  common_report_config_reference:
    title: Reference to a common_report_config
    type: object
    description: The reference to a common_report_config
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: common_report_config
        x-ntnx-enum:
        - common_report_config
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  common_report_config_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: common_report_config
        x-ntnx-enum:
        - common_report_config
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  marketplace_item_metadata:
    title: marketplace_item metadata
    type: object
    description: The marketplace_item kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: marketplace_item
        x-ntnx-enum:
        - marketplace_item

      project_reference:
        description: The project the marketplace_item is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: marketplace_item uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: marketplace_item name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the marketplace_item
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when marketplace_item was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when marketplace_item was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  marketplace_item_list_metadata:
    type: object
    title: Metadata for marketplace_item list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: marketplace_item
        x-ntnx-enum:
        - marketplace_item
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  marketplace_item_list_metadata_output:
    type: object
    title: Metadata for marketplace_item list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: marketplace_item
        x-ntnx-enum:
        - marketplace_item
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  marketplace_item_reference:
    title: Reference to a marketplace_item
    type: object
    description: The reference to a marketplace_item
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: marketplace_item
        x-ntnx-enum:
        - marketplace_item
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  marketplace_item_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: marketplace_item
        x-ntnx-enum:
        - marketplace_item
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  streaming_policy_metadata:
    title: streaming_policy metadata
    type: object
    description: The streaming_policy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: streaming_policy
        x-ntnx-enum:
        - streaming_policy

      project_reference:
        description: The project the streaming_policy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: streaming_policy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: streaming_policy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the streaming_policy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when streaming_policy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when streaming_policy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  streaming_policy_list_metadata:
    type: object
    title: Metadata for streaming_policy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: streaming_policy
        x-ntnx-enum:
        - streaming_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  streaming_policy_list_metadata_output:
    type: object
    title: Metadata for streaming_policy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: streaming_policy
        x-ntnx-enum:
        - streaming_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  streaming_policy_reference:
    title: Reference to a streaming_policy
    type: object
    description: The reference to a streaming_policy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: streaming_policy
        x-ntnx-enum:
        - streaming_policy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  streaming_policy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: streaming_policy
        x-ntnx-enum:
        - streaming_policy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  alert_metadata:
    title: alert metadata
    type: object
    description: The alert kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: alert
        x-ntnx-enum:
        - alert

      project_reference:
        description: The project the alert is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: alert uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: alert name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the alert
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when alert was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when alert was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  alert_list_metadata:
    type: object
    title: Metadata for alert list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: alert
        x-ntnx-enum:
        - alert
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  alert_list_metadata_output:
    type: object
    title: Metadata for alert list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: alert
        x-ntnx-enum:
        - alert
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  alert_reference:
    title: Reference to a alert
    type: object
    description: The reference to a alert
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: alert
        x-ntnx-enum:
        - alert
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  alert_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: alert
        x-ntnx-enum:
        - alert
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  action_type_metadata:
    title: action_type metadata
    type: object
    description: The action_type kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_type
        x-ntnx-enum:
        - action_type

      project_reference:
        description: The project the action_type is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: action_type uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: action_type name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the action_type
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when action_type was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when action_type was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  action_type_list_metadata:
    type: object
    title: Metadata for action_type list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: action_type
        x-ntnx-enum:
        - action_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_type_list_metadata_output:
    type: object
    title: Metadata for action_type list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: action_type
        x-ntnx-enum:
        - action_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_type_reference:
    title: Reference to a action_type
    type: object
    description: The reference to a action_type
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_type
        x-ntnx-enum:
        - action_type
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  action_type_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_type
        x-ntnx-enum:
        - action_type
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  action_instance_metadata:
    title: action_instance metadata
    type: object
    description: The action_instance kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_instance
        x-ntnx-enum:
        - action_instance

      project_reference:
        description: The project the action_instance is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: action_instance uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: action_instance name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the action_instance
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when action_instance was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when action_instance was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  action_instance_list_metadata:
    type: object
    title: Metadata for action_instance list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: action_instance
        x-ntnx-enum:
        - action_instance
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_instance_list_metadata_output:
    type: object
    title: Metadata for action_instance list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: action_instance
        x-ntnx-enum:
        - action_instance
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_instance_reference:
    title: Reference to a action_instance
    type: object
    description: The reference to a action_instance
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_instance
        x-ntnx-enum:
        - action_instance
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  action_instance_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_instance
        x-ntnx-enum:
        - action_instance
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  action_trigger_type_metadata:
    title: action_trigger_type metadata
    type: object
    description: The action_trigger_type kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_trigger_type
        x-ntnx-enum:
        - action_trigger_type

      project_reference:
        description: The project the action_trigger_type is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: action_trigger_type uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: action_trigger_type name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the action_trigger_type
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when action_trigger_type was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when action_trigger_type was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  action_trigger_type_list_metadata:
    type: object
    title: Metadata for action_trigger_type list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: action_trigger_type
        x-ntnx-enum:
        - action_trigger_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_trigger_type_list_metadata_output:
    type: object
    title: Metadata for action_trigger_type list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: action_trigger_type
        x-ntnx-enum:
        - action_trigger_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_trigger_type_reference:
    title: Reference to a action_trigger_type
    type: object
    description: The reference to a action_trigger_type
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_trigger_type
        x-ntnx-enum:
        - action_trigger_type
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  action_trigger_type_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_trigger_type
        x-ntnx-enum:
        - action_trigger_type
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  action_rule_metadata:
    title: action_rule metadata
    type: object
    description: The action_rule kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule
        x-ntnx-enum:
        - action_rule

      project_reference:
        description: The project the action_rule is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: action_rule uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: action_rule name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the action_rule
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when action_rule was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when action_rule was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  action_rule_list_metadata:
    type: object
    title: Metadata for action_rule list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: action_rule
        x-ntnx-enum:
        - action_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_rule_list_metadata_output:
    type: object
    title: Metadata for action_rule list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: action_rule
        x-ntnx-enum:
        - action_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_rule_reference:
    title: Reference to a action_rule
    type: object
    description: The reference to a action_rule
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule
        x-ntnx-enum:
        - action_rule
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  action_rule_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule
        x-ntnx-enum:
        - action_rule
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  action_rule_result_metadata:
    title: action_rule_result metadata
    type: object
    description: The action_rule_result kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule_result
        x-ntnx-enum:
        - action_rule_result

      project_reference:
        description: The project the action_rule_result is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: action_rule_result uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: action_rule_result name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the action_rule_result
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when action_rule_result was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when action_rule_result was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  action_rule_result_list_metadata:
    type: object
    title: Metadata for action_rule_result list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: action_rule_result
        x-ntnx-enum:
        - action_rule_result
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_rule_result_list_metadata_output:
    type: object
    title: Metadata for action_rule_result list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: action_rule_result
        x-ntnx-enum:
        - action_rule_result
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  action_rule_result_reference:
    title: Reference to a action_rule_result
    type: object
    description: The reference to a action_rule_result
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule_result
        x-ntnx-enum:
        - action_rule_result
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  action_rule_result_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: action_rule_result
        x-ntnx-enum:
        - action_rule_result
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  datacenter_metadata:
    title: datacenter metadata
    type: object
    description: The datacenter kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: datacenter
        x-ntnx-enum:
        - datacenter

      project_reference:
        description: The project the datacenter is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: datacenter uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: datacenter name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the datacenter
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when datacenter was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when datacenter was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  datacenter_list_metadata:
    type: object
    title: Metadata for datacenter list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: datacenter
        x-ntnx-enum:
        - datacenter
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  datacenter_list_metadata_output:
    type: object
    title: Metadata for datacenter list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: datacenter
        x-ntnx-enum:
        - datacenter
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  datacenter_reference:
    title: Reference to a datacenter
    type: object
    description: The reference to a datacenter
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: datacenter
        x-ntnx-enum:
        - datacenter
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  datacenter_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: datacenter
        x-ntnx-enum:
        - datacenter
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  cell_metadata:
    title: cell metadata
    type: object
    description: The cell kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cell
        x-ntnx-enum:
        - cell

      project_reference:
        description: The project the cell is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: cell uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: cell name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the cell
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when cell was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when cell was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  cell_list_metadata:
    type: object
    title: Metadata for cell list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: cell
        x-ntnx-enum:
        - cell
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cell_list_metadata_output:
    type: object
    title: Metadata for cell list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: cell
        x-ntnx-enum:
        - cell
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cell_reference:
    title: Reference to a cell
    type: object
    description: The reference to a cell
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cell
        x-ntnx-enum:
        - cell
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  cell_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cell
        x-ntnx-enum:
        - cell
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  rack_metadata:
    title: rack metadata
    type: object
    description: The rack kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rack
        x-ntnx-enum:
        - rack

      project_reference:
        description: The project the rack is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: rack uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: rack name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the rack
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when rack was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when rack was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  rack_list_metadata:
    type: object
    title: Metadata for rack list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: rack
        x-ntnx-enum:
        - rack
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  rack_list_metadata_output:
    type: object
    title: Metadata for rack list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: rack
        x-ntnx-enum:
        - rack
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  rack_reference:
    title: Reference to a rack
    type: object
    description: The reference to a rack
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rack
        x-ntnx-enum:
        - rack
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  rack_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: rack
        x-ntnx-enum:
        - rack
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  network_device_metadata:
    title: network_device metadata
    type: object
    description: The network_device kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_device
        x-ntnx-enum:
        - network_device

      project_reference:
        description: The project the network_device is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: network_device uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: network_device name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the network_device
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when network_device was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when network_device was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  network_device_list_metadata:
    type: object
    title: Metadata for network_device list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: network_device
        x-ntnx-enum:
        - network_device
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_device_list_metadata_output:
    type: object
    title: Metadata for network_device list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: network_device
        x-ntnx-enum:
        - network_device
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  network_device_reference:
    title: Reference to a network_device
    type: object
    description: The reference to a network_device
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_device
        x-ntnx-enum:
        - network_device
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  network_device_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: network_device
        x-ntnx-enum:
        - network_device
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  underlay_subnet_metadata:
    title: underlay_subnet metadata
    type: object
    description: The underlay_subnet kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: underlay_subnet
        x-ntnx-enum:
        - underlay_subnet

      project_reference:
        description: The project the underlay_subnet is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: underlay_subnet uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: underlay_subnet name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the underlay_subnet
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when underlay_subnet was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when underlay_subnet was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  underlay_subnet_list_metadata:
    type: object
    title: Metadata for underlay_subnet list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: underlay_subnet
        x-ntnx-enum:
        - underlay_subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  underlay_subnet_list_metadata_output:
    type: object
    title: Metadata for underlay_subnet list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: underlay_subnet
        x-ntnx-enum:
        - underlay_subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  underlay_subnet_reference:
    title: Reference to a underlay_subnet
    type: object
    description: The reference to a underlay_subnet
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: underlay_subnet
        x-ntnx-enum:
        - underlay_subnet
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  underlay_subnet_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: underlay_subnet
        x-ntnx-enum:
        - underlay_subnet
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  file_item_metadata:
    title: file_item metadata
    type: object
    description: The file_item kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: file_item
        x-ntnx-enum:
        - file_item

      project_reference:
        description: The project the file_item is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: file_item uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: file_item name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the file_item
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when file_item was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when file_item was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  file_item_list_metadata:
    type: object
    title: Metadata for file_item list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: file_item
        x-ntnx-enum:
        - file_item
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  file_item_list_metadata_output:
    type: object
    title: Metadata for file_item list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: file_item
        x-ntnx-enum:
        - file_item
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  file_item_reference:
    title: Reference to a file_item
    type: object
    description: The reference to a file_item
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: file_item
        x-ntnx-enum:
        - file_item
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  file_item_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: file_item
        x-ntnx-enum:
        - file_item
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  vm_snapshot_metadata:
    title: vm_snapshot metadata
    type: object
    description: The vm_snapshot kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_snapshot
        x-ntnx-enum:
        - vm_snapshot

      project_reference:
        description: The project the vm_snapshot is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm_snapshot uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm_snapshot name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm_snapshot
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm_snapshot was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm_snapshot was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_snapshot_list_metadata:
    type: object
    title: Metadata for vm_snapshot list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_snapshot
        x-ntnx-enum:
        - vm_snapshot
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_snapshot_list_metadata_output:
    type: object
    title: Metadata for vm_snapshot list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_snapshot
        x-ntnx-enum:
        - vm_snapshot
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_snapshot_reference:
    title: Reference to a vm_snapshot
    type: object
    description: The reference to a vm_snapshot
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_snapshot
        x-ntnx-enum:
        - vm_snapshot
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_snapshot_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_snapshot
        x-ntnx-enum:
        - vm_snapshot
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  support_case_metadata:
    title: support_case metadata
    type: object
    description: The support_case kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: support_case
        x-ntnx-enum:
        - support_case

      project_reference:
        description: The project the support_case is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: support_case uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: support_case name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the support_case
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when support_case was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when support_case was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  support_case_list_metadata:
    type: object
    title: Metadata for support_case list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: support_case
        x-ntnx-enum:
        - support_case
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  support_case_list_metadata_output:
    type: object
    title: Metadata for support_case list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: support_case
        x-ntnx-enum:
        - support_case
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  support_case_reference:
    title: Reference to a support_case
    type: object
    description: The reference to a support_case
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: support_case
        x-ntnx-enum:
        - support_case
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  support_case_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: support_case
        x-ntnx-enum:
        - support_case
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  nusights_proxy_metadata:
    title: nusights_proxy metadata
    type: object
    description: The nusights_proxy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: nusights_proxy
        x-ntnx-enum:
        - nusights_proxy

      project_reference:
        description: The project the nusights_proxy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: nusights_proxy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: nusights_proxy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the nusights_proxy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when nusights_proxy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when nusights_proxy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  nusights_proxy_list_metadata:
    type: object
    title: Metadata for nusights_proxy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: nusights_proxy
        x-ntnx-enum:
        - nusights_proxy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  nusights_proxy_list_metadata_output:
    type: object
    title: Metadata for nusights_proxy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: nusights_proxy
        x-ntnx-enum:
        - nusights_proxy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  nusights_proxy_reference:
    title: Reference to a nusights_proxy
    type: object
    description: The reference to a nusights_proxy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: nusights_proxy
        x-ntnx-enum:
        - nusights_proxy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  nusights_proxy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: nusights_proxy
        x-ntnx-enum:
        - nusights_proxy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  blackout_metadata:
    title: blackout metadata
    type: object
    description: The blackout kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blackout
        x-ntnx-enum:
        - blackout

      project_reference:
        description: The project the blackout is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: blackout uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: blackout name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the blackout
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when blackout was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when blackout was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  blackout_list_metadata:
    type: object
    title: Metadata for blackout list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: blackout
        x-ntnx-enum:
        - blackout
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  blackout_list_metadata_output:
    type: object
    title: Metadata for blackout list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: blackout
        x-ntnx-enum:
        - blackout
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  blackout_reference:
    title: Reference to a blackout
    type: object
    description: The reference to a blackout
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blackout
        x-ntnx-enum:
        - blackout
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  blackout_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blackout
        x-ntnx-enum:
        - blackout
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  direct_connect_metadata:
    title: direct_connect metadata
    type: object
    description: The direct_connect kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect
        x-ntnx-enum:
        - direct_connect

      project_reference:
        description: The project the direct_connect is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: direct_connect uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: direct_connect name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the direct_connect
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when direct_connect was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when direct_connect was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  direct_connect_list_metadata:
    type: object
    title: Metadata for direct_connect list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: direct_connect
        x-ntnx-enum:
        - direct_connect
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  direct_connect_list_metadata_output:
    type: object
    title: Metadata for direct_connect list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: direct_connect
        x-ntnx-enum:
        - direct_connect
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  direct_connect_reference:
    title: Reference to a direct_connect
    type: object
    description: The reference to a direct_connect
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect
        x-ntnx-enum:
        - direct_connect
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  direct_connect_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect
        x-ntnx-enum:
        - direct_connect
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  public_cidr_metadata:
    title: public_cidr metadata
    type: object
    description: The public_cidr kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: public_cidr
        x-ntnx-enum:
        - public_cidr

      project_reference:
        description: The project the public_cidr is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: public_cidr uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: public_cidr name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the public_cidr
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when public_cidr was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when public_cidr was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  public_cidr_list_metadata:
    type: object
    title: Metadata for public_cidr list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: public_cidr
        x-ntnx-enum:
        - public_cidr
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  public_cidr_list_metadata_output:
    type: object
    title: Metadata for public_cidr list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: public_cidr
        x-ntnx-enum:
        - public_cidr
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  public_cidr_reference:
    title: Reference to a public_cidr
    type: object
    description: The reference to a public_cidr
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: public_cidr
        x-ntnx-enum:
        - public_cidr
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  public_cidr_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: public_cidr
        x-ntnx-enum:
        - public_cidr
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  direct_connect_virtual_interface_metadata:
    title: direct_connect_virtual_interface metadata
    type: object
    description: The direct_connect_virtual_interface kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect_virtual_interface
        x-ntnx-enum:
        - direct_connect_virtual_interface

      project_reference:
        description: The project the direct_connect_virtual_interface is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: direct_connect_virtual_interface uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: direct_connect_virtual_interface name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the direct_connect_virtual_interface
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when direct_connect_virtual_interface was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when direct_connect_virtual_interface was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  direct_connect_virtual_interface_list_metadata:
    type: object
    title: Metadata for direct_connect_virtual_interface list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: direct_connect_virtual_interface
        x-ntnx-enum:
        - direct_connect_virtual_interface
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  direct_connect_virtual_interface_list_metadata_output:
    type: object
    title: Metadata for direct_connect_virtual_interface list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: direct_connect_virtual_interface
        x-ntnx-enum:
        - direct_connect_virtual_interface
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  direct_connect_virtual_interface_reference:
    title: Reference to a direct_connect_virtual_interface
    type: object
    description: The reference to a direct_connect_virtual_interface
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect_virtual_interface
        x-ntnx-enum:
        - direct_connect_virtual_interface
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  direct_connect_virtual_interface_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: direct_connect_virtual_interface
        x-ntnx-enum:
        - direct_connect_virtual_interface
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  app_metadata:
    title: app metadata
    type: object
    description: The app kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app
        x-ntnx-enum:
        - app

      project_reference:
        description: The project the app is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: app uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: app name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the app
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when app was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when app was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  app_list_metadata:
    type: object
    title: Metadata for app list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: app
        x-ntnx-enum:
        - app
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  app_list_metadata_output:
    type: object
    title: Metadata for app list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: app
        x-ntnx-enum:
        - app
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  app_reference:
    title: Reference to a app
    type: object
    description: The reference to a app
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app
        x-ntnx-enum:
        - app
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app
        x-ntnx-enum:
        - app
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  account_metadata:
    title: account metadata
    type: object
    description: The account kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: account
        x-ntnx-enum:
        - account

      project_reference:
        description: The project the account is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: account uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: account name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the account
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when account was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when account was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  account_list_metadata:
    type: object
    title: Metadata for account list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: account
        x-ntnx-enum:
        - account
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  account_list_metadata_output:
    type: object
    title: Metadata for account list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: account
        x-ntnx-enum:
        - account
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  account_reference:
    title: Reference to a account
    type: object
    description: The reference to a account
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: account
        x-ntnx-enum:
        - account
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  account_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: account
        x-ntnx-enum:
        - account
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  app_runlog_metadata:
    title: app_runlog metadata
    type: object
    description: The app_runlog kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_runlog
        x-ntnx-enum:
        - app_runlog

      project_reference:
        description: The project the app_runlog is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: app_runlog uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: app_runlog name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the app_runlog
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when app_runlog was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when app_runlog was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  app_runlog_list_metadata:
    type: object
    title: Metadata for app_runlog list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: app_runlog
        x-ntnx-enum:
        - app_runlog
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  app_runlog_list_metadata_output:
    type: object
    title: Metadata for app_runlog list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: app_runlog
        x-ntnx-enum:
        - app_runlog
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  app_runlog_reference:
    title: Reference to a app_runlog
    type: object
    description: The reference to a app_runlog
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_runlog
        x-ntnx-enum:
        - app_runlog
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_runlog_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_runlog
        x-ntnx-enum:
        - app_runlog
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  environment_metadata:
    title: environment metadata
    type: object
    description: The environment kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: environment
        x-ntnx-enum:
        - environment

      project_reference:
        description: The project the environment is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: environment uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: environment name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the environment
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when environment was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when environment was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  environment_list_metadata:
    type: object
    title: Metadata for environment list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: environment
        x-ntnx-enum:
        - environment
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  environment_list_metadata_output:
    type: object
    title: Metadata for environment list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: environment
        x-ntnx-enum:
        - environment
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  environment_reference:
    title: Reference to a environment
    type: object
    description: The reference to a environment
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: environment
        x-ntnx-enum:
        - environment
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  environment_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: environment
        x-ntnx-enum:
        - environment
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  blueprint_metadata:
    title: blueprint metadata
    type: object
    description: The blueprint kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blueprint
        x-ntnx-enum:
        - blueprint

      project_reference:
        description: The project the blueprint is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: blueprint uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: blueprint name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the blueprint
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when blueprint was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when blueprint was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  blueprint_list_metadata:
    type: object
    title: Metadata for blueprint list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: blueprint
        x-ntnx-enum:
        - blueprint
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  blueprint_list_metadata_output:
    type: object
    title: Metadata for blueprint list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: blueprint
        x-ntnx-enum:
        - blueprint
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  blueprint_reference:
    title: Reference to a blueprint
    type: object
    description: The reference to a blueprint
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blueprint
        x-ntnx-enum:
        - blueprint
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  blueprint_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: blueprint
        x-ntnx-enum:
        - blueprint
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  task_metadata:
    title: task metadata
    type: object
    description: The task kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: task
        x-ntnx-enum:
        - task

      project_reference:
        description: The project the task is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: task uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: task name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the task
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when task was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when task was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  task_list_metadata:
    type: object
    title: Metadata for task list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: task
        x-ntnx-enum:
        - task
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  task_list_metadata_output:
    type: object
    title: Metadata for task list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: task
        x-ntnx-enum:
        - task
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  task_reference:
    title: Reference to a task
    type: object
    description: The reference to a task
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: task
        x-ntnx-enum:
        - task
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  task_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: task
        x-ntnx-enum:
        - task
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  cloud_trust_metadata:
    title: cloud_trust metadata
    type: object
    description: The cloud_trust kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_trust
        x-ntnx-enum:
        - cloud_trust

      project_reference:
        description: The project the cloud_trust is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: cloud_trust uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: cloud_trust name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the cloud_trust
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when cloud_trust was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when cloud_trust was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  cloud_trust_list_metadata:
    type: object
    title: Metadata for cloud_trust list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: cloud_trust
        x-ntnx-enum:
        - cloud_trust
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cloud_trust_list_metadata_output:
    type: object
    title: Metadata for cloud_trust list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: cloud_trust
        x-ntnx-enum:
        - cloud_trust
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  cloud_trust_reference:
    title: Reference to a cloud_trust
    type: object
    description: The reference to a cloud_trust
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_trust
        x-ntnx-enum:
        - cloud_trust
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  cloud_trust_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: cloud_trust
        x-ntnx-enum:
        - cloud_trust
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  entity_sync_rule_metadata:
    title: entity_sync_rule metadata
    type: object
    description: The entity_sync_rule kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: entity_sync_rule
        x-ntnx-enum:
        - entity_sync_rule

      project_reference:
        description: The project the entity_sync_rule is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: entity_sync_rule uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: entity_sync_rule name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the entity_sync_rule
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when entity_sync_rule was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when entity_sync_rule was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  entity_sync_rule_list_metadata:
    type: object
    title: Metadata for entity_sync_rule list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: entity_sync_rule
        x-ntnx-enum:
        - entity_sync_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  entity_sync_rule_list_metadata_output:
    type: object
    title: Metadata for entity_sync_rule list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: entity_sync_rule
        x-ntnx-enum:
        - entity_sync_rule
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  entity_sync_rule_reference:
    title: Reference to a entity_sync_rule
    type: object
    description: The reference to a entity_sync_rule
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: entity_sync_rule
        x-ntnx-enum:
        - entity_sync_rule
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  entity_sync_rule_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: entity_sync_rule
        x-ntnx-enum:
        - entity_sync_rule
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  tenant_metadata:
    title: tenant metadata
    type: object
    description: The tenant kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: tenant
        x-ntnx-enum:
        - tenant

      project_reference:
        description: The project the tenant is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: tenant uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: tenant name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the tenant
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when tenant was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when tenant was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  tenant_list_metadata:
    type: object
    title: Metadata for tenant list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: tenant
        x-ntnx-enum:
        - tenant
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  tenant_list_metadata_output:
    type: object
    title: Metadata for tenant list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: tenant
        x-ntnx-enum:
        - tenant
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  tenant_reference:
    title: Reference to a tenant
    type: object
    description: The reference to a tenant
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: tenant
        x-ntnx-enum:
        - tenant
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  tenant_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: tenant
        x-ntnx-enum:
        - tenant
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  qos_policy_metadata:
    title: qos_policy metadata
    type: object
    description: The qos_policy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: qos_policy
        x-ntnx-enum:
        - qos_policy

      project_reference:
        description: The project the qos_policy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: qos_policy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: qos_policy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the qos_policy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when qos_policy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when qos_policy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  qos_policy_list_metadata:
    type: object
    title: Metadata for qos_policy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: qos_policy
        x-ntnx-enum:
        - qos_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  qos_policy_list_metadata_output:
    type: object
    title: Metadata for qos_policy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: qos_policy
        x-ntnx-enum:
        - qos_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  qos_policy_reference:
    title: Reference to a qos_policy
    type: object
    description: The reference to a qos_policy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: qos_policy
        x-ntnx-enum:
        - qos_policy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  qos_policy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: qos_policy
        x-ntnx-enum:
        - qos_policy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  ngt_policy_metadata:
    title: ngt_policy metadata
    type: object
    description: The ngt_policy kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ngt_policy
        x-ntnx-enum:
        - ngt_policy

      project_reference:
        description: The project the ngt_policy is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: ngt_policy uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: ngt_policy name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the ngt_policy
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when ngt_policy was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when ngt_policy was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  ngt_policy_list_metadata:
    type: object
    title: Metadata for ngt_policy list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: ngt_policy
        x-ntnx-enum:
        - ngt_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  ngt_policy_list_metadata_output:
    type: object
    title: Metadata for ngt_policy list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: ngt_policy
        x-ntnx-enum:
        - ngt_policy
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  ngt_policy_reference:
    title: Reference to a ngt_policy
    type: object
    description: The reference to a ngt_policy
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ngt_policy
        x-ntnx-enum:
        - ngt_policy
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  ngt_policy_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: ngt_policy
        x-ntnx-enum:
        - ngt_policy
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  mh_vm_metadata:
    title: mh_vm metadata
    type: object
    description: The mh_vm kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: mh_vm
        x-ntnx-enum:
        - mh_vm

      project_reference:
        description: The project the mh_vm is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: mh_vm uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: mh_vm name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the mh_vm
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when mh_vm was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when mh_vm was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  mh_vm_list_metadata:
    type: object
    title: Metadata for mh_vm list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: mh_vm
        x-ntnx-enum:
        - mh_vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  mh_vm_list_metadata_output:
    type: object
    title: Metadata for mh_vm list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: mh_vm
        x-ntnx-enum:
        - mh_vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  mh_vm_reference:
    title: Reference to a mh_vm
    type: object
    description: The reference to a mh_vm
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: mh_vm
        x-ntnx-enum:
        - mh_vm
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  mh_vm_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: mh_vm
        x-ntnx-enum:
        - mh_vm
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.





  vm_intent_input:
    type: object
    title: vm Intent Entity
    description: An intentful representation of a vm
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_metadata'
      spec:
        $ref: '#/definitions/vm'

  vm_intent_response:
    type: object
    title: vm Intent Response
    description: Response object for intentful operations on a vm
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_metadata'
      # The most up-to-date version of the vm spec stored in the DB

      spec:
        $ref: '#/definitions/vm'

      # The current status of the vm, as read from the DB
      status:
        $ref: '#/definitions/vm_def_status'


  cluster_intent_input:
    type: object
    title: cluster Intent Entity
    description: An intentful representation of a cluster
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cluster_metadata'
      spec:
        $ref: '#/definitions/cluster'

  cluster_intent_response:
    type: object
    title: cluster Intent Response
    description: Response object for intentful operations on a cluster
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cluster_metadata'
      # The most up-to-date version of the cluster spec stored in the DB

      spec:
        $ref: '#/definitions/cluster'

      # The current status of the cluster, as read from the DB
      status:
        $ref: '#/definitions/cluster_def_status'


  cloud_credentials_intent_input:
    type: object
    title: cloud_credentials Intent Entity
    description: An intentful representation of a cloud_credentials
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'
      spec:
        $ref: '#/definitions/cloud_credentials'

  cloud_credentials_intent_response:
    type: object
    title: cloud_credentials Intent Response
    description: Response object for intentful operations on a cloud_credentials
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'
      # The most up-to-date version of the cloud_credentials spec stored in the DB

      spec:
        $ref: '#/definitions/cloud_credentials'

      # The current status of the cloud_credentials, as read from the DB
      status:
        $ref: '#/definitions/cloud_credentials_def_status'


  ssh_user_intent_input:
    type: object
    title: ssh_user Intent Entity
    description: An intentful representation of a ssh_user
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ssh_user_metadata'
      spec:
        $ref: '#/definitions/ssh_user'

  ssh_user_intent_response:
    type: object
    title: ssh_user Intent Response
    description: Response object for intentful operations on a ssh_user
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ssh_user_metadata'
      # The most up-to-date version of the ssh_user spec stored in the DB

      spec:
        $ref: '#/definitions/ssh_user'

      # The current status of the ssh_user, as read from the DB
      status:
        $ref: '#/definitions/ssh_user_def_status'


  container_intent_input:
    type: object
    title: container Intent Entity
    description: An intentful representation of a container
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/container_metadata'
      spec:
        $ref: '#/definitions/container'

  container_intent_response:
    type: object
    title: container Intent Response
    description: Response object for intentful operations on a container
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/container_metadata'
      # The most up-to-date version of the container spec stored in the DB

      spec:
        $ref: '#/definitions/container'

      # The current status of the container, as read from the DB
      status:
        $ref: '#/definitions/container_def_status'


  docker_registry_intent_input:
    type: object
    title: docker_registry Intent Entity
    description: An intentful representation of a docker_registry
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/docker_registry_metadata'
      spec:
        $ref: '#/definitions/docker_registry'

  docker_registry_intent_response:
    type: object
    title: docker_registry Intent Response
    description: Response object for intentful operations on a docker_registry
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/docker_registry_metadata'
      # The most up-to-date version of the docker_registry spec stored in the DB

      spec:
        $ref: '#/definitions/docker_registry'

      # The current status of the docker_registry, as read from the DB
      status:
        $ref: '#/definitions/docker_registry_def_status'


  directory_service_intent_input:
    type: object
    title: directory_service Intent Entity
    description: An intentful representation of a directory_service
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/directory_service_metadata'
      spec:
        $ref: '#/definitions/directory_service'

  directory_service_intent_response:
    type: object
    title: directory_service Intent Response
    description: Response object for intentful operations on a directory_service
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/directory_service_metadata'
      # The most up-to-date version of the directory_service spec stored in the DB

      spec:
        $ref: '#/definitions/directory_service'

      # The current status of the directory_service, as read from the DB
      status:
        $ref: '#/definitions/directory_service_def_status'


  identity_provider_intent_input:
    type: object
    title: identity_provider Intent Entity
    description: An intentful representation of a identity_provider
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/identity_provider_metadata'
      spec:
        $ref: '#/definitions/identity_provider'

  identity_provider_intent_response:
    type: object
    title: identity_provider Intent Response
    description: Response object for intentful operations on a identity_provider
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/identity_provider_metadata'
      # The most up-to-date version of the identity_provider spec stored in the DB

      spec:
        $ref: '#/definitions/identity_provider'

      # The current status of the identity_provider, as read from the DB
      status:
        $ref: '#/definitions/identity_provider_def_status'


  network_function_chain_intent_input:
    type: object
    title: network_function_chain Intent Entity
    description: An intentful representation of a network_function_chain
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'
      spec:
        $ref: '#/definitions/network_function_chain'

  network_function_chain_intent_response:
    type: object
    title: network_function_chain Intent Response
    description: Response object for intentful operations on a network_function_chain
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'
      # The most up-to-date version of the network_function_chain spec stored in the DB

      spec:
        $ref: '#/definitions/network_function_chain'

      # The current status of the network_function_chain, as read from the DB
      status:
        $ref: '#/definitions/network_function_chain_def_status'


  network_security_rule_intent_input:
    type: object
    title: network_security_rule Intent Entity
    description: An intentful representation of a network_security_rule
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'
      spec:
        $ref: '#/definitions/network_security_rule'

  network_security_rule_intent_response:
    type: object
    title: network_security_rule Intent Response
    description: Response object for intentful operations on a network_security_rule
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'
      # The most up-to-date version of the network_security_rule spec stored in the DB

      spec:
        $ref: '#/definitions/network_security_rule'

      # The current status of the network_security_rule, as read from the DB
      status:
        $ref: '#/definitions/network_security_rule_def_status'


  rackable_unit_intent_input:
    type: object
    title: rackable_unit Intent Entity
    description: An intentful representation of a rackable_unit
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rackable_unit_metadata'
      spec:
        $ref: '#/definitions/rackable_unit'

  rackable_unit_intent_response:
    type: object
    title: rackable_unit Intent Response
    description: Response object for intentful operations on a rackable_unit
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rackable_unit_metadata'
      # The most up-to-date version of the rackable_unit spec stored in the DB

      spec:
        $ref: '#/definitions/rackable_unit'

      # The current status of the rackable_unit, as read from the DB
      status:
        $ref: '#/definitions/rackable_unit_def_status'


  host_intent_input:
    type: object
    title: host Intent Entity
    description: An intentful representation of a host
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/host_metadata'
      spec:
        $ref: '#/definitions/host'

  host_intent_response:
    type: object
    title: host Intent Response
    description: Response object for intentful operations on a host
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/host_metadata'
      # The most up-to-date version of the host spec stored in the DB

      spec:
        $ref: '#/definitions/host'

      # The current status of the host, as read from the DB
      status:
        $ref: '#/definitions/host_def_status'


  disk_intent_input:
    type: object
    title: disk Intent Entity
    description: An intentful representation of a disk
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/disk_metadata'
      spec:
        $ref: '#/definitions/disk'

  disk_intent_response:
    type: object
    title: disk Intent Response
    description: Response object for intentful operations on a disk
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/disk_metadata'
      # The most up-to-date version of the disk spec stored in the DB

      spec:
        $ref: '#/definitions/disk'

      # The current status of the disk, as read from the DB
      status:
        $ref: '#/definitions/disk_def_status'


  remote_connection_intent_input:
    type: object
    title: remote_connection Intent Entity
    description: An intentful representation of a remote_connection
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/remote_connection_metadata'
      spec:
        $ref: '#/definitions/remote_connection'

  remote_connection_intent_response:
    type: object
    title: remote_connection Intent Response
    description: Response object for intentful operations on a remote_connection
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/remote_connection_metadata'
      # The most up-to-date version of the remote_connection spec stored in the DB

      spec:
        $ref: '#/definitions/remote_connection'

      # The current status of the remote_connection, as read from the DB
      status:
        $ref: '#/definitions/remote_connection_def_status'


  volume_group_intent_input:
    type: object
    title: volume_group Intent Entity
    description: An intentful representation of a volume_group
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/volume_group_metadata'
      spec:
        $ref: '#/definitions/volume_group'

  volume_group_intent_response:
    type: object
    title: volume_group Intent Response
    description: Response object for intentful operations on a volume_group
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/volume_group_metadata'
      # The most up-to-date version of the volume_group spec stored in the DB

      spec:
        $ref: '#/definitions/volume_group'

      # The current status of the volume_group, as read from the DB
      status:
        $ref: '#/definitions/volume_group_def_status'


  availability_zone_intent_input:
    type: object
    title: availability_zone Intent Entity
    description: An intentful representation of a availability_zone
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/availability_zone_metadata'
      spec:
        $ref: '#/definitions/availability_zone'

  availability_zone_intent_response:
    type: object
    title: availability_zone Intent Response
    description: Response object for intentful operations on a availability_zone
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/availability_zone_metadata'
      # The most up-to-date version of the availability_zone spec stored in the DB

      spec:
        $ref: '#/definitions/availability_zone'

      # The current status of the availability_zone, as read from the DB
      status:
        $ref: '#/definitions/availability_zone_def_status'


  protection_rule_intent_input:
    type: object
    title: protection_rule Intent Entity
    description: An intentful representation of a protection_rule
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/protection_rule_metadata'
      spec:
        $ref: '#/definitions/protection_rule'

  protection_rule_intent_response:
    type: object
    title: protection_rule Intent Response
    description: Response object for intentful operations on a protection_rule
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/protection_rule_metadata'
      # The most up-to-date version of the protection_rule spec stored in the DB

      spec:
        $ref: '#/definitions/protection_rule'

      # The current status of the protection_rule, as read from the DB
      status:
        $ref: '#/definitions/protection_rule_def_status'


  report_instance_intent_input:
    type: object
    title: report_instance Intent Entity
    description: An intentful representation of a report_instance
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_instance_metadata'
      spec:
        $ref: '#/definitions/report_instance'

  report_instance_intent_response:
    type: object
    title: report_instance Intent Response
    description: Response object for intentful operations on a report_instance
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_instance_metadata'
      # The most up-to-date version of the report_instance spec stored in the DB

      spec:
        $ref: '#/definitions/report_instance'

      # The current status of the report_instance, as read from the DB
      status:
        $ref: '#/definitions/report_instance_def_status'


  report_config_intent_input:
    type: object
    title: report_config Intent Entity
    description: An intentful representation of a report_config
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_config_metadata'
      spec:
        $ref: '#/definitions/report_config'

  report_config_intent_response:
    type: object
    title: report_config Intent Response
    description: Response object for intentful operations on a report_config
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_config_metadata'
      # The most up-to-date version of the report_config spec stored in the DB

      spec:
        $ref: '#/definitions/report_config'

      # The current status of the report_config, as read from the DB
      status:
        $ref: '#/definitions/report_config_def_status'


  permission_intent_input:
    type: object
    title: permission Intent Entity
    description: An intentful representation of a permission
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/permission_metadata'
      spec:
        $ref: '#/definitions/permission'

  permission_intent_response:
    type: object
    title: permission Intent Response
    description: Response object for intentful operations on a permission
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/permission_metadata'
      # The most up-to-date version of the permission spec stored in the DB

      spec:
        $ref: '#/definitions/permission'

      # The current status of the permission, as read from the DB
      status:
        $ref: '#/definitions/permission_def_status'


  role_intent_input:
    type: object
    title: role Intent Entity
    description: An intentful representation of a role
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/role_metadata'
      spec:
        $ref: '#/definitions/role'

  role_intent_response:
    type: object
    title: role Intent Response
    description: Response object for intentful operations on a role
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/role_metadata'
      # The most up-to-date version of the role spec stored in the DB

      spec:
        $ref: '#/definitions/role'

      # The current status of the role, as read from the DB
      status:
        $ref: '#/definitions/role_def_status'


  subnet_intent_input:
    type: object
    title: subnet Intent Entity
    description: An intentful representation of a subnet
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/subnet_metadata'
      spec:
        $ref: '#/definitions/subnet'

  subnet_intent_response:
    type: object
    title: subnet Intent Response
    description: Response object for intentful operations on a subnet
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/subnet_metadata'
      # The most up-to-date version of the subnet spec stored in the DB

      spec:
        $ref: '#/definitions/subnet'

      # The current status of the subnet, as read from the DB
      status:
        $ref: '#/definitions/subnet_def_status'


  vpn_connection_intent_input:
    type: object
    title: vpn_connection Intent Entity
    description: An intentful representation of a vpn_connection
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_connection_metadata'
      spec:
        $ref: '#/definitions/vpn_connection'

  vpn_connection_intent_response:
    type: object
    title: vpn_connection Intent Response
    description: Response object for intentful operations on a vpn_connection
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_connection_metadata'
      # The most up-to-date version of the vpn_connection spec stored in the DB

      spec:
        $ref: '#/definitions/vpn_connection'

      # The current status of the vpn_connection, as read from the DB
      status:
        $ref: '#/definitions/vpn_connection_def_status'


  vpn_gateway_intent_input:
    type: object
    title: vpn_gateway Intent Entity
    description: An intentful representation of a vpn_gateway
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_gateway_metadata'
      spec:
        $ref: '#/definitions/vpn_gateway'

  vpn_gateway_intent_response:
    type: object
    title: vpn_gateway Intent Response
    description: Response object for intentful operations on a vpn_gateway
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_gateway_metadata'
      # The most up-to-date version of the vpn_gateway spec stored in the DB

      spec:
        $ref: '#/definitions/vpn_gateway'

      # The current status of the vpn_gateway, as read from the DB
      status:
        $ref: '#/definitions/vpn_gateway_def_status'


  routing_policy_intent_input:
    type: object
    title: routing_policy Intent Entity
    description: An intentful representation of a routing_policy
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/routing_policy_metadata'
      spec:
        $ref: '#/definitions/routing_policy'

  routing_policy_intent_response:
    type: object
    title: routing_policy Intent Response
    description: Response object for intentful operations on a routing_policy
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/routing_policy_metadata'
      # The most up-to-date version of the routing_policy spec stored in the DB

      spec:
        $ref: '#/definitions/routing_policy'

      # The current status of the routing_policy, as read from the DB
      status:
        $ref: '#/definitions/routing_policy_def_status'


  virtual_network_intent_input:
    type: object
    title: virtual_network Intent Entity
    description: An intentful representation of a virtual_network
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/virtual_network_metadata'
      spec:
        $ref: '#/definitions/virtual_network'

  virtual_network_intent_response:
    type: object
    title: virtual_network Intent Response
    description: Response object for intentful operations on a virtual_network
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/virtual_network_metadata'
      # The most up-to-date version of the virtual_network spec stored in the DB

      spec:
        $ref: '#/definitions/virtual_network'

      # The current status of the virtual_network, as read from the DB
      status:
        $ref: '#/definitions/virtual_network_def_status'


  floating_ip_intent_input:
    type: object
    title: floating_ip Intent Entity
    description: An intentful representation of a floating_ip
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/floating_ip_metadata'
      spec:
        $ref: '#/definitions/floating_ip'

  floating_ip_intent_response:
    type: object
    title: floating_ip Intent Response
    description: Response object for intentful operations on a floating_ip
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/floating_ip_metadata'
      # The most up-to-date version of the floating_ip spec stored in the DB

      spec:
        $ref: '#/definitions/floating_ip'

      # The current status of the floating_ip, as read from the DB
      status:
        $ref: '#/definitions/floating_ip_def_status'


  affinity_rule_intent_input:
    type: object
    title: affinity_rule Intent Entity
    description: An intentful representation of a affinity_rule
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/affinity_rule_metadata'
      spec:
        $ref: '#/definitions/affinity_rule'

  affinity_rule_intent_response:
    type: object
    title: affinity_rule Intent Response
    description: Response object for intentful operations on a affinity_rule
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/affinity_rule_metadata'
      # The most up-to-date version of the affinity_rule spec stored in the DB

      spec:
        $ref: '#/definitions/affinity_rule'

      # The current status of the affinity_rule, as read from the DB
      status:
        $ref: '#/definitions/affinity_rule_def_status'


  common_report_config_intent_input:
    type: object
    title: common_report_config Intent Entity
    description: An intentful representation of a common_report_config
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/common_report_config_metadata'
      spec:
        $ref: '#/definitions/common_report_config'

  common_report_config_intent_response:
    type: object
    title: common_report_config Intent Response
    description: Response object for intentful operations on a common_report_config
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/common_report_config_metadata'
      # The most up-to-date version of the common_report_config spec stored in the DB

      spec:
        $ref: '#/definitions/common_report_config'

      # The current status of the common_report_config, as read from the DB
      status:
        $ref: '#/definitions/common_report_config_def_status'


  marketplace_item_intent_input:
    type: object
    title: marketplace_item Intent Entity
    description: An intentful representation of a marketplace_item
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/marketplace_item_metadata'
      spec:
        $ref: '#/definitions/marketplace_item'

  marketplace_item_intent_response:
    type: object
    title: marketplace_item Intent Response
    description: Response object for intentful operations on a marketplace_item
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/marketplace_item_metadata'
      # The most up-to-date version of the marketplace_item spec stored in the DB

      spec:
        $ref: '#/definitions/marketplace_item'

      # The current status of the marketplace_item, as read from the DB
      status:
        $ref: '#/definitions/marketplace_item_def_status'


  streaming_policy_intent_input:
    type: object
    title: streaming_policy Intent Entity
    description: An intentful representation of a streaming_policy
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/streaming_policy_metadata'
      spec:
        $ref: '#/definitions/streaming_policy'

  streaming_policy_intent_response:
    type: object
    title: streaming_policy Intent Response
    description: Response object for intentful operations on a streaming_policy
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/streaming_policy_metadata'
      # The most up-to-date version of the streaming_policy spec stored in the DB

      spec:
        $ref: '#/definitions/streaming_policy'

      # The current status of the streaming_policy, as read from the DB
      status:
        $ref: '#/definitions/streaming_policy_def_status'


  alert_intent_input:
    type: object
    title: alert Intent Entity
    description: An intentful representation of a alert
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/alert_metadata'
      spec:
        $ref: '#/definitions/alert'

  alert_intent_response:
    type: object
    title: alert Intent Response
    description: Response object for intentful operations on a alert
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/alert_metadata'
      # The most up-to-date version of the alert spec stored in the DB

      spec:
        $ref: '#/definitions/alert'

      # The current status of the alert, as read from the DB
      status:
        $ref: '#/definitions/alert_def_status'


  action_type_intent_input:
    type: object
    title: action_type Intent Entity
    description: An intentful representation of a action_type
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_type_metadata'
      spec:
        $ref: '#/definitions/action_type'

  action_type_intent_response:
    type: object
    title: action_type Intent Response
    description: Response object for intentful operations on a action_type
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_type_metadata'
      # The most up-to-date version of the action_type spec stored in the DB

      spec:
        $ref: '#/definitions/action_type'

      # The current status of the action_type, as read from the DB
      status:
        $ref: '#/definitions/action_type_def_status'


  action_instance_intent_input:
    type: object
    title: action_instance Intent Entity
    description: An intentful representation of a action_instance
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_instance_metadata'
      spec:
        $ref: '#/definitions/action_instance'

  action_instance_intent_response:
    type: object
    title: action_instance Intent Response
    description: Response object for intentful operations on a action_instance
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_instance_metadata'
      # The most up-to-date version of the action_instance spec stored in the DB

      spec:
        $ref: '#/definitions/action_instance'

      # The current status of the action_instance, as read from the DB
      status:
        $ref: '#/definitions/action_instance_def_status'


  action_trigger_type_intent_input:
    type: object
    title: action_trigger_type Intent Entity
    description: An intentful representation of a action_trigger_type
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_trigger_type_metadata'
      spec:
        $ref: '#/definitions/action_trigger_type'

  action_trigger_type_intent_response:
    type: object
    title: action_trigger_type Intent Response
    description: Response object for intentful operations on a action_trigger_type
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_trigger_type_metadata'
      # The most up-to-date version of the action_trigger_type spec stored in the DB

      spec:
        $ref: '#/definitions/action_trigger_type'

      # The current status of the action_trigger_type, as read from the DB
      status:
        $ref: '#/definitions/action_trigger_type_def_status'


  action_rule_intent_input:
    type: object
    title: action_rule Intent Entity
    description: An intentful representation of a action_rule
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_metadata'
      spec:
        $ref: '#/definitions/action_rule'

  action_rule_intent_response:
    type: object
    title: action_rule Intent Response
    description: Response object for intentful operations on a action_rule
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_metadata'
      # The most up-to-date version of the action_rule spec stored in the DB

      spec:
        $ref: '#/definitions/action_rule'

      # The current status of the action_rule, as read from the DB
      status:
        $ref: '#/definitions/action_rule_def_status'


  action_rule_result_intent_input:
    type: object
    title: action_rule_result Intent Entity
    description: An intentful representation of a action_rule_result
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_result_metadata'
      spec:
        $ref: '#/definitions/action_rule_result'

  action_rule_result_intent_response:
    type: object
    title: action_rule_result Intent Response
    description: Response object for intentful operations on a action_rule_result
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_result_metadata'
      # The most up-to-date version of the action_rule_result spec stored in the DB

      spec:
        $ref: '#/definitions/action_rule_result'

      # The current status of the action_rule_result, as read from the DB
      status:
        $ref: '#/definitions/action_rule_result_def_status'


  datacenter_intent_input:
    type: object
    title: datacenter Intent Entity
    description: An intentful representation of a datacenter
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/datacenter_metadata'
      spec:
        $ref: '#/definitions/datacenter'

  datacenter_intent_response:
    type: object
    title: datacenter Intent Response
    description: Response object for intentful operations on a datacenter
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/datacenter_metadata'
      # The most up-to-date version of the datacenter spec stored in the DB

      spec:
        $ref: '#/definitions/datacenter'

      # The current status of the datacenter, as read from the DB
      status:
        $ref: '#/definitions/datacenter_def_status'


  cell_intent_input:
    type: object
    title: cell Intent Entity
    description: An intentful representation of a cell
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cell_metadata'
      spec:
        $ref: '#/definitions/cell'

  cell_intent_response:
    type: object
    title: cell Intent Response
    description: Response object for intentful operations on a cell
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cell_metadata'
      # The most up-to-date version of the cell spec stored in the DB

      spec:
        $ref: '#/definitions/cell'

      # The current status of the cell, as read from the DB
      status:
        $ref: '#/definitions/cell_def_status'


  rack_intent_input:
    type: object
    title: rack Intent Entity
    description: An intentful representation of a rack
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rack_metadata'
      spec:
        $ref: '#/definitions/rack'

  rack_intent_response:
    type: object
    title: rack Intent Response
    description: Response object for intentful operations on a rack
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rack_metadata'
      # The most up-to-date version of the rack spec stored in the DB

      spec:
        $ref: '#/definitions/rack'

      # The current status of the rack, as read from the DB
      status:
        $ref: '#/definitions/rack_def_status'


  network_device_intent_input:
    type: object
    title: network_device Intent Entity
    description: An intentful representation of a network_device
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_device_metadata'
      spec:
        $ref: '#/definitions/network_device'

  network_device_intent_response:
    type: object
    title: network_device Intent Response
    description: Response object for intentful operations on a network_device
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_device_metadata'
      # The most up-to-date version of the network_device spec stored in the DB

      spec:
        $ref: '#/definitions/network_device'

      # The current status of the network_device, as read from the DB
      status:
        $ref: '#/definitions/network_device_def_status'


  underlay_subnet_intent_input:
    type: object
    title: underlay_subnet Intent Entity
    description: An intentful representation of a underlay_subnet
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/underlay_subnet_metadata'
      spec:
        $ref: '#/definitions/underlay_subnet'

  underlay_subnet_intent_response:
    type: object
    title: underlay_subnet Intent Response
    description: Response object for intentful operations on a underlay_subnet
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/underlay_subnet_metadata'
      # The most up-to-date version of the underlay_subnet spec stored in the DB

      spec:
        $ref: '#/definitions/underlay_subnet'

      # The current status of the underlay_subnet, as read from the DB
      status:
        $ref: '#/definitions/underlay_subnet_def_status'


  vm_snapshot_intent_input:
    type: object
    title: vm_snapshot Intent Entity
    description: An intentful representation of a vm_snapshot
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'
      spec:
        $ref: '#/definitions/vm_snapshot'

  vm_snapshot_intent_response:
    type: object
    title: vm_snapshot Intent Response
    description: Response object for intentful operations on a vm_snapshot
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'
      # The most up-to-date version of the vm_snapshot spec stored in the DB

      spec:
        $ref: '#/definitions/vm_snapshot'

      # The current status of the vm_snapshot, as read from the DB
      status:
        $ref: '#/definitions/vm_snapshot_def_status'


  support_case_intent_input:
    type: object
    title: support_case Intent Entity
    description: An intentful representation of a support_case
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/support_case_metadata'
      spec:
        $ref: '#/definitions/support_case'

  support_case_intent_response:
    type: object
    title: support_case Intent Response
    description: Response object for intentful operations on a support_case
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/support_case_metadata'
      # The most up-to-date version of the support_case spec stored in the DB

      spec:
        $ref: '#/definitions/support_case'

      # The current status of the support_case, as read from the DB
      status:
        $ref: '#/definitions/support_case_def_status'


  blackout_intent_input:
    type: object
    title: blackout Intent Entity
    description: An intentful representation of a blackout
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blackout_metadata'
      spec:
        $ref: '#/definitions/blackout'

  blackout_intent_response:
    type: object
    title: blackout Intent Response
    description: Response object for intentful operations on a blackout
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blackout_metadata'
      # The most up-to-date version of the blackout spec stored in the DB

      spec:
        $ref: '#/definitions/blackout'

      # The current status of the blackout, as read from the DB
      status:
        $ref: '#/definitions/blackout_def_status'


  direct_connect_intent_input:
    type: object
    title: direct_connect Intent Entity
    description: An intentful representation of a direct_connect
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_metadata'
      spec:
        $ref: '#/definitions/direct_connect'

  direct_connect_intent_response:
    type: object
    title: direct_connect Intent Response
    description: Response object for intentful operations on a direct_connect
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_metadata'
      # The most up-to-date version of the direct_connect spec stored in the DB

      spec:
        $ref: '#/definitions/direct_connect'

      # The current status of the direct_connect, as read from the DB
      status:
        $ref: '#/definitions/direct_connect_def_status'


  public_cidr_intent_input:
    type: object
    title: public_cidr Intent Entity
    description: An intentful representation of a public_cidr
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/public_cidr_metadata'
      spec:
        $ref: '#/definitions/public_cidr'

  public_cidr_intent_response:
    type: object
    title: public_cidr Intent Response
    description: Response object for intentful operations on a public_cidr
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/public_cidr_metadata'
      # The most up-to-date version of the public_cidr spec stored in the DB

      spec:
        $ref: '#/definitions/public_cidr'

      # The current status of the public_cidr, as read from the DB
      status:
        $ref: '#/definitions/public_cidr_def_status'


  direct_connect_virtual_interface_intent_input:
    type: object
    title: direct_connect_virtual_interface Intent Entity
    description: An intentful representation of a direct_connect_virtual_interface
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_virtual_interface_metadata'
      spec:
        $ref: '#/definitions/direct_connect_virtual_interface'

  direct_connect_virtual_interface_intent_response:
    type: object
    title: direct_connect_virtual_interface Intent Response
    description: Response object for intentful operations on a direct_connect_virtual_interface
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_virtual_interface_metadata'
      # The most up-to-date version of the direct_connect_virtual_interface spec stored in the DB

      spec:
        $ref: '#/definitions/direct_connect_virtual_interface'

      # The current status of the direct_connect_virtual_interface, as read from the DB
      status:
        $ref: '#/definitions/direct_connect_virtual_interface_def_status'


  image_intent_input:
    type: object
    title: image Intent Entity
    description: An intentful representation of a image
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/image_metadata'
      spec:
        $ref: '#/definitions/image'

  image_intent_response:
    type: object
    title: image Intent Response
    description: Response object for intentful operations on a image
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/image_metadata'
      # The most up-to-date version of the image spec stored in the DB

      spec:
        $ref: '#/definitions/image'

      # The current status of the image, as read from the DB
      status:
        $ref: '#/definitions/image_def_status'


  aws_vm_intent_input:
    type: object
    title: aws_vm Intent Entity
    description: An intentful representation of a aws_vm
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vm_metadata'
      spec:
        $ref: '#/definitions/aws_vm'

  aws_vm_intent_response:
    type: object
    title: aws_vm Intent Response
    description: Response object for intentful operations on a aws_vm
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vm_metadata'
      # The most up-to-date version of the aws_vm spec stored in the DB

      spec:
        $ref: '#/definitions/aws_vm'

      # The current status of the aws_vm, as read from the DB
      status:
        $ref: '#/definitions/aws_vm_def_status'


  project_intent_input:
    type: object
    title: project Intent Entity
    description: An intentful representation of a project
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_metadata'
      spec:
        $ref: '#/definitions/project'

  project_intent_response:
    type: object
    title: project Intent Response
    description: Response object for intentful operations on a project
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_metadata'
      # The most up-to-date version of the project spec stored in the DB

      spec:
        $ref: '#/definitions/project'

      # The current status of the project, as read from the DB
      status:
        $ref: '#/definitions/project_def_status'


  app_intent_input:
    type: object
    title: app Intent Entity
    description: An intentful representation of a app
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'
      spec:
        $ref: '#/definitions/app'

  app_intent_response:
    type: object
    title: app Intent Response
    description: Response object for intentful operations on a app
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'
      # The most up-to-date version of the app spec stored in the DB

      spec:
        $ref: '#/definitions/app'

      # The current status of the app, as read from the DB
      status:
        $ref: '#/definitions/app_def_status'


  blueprint_intent_input:
    type: object
    title: blueprint Intent Entity
    description: An intentful representation of a blueprint
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      spec:
        $ref: '#/definitions/blueprint'

  blueprint_intent_response:
    type: object
    title: blueprint Intent Response
    description: Response object for intentful operations on a blueprint
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'
      # The most up-to-date version of the blueprint spec stored in the DB

      spec:
        $ref: '#/definitions/blueprint'

      # The current status of the blueprint, as read from the DB
      status:
        $ref: '#/definitions/blueprint_def_status'


  user_intent_input:
    type: object
    title: user Intent Entity
    description: An intentful representation of a user
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_metadata'
      spec:
        $ref: '#/definitions/user'

  user_intent_response:
    type: object
    title: user Intent Response
    description: Response object for intentful operations on a user
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_metadata'
      # The most up-to-date version of the user spec stored in the DB

      spec:
        $ref: '#/definitions/user'

      # The current status of the user, as read from the DB
      status:
        $ref: '#/definitions/user_def_status'


  user_group_intent_input:
    type: object
    title: user_group Intent Entity
    description: An intentful representation of a user_group
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_group_metadata'
      spec:
        $ref: '#/definitions/user_group'

  user_group_intent_response:
    type: object
    title: user_group Intent Response
    description: Response object for intentful operations on a user_group
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_group_metadata'
      # The most up-to-date version of the user_group spec stored in the DB

      spec:
        $ref: '#/definitions/user_group'

      # The current status of the user_group, as read from the DB
      status:
        $ref: '#/definitions/user_group_def_status'


  access_control_policy_intent_input:
    type: object
    title: access_control_policy Intent Entity
    description: An intentful representation of a access_control_policy
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/access_control_policy_metadata'
      spec:
        $ref: '#/definitions/access_control_policy'

  access_control_policy_intent_response:
    type: object
    title: access_control_policy Intent Response
    description: Response object for intentful operations on a access_control_policy
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/access_control_policy_metadata'
      # The most up-to-date version of the access_control_policy spec stored in the DB

      spec:
        $ref: '#/definitions/access_control_policy'

      # The current status of the access_control_policy, as read from the DB
      status:
        $ref: '#/definitions/access_control_policy_def_status'


  environment_intent_input:
    type: object
    title: environment Intent Entity
    description: An intentful representation of a environment
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/environment_metadata'
      spec:
        $ref: '#/definitions/environment'

  environment_intent_response:
    type: object
    title: environment Intent Response
    description: Response object for intentful operations on a environment
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/environment_metadata'
      # The most up-to-date version of the environment spec stored in the DB

      spec:
        $ref: '#/definitions/environment'

      # The current status of the environment, as read from the DB
      status:
        $ref: '#/definitions/environment_def_status'


  account_intent_input:
    type: object
    title: account Intent Entity
    description: An intentful representation of a account
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/account_metadata'
      spec:
        $ref: '#/definitions/account'

  account_intent_response:
    type: object
    title: account Intent Response
    description: Response object for intentful operations on a account
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/account_metadata'
      # The most up-to-date version of the account spec stored in the DB

      spec:
        $ref: '#/definitions/account'

      # The current status of the account, as read from the DB
      status:
        $ref: '#/definitions/account_def_status'


  recovery_plan_intent_input:
    type: object
    title: recovery_plan Intent Entity
    description: An intentful representation of a recovery_plan
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_metadata'
      spec:
        $ref: '#/definitions/recovery_plan'

  recovery_plan_intent_response:
    type: object
    title: recovery_plan Intent Response
    description: Response object for intentful operations on a recovery_plan
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_metadata'
      # The most up-to-date version of the recovery_plan spec stored in the DB

      spec:
        $ref: '#/definitions/recovery_plan'

      # The current status of the recovery_plan, as read from the DB
      status:
        $ref: '#/definitions/recovery_plan_def_status'


  recovery_plan_job_intent_input:
    type: object
    title: recovery_plan_job Intent Entity
    description: An intentful representation of a recovery_plan_job
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_job_metadata'
      spec:
        $ref: '#/definitions/recovery_plan_job'

  recovery_plan_job_intent_response:
    type: object
    title: recovery_plan_job Intent Response
    description: Response object for intentful operations on a recovery_plan_job
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_job_metadata'
      # The most up-to-date version of the recovery_plan_job spec stored in the DB

      spec:
        $ref: '#/definitions/recovery_plan_job'

      # The current status of the recovery_plan_job, as read from the DB
      status:
        $ref: '#/definitions/recovery_plan_job_def_status'


  cloud_trust_intent_input:
    type: object
    title: cloud_trust Intent Entity
    description: An intentful representation of a cloud_trust
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_trust_metadata'
      spec:
        $ref: '#/definitions/cloud_trust'

  cloud_trust_intent_response:
    type: object
    title: cloud_trust Intent Response
    description: Response object for intentful operations on a cloud_trust
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_trust_metadata'
      # The most up-to-date version of the cloud_trust spec stored in the DB

      spec:
        $ref: '#/definitions/cloud_trust'

      # The current status of the cloud_trust, as read from the DB
      status:
        $ref: '#/definitions/cloud_trust_def_status'


  file_item_intent_input:
    type: object
    title: file_item Intent Entity
    description: An intentful representation of a file_item
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/file_item_metadata'
      spec:
        $ref: '#/definitions/file_item'

  file_item_intent_response:
    type: object
    title: file_item Intent Response
    description: Response object for intentful operations on a file_item
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/file_item_metadata'
      # The most up-to-date version of the file_item spec stored in the DB

      spec:
        $ref: '#/definitions/file_item'

      # The current status of the file_item, as read from the DB
      status:
        $ref: '#/definitions/file_item_def_status'


  entity_sync_rule_intent_input:
    type: object
    title: entity_sync_rule Intent Entity
    description: An intentful representation of a entity_sync_rule
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/entity_sync_rule_metadata'
      spec:
        $ref: '#/definitions/entity_sync_rule'

  entity_sync_rule_intent_response:
    type: object
    title: entity_sync_rule Intent Response
    description: Response object for intentful operations on a entity_sync_rule
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/entity_sync_rule_metadata'
      # The most up-to-date version of the entity_sync_rule spec stored in the DB

      spec:
        $ref: '#/definitions/entity_sync_rule'

      # The current status of the entity_sync_rule, as read from the DB
      status:
        $ref: '#/definitions/entity_sync_rule_def_status'


  qos_policy_intent_input:
    type: object
    title: qos_policy Intent Entity
    description: An intentful representation of a qos_policy
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/qos_policy_metadata'
      spec:
        $ref: '#/definitions/qos_policy'

  qos_policy_intent_response:
    type: object
    title: qos_policy Intent Response
    description: Response object for intentful operations on a qos_policy
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/qos_policy_metadata'
      # The most up-to-date version of the qos_policy spec stored in the DB

      spec:
        $ref: '#/definitions/qos_policy'

      # The current status of the qos_policy, as read from the DB
      status:
        $ref: '#/definitions/qos_policy_def_status'


  ngt_policy_intent_input:
    type: object
    title: ngt_policy Intent Entity
    description: An intentful representation of a ngt_policy
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ngt_policy_metadata'
      spec:
        $ref: '#/definitions/ngt_policy'

  ngt_policy_intent_response:
    type: object
    title: ngt_policy Intent Response
    description: Response object for intentful operations on a ngt_policy
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ngt_policy_metadata'
      # The most up-to-date version of the ngt_policy spec stored in the DB

      spec:
        $ref: '#/definitions/ngt_policy'

      # The current status of the ngt_policy, as read from the DB
      status:
        $ref: '#/definitions/ngt_policy_def_status'


  mh_vm_intent_input:
    type: object
    title: mh_vm Intent Entity
    description: An intentful representation of a mh_vm
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/mh_vm_metadata'
      spec:
        $ref: '#/definitions/mh_vm'

  mh_vm_intent_response:
    type: object
    title: mh_vm Intent Response
    description: Response object for intentful operations on a mh_vm
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/mh_vm_metadata'
      # The most up-to-date version of the mh_vm spec stored in the DB

      spec:
        $ref: '#/definitions/mh_vm'

      # The current status of the mh_vm, as read from the DB
      status:
        $ref: '#/definitions/mh_vm_def_status'



  vm:
    type: object
    title: vm Intent Spec with placement specified
    description: An intentful representation of a vm spec
    required:

    - name

    - resources
    properties:
      name:
        description: vm Name.
        type: string
        maxLength: 64
      description:
        description: A description for vm.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/vm_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  vm_def_status:
    type: object
    title: vm Intent Status with placement specified
    description: An intentful representation of a vm status
    required:
    - name
    - resources
    properties:
      name:
        description: vm Name.
        type: string
      description:
        description: A description for vm.
        type: string
      state:
        description: The state of the vm.
        type: string
      message_list:
        type: array
        description: Any error messages for the vm, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/vm_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  subnet:
    type: object
    title: subnet Intent Spec with placement specified
    description: An intentful representation of a subnet spec
    required:

    - name

    - resources
    properties:
      name:
        description: subnet Name.
        type: string
        maxLength: 64
      description:
        description: A description for subnet.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/subnet_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  subnet_def_status:
    type: object
    title: subnet Intent Status with placement specified
    description: An intentful representation of a subnet status
    required:
    - name
    - resources
    properties:
      name:
        description: subnet Name.
        type: string
      description:
        description: A description for subnet.
        type: string
      state:
        description: The state of the subnet.
        type: string
      message_list:
        type: array
        description: Any error messages for the subnet, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/subnet_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  vpn_connection:
    type: object
    title: vpn_connection Intent Spec with placement specified
    description: An intentful representation of a vpn_connection spec
    required:

    - name

    - resources
    properties:
      name:
        description: vpn_connection Name.
        type: string
        maxLength: 64
      description:
        description: A description for vpn_connection.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/vpn_connection_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  vpn_connection_def_status:
    type: object
    title: vpn_connection Intent Status with placement specified
    description: An intentful representation of a vpn_connection status
    required:
    - name
    - resources
    properties:
      name:
        description: vpn_connection Name.
        type: string
      description:
        description: A description for vpn_connection.
        type: string
      state:
        description: The state of the vpn_connection.
        type: string
      message_list:
        type: array
        description: Any error messages for the vpn_connection, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/vpn_connection_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  vpn_gateway:
    type: object
    title: vpn_gateway Intent Spec with placement specified
    description: An intentful representation of a vpn_gateway spec
    required:

    - name

    - resources
    properties:
      name:
        description: vpn_gateway Name.
        type: string
        maxLength: 64
      description:
        description: A description for vpn_gateway.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/vpn_gateway_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  vpn_gateway_def_status:
    type: object
    title: vpn_gateway Intent Status with placement specified
    description: An intentful representation of a vpn_gateway status
    required:
    - name
    - resources
    properties:
      name:
        description: vpn_gateway Name.
        type: string
      description:
        description: A description for vpn_gateway.
        type: string
      state:
        description: The state of the vpn_gateway.
        type: string
      message_list:
        type: array
        description: Any error messages for the vpn_gateway, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/vpn_gateway_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  routing_policy:
    type: object
    title: routing_policy Intent Spec with placement specified
    description: An intentful representation of a routing_policy spec
    required:

    - name

    - resources
    properties:
      name:
        description: routing_policy Name.
        type: string
        maxLength: 64
      description:
        description: A description for routing_policy.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/routing_policy_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  routing_policy_def_status:
    type: object
    title: routing_policy Intent Status with placement specified
    description: An intentful representation of a routing_policy status
    required:
    - name
    - resources
    properties:
      name:
        description: routing_policy Name.
        type: string
      description:
        description: A description for routing_policy.
        type: string
      state:
        description: The state of the routing_policy.
        type: string
      message_list:
        type: array
        description: Any error messages for the routing_policy, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/routing_policy_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  direct_connect:
    type: object
    title: direct_connect Intent Spec with placement specified
    description: An intentful representation of a direct_connect spec
    required:

    - name

    - resources
    properties:
      name:
        description: direct_connect Name.
        type: string
        maxLength: 64
      description:
        description: A description for direct_connect.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/direct_connect_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  direct_connect_def_status:
    type: object
    title: direct_connect Intent Status with placement specified
    description: An intentful representation of a direct_connect status
    required:
    - name
    - resources
    properties:
      name:
        description: direct_connect Name.
        type: string
      description:
        description: A description for direct_connect.
        type: string
      state:
        description: The state of the direct_connect.
        type: string
      message_list:
        type: array
        description: Any error messages for the direct_connect, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/direct_connect_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  public_cidr:
    type: object
    title: public_cidr Intent Spec with placement specified
    description: An intentful representation of a public_cidr spec
    required:

    - name

    - resources
    properties:
      name:
        description: public_cidr Name.
        type: string
        maxLength: 64
      description:
        description: A description for public_cidr.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/public_cidr_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  public_cidr_def_status:
    type: object
    title: public_cidr Intent Status with placement specified
    description: An intentful representation of a public_cidr status
    required:
    - name
    - resources
    properties:
      name:
        description: public_cidr Name.
        type: string
      description:
        description: A description for public_cidr.
        type: string
      state:
        description: The state of the public_cidr.
        type: string
      message_list:
        type: array
        description: Any error messages for the public_cidr, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/public_cidr_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  direct_connect_virtual_interface:
    type: object
    title: direct_connect_virtual_interface Intent Spec with placement specified
    description: An intentful representation of a direct_connect_virtual_interface spec
    required:

    - name

    - resources
    properties:
      name:
        description: direct_connect_virtual_interface Name.
        type: string
        maxLength: 64
      description:
        description: A description for direct_connect_virtual_interface.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/direct_connect_virtual_interface_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  direct_connect_virtual_interface_def_status:
    type: object
    title: direct_connect_virtual_interface Intent Status with placement specified
    description: An intentful representation of a direct_connect_virtual_interface status
    required:
    - name
    - resources
    properties:
      name:
        description: direct_connect_virtual_interface Name.
        type: string
      description:
        description: A description for direct_connect_virtual_interface.
        type: string
      state:
        description: The state of the direct_connect_virtual_interface.
        type: string
      message_list:
        type: array
        description: Any error messages for the direct_connect_virtual_interface, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/direct_connect_virtual_interface_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  image:
    type: object
    title: image Intent Spec with placement specified
    description: An intentful representation of a image spec
    required:

    - name

    - resources
    properties:
      name:
        description: image Name.
        type: string
        maxLength: 64
      description:
        description: A description for image.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/image_resources'

  image_def_status:
    type: object
    title: image Intent Status with placement specified
    description: An intentful representation of a image status
    required:
    - name
    - resources
    properties:
      name:
        description: image Name.
        type: string
      description:
        description: A description for image.
        type: string
      state:
        description: The state of the image.
        type: string
      message_list:
        type: array
        description: Any error messages for the image, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/image_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  aws_vm:
    type: object
    title: aws_vm Intent Spec with placement specified
    description: An intentful representation of a aws_vm spec
    required:

    - name

    - resources
    properties:
      name:
        description: aws_vm Name.
        type: string
        maxLength: 64
      description:
        description: A description for aws_vm.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/aws_vm_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  aws_vm_def_status:
    type: object
    title: aws_vm Intent Status with placement specified
    description: An intentful representation of a aws_vm status
    required:
    - name
    - resources
    properties:
      name:
        description: aws_vm Name.
        type: string
      description:
        description: A description for aws_vm.
        type: string
      state:
        description: The state of the aws_vm.
        type: string
      message_list:
        type: array
        description: Any error messages for the aws_vm, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/aws_vm_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  app:
    type: object
    title: app Intent Spec with placement specified
    description: An intentful representation of a app spec
    required:

    - name

    - resources
    properties:
      name:
        description: app Name.
        type: string
        maxLength: 64
      description:
        description: A description for app.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/app_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  app_def_status:
    type: object
    title: app Intent Status with placement specified
    description: An intentful representation of a app status
    required:
    - name
    - resources
    properties:
      name:
        description: app Name.
        type: string
      description:
        description: A description for app.
        type: string
      state:
        description: The state of the app.
        type: string
      message_list:
        type: array
        description: Any error messages for the app, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/app_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  environment:
    type: object
    title: environment Intent Spec with placement specified
    description: An intentful representation of a environment spec
    required:

    - name

    - resources
    properties:
      name:
        description: environment Name.
        type: string
        maxLength: 64
      description:
        description: A description for environment.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/environment_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  environment_def_status:
    type: object
    title: environment Intent Status with placement specified
    description: An intentful representation of a environment status
    required:
    - name
    - resources
    properties:
      name:
        description: environment Name.
        type: string
      description:
        description: A description for environment.
        type: string
      state:
        description: The state of the environment.
        type: string
      message_list:
        type: array
        description: Any error messages for the environment, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/environment_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  blueprint:
    type: object
    title: blueprint Intent Spec with placement specified
    description: An intentful representation of a blueprint spec
    required:

    - name

    - resources
    properties:
      name:
        description: blueprint Name.
        type: string
        maxLength: 64
      description:
        description: A description for blueprint.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/blueprint_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  blueprint_def_status:
    type: object
    title: blueprint Intent Status with placement specified
    description: An intentful representation of a blueprint status
    required:
    - name
    - resources
    properties:
      name:
        description: blueprint Name.
        type: string
      description:
        description: A description for blueprint.
        type: string
      state:
        description: The state of the blueprint.
        type: string
      message_list:
        type: array
        description: Any error messages for the blueprint, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/blueprint_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  account:
    type: object
    title: account Intent Spec with placement specified
    description: An intentful representation of a account spec
    required:

    - name

    - resources
    properties:
      name:
        description: account Name.
        type: string
        maxLength: 64
      description:
        description: A description for account.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/account_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  account_def_status:
    type: object
    title: account Intent Status with placement specified
    description: An intentful representation of a account status
    required:
    - name
    - resources
    properties:
      name:
        description: account Name.
        type: string
      description:
        description: A description for account.
        type: string
      state:
        description: The state of the account.
        type: string
      message_list:
        type: array
        description: Any error messages for the account, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/account_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  floating_ip:
    type: object
    title: floating_ip Intent Spec with placement specified
    description: An intentful representation of a floating_ip spec
    required:

    - resources
    properties:
      name:
        description: floating_ip Name.
        type: string
        maxLength: 64
      description:
        description: A description for floating_ip.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/floating_ip_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'


  floating_ip_def_status:
    type: object
    title: floating_ip Intent Status with placement specified
    description: An intentful representation of a floating_ip status
    required:
    - name
    - resources
    properties:
      name:
        description: floating_ip Name.
        type: string
      description:
        description: A description for floating_ip.
        type: string
      state:
        description: The state of the floating_ip.
        type: string
      message_list:
        type: array
        description: Any error messages for the floating_ip, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/floating_ip_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  file_item:
    type: object
    title: file_item Intent Spec with placement specified
    description: An intentful representation of a file_item spec
    required:

    - resources
    properties:
      name:
        description: file_item Name.
        type: string
        maxLength: 64
      description:
        description: A description for file_item.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/file_item_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  file_item_def_status:
    type: object
    title: file_item Intent Status with placement specified
    description: An intentful representation of a file_item status
    required:
    - name
    - resources
    properties:
      name:
        description: file_item Name.
        type: string
      description:
        description: A description for file_item.
        type: string
      state:
        description: The state of the file_item.
        type: string
      message_list:
        type: array
        description: Any error messages for the file_item, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/file_item_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'

  qos_policy:
    type: object
    title: qos_policy Intent Spec with placement specified
    description: An intentful representation of a qos_policy spec
    required:

    - resources
    properties:
      name:
        description: qos_policy Name.
        type: string
        maxLength: 64
      description:
        description: A description for qos_policy.
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/qos_policy_resources'

      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'

      cluster_reference:
        $ref: '#/definitions/cluster_reference'


  qos_policy_def_status:
    type: object
    title: qos_policy Intent Status with placement specified
    description: An intentful representation of a qos_policy status
    required:
    - name
    - resources
    properties:
      name:
        description: qos_policy Name.
        type: string
      description:
        description: A description for qos_policy.
        type: string
      state:
        description: The state of the qos_policy.
        type: string
      message_list:
        type: array
        description: Any error messages for the qos_policy, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        $ref: '#/definitions/qos_policy_resources_def_status'
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'



  cluster_intent_resource:
    type: object
    title: cluster Intent Response
    description: Response object for intentful operations on a cluster
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cluster_metadata'

      spec:
        $ref: '#/definitions/cluster'

      status:
        $ref: '#/definitions/cluster_def_status'
  cluster_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of clusters
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cluster_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/cluster_intent_resource'

  vm_intent_resource:
    type: object
    title: vm Intent Response
    description: Response object for intentful operations on a vm
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_metadata'

      spec:
        $ref: '#/definitions/vm'

      status:
        $ref: '#/definitions/vm_def_status'
  vm_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of vms
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/vm_intent_resource'

  cloud_credentials_intent_resource:
    type: object
    title: cloud_credentials Intent Response
    description: Response object for intentful operations on a cloud_credentials
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'

      spec:
        $ref: '#/definitions/cloud_credentials'

      status:
        $ref: '#/definitions/cloud_credentials_def_status'
  cloud_credentials_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of cloud_credentialss
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_credentials_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/cloud_credentials_intent_resource'

  ssh_user_intent_resource:
    type: object
    title: ssh_user Intent Response
    description: Response object for intentful operations on a ssh_user
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ssh_user_metadata'

      spec:
        $ref: '#/definitions/ssh_user'

      status:
        $ref: '#/definitions/ssh_user_def_status'
  ssh_user_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of ssh_users
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ssh_user_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/ssh_user_intent_resource'

  container_intent_resource:
    type: object
    title: container Intent Response
    description: Response object for intentful operations on a container
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/container_metadata'

      spec:
        $ref: '#/definitions/container'

      status:
        $ref: '#/definitions/container_def_status'
  container_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of containers
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/container_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/container_intent_resource'

  docker_registry_intent_resource:
    type: object
    title: docker_registry Intent Response
    description: Response object for intentful operations on a docker_registry
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/docker_registry_metadata'

      spec:
        $ref: '#/definitions/docker_registry'

      status:
        $ref: '#/definitions/docker_registry_def_status'
  docker_registry_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of docker_registrys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/docker_registry_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/docker_registry_intent_resource'

  directory_service_intent_resource:
    type: object
    title: directory_service Intent Response
    description: Response object for intentful operations on a directory_service
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/directory_service_metadata'

      spec:
        $ref: '#/definitions/directory_service'

      status:
        $ref: '#/definitions/directory_service_def_status'
  directory_service_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of directory_services
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/directory_service_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/directory_service_intent_resource'

  identity_provider_intent_resource:
    type: object
    title: identity_provider Intent Response
    description: Response object for intentful operations on a identity_provider
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/identity_provider_metadata'

      spec:
        $ref: '#/definitions/identity_provider'

      status:
        $ref: '#/definitions/identity_provider_def_status'
  identity_provider_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of identity_providers
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/identity_provider_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/identity_provider_intent_resource'

  network_function_chain_intent_resource:
    type: object
    title: network_function_chain Intent Response
    description: Response object for intentful operations on a network_function_chain
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'

      spec:
        $ref: '#/definitions/network_function_chain'

      status:
        $ref: '#/definitions/network_function_chain_def_status'
  network_function_chain_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of network_function_chains
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_function_chain_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/network_function_chain_intent_resource'

  network_security_rule_intent_resource:
    type: object
    title: network_security_rule Intent Response
    description: Response object for intentful operations on a network_security_rule
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'

      spec:
        $ref: '#/definitions/network_security_rule'

      status:
        $ref: '#/definitions/network_security_rule_def_status'
  network_security_rule_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of network_security_rules
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_security_rule_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/network_security_rule_intent_resource'

  rackable_unit_intent_resource:
    type: object
    title: rackable_unit Intent Response
    description: Response object for intentful operations on a rackable_unit
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rackable_unit_metadata'

      spec:
        $ref: '#/definitions/rackable_unit'

      status:
        $ref: '#/definitions/rackable_unit_def_status'
  rackable_unit_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of rackable_units
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rackable_unit_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/rackable_unit_intent_resource'

  host_intent_resource:
    type: object
    title: host Intent Response
    description: Response object for intentful operations on a host
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/host_metadata'

      spec:
        $ref: '#/definitions/host'

      status:
        $ref: '#/definitions/host_def_status'
  host_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of hosts
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/host_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/host_intent_resource'

  disk_intent_resource:
    type: object
    title: disk Intent Response
    description: Response object for intentful operations on a disk
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/disk_metadata'

      spec:
        $ref: '#/definitions/disk'

      status:
        $ref: '#/definitions/disk_def_status'
  disk_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of disks
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/disk_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/disk_intent_resource'

  remote_connection_intent_resource:
    type: object
    title: remote_connection Intent Response
    description: Response object for intentful operations on a remote_connection
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/remote_connection_metadata'

      spec:
        $ref: '#/definitions/remote_connection'

      status:
        $ref: '#/definitions/remote_connection_def_status'
  remote_connection_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of remote_connections
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/remote_connection_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/remote_connection_intent_resource'

  volume_group_intent_resource:
    type: object
    title: volume_group Intent Response
    description: Response object for intentful operations on a volume_group
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/volume_group_metadata'

      spec:
        $ref: '#/definitions/volume_group'

      status:
        $ref: '#/definitions/volume_group_def_status'
  volume_group_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of volume_groups
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/volume_group_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/volume_group_intent_resource'

  availability_zone_intent_resource:
    type: object
    title: availability_zone Intent Response
    description: Response object for intentful operations on a availability_zone
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/availability_zone_metadata'

      spec:
        $ref: '#/definitions/availability_zone'

      status:
        $ref: '#/definitions/availability_zone_def_status'
  availability_zone_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of availability_zones
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/availability_zone_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/availability_zone_intent_resource'

  protection_rule_intent_resource:
    type: object
    title: protection_rule Intent Response
    description: Response object for intentful operations on a protection_rule
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/protection_rule_metadata'

      spec:
        $ref: '#/definitions/protection_rule'

      status:
        $ref: '#/definitions/protection_rule_def_status'
  protection_rule_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of protection_rules
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/protection_rule_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/protection_rule_intent_resource'

  report_instance_intent_resource:
    type: object
    title: report_instance Intent Response
    description: Response object for intentful operations on a report_instance
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_instance_metadata'

      spec:
        $ref: '#/definitions/report_instance'

      status:
        $ref: '#/definitions/report_instance_def_status'
  report_instance_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of report_instances
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_instance_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/report_instance_intent_resource'

  report_config_intent_resource:
    type: object
    title: report_config Intent Response
    description: Response object for intentful operations on a report_config
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_config_metadata'

      spec:
        $ref: '#/definitions/report_config'

      status:
        $ref: '#/definitions/report_config_def_status'
  report_config_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of report_configs
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/report_config_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/report_config_intent_resource'

  permission_intent_resource:
    type: object
    title: permission Intent Response
    description: Response object for intentful operations on a permission
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/permission_metadata'

      spec:
        $ref: '#/definitions/permission'

      status:
        $ref: '#/definitions/permission_def_status'
  permission_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of permissions
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/permission_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/permission_intent_resource'

  role_intent_resource:
    type: object
    title: role Intent Response
    description: Response object for intentful operations on a role
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/role_metadata'

      spec:
        $ref: '#/definitions/role'

      status:
        $ref: '#/definitions/role_def_status'
  role_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of roles
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/role_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/role_intent_resource'

  subnet_intent_resource:
    type: object
    title: subnet Intent Response
    description: Response object for intentful operations on a subnet
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/subnet_metadata'

      spec:
        $ref: '#/definitions/subnet'

      status:
        $ref: '#/definitions/subnet_def_status'
  subnet_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of subnets
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/subnet_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/subnet_intent_resource'

  vpn_connection_intent_resource:
    type: object
    title: vpn_connection Intent Response
    description: Response object for intentful operations on a vpn_connection
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_connection_metadata'

      spec:
        $ref: '#/definitions/vpn_connection'

      status:
        $ref: '#/definitions/vpn_connection_def_status'
  vpn_connection_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of vpn_connections
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_connection_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/vpn_connection_intent_resource'

  vpn_gateway_intent_resource:
    type: object
    title: vpn_gateway Intent Response
    description: Response object for intentful operations on a vpn_gateway
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_gateway_metadata'

      spec:
        $ref: '#/definitions/vpn_gateway'

      status:
        $ref: '#/definitions/vpn_gateway_def_status'
  vpn_gateway_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of vpn_gateways
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vpn_gateway_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/vpn_gateway_intent_resource'

  routing_policy_intent_resource:
    type: object
    title: routing_policy Intent Response
    description: Response object for intentful operations on a routing_policy
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/routing_policy_metadata'

      spec:
        $ref: '#/definitions/routing_policy'

      status:
        $ref: '#/definitions/routing_policy_def_status'
  routing_policy_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of routing_policys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/routing_policy_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/routing_policy_intent_resource'

  affinity_rule_intent_resource:
    type: object
    title: affinity_rule Intent Response
    description: Response object for intentful operations on a affinity_rule
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/affinity_rule_metadata'

      spec:
        $ref: '#/definitions/affinity_rule'

      status:
        $ref: '#/definitions/affinity_rule_def_status'
  affinity_rule_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of affinity_rules
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/affinity_rule_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/affinity_rule_intent_resource'

  common_report_config_intent_resource:
    type: object
    title: common_report_config Intent Response
    description: Response object for intentful operations on a common_report_config
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/common_report_config_metadata'

      spec:
        $ref: '#/definitions/common_report_config'

      status:
        $ref: '#/definitions/common_report_config_def_status'
  common_report_config_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of common_report_configs
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/common_report_config_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/common_report_config_intent_resource'

  marketplace_item_intent_resource:
    type: object
    title: marketplace_item Intent Response
    description: Response object for intentful operations on a marketplace_item
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/marketplace_item_metadata'

      spec:
        $ref: '#/definitions/marketplace_item'

      status:
        $ref: '#/definitions/marketplace_item_def_status'
  marketplace_item_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of marketplace_items
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/marketplace_item_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/marketplace_item_intent_resource'

  streaming_policy_intent_resource:
    type: object
    title: streaming_policy Intent Response
    description: Response object for intentful operations on a streaming_policy
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/streaming_policy_metadata'

      spec:
        $ref: '#/definitions/streaming_policy'

      status:
        $ref: '#/definitions/streaming_policy_def_status'
  streaming_policy_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of streaming_policys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/streaming_policy_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/streaming_policy_intent_resource'

  alert_intent_resource:
    type: object
    title: alert Intent Response
    description: Response object for intentful operations on a alert
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/alert_metadata'

      spec:
        $ref: '#/definitions/alert'

      status:
        $ref: '#/definitions/alert_def_status'
  alert_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of alerts
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/alert_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/alert_intent_resource'

  action_type_intent_resource:
    type: object
    title: action_type Intent Response
    description: Response object for intentful operations on a action_type
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_type_metadata'

      spec:
        $ref: '#/definitions/action_type'

      status:
        $ref: '#/definitions/action_type_def_status'
  action_type_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of action_types
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_type_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/action_type_intent_resource'

  action_instance_intent_resource:
    type: object
    title: action_instance Intent Response
    description: Response object for intentful operations on a action_instance
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_instance_metadata'

      spec:
        $ref: '#/definitions/action_instance'

      status:
        $ref: '#/definitions/action_instance_def_status'
  action_instance_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of action_instances
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_instance_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/action_instance_intent_resource'

  action_trigger_type_intent_resource:
    type: object
    title: action_trigger_type Intent Response
    description: Response object for intentful operations on a action_trigger_type
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_trigger_type_metadata'

      spec:
        $ref: '#/definitions/action_trigger_type'

      status:
        $ref: '#/definitions/action_trigger_type_def_status'
  action_trigger_type_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of action_trigger_types
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_trigger_type_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/action_trigger_type_intent_resource'

  action_rule_intent_resource:
    type: object
    title: action_rule Intent Response
    description: Response object for intentful operations on a action_rule
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_metadata'

      spec:
        $ref: '#/definitions/action_rule'

      status:
        $ref: '#/definitions/action_rule_def_status'
  action_rule_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of action_rules
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/action_rule_intent_resource'

  action_rule_result_intent_resource:
    type: object
    title: action_rule_result Intent Response
    description: Response object for intentful operations on a action_rule_result
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_result_metadata'

      spec:
        $ref: '#/definitions/action_rule_result'

      status:
        $ref: '#/definitions/action_rule_result_def_status'
  action_rule_result_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of action_rule_results
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/action_rule_result_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/action_rule_result_intent_resource'

  datacenter_intent_resource:
    type: object
    title: datacenter Intent Response
    description: Response object for intentful operations on a datacenter
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/datacenter_metadata'

      spec:
        $ref: '#/definitions/datacenter'

      status:
        $ref: '#/definitions/datacenter_def_status'
  datacenter_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of datacenters
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/datacenter_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/datacenter_intent_resource'

  cell_intent_resource:
    type: object
    title: cell Intent Response
    description: Response object for intentful operations on a cell
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cell_metadata'

      spec:
        $ref: '#/definitions/cell'

      status:
        $ref: '#/definitions/cell_def_status'
  cell_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of cells
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cell_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/cell_intent_resource'

  rack_intent_resource:
    type: object
    title: rack Intent Response
    description: Response object for intentful operations on a rack
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rack_metadata'

      spec:
        $ref: '#/definitions/rack'

      status:
        $ref: '#/definitions/rack_def_status'
  rack_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of racks
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/rack_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/rack_intent_resource'

  network_device_intent_resource:
    type: object
    title: network_device Intent Response
    description: Response object for intentful operations on a network_device
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_device_metadata'

      spec:
        $ref: '#/definitions/network_device'

      status:
        $ref: '#/definitions/network_device_def_status'
  network_device_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of network_devices
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/network_device_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/network_device_intent_resource'

  underlay_subnet_intent_resource:
    type: object
    title: underlay_subnet Intent Response
    description: Response object for intentful operations on a underlay_subnet
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/underlay_subnet_metadata'

      spec:
        $ref: '#/definitions/underlay_subnet'

      status:
        $ref: '#/definitions/underlay_subnet_def_status'
  underlay_subnet_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of underlay_subnets
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/underlay_subnet_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/underlay_subnet_intent_resource'

  vm_snapshot_intent_resource:
    type: object
    title: vm_snapshot Intent Response
    description: Response object for intentful operations on a vm_snapshot
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'

      spec:
        $ref: '#/definitions/vm_snapshot'

      status:
        $ref: '#/definitions/vm_snapshot_def_status'
  vm_snapshot_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of vm_snapshots
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_snapshot_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/vm_snapshot_intent_resource'

  support_case_intent_resource:
    type: object
    title: support_case Intent Response
    description: Response object for intentful operations on a support_case
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/support_case_metadata'

      spec:
        $ref: '#/definitions/support_case'

      status:
        $ref: '#/definitions/support_case_def_status'
  support_case_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of support_cases
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/support_case_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/support_case_intent_resource'

  blackout_intent_resource:
    type: object
    title: blackout Intent Response
    description: Response object for intentful operations on a blackout
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blackout_metadata'

      spec:
        $ref: '#/definitions/blackout'

      status:
        $ref: '#/definitions/blackout_def_status'
  blackout_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of blackouts
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blackout_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/blackout_intent_resource'

  direct_connect_intent_resource:
    type: object
    title: direct_connect Intent Response
    description: Response object for intentful operations on a direct_connect
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_metadata'

      spec:
        $ref: '#/definitions/direct_connect'

      status:
        $ref: '#/definitions/direct_connect_def_status'
  direct_connect_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of direct_connects
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/direct_connect_intent_resource'

  public_cidr_intent_resource:
    type: object
    title: public_cidr Intent Response
    description: Response object for intentful operations on a public_cidr
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/public_cidr_metadata'

      spec:
        $ref: '#/definitions/public_cidr'

      status:
        $ref: '#/definitions/public_cidr_def_status'
  public_cidr_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of public_cidrs
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/public_cidr_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/public_cidr_intent_resource'

  direct_connect_virtual_interface_intent_resource:
    type: object
    title: direct_connect_virtual_interface Intent Response
    description: Response object for intentful operations on a direct_connect_virtual_interface
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_virtual_interface_metadata'

      spec:
        $ref: '#/definitions/direct_connect_virtual_interface'

      status:
        $ref: '#/definitions/direct_connect_virtual_interface_def_status'
  direct_connect_virtual_interface_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of direct_connect_virtual_interfaces
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/direct_connect_virtual_interface_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/direct_connect_virtual_interface_intent_resource'

  image_intent_resource:
    type: object
    title: image Intent Response
    description: Response object for intentful operations on a image
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/image_metadata'

      spec:
        $ref: '#/definitions/image'

      status:
        $ref: '#/definitions/image_def_status'
  image_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of images
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/image_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/image_intent_resource'

  project_intent_resource:
    type: object
    title: project Intent Response
    description: Response object for intentful operations on a project
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_metadata'

      spec:
        $ref: '#/definitions/project'

      status:
        $ref: '#/definitions/project_def_status'
  project_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of projects
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/project_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/project_intent_resource'

  app_intent_resource:
    type: object
    title: app Intent Response
    description: Response object for intentful operations on a app
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_metadata'

      spec:
        $ref: '#/definitions/app'

      status:
        $ref: '#/definitions/app_def_status'
  app_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of apps
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/app_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/app_intent_resource'

  environment_intent_resource:
    type: object
    title: environment Intent Response
    description: Response object for intentful operations on a environment
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/environment_metadata'

      spec:
        $ref: '#/definitions/environment'

      status:
        $ref: '#/definitions/environment_def_status'
  environment_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of environments
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/environment_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/environment_intent_resource'

  blueprint_intent_resource:
    type: object
    title: blueprint Intent Response
    description: Response object for intentful operations on a blueprint
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_metadata'

      spec:
        $ref: '#/definitions/blueprint'

      status:
        $ref: '#/definitions/blueprint_def_status'
  blueprint_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of blueprints
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/blueprint_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/blueprint_intent_resource'

  account_intent_resource:
    type: object
    title: account Intent Response
    description: Response object for intentful operations on a account
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/account_metadata'

      spec:
        $ref: '#/definitions/account'

      status:
        $ref: '#/definitions/account_def_status'
  account_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of accounts
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/account_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/account_intent_resource'

  floating_ip_intent_resource:
    type: object
    title: floating_ip Intent Response
    description: Response object for intentful operations on a floating_ip
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/floating_ip_metadata'

      spec:
        $ref: '#/definitions/floating_ip'

      status:
        $ref: '#/definitions/floating_ip_def_status'
  floating_ip_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of floating_ips
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/floating_ip_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/floating_ip_intent_resource'

  virtual_network_intent_resource:
    type: object
    title: virtual_network Intent Response
    description: Response object for intentful operations on a virtual_network
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/virtual_network_metadata'

      spec:
        $ref: '#/definitions/virtual_network'

      status:
        $ref: '#/definitions/virtual_network_def_status'
  virtual_network_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of virtual_networks
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/virtual_network_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/virtual_network_intent_resource'

  user_intent_resource:
    type: object
    title: user Intent Response
    description: Response object for intentful operations on a user
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_metadata'

      spec:
        $ref: '#/definitions/user'

      status:
        $ref: '#/definitions/user_def_status'
  user_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of users
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/user_intent_resource'

  user_group_intent_resource:
    type: object
    title: user_group Intent Response
    description: Response object for intentful operations on a user_group
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_group_metadata'

      spec:
        $ref: '#/definitions/user_group'

      status:
        $ref: '#/definitions/user_group_def_status'
  user_group_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of user_groups
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/user_group_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/user_group_intent_resource'

  access_control_policy_intent_resource:
    type: object
    title: access_control_policy Intent Response
    description: Response object for intentful operations on a access_control_policy
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/access_control_policy_metadata'

      spec:
        $ref: '#/definitions/access_control_policy'

      status:
        $ref: '#/definitions/access_control_policy_def_status'
  access_control_policy_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of access_control_policys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/access_control_policy_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/access_control_policy_intent_resource'

  recovery_plan_intent_resource:
    type: object
    title: recovery_plan Intent Response
    description: Response object for intentful operations on a recovery_plan
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_metadata'

      spec:
        $ref: '#/definitions/recovery_plan'

      status:
        $ref: '#/definitions/recovery_plan_def_status'
  recovery_plan_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of recovery_plans
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/recovery_plan_intent_resource'

  recovery_plan_job_intent_resource:
    type: object
    title: recovery_plan_job Intent Response
    description: Response object for intentful operations on a recovery_plan_job
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_job_metadata'

      spec:
        $ref: '#/definitions/recovery_plan_job'

      status:
        $ref: '#/definitions/recovery_plan_job_def_status'
  recovery_plan_job_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of recovery_plan_jobs
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/recovery_plan_job_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/recovery_plan_job_intent_resource'

  cloud_trust_intent_resource:
    type: object
    title: cloud_trust Intent Response
    description: Response object for intentful operations on a cloud_trust
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_trust_metadata'

      spec:
        $ref: '#/definitions/cloud_trust'

      status:
        $ref: '#/definitions/cloud_trust_def_status'
  cloud_trust_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of cloud_trusts
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/cloud_trust_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/cloud_trust_intent_resource'

  file_item_intent_resource:
    type: object
    title: file_item Intent Response
    description: Response object for intentful operations on a file_item
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/file_item_metadata'

      spec:
        $ref: '#/definitions/file_item'

      status:
        $ref: '#/definitions/file_item_def_status'
  file_item_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of file_items
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/file_item_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/file_item_intent_resource'

  entity_sync_rule_intent_resource:
    type: object
    title: entity_sync_rule Intent Response
    description: Response object for intentful operations on a entity_sync_rule
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/entity_sync_rule_metadata'

      spec:
        $ref: '#/definitions/entity_sync_rule'

      status:
        $ref: '#/definitions/entity_sync_rule_def_status'
  entity_sync_rule_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of entity_sync_rules
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/entity_sync_rule_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/entity_sync_rule_intent_resource'

  qos_policy_intent_resource:
    type: object
    title: qos_policy Intent Response
    description: Response object for intentful operations on a qos_policy
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/qos_policy_metadata'

      spec:
        $ref: '#/definitions/qos_policy'

      status:
        $ref: '#/definitions/qos_policy_def_status'
  qos_policy_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of qos_policys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/qos_policy_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/qos_policy_intent_resource'

  ngt_policy_intent_resource:
    type: object
    title: ngt_policy Intent Response
    description: Response object for intentful operations on a ngt_policy
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ngt_policy_metadata'

      spec:
        $ref: '#/definitions/ngt_policy'

      status:
        $ref: '#/definitions/ngt_policy_def_status'
  ngt_policy_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of ngt_policys
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/ngt_policy_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/ngt_policy_intent_resource'

  mh_vm_intent_resource:
    type: object
    title: mh_vm Intent Response
    description: Response object for intentful operations on a mh_vm
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/mh_vm_metadata'

      spec:
        $ref: '#/definitions/mh_vm'

      status:
        $ref: '#/definitions/mh_vm_def_status'
  mh_vm_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of mh_vms
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/mh_vm_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/mh_vm_intent_resource'




  vm_recovery_point_metadata:
    title: vm_recovery_point metadata
    type: object
    description: The vm_recovery_point kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_recovery_point
        x-ntnx-enum:
        - vm_recovery_point

      project_reference:
        description: The project the vm_recovery_point is in.
        $ref: "#/definitions/project_reference"

      uuid:
        description: vm_recovery_point uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: vm_recovery_point name
        type: string
        readOnly: true
        maxLength: 64
      spec_version:
        type: integer
        description: Version number of the latest spec.
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      categories:
        type: object
        description: Categories for the vm_recovery_point
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when vm_recovery_point was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when vm_recovery_point was last updated
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

      should_force_translate:
        description: >
          Applied on Prism Central only. Indicate whether force to translate
          the spec of the fanout request to fit the target cluster API schema.
        type: boolean
  vm_recovery_point_list_metadata:
    type: object
    title: Metadata for vm_recovery_point list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_recovery_point
        x-ntnx-enum:
        - vm_recovery_point
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_recovery_point_list_metadata_output:
    type: object
    title: Metadata for vm_recovery_point list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: vm_recovery_point
        x-ntnx-enum:
        - vm_recovery_point
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"
  vm_recovery_point_reference:
    title: Reference to a vm_recovery_point
    type: object
    description: The reference to a vm_recovery_point
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_recovery_point
        x-ntnx-enum:
        - vm_recovery_point
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_recovery_point_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: vm_recovery_point
        x-ntnx-enum:
        - vm_recovery_point
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.
  vm_recovery_point_restore_input:
    type: object
    title: Restore API input
    description: >
      Input object for the restore API of the recovery points. User can provide
      optional UUID of the vm that will be created as a result of this
      operation.
    properties:
      vm_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$

  vm_snapshot_input:
    type: object
    title: Snapshot API input
    description: >
      Input object for the snapshot API. User can provide optional UUID of the
      vm_recovery_point that will be created as a result of this
      operation.
    properties:
      vm_recovery_point_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      expiration_time:
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). If not
          set, then the recovery point never expires.
        type: string
        format: date-time
      recovery_point_type:
        description: Crash consistent or Application Consistent recovery point
        type: string
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT

  vm_revert_input:
    type: object
    title: Revert API input
    description: >
      Input object for the revert API. Pass the UUID of the
      vm_recovery_point to which the vm is to be reverted to.
    required:
     - vm_recovery_point_uuid
    properties:
      vm_recovery_point_uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_recovery_point:
    description: The input object that defines a vm recovery point.
    type: object
    title: vm recovery point input definitions
    properties:
      name:
        description: Name of the recovery point.
        type: string
        maxLength: 64
      resources:
        title: Recovery point resources
        type: object
        properties:
          parent_vm_reference:
            description: |
              Reference to vm that this recovery point is a snapshot of.
            $ref: "#/definitions/vm_reference"
          vm_recovery_point_location_agnostic_uuid:
            description: |
              Location agnostic UUID of the recovery point. If a recovery
              point is replicated to a different clusters, then all the
              instances of same recovery point will share this UUID.
            type: string
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          source_availability_zone_reference:
            description: |
              Reference to the availability zone where the source recovery
              point exists. This need to be set to copy a recovery from some
              other location.
            $ref: '#/definitions/availability_zone_reference'
          source_cluster_reference:
            description: |
              Reference to the cluster in the source availability zone.
            $ref: '#/definitions/cluster_reference'
          creation_time:
            description: |
              The time when the the recovery point is created. This is in internet
              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
              this represents 20 minutes and 50.52 seconds after the 23rd hour of
              April 12th, 1985 in UTC.
            type: string
            format: date-time
          expiration_time:
            description: |
              The time when this recovery point expires and will be garbage
              collected. This is in internet date/time format (RFC 3339). For
              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
              set, then the recovery point never expires.
            type: string
            format: date-time
          recovery_point_type:
            description: Crash consistent or Application Consistent recovery point
            type: string
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
      availability_zone_reference:
        description: |
          Reference to the availability zone where this recovery point is
          located
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        $ref: '#/definitions/cluster_reference'

  vm_recovery_point_def_status:
    description: The output object that defines a vm recovery point
    type: object
    title: vm recovery point output definitions
    properties:
      name:
        description: Name of the recovery point.
        type: string
      state:
        description: The state of the vm recovery point.
        type: string
      message_list:
        type: array
        description: Any error messages for the vm, if in an error state.
        items:
          $ref: '#/definitions/message_resource'
      resources:
        title: Recovery point resources
        type: object
        properties:
          parent_vm_reference:
            description: >
              Reference to vm that this recovery point is a snapshot of.
            $ref: "#/definitions/vm_reference"
          vm_recovery_point_location_agnostic_uuid:
            description: |
              Location agnostic UUID of the recovery point. If a recovery
              point is replicated to a different clusters, then all the
              instances of same recovery point will share this UUID.
            type: string
            format: UUID
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          source_availability_zone_reference:
            description: |
              Reference to the availability zone where the source recovery
              point exists. This need to be set to copy a recovery from some
              other location.
            $ref: '#/definitions/availability_zone_reference'
          source_cluster_reference:
            description: |
              Reference to the cluster in the source availability zone. This
              need to be set to copy a recovery from some other location.
            $ref: '#/definitions/cluster_reference'
          vm_spec:
            description: >
              Spec of the vm at the time of snapshot.
            $ref: "#/definitions/vm"
          vm_metadata:
            description: >
              Metadata of the vm at the time of snapshot.
            $ref: "#/definitions/vm_metadata"
          consistency_group_uuid:
            description: |
              This field is same for all the entities (irrespective of kind) that
              were snapshotted together.
            type: string
            pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          creation_time:
            description: |
              The time when the the recovery point is created. This is in internet
              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
              this represents 20 minutes and 50.52 seconds after the 23rd hour of
              April 12th, 1985 in UTC.
            type: string
          expiration_time:
            description: |
              The time when this recovery point expires and will be garbage
              collected. This is in internet date/time format (RFC 3339). For
              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
              set, then the recovery point never expires.
            type: string
            format: date-time
          recovery_point_type:
            description: Crash consistent or Application Consistent recovery point
            type: string
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
      availability_zone_reference:
        description: |
          Reference to the availability zone where this recovery point is
          located.
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        $ref: '#/definitions/cluster_reference'

  vm_recovery_point_intent_input:
    type: object
    title: vm_recovery_point Intent Entity
    description: An intentful representation of a vm_recovery_point
    required:
     - metadata
     - spec
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'
      spec:
        $ref: '#/definitions/vm_recovery_point'

  vm_recovery_point_intent_response:
    type: object
    title: vm_recovery_point Intent Response
    description: Response object for intentful operations on a vm_recovery_point
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'
      # The most up-to-date version of the vm_recovery_point spec stored in the DB

      spec:
        $ref: '#/definitions/vm_recovery_point'

      # The current status of the vm_recovery_point, as read from the DB
      status:
        $ref: '#/definitions/vm_recovery_point_def_status'
  vm_recovery_points_override_spec:
    type: object
    title: Recovery point override spec.
    description: >
      Properties that can can be overriden during cloning of recovery point.
    required:
     - expiration_time
    properties:
      expiration_time:
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). For
          example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
          50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
          set, then the recovery point never expires.
        type: string
        format: date-time
  vm_clone_input:
    type: object
    title: Clone API input
    description: >
      Input object for the clone API. User can provide the optional UUID of the
      vm that will be created as a result of this operation.
    properties:
      vm_uuid:
        description: UUID of the new vm that will be created.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  vm_recovery_points_clone_input:
    type: object
    title: API input for vm_recovery_points_clone
    description: >
      Input object for the clone API for vm recovery point. User can
      provide the optional UUID of the vm_recovery_point that will be
      created as a result of this operation on target site.
    required:
     - availability_zone_reference
    properties:
      vm_recovery_point_uuid:
        description: >
          UUID of the new vm_recovery_point that will be created.
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      availability_zone_reference:
        description: |
          Reference to the availability zone where the new
          vm_recovery_point will be replicated.
        $ref: '#/definitions/availability_zone_reference'
      cluster_reference:
        description: |
          Reference to the cluster where the new vm_recovery_point will
          be replicated.
        $ref: '#/definitions/cluster_reference'
      override_spec:
        description: |
          Properties that will be overridden in new vm_recovery_point.
        $ref: '#/definitions/vm_recovery_points_override_spec'
  vm_validate_restore_output:
    title: vm validate restore output definition.
    description: |
      If vm restoration is not feasible, it contains detailed list of the
      corresponding errors and warnings. Otherwise none.
    type: array
    items:
      type: object
      x-ntnx-one-of:
        - required:
            - error_code
        - required:
            - warning_code
      properties:
        error_code:
          description: |
            Error due to which vm will not be unrecoverable from the
            vm recovery point.
          type: string
          x-ntnx-enum:
          - VM_RESTORE_NOT_SUPPORTED

          - VIRTUAL_HARDWARE_VERSION_MISMATCH
          - LEGACY_SNAPSHOT_NOT_SUPPORTED
          - TARGET_NOT_REGISTERED_TO_MANAGEMENT_SERVER
          - UNKNOWN_ERROR
          - UNSUPPORTED_DISK_TYPE
          - UNSUPPORTED_RECOVERY_FROM_ESX_TO_AHV
          - UNSUPPORTED_RECOVERY_FROM_AHV_TO_ESX
          - UNSUPPORTED_HYPERVISOR_TYPE
          - UNSUPPORTED_VOLUME_GROUP_ATTACHMENT
          - VM_WITH_DELTA_DISKS
          - VM_WITH_SHARED_VDISKS
          - VM_WITH_UEFI_FIRMWARE
          - VSS_SNAPSHOT_NOT_SUPPORTED

        warning_code:
          description: |
            Warning due to which vm may not be fully recoverable from
            the vm recovery point.
          type: string
          x-ntnx-enum:

          - UNKNOWN_WARNING
          - VM_NGT_MULTIPATHING_ENABLED
          - VM_NGT_NOT_INSTALLED

        unrecoverability_detail:
          description: |
            Detailed message which describes unrecoverability warning or error.
          type: string
        resolution:
          description: |
            Detailed message which describes the resolution for warning or
            error.
          type: string


  vm_recovery_point_intent_resource:
    type: object
    title: vm_recovery_point Intent Response
    description: Response object for intentful operations on a vm_recovery_point
    required:
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'

      spec:
        $ref: '#/definitions/vm_recovery_point'

      status:
        $ref: '#/definitions/vm_recovery_point_def_status'
  vm_recovery_point_list_intent_response:
    type: object
    title: Entity Intent List Response
    description: Response object for intentful operation of vm_recovery_points
    required:
     - api_version
     - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/vm_recovery_point_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/vm_recovery_point_intent_resource'

  aws_vm_metadata:
    title: aws_vm metadata
    type: object
    description: The aws_vm kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_vm
        x-ntnx-enum:
        - aws_vm
      uuid:
        description: aws_vm uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_vm name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_vm
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_vm was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_vm was last updated
      project_reference:
        description: The project the aws_vm is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_vm_list_metadata:
    type: object
    title: Metadata for aws_vm list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_vm
        x-ntnx-enum:
        - aws_vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_vm_list_metadata_output:
    type: object
    title: Metadata for aws_vm list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_vm
        x-ntnx-enum:
        - aws_vm
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_vm_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_vm
        x-ntnx-enum:
        - aws_vm
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_vm_list_intent_response:
    type: object
    title: aws_vm entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vm_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_vm_intent_resource'

  aws_vm_intent_resource:
    type: object
    title: aws_vm
    description: aws_vm entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vm_metadata'
      status:
        $ref: '#/definitions/aws_vm_def_status'

  aws_vpc_metadata:
    title: aws_vpc metadata
    type: object
    description: The aws_vpc kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_vpc
        x-ntnx-enum:
        - aws_vpc
      uuid:
        description: aws_vpc uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_vpc name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_vpc
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_vpc was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_vpc was last updated
      project_reference:
        description: The project the aws_vpc is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_vpc_list_metadata:
    type: object
    title: Metadata for aws_vpc list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_vpc
        x-ntnx-enum:
        - aws_vpc
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_vpc_list_metadata_output:
    type: object
    title: Metadata for aws_vpc list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_vpc
        x-ntnx-enum:
        - aws_vpc
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_vpc_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_vpc
        x-ntnx-enum:
        - aws_vpc
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_vpc_list_intent_response:
    type: object
    title: aws_vpc entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vpc_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_vpc_intent_resource'

  aws_vpc_intent_resource:
    type: object
    title: aws_vpc
    description: aws_vpc entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_vpc_metadata'
      status:
        $ref: '#/definitions/aws_vpc_def_status'
  aws_vpc_def_status:
    title: aws_vpc resources status
    description: aws_vpc resources status
    type: object
    properties:
      name:
        description: aws_vpc name.
        type: string
      description:
        description: A description for aws_vpc.
        type: string
      resources:
        $ref: '#/definitions/aws_vpc_resources_def_status'
      state:
        type: string

  aws_subnet_metadata:
    title: aws_subnet metadata
    type: object
    description: The aws_subnet kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_subnet
        x-ntnx-enum:
        - aws_subnet
      uuid:
        description: aws_subnet uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_subnet name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_subnet
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_subnet was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_subnet was last updated
      project_reference:
        description: The project the aws_subnet is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_subnet_list_metadata:
    type: object
    title: Metadata for aws_subnet list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_subnet
        x-ntnx-enum:
        - aws_subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_subnet_list_metadata_output:
    type: object
    title: Metadata for aws_subnet list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_subnet
        x-ntnx-enum:
        - aws_subnet
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_subnet_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_subnet
        x-ntnx-enum:
        - aws_subnet
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_subnet_list_intent_response:
    type: object
    title: aws_subnet entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_subnet_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_subnet_intent_resource'

  aws_subnet_intent_resource:
    type: object
    title: aws_subnet
    description: aws_subnet entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_subnet_metadata'
      status:
        $ref: '#/definitions/aws_subnet_def_status'
  aws_subnet_def_status:
    title: aws_subnet resources status
    description: aws_subnet resources status
    type: object
    properties:
      name:
        description: aws_subnet name.
        type: string
      description:
        description: A description for aws_subnet.
        type: string
      resources:
        $ref: '#/definitions/aws_subnet_resources_def_status'
      state:
        type: string

  aws_security_group_metadata:
    title: aws_security_group metadata
    type: object
    description: The aws_security_group kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_security_group
        x-ntnx-enum:
        - aws_security_group
      uuid:
        description: aws_security_group uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_security_group name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_security_group
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_security_group was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_security_group was last updated
      project_reference:
        description: The project the aws_security_group is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_security_group_list_metadata:
    type: object
    title: Metadata for aws_security_group list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_security_group
        x-ntnx-enum:
        - aws_security_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_security_group_list_metadata_output:
    type: object
    title: Metadata for aws_security_group list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_security_group
        x-ntnx-enum:
        - aws_security_group
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_security_group_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_security_group
        x-ntnx-enum:
        - aws_security_group
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_security_group_list_intent_response:
    type: object
    title: aws_security_group entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_security_group_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_security_group_intent_resource'

  aws_security_group_intent_resource:
    type: object
    title: aws_security_group
    description: aws_security_group entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_security_group_metadata'
      status:
        $ref: '#/definitions/aws_security_group_def_status'
  aws_security_group_def_status:
    title: aws_security_group resources status
    description: aws_security_group resources status
    type: object
    properties:
      name:
        description: aws_security_group name.
        type: string
      description:
        description: A description for aws_security_group.
        type: string
      resources:
        $ref: '#/definitions/aws_security_group_resources_def_status'
      state:
        type: string

  aws_image_metadata:
    title: aws_image metadata
    type: object
    description: The aws_image kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_image
        x-ntnx-enum:
        - aws_image
      uuid:
        description: aws_image uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_image name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_image
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_image was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_image was last updated
      project_reference:
        description: The project the aws_image is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_image_list_metadata:
    type: object
    title: Metadata for aws_image list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_image
        x-ntnx-enum:
        - aws_image
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_image_list_metadata_output:
    type: object
    title: Metadata for aws_image list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_image
        x-ntnx-enum:
        - aws_image
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_image_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_image
        x-ntnx-enum:
        - aws_image
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_image_list_intent_response:
    type: object
    title: aws_image entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_image_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_image_intent_resource'

  aws_image_intent_resource:
    type: object
    title: aws_image
    description: aws_image entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_image_metadata'
      status:
        $ref: '#/definitions/aws_image_def_status'
  aws_image_def_status:
    title: aws_image resources status
    description: aws_image resources status
    type: object
    properties:
      name:
        description: aws_image name.
        type: string
      description:
        description: A description for aws_image.
        type: string
      resources:
        $ref: '#/definitions/aws_image_resources_def_status'
      state:
        type: string

  aws_elastic_ip_metadata:
    title: aws_elastic_ip metadata
    type: object
    description: The aws_elastic_ip kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_elastic_ip
        x-ntnx-enum:
        - aws_elastic_ip
      uuid:
        description: aws_elastic_ip uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_elastic_ip name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_elastic_ip
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_elastic_ip was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_elastic_ip was last updated
      project_reference:
        description: The project the aws_elastic_ip is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_elastic_ip_list_metadata:
    type: object
    title: Metadata for aws_elastic_ip list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_elastic_ip
        x-ntnx-enum:
        - aws_elastic_ip
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_elastic_ip_list_metadata_output:
    type: object
    title: Metadata for aws_elastic_ip list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_elastic_ip
        x-ntnx-enum:
        - aws_elastic_ip
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_elastic_ip_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_elastic_ip
        x-ntnx-enum:
        - aws_elastic_ip
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_elastic_ip_list_intent_response:
    type: object
    title: aws_elastic_ip entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_elastic_ip_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_elastic_ip_intent_resource'

  aws_elastic_ip_intent_resource:
    type: object
    title: aws_elastic_ip
    description: aws_elastic_ip entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_elastic_ip_metadata'
      status:
        $ref: '#/definitions/aws_elastic_ip_def_status'
  aws_elastic_ip_def_status:
    title: aws_elastic_ip resources status
    description: aws_elastic_ip resources status
    type: object
    properties:
      name:
        description: aws_elastic_ip name.
        type: string
      description:
        description: A description for aws_elastic_ip.
        type: string
      resources:
        $ref: '#/definitions/aws_elastic_ip_resources_def_status'
      state:
        type: string

  aws_region_metadata:
    title: aws_region metadata
    type: object
    description: The aws_region kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_region
        x-ntnx-enum:
        - aws_region
      uuid:
        description: aws_region uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_region name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_region
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_region was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_region was last updated
      project_reference:
        description: The project the aws_region is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_region_list_metadata:
    type: object
    title: Metadata for aws_region list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_region
        x-ntnx-enum:
        - aws_region
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_region_list_metadata_output:
    type: object
    title: Metadata for aws_region list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_region
        x-ntnx-enum:
        - aws_region
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_region_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_region
        x-ntnx-enum:
        - aws_region
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_region_list_intent_response:
    type: object
    title: aws_region entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_region_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_region_intent_resource'

  aws_region_intent_resource:
    type: object
    title: aws_region
    description: aws_region entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_region_metadata'
      status:
        $ref: '#/definitions/aws_region_def_status'
  aws_region_def_status:
    title: aws_region resources status
    description: aws_region resources status
    type: object
    properties:
      name:
        description: aws_region name.
        type: string
      description:
        description: A description for aws_region.
        type: string
      resources:
        $ref: '#/definitions/aws_region_resources_def_status'
      state:
        type: string

  aws_availability_zone_metadata:
    title: aws_availability_zone metadata
    type: object
    description: The aws_availability_zone kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_availability_zone
        x-ntnx-enum:
        - aws_availability_zone
      uuid:
        description: aws_availability_zone uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_availability_zone name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_availability_zone
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_availability_zone was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_availability_zone was last updated
      project_reference:
        description: The project the aws_availability_zone is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_availability_zone_list_metadata:
    type: object
    title: Metadata for aws_availability_zone list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_availability_zone
        x-ntnx-enum:
        - aws_availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_availability_zone_list_metadata_output:
    type: object
    title: Metadata for aws_availability_zone list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_availability_zone
        x-ntnx-enum:
        - aws_availability_zone
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_availability_zone_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_availability_zone
        x-ntnx-enum:
        - aws_availability_zone
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_availability_zone_list_intent_response:
    type: object
    title: aws_availability_zone entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_availability_zone_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_availability_zone_intent_resource'

  aws_availability_zone_intent_resource:
    type: object
    title: aws_availability_zone
    description: aws_availability_zone entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_availability_zone_metadata'
      status:
        $ref: '#/definitions/aws_availability_zone_def_status'
  aws_availability_zone_def_status:
    title: aws_availability_zone resources status
    description: aws_availability_zone resources status
    type: object
    properties:
      name:
        description: aws_availability_zone name.
        type: string
      description:
        description: A description for aws_availability_zone.
        type: string
      resources:
        $ref: '#/definitions/aws_availability_zone_resources_def_status'
      state:
        type: string

  aws_role_metadata:
    title: aws_role metadata
    type: object
    description: The aws_role kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_role
        x-ntnx-enum:
        - aws_role
      uuid:
        description: aws_role uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_role name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_role
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_role was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_role was last updated
      project_reference:
        description: The project the aws_role is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_role_list_metadata:
    type: object
    title: Metadata for aws_role list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_role
        x-ntnx-enum:
        - aws_role
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_role_list_metadata_output:
    type: object
    title: Metadata for aws_role list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_role
        x-ntnx-enum:
        - aws_role
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_role_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_role
        x-ntnx-enum:
        - aws_role
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_role_list_intent_response:
    type: object
    title: aws_role entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_role_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_role_intent_resource'

  aws_role_intent_resource:
    type: object
    title: aws_role
    description: aws_role entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_role_metadata'
      status:
        $ref: '#/definitions/aws_role_def_status'
  aws_role_def_status:
    title: aws_role resources status
    description: aws_role resources status
    type: object
    properties:
      name:
        description: aws_role name.
        type: string
      description:
        description: A description for aws_role.
        type: string
      resources:
        $ref: '#/definitions/aws_role_resources_def_status'
      state:
        type: string

  aws_key_pair_metadata:
    title: aws_key_pair metadata
    type: object
    description: The aws_key_pair kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_key_pair
        x-ntnx-enum:
        - aws_key_pair
      uuid:
        description: aws_key_pair uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_key_pair name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_key_pair
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_key_pair was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_key_pair was last updated
      project_reference:
        description: The project the aws_key_pair is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_key_pair_list_metadata:
    type: object
    title: Metadata for aws_key_pair list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_key_pair
        x-ntnx-enum:
        - aws_key_pair
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_key_pair_list_metadata_output:
    type: object
    title: Metadata for aws_key_pair list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_key_pair
        x-ntnx-enum:
        - aws_key_pair
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_key_pair_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_key_pair
        x-ntnx-enum:
        - aws_key_pair
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_key_pair_list_intent_response:
    type: object
    title: aws_key_pair entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_key_pair_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_key_pair_intent_resource'

  aws_key_pair_intent_resource:
    type: object
    title: aws_key_pair
    description: aws_key_pair entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_key_pair_metadata'
      status:
        $ref: '#/definitions/aws_key_pair_def_status'
  aws_key_pair_def_status:
    title: aws_key_pair resources status
    description: aws_key_pair resources status
    type: object
    properties:
      name:
        description: aws_key_pair name.
        type: string
      description:
        description: A description for aws_key_pair.
        type: string
      resources:
        $ref: '#/definitions/aws_key_pair_resources_def_status'
      state:
        type: string

  aws_machine_type_metadata:
    title: aws_machine_type metadata
    type: object
    description: The aws_machine_type kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_machine_type
        x-ntnx-enum:
        - aws_machine_type
      uuid:
        description: aws_machine_type uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_machine_type name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_machine_type
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_machine_type was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_machine_type was last updated
      project_reference:
        description: The project the aws_machine_type is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_machine_type_list_metadata:
    type: object
    title: Metadata for aws_machine_type list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_machine_type
        x-ntnx-enum:
        - aws_machine_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_machine_type_list_metadata_output:
    type: object
    title: Metadata for aws_machine_type list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_machine_type
        x-ntnx-enum:
        - aws_machine_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_machine_type_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_machine_type
        x-ntnx-enum:
        - aws_machine_type
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_machine_type_list_intent_response:
    type: object
    title: aws_machine_type entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_machine_type_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_machine_type_intent_resource'

  aws_machine_type_intent_resource:
    type: object
    title: aws_machine_type
    description: aws_machine_type entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_machine_type_metadata'
      status:
        $ref: '#/definitions/aws_machine_type_def_status'
  aws_machine_type_def_status:
    title: aws_machine_type resources status
    description: aws_machine_type resources status
    type: object
    properties:
      name:
        description: aws_machine_type name.
        type: string
      description:
        description: A description for aws_machine_type.
        type: string
      resources:
        $ref: '#/definitions/aws_machine_type_resources_def_status'
      state:
        type: string

  aws_volume_type_metadata:
    title: aws_volume_type metadata
    type: object
    description: The aws_volume_type kind metadata
    required:
    - kind
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_volume_type
        x-ntnx-enum:
        - aws_volume_type
      uuid:
        description: aws_volume_type uuid
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      name:
        description: aws_volume_type name
        type: string
        readOnly: true
      spec_version:
        type: integer
        description: Version number of the latest spec.
      categories:
        type: object
        description: Categories for the aws_volume_type
        additionalProperties:
          type: string
      creation_time:
        type: string
        format: date-time
        readOnly: true
        description: |
          UTC date and time in RFC-3339 format when aws_volume_type was created
      last_update_time:
        type: string
        readOnly: true
        format: date-time
        description: |
          UTC date and time in RFC-3339 format when aws_volume_type was last updated
      project_reference:
        description: The project the aws_volume_type is in
        $ref: "#/definitions/project_reference"
      # This is a reference to the user that owns this entity. UUID should be
      # set or read from.
      owner_reference:
        $ref: "#/definitions/user_reference"

  aws_volume_type_list_metadata:
    type: object
    title: Metadata for aws_volume_type list
    description: |
      All api calls that return a list will have this metadata block as input
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_volume_type
        x-ntnx-enum:
        - aws_volume_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_volume_type_list_metadata_output:
    type: object
    title: Metadata for aws_volume_type list output
    description: |
      All api calls that return a list will have this metadata block
    properties:
      kind:
        type: string
        description: The kind name
        default: aws_volume_type
        x-ntnx-enum:
        - aws_volume_type
      offset:
        $ref: "#/definitions/offset"
      length:
        $ref: "#/definitions/length"
      total_matches:
        $ref: "#/definitions/total_matches"
      filter:
        $ref: "#/definitions/filter"
      sort_order:
        $ref: "#/definitions/sort_order"
      sort_attribute:
        $ref: "#/definitions/sort_attribute"

  aws_volume_type_status:
    type: object
    title: Response Kind
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: aws_volume_type
        x-ntnx-enum:
        - aws_volume_type
      state:
        type: string
        readOnly: true
      message_list:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/message_resource'
      code:
        type: integer
        readOnly: true
        description: The HTTP error code.

  aws_volume_type_list_intent_response:
    type: object
    title: aws_volume_type entity list
    description: AWS VPC entity list.
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_volume_type_list_metadata_output'
      entities:
        type: array
        items:
          $ref: '#/definitions/aws_volume_type_intent_resource'

  aws_volume_type_intent_resource:
    type: object
    title: aws_volume_type
    description: aws_volume_type entity
    required:
      - api_version
      - metadata
    properties:
      api_version:
        $ref: '#/definitions/api_version'
      metadata:
        $ref: '#/definitions/aws_volume_type_metadata'
      status:
        $ref: '#/definitions/aws_volume_type_def_status'
  aws_volume_type_def_status:
    title: aws_volume_type resources status
    description: aws_volume_type resources status
    type: object
    properties:
      name:
        description: aws_volume_type name.
        type: string
      description:
        description: A description for aws_volume_type.
        type: string
      resources:
        $ref: '#/definitions/aws_volume_type_resources_def_status'
      state:
        type: string


  app_package_reference:
    title: Reference to a app_package
    type: object
    description: The reference to a app_package
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_package
        x-ntnx-enum:
        - app_package
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_package_reference_upload:
    title: Reference to a app_package
    type: object
    description: The reference to a app_package
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_package
        x-ntnx-enum:
        - app_package
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_substrate_reference:
    title: Reference to a app_substrate
    type: object
    description: The reference to a app_substrate
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_substrate
        x-ntnx-enum:
        - app_substrate
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_substrate_reference_upload:
    title: Reference to a app_substrate
    type: object
    description: The reference to a app_substrate
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_substrate
        x-ntnx-enum:
        - app_substrate
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_service_reference:
    title: Reference to a app_service
    type: object
    description: The reference to a app_service
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_service
        x-ntnx-enum:
        - app_service
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_service_reference_upload:
    title: Reference to a app_service
    type: object
    description: The reference to a app_service
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_service
        x-ntnx-enum:
        - app_service
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_task_reference:
    title: Reference to a app_task
    type: object
    description: The reference to a app_task
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_task
        x-ntnx-enum:
        - app_task
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_task_reference_upload:
    title: Reference to a app_task
    type: object
    description: The reference to a app_task
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_task
        x-ntnx-enum:
        - app_task
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_credential_reference:
    title: Reference to a app_credential
    type: object
    description: The reference to a app_credential
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_credential
        x-ntnx-enum:
        - app_credential
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_credential_reference_upload:
    title: Reference to a app_credential
    type: object
    description: The reference to a app_credential
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_credential
        x-ntnx-enum:
        - app_credential
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_profile_reference:
    title: Reference to a app_profile
    type: object
    description: The reference to a app_profile
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_profile
        x-ntnx-enum:
        - app_profile
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_profile_reference_upload:
    title: Reference to a app_profile
    type: object
    description: The reference to a app_profile
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_profile
        x-ntnx-enum:
        - app_profile
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_blueprint_deployment_reference:
    title: Reference to a app_blueprint_deployment
    type: object
    description: The reference to a app_blueprint_deployment
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_blueprint_deployment
        x-ntnx-enum:
        - app_blueprint_deployment
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_blueprint_deployment_reference_upload:
    title: Reference to a app_blueprint_deployment
    type: object
    description: The reference to a app_blueprint_deployment
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_blueprint_deployment
        x-ntnx-enum:
        - app_blueprint_deployment
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  app_deployment_reference:
    title: Reference to a app_deployment
    type: object
    description: The reference to a app_deployment
    required:
    - kind
    - uuid
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_deployment
        x-ntnx-enum:
        - app_deployment
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  app_deployment_reference_upload:
    title: Reference to a app_deployment
    type: object
    description: The reference to a app_deployment
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: app_deployment
        x-ntnx-enum:
        - app_deployment
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0

  account_reference_upload:
    title: Reference to a account
    type: object
    description: The reference to a account
    required:
    - kind
    - name
    properties:
      kind:
        type: string
        readOnly: true
        description: The kind name
        default: account
        x-ntnx-enum:
        - account
      name:
        readOnly: true
        type: string # As this is a reference, we do not enforce length here.
      uuid:
        type: string
        format: UUID
        pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        x-example: 0e09cf83-ac68-4f28-af70-6df9a43df4f0