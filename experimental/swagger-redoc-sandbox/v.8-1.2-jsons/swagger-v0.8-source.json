{"apiVersion":"v0.8","swaggerVersion":"1.2","apis":[{"internal":false,"path":"/ha"},{"internal":false,"path":"/hosts"},{"internal":false,"path":"/images"},{"internal":false,"path":"/networks"},{"internal":false,"path":"/snapshots"},{"internal":false,"path":"/tasks"},{"internal":false,"path":"/vdisks"},{"internal":false,"path":"/vms"},{"internal":false,"path":"/volume_groups"}]}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/ha","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/ha/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get current HA configuration.","notes":"","type":"get.dto.acropolis.HaConfigDTO","nickname":"getHaConfig","parameters":[],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Enable, disable or modify HA configuration.","notes":"","type":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"updateHaConfig","parameters":[{"description":"HA configuration","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.HaUpdateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"get.dto.acropolis.HaConfigDTO":{"id":"get.dto.acropolis.HaConfigDTO","required":[],"properties":{"failoverEnabled":{"description":"Whether HA should be invoked upon host failure.","type":"boolean","typeName":"DEFAULT"},"failoverInProgressHostUuids":{"description":"UUIDs of hosts that are part of in-progress failover","items":{"type":"string"},"type":"array","typeName":"DEFAULT"},"haState":{"description":"HA state of the cluster","enum":["HIGHLY_AVAILABLE","HEALING","BEST_EFFORT","DISABLED"],"type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp of the configuration.","format":"int64","type":"integer","typeName":"DEFAULT"},"numHostFailuresToTolerate":{"description":"Number of host failures tolerated.","format":"int64","type":"integer","typeName":"DEFAULT"},"reservationType":{"description":"Type of reservation (hosts or segments).","enum":["RESERVE_HOSTS","RESERVE_SEGMENTS","NO_RESERVATIONS"],"type":"string","typeName":"DEFAULT"},"reservedHostUuids":{"description":"UUIDs of hosts reserved for failover.","items":{"type":"string"},"type":"array","typeName":"DEFAULT"}}},"update.dto.acropolis.HaUpdateDTO":{"id":"update.dto.acropolis.HaUpdateDTO","required":[],"properties":{"enableFailover":{"description":"Whether HA should be invoked upon host failure.","type":"boolean","typeName":"DEFAULT"},"evacuationOption":{"description":"Indicates the action we take to evacuate VMs powered on the host.","enum":["POWER_OFF","COLD_MIGRATE","LIVE_MIGRATE"],"type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp for HA configuration.","format":"int64","type":"integer","typeName":"DEFAULT"},"numHostFailuresToTolerate":{"description":"Number of host failures tolerated.","format":"int64","type":"integer","typeName":"DEFAULT"},"reservationType":{"description":"Type of HA reservation (segments or hosts).","enum":["RESERVE_HOSTS","RESERVE_SEGMENTS","NO_RESERVATIONS"],"type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/hosts","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/hosts/{hostid}/enter_maintenance_mode","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Put a host in maintenance mode.","notes":"Put a host in maintenance mode. <br/><br/>It can be specified if Virtual Machines currently running on the host need to be powered off, live migrated or cold migrated. The host will be marked as unschedulable, so that no new Virtual Machines can be instantiated on it. Subsequently, an attempt is made to evacuate VMs from the host. <br/><br/>If the evacuation attempt fails (e.g., because there are insufficient resources available elsewhere in the cluster), the host will remain in the entering maintenance mode state, where it is marked unschedulable, waiting for user remediation. <br/><br/>This operation is idempotent and can be run again with different options like powering off the Virtual Machines, live or cold migrating them. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. <br/><br/>The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"enterMaintenanceMode","parameters":[{"name":"hostid","description":"UUID of host to put in maintenance mode","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Maintenance mode options","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.MaintenanceModeDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/hosts/{hostid}/exit_maintenance_mode","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Pull a host out of maintenance mode or abort a prior attempt.","notes":"Pull a host out of maintenance mode or abort a prior attempt to enter maintenance mode even if the attempt is ongoing. <br/><br/>This is an idempotent operation. If the host is no longer in maintenance mode, this command has no effect. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API. <br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the host logical timestamp. The logical timestamp can be obtained from the host object.","type":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"exitMaintenanceMode","parameters":[{"name":"hostid","description":"UUID of host to pull out of maintenance mode","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Logical timestamp associated with host object","required":false,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"create.dto.acropolis.MaintenanceModeDTO":{"id":"create.dto.acropolis.MaintenanceModeDTO","required":[],"properties":{"evacuationOption":{"description":"Indicates the action we take to evacuate Virtual Machines powered on the host. Virtual Machines can be either powered off, live migrated or cold migrated. ","enum":["POWER_OFF","COLD_MIGRATE","LIVE_MIGRATE"],"notes":"VM Evacuation action.","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp that may be provided for consistency. This is an optional field. The current value for the logical timestamp can be obtained from the host object.","format":"int64","notes":"Logical timestamp provided for consistency.","type":"integer","typeName":"DEFAULT"},"nonMigratableVmOption":{"description":"Indicates the action to take for non migratable VMs.Non migratable VMs like ones with GPUs assigned can choose to be ACPI powered off or fail the maintenance mode.","enum":["BLOCK","ACPI_SHUTDOWN_AND_POWER_OFF"],"notes":"Indicates the action to take for non migratable VMs.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO":{"id":"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO","required":[],"properties":{"logicalTimestamp":{"description":"Logical timestamp that may be provided for consistency.","format":"int64","notes":"Logical timestamp provided for consistency.","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/images","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/images/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get the list of Disk Images.","notes":"Get the list of Images","type":"get.base.EntityCollection&lt;get.dto.acropolis.ImageInfoDTO&gt;","nickname":"getImages","parameters":[{"name":"includeVmDiskSizes","description":"Include VmDisk sizes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[]},{"deprecated":"false","internal":false,"method":"POST","summary":"Create a Disk Image.","notes":"Create a Image with specified configuration. <br/><br/>There are two modes of creation, one mode you either provide some source (URL, vmdisk, or uploaded file) or you just create the metadata for the image. <br/>If a UUID is specified for the Image, this operation will be idempotent. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createImage","parameters":[{"description":"Image Creation Specs","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.ImageSpecDTO"}],"responseMessages":[]}]},{"internal":false,"path":"/images/{imageId}/","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a Disk Image.","notes":"Delete a Disk Image. <br/><br/>This is an idempotent operation.<br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Image logical timestamp. The logical timestamp can be obtained from the Image Info object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteImage","parameters":[{"name":"imageId","description":"Id of the Image","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"logicaltimestamp","description":"Logical timestamp for synchronized delete","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"GET","summary":"Get details of a specific Image based on the given Id.","notes":"Get details of a specific Disk Image based on the given Id.","type":"get.dto.acropolis.ImageInfoDTO","nickname":"getImage","parameters":[{"name":"imageId","description":"Id of the Image","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeVmDiskSizes","description":"Include VmDisk size","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Update a Disk Image.","notes":"Update a Disk Image. <br/><br/>Fields that are not set or are not specified are ignored.<br/><br/>If an Image is already in ACTIVE state then its source can't be updated. But you can still update the image name, image type and image annotation.<br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Image logical timestamp. The logical timestamp can be obtained from the Image object.","type":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"updateImage","parameters":[{"name":"imageId","description":"Id of the Disk Image","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Disk Image Update Info","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.ImageSpecDTO"}],"responseMessages":[]}]}],"models":{"create.dto.acropolis.ImageImportSpecDTO":{"id":"create.dto.acropolis.ImageImportSpecDTO","required":[],"properties":{"checksum":{"description":"The Checksum in bytes.","notes":"The Checksum of the image.","type":"string","typeName":"DEFAULT"},"checksumType":{"description":"The type of Checksum to be used for the Image. Possible values are \"SHA_256\" and \"SHA_1\".","enum":["SHA_256","SHA_1"],"notes":"The Checksum type of the image.","type":"string","typeName":"DEFAULT"},"containerId":{"description":"ID of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","format":"int64","notes":"ID of a Container which will contain the newly created Image.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","notes":"Name of a Container which will contain the newly created Image.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","notes":"UUID of a Container which will contain the newly created Image.","type":"string","typeName":"DEFAULT"},"url":{"description":"A string describing the source URL for the Image. Note that the source URL can point to an NFS or HTTP target. NFS URLs should look like: nfs://<source address>/<path to file>","notes":"A string describing the source URL for the Image.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.ImageSpecDTO":{"id":"create.dto.acropolis.ImageSpecDTO","required":[],"properties":{"annotation":{"description":"A string describing the Image.","notes":"A string describing the Image.","type":"string","typeName":"DEFAULT"},"imageImportSpec":{"$ref":"create.dto.acropolis.ImageImportSpecDTO","description":"The spec for the imported image. Either this or the VMDiskSpecCloneDTO needs to be specified","notes":"The spec for the imported image","typeName":"DEFAULT"},"imageType":{"description":"The Image type specifies whether its a Disk image or ISO image. Possible values are \"disk_image\" and \"iso_image\".","enum":["DISK_IMAGE","ISO_IMAGE"],"notes":"The Image type.","type":"string","typeName":"DEFAULT"},"name":{"description":"The Image's human readable name.","notes":"The Image's human readable name.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence.","notes":"A version 4 UUID that the client may specify for idempotence.","type":"string","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"create.dto.acropolis.VMDiskSpecCloneDTO","description":"The spec for the VMDisk to be cloned. Either this or the ImageImportSpecDTO needs to be specified","notes":"The spec for the VMDisk to be cloned","typeName":"DEFAULT"}}},"create.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskSpecCloneDTO":{"id":"create.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"get.base.EntityCollection&lt;get.dto.acropolis.ImageInfoDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.ImageInfoDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.ImageInfoDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.acropolis.ImageInfoDTO":{"id":"get.dto.acropolis.ImageInfoDTO","required":[],"properties":{"annotation":{"description":"A string describing the Image.","notes":"A string describing the Image.","type":"string","typeName":"DEFAULT"},"checksum":{"description":"The Checksum in bytes.","notes":"The Checksum of the image.","type":"string","typeName":"DEFAULT"},"checksumType":{"description":"The type of Checksum to be used for the Image. Possible values are \"SHA_256\" and \"SHA_1\".","enum":["SHA_256","SHA_1"],"notes":"The Checksum type of the image.","type":"string","typeName":"DEFAULT"},"createdTimeInUsecs":{"description":"The epoch time in microseconds when this image was created.","format":"int64","notes":"The Image creation time.","type":"integer","typeName":"DEFAULT"},"deleted":{"description":"Indicates whether the image has been deleted or not.","notes":"Indicates whether the image has been deleted or not.","type":"boolean","typeName":"DEFAULT"},"imageState":{"description":"The Image state specifies whether its usable or not. Possible values are \"ACTIVE\" and \"INACTIVE\".","enum":["ACTIVE","INACTIVE"],"notes":"The Image state.","type":"string","typeName":"DEFAULT"},"imageType":{"description":"The Image type specifies whether its a disk image or ISO image. Possible values are \"DISK_IMAGE\" and \"ISO_IMAGE\".","enum":["DISK_IMAGE","ISO_IMAGE"],"notes":"The Image type.","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"The Image logical timestamp. This can be used as input to other Image related APIs for consistency","format":"int64","notes":"The Image logical timestamp.","type":"integer","typeName":"DEFAULT"},"name":{"description":"A string depicting the Image name.","notes":"A string depicting the Image name.","type":"string","typeName":"DEFAULT"},"updatedTimeInUsecs":{"description":"The epoch time in microseconds when this image was updated.","format":"int64","notes":"The Image update time.","type":"integer","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID identifying the Image.","notes":"A version 4 UUID identifying the Image.","type":"string","typeName":"UUID_TYPE"},"vmDiskId":{"description":"A version 4 UUID identifying the backing VMDisk.","notes":"A version 4 UUID identifying the backing VMDisk.","type":"string","typeName":"DEFAULT"},"vmDiskSize":{"description":"This is only filled in on demand whenever an image is fetched and the size is requested.","format":"int64","notes":"The Image's VMDisk size in bytes.","type":"integer","typeName":"DEFAULT"}}},"update.dto.acropolis.ImageImportSpecDTO":{"id":"update.dto.acropolis.ImageImportSpecDTO","required":[],"properties":{"checksum":{"description":"The Checksum in bytes.","notes":"The Checksum of the image.","type":"string","typeName":"DEFAULT"},"checksumType":{"description":"The type of Checksum to be used for the Image. Possible values are \"SHA_256\" and \"SHA_1\".","enum":["SHA_256","SHA_1"],"notes":"The Checksum type of the image.","type":"string","typeName":"DEFAULT"},"containerId":{"description":"ID of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","format":"int64","notes":"ID of a Container which will contain the newly created Image.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","notes":"Name of a Container which will contain the newly created Image.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of a Container which will contain the newly created Image. Container UUID, ID, or Name must be provided.","notes":"UUID of a Container which will contain the newly created Image.","type":"string","typeName":"DEFAULT"},"url":{"description":"A string describing the source URL for the Image. Note that the source URL can point to an NFS or HTTP target. NFS URLs should look like: nfs://<source address>/<path to file>","notes":"A string describing the source URL for the Image.","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.ImageSpecDTO":{"id":"update.dto.acropolis.ImageSpecDTO","required":[],"properties":{"annotation":{"description":"A string describing the Image.","notes":"A string describing the Image.","type":"string","typeName":"DEFAULT"},"imageImportSpec":{"$ref":"update.dto.acropolis.ImageImportSpecDTO","description":"The spec for the imported image. Either this or the VMDiskSpecCloneDTO needs to be specified","notes":"The spec for the imported image","typeName":"DEFAULT"},"imageType":{"description":"The Image type specifies whether its a Disk image or ISO image. Possible values are \"disk_image\" and \"iso_image\".","enum":["DISK_IMAGE","ISO_IMAGE"],"notes":"The Image type.","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the Image Info object.","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The Image's human readable name.","notes":"The Image's human readable name.","type":"string","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"update.dto.acropolis.VMDiskSpecCloneDTO","description":"The spec for the VMDisk to be cloned. Either this or the ImageImportSpecDTO needs to be specified","notes":"The spec for the VMDisk to be cloned","typeName":"DEFAULT"}}},"update.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.VMDiskSpecCloneDTO":{"id":"update.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/networks","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/networks/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get list of networks.","notes":"Get list of networks configured in the cluster.","type":"get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;","nickname":"getNetworks","parameters":[],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"POST","summary":"Create a network.","notes":"Create a network with specified L2 and L3 configuration. <br/><br/>Each VM network interface is bound to a virtual network (see POST /vms/nic_create/). While a virtual network is in use by a VM, it cannot be modified or deleted. <br/><br/>Currently, the only supported L2 type is VLAN. Each virtual network is bound to a single VLAN, and trunking VLANs to a virtual network is not supported. A virtual network on VLAN 66 would be named 'vlan.66'. Each virtual network maps to a hypervisor-specific default vswitch. On KVM, this is 'br0'. To use a different vswitch (e.g., with different uplinks), you can append the vswitch name to the network identifier. For example, 'vlan.66.br1'. This virtual switch should exists on all hosts, and the physical switch ports for the vswitch uplinks are properly configured to receive VLAN-tagged traffic. <br/><br/>On hypervisors where it is supported, a virtual network may have an IPv4 configuration. Such a network is a 'managed L3' network. A network without a IPv4 configuration is an 'unmanaged L3' network. A network must be configured as 'managed L3' or 'unmanaged L3' at creation time. It is not possible to convert one to the other. A particular L2 (i.e., a particular VLAN) may have at most one managed network defined at a time. <br/><br/>To create a managed network, the user specifies the 'ipConfig'. This consists of an IPv4 default gateway address and subnet in CIDR notation. The user may optionally specify a DHCP server address, to avoid conflict with other services on the network. By default, the last available host address in the subnet is used. Every virtual NIC on a managed network must be assigned an IPv4 address at NIC creation time. <br/><br/>All DHCP traffic on the network will be rerouted to an internal DHCP server, who hands out configured IPv4 addresses. DHCP traffic on the physical network will not reach the virtual network, and vice versa. A managed network may have zero or more non-overlapping DHCP pools. Each pool must be entirely contained within the network's managed subnet. In the absence of a DHCP pool, the user must specify an IPv4 address when creating a virtual network adapter (see POST /vms/nic_create). If the managed network has a DHCP pool, the user need not provide an address; the NIC will automatically be assigned an IPv4 address from one of the pools at creation time, provided at least one address is available. Addresses in the DHCP pool are not reserved. That is, a user may manually specify an address belonging to the pool when creating a virtual adapter.","type":"create.dto.acropolis.ReturnValueDTO$NetworkIdDTO","nickname":"createNetwork","parameters":[{"description":"Network config info","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.NetworkConfigDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/networks/{networkid}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a network.","notes":"Delete a network. <br/><br/>A network cannot be deleted while Virtual Machines are still attached to it. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.","type":"delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"deleteNetwork","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"logicaltimestamp","description":"Logical timestamp for synchronized delete","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"GET","summary":"Get info of a network.","notes":"Get info of a network in the cluster.","type":"get.dto.acropolis.NetworkConfigDTO","nickname":"getNetwork","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Update a network.","notes":"Update a network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.","type":"update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"updateNetwork","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Updated network spec","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.NetworkConfigDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/networks/{networkid}/addresses","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get IP addresses assigned in the specified network.","notes":"Get IP addresses assigned in the specified network.","type":"get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;","nickname":"getNetworkAddressTable","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/networks/{networkid}/blacklist_IP/{ipaddress}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Remove an IP address from the managed network blacklist.","notes":"Remove an IP address from the blacklist that prevents it from being used by the managed network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.","type":"delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"unreserveIP","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"ipaddress","description":"IP address","required":true,"allowMultiple":false,"paramType":"path","type":"string"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/networks/{networkid}/blacklist_ip_addresses","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Blacklist an IP address from managed network.","notes":"Blacklist an IP address from being used by a managed network. <br/><br/>A blacklisted IP address cannot be assigned to a VM network adapter. This property may be useful for avoiding conflicts between VMs and other hosts on the physical network. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the virtual network logical timestamp. The logical timestamp can be obtained from the virtual network object.","type":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"reserveIP","parameters":[{"name":"networkid","description":"Id of the network","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"IP addresses to reserve. Comma-separated list of IP addresses.","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.PrimitiveDTO&lt;java.lang.String&gt;"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"create.dto.PrimitiveDTO&lt;java.lang.String&gt;":{"id":"create.dto.PrimitiveDTO&lt;java.lang.String&gt;","required":[],"properties":{"value":{"type":"string"}}},"create.dto.acropolis.IpConfigDTO":{"id":"create.dto.acropolis.IpConfigDTO","required":["networkAddress","prefixLength"],"properties":{"defaultGateway":{"description":"Default gateway","notes":"Default gateway","type":"string","typeName":"DEFAULT"},"dhcpOptions":{"$ref":"create.dto.acropolis.IpConfigDTO$DhcpOptions","description":"Options passed along to client via DHCP. Options that are supported are Domain Name, Domain name servers and Domain search","notes":"DHCP options","typeName":"DEFAULT"},"dhcpServerAddress":{"description":"The IP address of the DHCP server","notes":"The IP address of the DHCP server","type":"string","typeName":"IP4_ADDRESS"},"networkAddress":{"description":"The network address","notes":"The network address","type":"string","typeName":"IP4_ADDRESS"},"pool":{"description":"List of IP address pools. Each IP address pool has a start and end address","items":{"$ref":"create.dto.acropolis.IpConfigDTO$IpPool"},"notes":"List of IP address pools","type":"array","typeName":"DEFAULT"},"prefixLength":{"description":"Length of network prefix in number of bits","format":"int32","notes":"Length of network prefix in number of bits","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.IpConfigDTO$DhcpOptions":{"id":"create.dto.acropolis.IpConfigDTO$DhcpOptions","required":[],"properties":{"bootFileName":{"description":"The filename that is to be downloaded from the TFTP server","notes":"Bootfile name.","type":"string","typeName":"DEFAULT"},"domainName":{"description":"Domain name.","notes":"Domain name.","type":"string","typeName":"DEFAULT"},"domainNameServers":{"description":"Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.","notes":"Domain name servers.","type":"string","typeName":"IP4_ADDRESS_LIST"},"domainSearch":{"description":"Domains to search in the network. Use space as the delimiter.","notes":"Domain search.","type":"string","typeName":"DEFAULT"},"tftpServerName":{"description":"The FQDN or IP address of the TFTP server from which the file is to be downloaded.","notes":"TFTP Server name.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.IpConfigDTO$IpPool":{"id":"create.dto.acropolis.IpConfigDTO$IpPool","required":["range"],"properties":{"range":{"description":"Ip pool range with start address and end address. The expected format is \"startIpAddress endIpAddress\"","notes":"Ip pool range.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.NetworkConfigDTO":{"id":"create.dto.acropolis.NetworkConfigDTO","required":["vlanId"],"properties":{"annotation":{"description":"The annotation of the network","notes":"The annotation of the network","type":"string","typeName":"DEFAULT"},"ipConfig":{"$ref":"create.dto.acropolis.IpConfigDTO","description":"For managed L3 networks, this is the IP configuration.","notes":"For managed L3 networks, this is the IP configuration.","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp of the network configuration that may may be provided for consistency.","format":"int64","notes":"Logical timestamp of the network.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The name of the network","notes":"The name of the network","type":"string","typeName":"DEFAULT"},"uuid":{"description":"The UUID of the network","notes":"The UUID of the network","type":"string","typeName":"UUID_TYPE"},"vlanId":{"description":"VLAN ID of the bridged network.","format":"int32","notes":"VLAN ID of the bridged network.","type":"integer","typeName":"DEFAULT"},"vswitchName":{"description":"The name of the vswitch","notes":"The name of the vswitch","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.ReturnValueDTO$NetworkIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$NetworkIdDTO","required":[],"properties":{"networkUuid":{"description":"UUID of the network.","notes":"UUID of the network.","type":"string","typeName":"DEFAULT"}}},"delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.AddressAssignmentDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.AddressAssignmentDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.NetworkConfigDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.NetworkConfigDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.acropolis.AddressAssignmentDTO":{"id":"get.dto.acropolis.AddressAssignmentDTO","required":[],"properties":{"deleted":{"description":"Indicates that the assignment has been marked for deletion. If this is set to true, then this assignment is no longer valid and is waiting to be garbage collected.","notes":"Whether assignment has been marked for deletion.","type":"boolean","typeName":"DEFAULT"},"entityUuid":{"description":"The version 4 UUID of the entity which owns this  address assignment","notes":"The version 4 UUID of the entity which owns this address assignment","type":"string","typeName":"UUID_TYPE"},"ipAddress":{"description":"The IP address that has been assigned.","notes":"The IP address that has been assigned.","type":"string","typeName":"DEFAULT"},"macAddress":{"description":"The MAC address that the IP address belongs to","notes":"The MAC address that the IP address belongs to","type":"string","typeName":"MAC_ADDRESS"},"networkUuid":{"description":"The version 4 UUID of the network. This should not be set in the assignment table.","notes":"The version 4 UUID of the network","type":"string","typeName":"UUID_TYPE"},"overlayNetworkId":{"description":"VNI of the overlay network.","format":"int32","notes":"VNI of the overlay network.","type":"integer","typeName":"DEFAULT"},"type":{"description":"Indicates whether the address has been assigned to a Virtual Machine or has been blacklisted and excluded from allocation or has asigned to an internal component.","enum":["VM","RESERVATION","INFRASTRUCTURE"],"notes":"Assignment type of the address.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.IpConfigDTO":{"id":"get.dto.acropolis.IpConfigDTO","required":[],"properties":{"defaultGateway":{"description":"Default gateway","notes":"Default gateway","type":"string","typeName":"DEFAULT"},"dhcpOptions":{"$ref":"get.dto.acropolis.IpConfigDTO$DhcpOptions","description":"Options passed along to client via DHCP. Options that are supported are Domain Name, Domain name servers and Domain search","notes":"DHCP options","typeName":"DEFAULT"},"dhcpServerAddress":{"description":"The IP address of the DHCP server","notes":"The IP address of the DHCP server","type":"string","typeName":"IP4_ADDRESS"},"networkAddress":{"description":"The network address","notes":"The network address","type":"string","typeName":"IP4_ADDRESS"},"pool":{"description":"List of IP address pools. Each IP address pool has a start and end address","items":{"$ref":"get.dto.acropolis.IpConfigDTO$IpPool"},"notes":"List of IP address pools","type":"array","typeName":"DEFAULT"},"prefixLength":{"description":"Length of network prefix in number of bits","format":"int32","notes":"Length of network prefix in number of bits","type":"integer","typeName":"DEFAULT"}}},"get.dto.acropolis.IpConfigDTO$DhcpOptions":{"id":"get.dto.acropolis.IpConfigDTO$DhcpOptions","required":[],"properties":{"bootFileName":{"description":"The filename that is to be downloaded from the TFTP server","notes":"Bootfile name.","type":"string","typeName":"DEFAULT"},"domainName":{"description":"Domain name.","notes":"Domain name.","type":"string","typeName":"DEFAULT"},"domainNameServers":{"description":"Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.","notes":"Domain name servers.","type":"string","typeName":"IP4_ADDRESS_LIST"},"domainSearch":{"description":"Domains to search in the network. Use space as the delimiter.","notes":"Domain search.","type":"string","typeName":"DEFAULT"},"tftpServerName":{"description":"The FQDN or IP address of the TFTP server from which the file is to be downloaded.","notes":"TFTP Server name.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.IpConfigDTO$IpPool":{"id":"get.dto.acropolis.IpConfigDTO$IpPool","required":[],"properties":{"range":{"description":"Ip pool range with start address and end address. The expected format is \"startIpAddress endIpAddress\"","notes":"Ip pool range.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.NetworkConfigDTO":{"id":"get.dto.acropolis.NetworkConfigDTO","required":[],"properties":{"annotation":{"description":"The annotation of the network","notes":"The annotation of the network","type":"string","typeName":"DEFAULT"},"ipConfig":{"$ref":"get.dto.acropolis.IpConfigDTO","description":"For managed L3 networks, this is the IP configuration.","notes":"For managed L3 networks, this is the IP configuration.","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp of the network configuration that may may be provided for consistency.","format":"int64","notes":"Logical timestamp of the network.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The name of the network","notes":"The name of the network","type":"string","typeName":"DEFAULT"},"networkType":{"description":"The type of network, i.e external or internal network","enum":["EXTERNAL","INTERNAL"],"notes":"The type of network","type":"string","typeName":"DEFAULT"},"uuid":{"description":"The UUID of the network","notes":"The UUID of the network","type":"string","typeName":"UUID_TYPE"},"vlanId":{"description":"VLAN ID of the bridged network.","format":"int32","notes":"VLAN ID of the bridged network.","type":"integer","typeName":"DEFAULT"},"vswitchName":{"description":"The name of the vswitch","notes":"The name of the vswitch","type":"string","typeName":"DEFAULT"}}},"update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"update.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"update.dto.acropolis.IpConfigDTO":{"id":"update.dto.acropolis.IpConfigDTO","required":["networkAddress","prefixLength"],"properties":{"defaultGateway":{"description":"Default gateway","notes":"Default gateway","type":"string","typeName":"DEFAULT"},"dhcpOptions":{"$ref":"update.dto.acropolis.IpConfigDTO$DhcpOptions","description":"Options passed along to client via DHCP. Options that are supported are Domain Name, Domain name servers and Domain search","notes":"DHCP options","typeName":"DEFAULT"},"dhcpServerAddress":{"description":"The IP address of the DHCP server","notes":"The IP address of the DHCP server","type":"string","typeName":"IP4_ADDRESS"},"networkAddress":{"description":"The network address","notes":"The network address","type":"string","typeName":"IP4_ADDRESS"},"pool":{"description":"List of IP address pools. Each IP address pool has a start and end address","items":{"$ref":"update.dto.acropolis.IpConfigDTO$IpPool"},"notes":"List of IP address pools","type":"array","typeName":"DEFAULT"},"prefixLength":{"description":"Length of network prefix in number of bits","format":"int32","notes":"Length of network prefix in number of bits","type":"integer","typeName":"DEFAULT"}}},"update.dto.acropolis.IpConfigDTO$DhcpOptions":{"id":"update.dto.acropolis.IpConfigDTO$DhcpOptions","required":[],"properties":{"bootFileName":{"description":"The filename that is to be downloaded from the TFTP server","notes":"Bootfile name.","type":"string","typeName":"DEFAULT"},"domainName":{"description":"Domain name.","notes":"Domain name.","type":"string","typeName":"DEFAULT"},"domainNameServers":{"description":"Domain name servers to be configured for the network. Consult RFC 2132 for encoding/decoding.","notes":"Domain name servers.","type":"string","typeName":"IP4_ADDRESS_LIST"},"domainSearch":{"description":"Domains to search in the network. Use space as the delimiter.","notes":"Domain search.","type":"string","typeName":"DEFAULT"},"tftpServerName":{"description":"The FQDN or IP address of the TFTP server from which the file is to be downloaded.","notes":"TFTP Server name.","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.IpConfigDTO$IpPool":{"id":"update.dto.acropolis.IpConfigDTO$IpPool","required":["range"],"properties":{"range":{"description":"Ip pool range with start address and end address. The expected format is \"startIpAddress endIpAddress\"","notes":"Ip pool range.","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.NetworkConfigDTO":{"id":"update.dto.acropolis.NetworkConfigDTO","required":[],"properties":{"annotation":{"description":"The annotation of the network","notes":"The annotation of the network","type":"string","typeName":"DEFAULT"},"ipConfig":{"$ref":"update.dto.acropolis.IpConfigDTO","description":"For managed L3 networks, this is the IP configuration.","notes":"For managed L3 networks, this is the IP configuration.","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp of the network configuration that may may be provided for consistency.","format":"int64","notes":"Logical timestamp of the network.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The name of the network","notes":"The name of the network","type":"string","typeName":"DEFAULT"},"uuid":{"description":"The UUID of the network","notes":"The UUID of the network","type":"string","typeName":"UUID_TYPE"},"vlanId":{"description":"VLAN ID of the bridged network.","format":"int32","notes":"VLAN ID of the bridged network.","type":"integer","typeName":"DEFAULT"},"vswitchName":{"description":"The name of the vswitch","notes":"The name of the vswitch","type":"string","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/snapshots","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/snapshots/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get a list of snapshots in a cluster.","notes":"Get a list of snapshots in a cluster.","type":"get.base.EntityCollection&lt;get.dto.acropolis.SnapshotInfoDTO&gt;","nickname":"getSnapshots","parameters":[],"responseMessages":[]},{"deprecated":"false","internal":false,"method":"POST","summary":"Create Virtual Machine snapshots.","notes":"Create Virtual Machine snapshots. <br/><br/>If a UUID is specified for the snapshot, this operation will be idempotent. <br/><br/>If multiple VMs are specified, all of their configurations and disks will fall into the same consistency group. Since this operation requires the coordination of multiple resources, it should not be abused by specifying more than several VMs at a time. <br/><br/>Snapshots are crash-consistent. They do not include the VM's current memory image, only the VM configuration and its disk contents. The snapshot is taken atomically across all of a VM's configuration and disks to ensure consistency. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createSnapshot","parameters":[{"description":"Create a snapshot","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.SnapshotCreateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/snapshots/{uuid}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a snapshot.","notes":"Delete a snapshot. <br/><br/>This operation is idempotent. The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the snapshot logical timestamp. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteSnapshot","parameters":[{"name":"uuid","description":"Id of the Snapshot","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"logicalTimestamp","description":"Logical timestamp","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"GET","summary":"Get details of a specified snapshot.","notes":"Get details of a specified snapshot.","type":"get.dto.acropolis.SnapshotInfoDTO","nickname":"getSnapshot","parameters":[{"name":"uuid","description":"Id of the Snapshot","required":true,"allowMultiple":false,"paramType":"path","type":"string"}],"responseMessages":[]}]},{"internal":false,"path":"/snapshots/{uuid}/clone","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Clone a Snapshot.","notes":"Clone a Snapshot. <br/><br/>If a UUID is specified for the cloned snapshot, then the operation will be idempotent. <br/><br/>If overrideNetworkConfig is set to true in the clone spec, then the source snapshot's network configuration is overridden by one specified in the nic list. If false, the clone will inherit its basic network configuration from the source, minus MAC and IP address. <br/><br/>This is also an asynchronous operation that results in the creation of a task object.This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"cloneSnapshot","parameters":[{"name":"uuid","description":"Id of the Snapshot","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Clone a Snapshot","required":false,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.SnapshotCloneDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"create.dto.acropolis.BootConfigDTO":{"id":"create.dto.acropolis.BootConfigDTO","required":[],"properties":{"bootDeviceOrder":{"description":"The boot device order. In case boot device is not specified or the specified boot device fails, VM will attempt to boot from connected devices in this device type order.","items":{"enum":["CDROM","DISK","NIC"],"type":"string"},"notes":"Boot device order","type":"array","typeName":"DEFAULT"},"bootDeviceType":{"description":"The device from which to boot. This must refer to a valid device configured on the VM. When a boot device is removed from the VM, this field is cleared as a side effect. If no boot device is configured, the VM will have the following boot preference: hard disk, CD-ROM, NIC.","enum":["CDROM","DISK","NIC"],"notes":"Device from which to boot","type":"string","typeName":"DEFAULT"},"diskAddress":{"$ref":"create.dto.acropolis.VMDiskAddressDTO","description":"Disk address selected as boot device. At most one of this or macAddr field should be set.","notes":"Disk address selected as boot device","typeName":"DEFAULT"},"macAddr":{"description":"Mac address of the NIC selected as boot device. At most one of this or diskAddress field should be set.","notes":"Mac address of the NIC selected as boot device","type":"string","typeName":"MAC_ADDRESS"}}},"create.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.SnapshotCloneDTO":{"id":"create.dto.acropolis.SnapshotCloneDTO","required":[],"properties":{"specList":{"description":"List of clone specifications.","items":{"$ref":"create.dto.acropolis.VMCloneSpecDTO"},"notes":"List of clone specifications.","type":"array","typeName":"DEFAULT"},"uuid":{"description":"UUID of the Snapshot.","notes":"UUID of the Snapshot.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.SnapshotCreateDTO":{"id":"create.dto.acropolis.SnapshotCreateDTO","required":[],"properties":{"snapshotSpecs":{"description":"List of snapshot specifications. All disks for all Virtual Machines are treated as a single consistency group for the vdisk snapshot","items":{"$ref":"create.dto.acropolis.SnapshotSpecDTO"},"notes":"List of snapshot specifications.","type":"array","typeName":"DEFAULT"}}},"create.dto.acropolis.SnapshotSpecDTO":{"id":"create.dto.acropolis.SnapshotSpecDTO","required":["vmUuid"],"properties":{"snapshotName":{"description":"Name for the snapshot.","notes":"Name for the snapshot.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence.","notes":"A version 4 UUID that the client may specify for idempotence.","type":"string","typeName":"UUID_TYPE"},"vmUuid":{"description":"The Virtual Machine identifier.","notes":"The Virtual Machine identifier.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VMCloneSpecDTO":{"id":"create.dto.acropolis.VMCloneSpecDTO","required":["name"],"properties":{"bootConfig":{"$ref":"create.dto.acropolis.BootConfigDTO","description":"Override the existing boot configuration for the Virtual Machine. Any updates to the boot configuration will be applied during the next Virtual Machine power cycle but not reset.","notes":"Override the existing boot configuration for the Virtual Machine.","typeName":"DEFAULT"},"memoryMb":{"description":"Override the amount of RAM assigned to the clone.","format":"int64","notes":"Override the amount of RAM assigned to the clone.","type":"integer","typeName":"DEFAULT"},"name":{"description":"Named for the cloned Virtual Machine.","notes":"Name for the cloned Virtual Machine.","type":"string","typeName":"DEFAULT"},"numCoresPerVcpu":{"description":"Override the number of cores assigned to each VCPUs.","format":"int64","notes":"Override the number of cores assigned to each VCPUs.","type":"integer","typeName":"DEFAULT"},"numVcpus":{"description":"Override the number of vCPUs assigned to the clone.","format":"int64","notes":"Override the number of vCPUs assigned to the clone.","type":"integer","typeName":"DEFAULT"},"overrideNetworkConfig":{"description":"Indicate whether the source Virtual Machine's/snapshot's network configuration with the one specified in the vmNics field. If false, the clone will inherit its basic network configuration from the source, minus MAC and IP address assignments.","notes":"Whether to override the source Virtual Machine's/snapshot's network configuration.","type":"boolean","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence. This UUID will be used as the vm ID of the target vm.","notes":"A version 4 UUID that the client may specify for idempotence","type":"string","typeName":"UUID_TYPE"},"vmNics":{"description":"Network configuration. Required when overrideNetworkConfig set to true.","items":{"$ref":"create.dto.acropolis.VMNicSpecDTO"},"notes":"Network configuration. Required when overrideNetworkConfig set to true.","type":"array","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskAddressDTO":{"id":"create.dto.acropolis.VMDiskAddressDTO","required":[],"properties":{"deviceBus":{"description":"The device bus for the virtual disk device.Possible values are SCSI, IDE and PCI. Along with this the deviceIndex is used to specify a vdisk address. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","enum":["SCSI","IDE","PCI","SATA","SPAPR"],"notes":"The device bus for the virtual disk device.","type":"string","typeName":"DEFAULT"},"deviceIndex":{"description":"Index of the device on the adapter type. If left unspecified, the system will allocate the next available slot on the default bus.","format":"int32","notes":"Index of the device on the adapter type.","type":"integer","typeName":"DEFAULT"},"ndfsFilepath":{"description":"NDFS path to existing virtual disk. This field will not be set when this message is used in a create mode.When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"NDFS path to existing virtual disk.","type":"string","typeName":"DEFAULT"},"vmdiskUuid":{"description":"Virtual disk identifier. This field will not be set when this message is used in a create mode. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"Virtual disk identifier.","type":"string","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"create.dto.acropolis.VMNicSpecDTO":{"id":"create.dto.acropolis.VMNicSpecDTO","required":["networkUuid"],"properties":{"adapterType":{"description":"Type of the network adapter for ESX networks.","enum":["E1000","E1000e","PCNet32","Vmxnet","Vmxnet2","Vmxnet3","Unsupported"],"notes":"Type of the network adapter.","type":"string","typeName":"DEFAULT"},"macAddress":{"description":"The MAC address of the NIC","notes":"The MAC address of the NIC","type":"string","typeName":"MAC_ADDRESS"},"model":{"description":"Virtual hardware model.","notes":"Virtual hardware model.","type":"string","typeName":"DEFAULT"},"networkUuid":{"description":"The network to which the NIC is attached","notes":"The network to which the NIC is attached","type":"string","typeName":"UUID_TYPE"},"requestIp":{"description":"If request_ip is true\nIf 'requestedIpAddress' is set then request that IP from the network. If it's a managed network then request a dynamic IP from the network. Otherwise don't request an IP. If requestIp is false, then don't request an IP at all, regardless of whether or not the 'requestedIpAddress' is set and whether or the network is managed or not.","notes":"Request IP address.","type":"boolean","typeName":"DEFAULT"},"requestedIpAddress":{"description":"Requested IP address.","notes":"Requested IP address.","type":"string","typeName":"DEFAULT"}}},"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"get.base.EntityCollection&lt;get.dto.acropolis.SnapshotInfoDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.SnapshotInfoDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.SnapshotInfoDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.acropolis.BootConfigDTO":{"id":"get.dto.acropolis.BootConfigDTO","required":[],"properties":{"bootDeviceOrder":{"description":"The boot device order. In case boot device is not specified or the specified boot device fails, VM will attempt to boot from connected devices in this device type order.","items":{"enum":["CDROM","DISK","NIC"],"type":"string"},"notes":"Boot device order","type":"array","typeName":"DEFAULT"},"bootDeviceType":{"description":"The device from which to boot. This must refer to a valid device configured on the VM. When a boot device is removed from the VM, this field is cleared as a side effect. If no boot device is configured, the VM will have the following boot preference: hard disk, CD-ROM, NIC.","enum":["CDROM","DISK","NIC"],"notes":"Device from which to boot","type":"string","typeName":"DEFAULT"},"diskAddress":{"$ref":"get.dto.acropolis.VMDiskAddressDTO","description":"Disk address selected as boot device. At most one of this or macAddr field should be set.","notes":"Disk address selected as boot device","typeName":"DEFAULT"},"macAddr":{"description":"Mac address of the NIC selected as boot device. At most one of this or diskAddress field should be set.","notes":"Mac address of the NIC selected as boot device","type":"string","typeName":"MAC_ADDRESS"}}},"get.dto.acropolis.FileToInjectDTO":{"id":"get.dto.acropolis.FileToInjectDTO","required":[],"properties":{"destinationPath":{"description":"Destination path in the VM at which the file specified by source_path should be copied to.","notes":"Destination path in the VM at which the file specified by sourcePath should be copied to.","type":"string","typeName":"DEFAULT"},"sourcePath":{"description":"ADSF path of the source file to inject in the VM. Must be of form: adsf:///<ctr>/...","notes":"ADSF path of the source file to inject in the VM.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.SnapshotInfoDTO":{"id":"get.dto.acropolis.SnapshotInfoDTO","required":[],"properties":{"createdTime":{"description":"The epoch time in microseconds when this snapshot was created.","format":"int64","notes":"The epoch time in microseconds when this snapshot was created.","type":"integer","typeName":"DEFAULT"},"deleted":{"description":"Indicates whether the snapshot has been deleted and waiting to be garbage collected. If this is marked as true, no operations can be performed on this snapshot.","notes":"Indicates if the snapshot has been deleted.","type":"boolean","typeName":"UUID_TYPE"},"groupUuid":{"description":"UUID of the consistency group for this snapshot","notes":"UUID of the consistency group for this snapshot","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the snapshot object","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"},"snapshotName":{"description":"The snapshot name.","notes":"The snapshot name.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence.","notes":"A version 4 UUID that the client may specify for idempotence.","type":"string","typeName":"UUID_TYPE"},"vmCreateSpecification":{"$ref":"get.dto.acropolis.VMCreateDTO","description":"A specification for creating VMs from this snapshot.","notes":"A specification for creating VMs from this snapshot.","typeName":"DEFAULT"},"vmUuid":{"description":"UUID of the VM","notes":"UUID of the VM","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMCreateDTO":{"id":"get.dto.acropolis.VMCreateDTO","required":[],"properties":{"bootConfig":{"$ref":"get.dto.acropolis.BootConfigDTO","description":"Boot configuration for the Virtual Machine. Any updates to the boot configuration will be applied during the next Virtual Machine power cycle but not reset.","notes":"Boot configuration for the Virtual Machine.","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of the container on which the customization config iso files should be created. Must be provided when cluster has more than one container.","notes":"UUID of the container on which the customization config iso files should be created","type":"string","typeName":"UUID_TYPE"},"description":{"description":"Description for the Virtual Machine.","notes":"Description for the Virtual Machine.","type":"string","typeName":"DEFAULT"},"haPriority":{"description":"Priority for restarting in case of HA event.","format":"int64","notes":"Priority for restarting in case of HA event. Negative value indicates do not restart.","type":"integer","typeName":"DEFAULT"},"hostId":{"description":"UUID of the host where the Virtual Machine needs to be placed. Either this or hypervisorType needs to be specified.","notes":"UUID of the host where the Virtual Machine needs to be placed.","type":"string","typeName":"UUID_TYPE"},"hypervisorType":{"description":"The hypervisor type for the Virtual Machine placement.Possible values are VMware, Hyperv and Acropolis. Either this or hostId needs to be specified.","enum":["ACROPOLIS","NULL","AHV","HYPERV","VMWARE","XEN","ESX","KVM"],"notes":"The hypervisor type for the Virtual Machine placement.","type":"string","typeName":"DEFAULT"},"memoryMb":{"description":"RAM, in megabytes assigned to the Virtual Machine.","format":"int64","notes":"RAM, in megabytes assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"memoryReservationMb":{"description":"RAM, in megabytes reserved for the Virtual Machine.","format":"int64","notes":"RAM, in megabytes reserved for the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The Virtual Machine human readable name.","notes":"The Virtual Machine human readable name.","type":"string","typeName":"DEFAULT"},"numCoresPerVcpu":{"description":"Number of cores assigned to each VCPUs.","format":"int64","notes":"Number of cores assigned to each VCPUs.","type":"integer","typeName":"DEFAULT"},"numVcpus":{"description":"Number of VCPUs assigned to the Virtual Machine.","format":"int64","notes":"Number of VCPUs assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"timezone":{"description":"The timezone for the VM's hardware clock. Default is UTC.","notes":"The timezone for the VM's hardware clock.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence","notes":"A version 4 UUID that the client may specify for idempotence","type":"string","typeName":"UUID_TYPE"},"vcpuReservationHz":{"description":"CPU, in Hertz reserved for the Virtual Machine.","format":"int64","notes":"CPU, in Hertz reserved for the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"vmCustomizationConfig":{"$ref":"get.dto.acropolis.VMCustomizationConfigDTO","description":"Vm customization configuration. At boot time, this config will be replayed by VM customization tool(cloudinit/sysprep) installed in the VM to bring VM to the state defined by this config.","notes":"Vm customization configuration.","typeName":"DEFAULT"},"vmDisks":{"description":"List of disk specification to add to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMDiskDTO"},"notes":"List of disk specification to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"},"vmGpus":{"description":"List of GPUs requested for the Virtual Machine.","items":{"$ref":"get.dto.uhura.GPUConfigDTO"},"notes":"List of GPUs requested for the Virtual Machine.","type":"array","typeName":"DEFAULT"},"vmNics":{"description":"List of NIC specification to add to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMNicSpecDTO"},"notes":"List of NIC specification to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"}}},"get.dto.acropolis.VMCustomizationConfigDTO":{"id":"get.dto.acropolis.VMCustomizationConfigDTO","required":[],"properties":{"datasourceType":{"description":"The type of datasource for configuring the Linux Virtual Machine in case cloudinit config is provided. ISO based datasource supported by Uhura is ConfigDriveV2.","enum":["CONFIG_DRIVE_V2"],"notes":"The type of datasource for configuring the Linux Virtual Machine in case cloudinit config is provided.","type":"string","typeName":"DEFAULT"},"filesToInjectList":{"description":"List of details about files to inject in the VM.","items":{"$ref":"get.dto.acropolis.FileToInjectDTO"},"notes":"List of details about files to inject in the VM.","type":"array","typeName":"DEFAULT"},"freshInstall":{"description":"Indicates whether the VM to be customized is meant to be freshly installed via Windows Setup from a Windows OS DVD or whether the VM will be configured from a 'Sysprepped' image in which case the setup was already complete.","notes":"Indicates whether the VM to be customized is meant to be freshly installed or not.","type":"boolean","typeName":"DEFAULT"},"userdata":{"description":"Userdata in string format. Either Cloudinit format for customizing Linux VM or Sysprep format for customizing Windows VM. For cloudinit the userdata is usually a yaml file or shell script. For sysprep the userdata is usually a Xml representation of an unattend file in string format.Either this or userdataPath must be provided","notes":"Userdata in string format.","type":"string","typeName":"TEXT"},"userdataPath":{"description":"Userdata source path. Must begin with adsf:///<ctr>.For cloudinit usually a yaml file or shell script is provided. For sysprep usually an unattend file or answer file is provided. Either this or userdata must be provided","notes":"Userdata source path.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.VMDiskAddressDTO":{"id":"get.dto.acropolis.VMDiskAddressDTO","required":[],"properties":{"deviceBus":{"description":"The device bus for the virtual disk device.Possible values are SCSI, IDE and PCI. Along with this the deviceIndex is used to specify a vdisk address. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","enum":["SCSI","IDE","PCI","SATA","SPAPR"],"notes":"The device bus for the virtual disk device.","type":"string","typeName":"DEFAULT"},"deviceIndex":{"description":"Index of the device on the adapter type. If left unspecified, the system will allocate the next available slot on the default bus.","format":"int32","notes":"Index of the device on the adapter type.","type":"integer","typeName":"DEFAULT"},"diskLabel":{"description":"Information about attached disk. Disk label (for example, scsi0:0) where the virtual disk was attached. This indicates the location of the virtual disk within the VM.","notes":"Information about attached disk.","type":"string","typeName":"DEFAULT"},"isCdrom":{"description":"Whether this is a CD-ROM drive.","notes":"Whether this is a CD-ROM drive.","type":"boolean","typeName":"DEFAULT"},"ndfsFilepath":{"description":"NDFS path to existing virtual disk. This field will not be set when this message is used in a create mode.When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"NDFS path to existing virtual disk.","type":"string","typeName":"DEFAULT"},"vmdiskUuid":{"description":"Virtual disk identifier. This field will not be set when this message is used in a create mode. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"Virtual disk identifier.","type":"string","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"get.dto.acropolis.VMDiskDTO":{"id":"get.dto.acropolis.VMDiskDTO","required":[],"properties":{"diskAddress":{"$ref":"get.dto.acropolis.VMDiskAddressDTO","description":"Disk address represented by device bus type and device index.","notes":"Disk address represented by device bus type and device index.","typeName":"DEFAULT"},"isCdrom":{"description":"Whether this is a CD-ROM drive. The default value is 'false'","notes":"Whether this is a CD-ROM drive.","type":"boolean","typeName":"DEFAULT"},"isEmpty":{"description":"Whether the drive should be empty. This field only applies to CD-ROM drives, otherwise it is ignored. If this field is set to true and the drive is a CD-ROM, then the disk creation field 'vmDiskCreate' should be ignored. The default value is 'false'","notes":"Whether the CD-ROM drive should be empty.","type":"boolean","typeName":"DEFAULT"},"isScsiPassThrough":{"description":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI. The default value is true.","notes":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI.","type":"boolean","typeName":"DEFAULT"},"isThinProvisioned":{"description":"Whether the disk is thin provisioned. This field applies to only ESX managed VMs.","notes":"Whether the disk is thin provisioned.","type":"boolean","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"get.dto.acropolis.VMDiskSpecCloneDTO","description":"Specification for cloning a new disk or snapshot. Only one of 'vmCloneSpec' and 'vmCreateSpec' is required per create/update request.","notes":"Specification for cloning a new disk or snapshot.","typeName":"DEFAULT"},"vmDiskCreate":{"$ref":"get.dto.acropolis.VmDiskSpecCreateDTO","description":"Specification for creating a new disk. Only one of 'vmCreateSpec' and 'vmCloneSpec' is required per create/update request.","notes":"Specification for creating a new disk.","typeName":"DEFAULT"}}},"get.dto.acropolis.VMDiskSpecCloneDTO":{"id":"get.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMNicSpecDTO":{"id":"get.dto.acropolis.VMNicSpecDTO","required":[],"properties":{"adapterType":{"description":"Type of the network adapter for ESX networks.","enum":["E1000","E1000e","PCNet32","Vmxnet","Vmxnet2","Vmxnet3","Unsupported"],"notes":"Type of the network adapter.","type":"string","typeName":"DEFAULT"},"ipAddress":{"description":"IP address for the NIC. Includes both Acropolis assigned IP address as well as learned IP address from thirdparty networks.","notes":"IP address for the NIC.","type":"string","typeName":"DEFAULT"},"macAddress":{"description":"The MAC address of the NIC","notes":"The MAC address of the NIC","type":"string","typeName":"MAC_ADDRESS"},"model":{"description":"Virtual hardware model.","notes":"Virtual hardware model.","type":"string","typeName":"DEFAULT"},"networkUuid":{"description":"The network to which the NIC is attached","notes":"The network to which the NIC is attached","type":"string","typeName":"UUID_TYPE"},"portId":{"description":"The port id for ESX networks.","notes":"Port Id.","type":"string","typeName":"DEFAULT"},"requestIp":{"description":"If request_ip is true\nIf 'requestedIpAddress' is set then request that IP from the network. If it's a managed network then request a dynamic IP from the network. Otherwise don't request an IP. If requestIp is false, then don't request an IP at all, regardless of whether or not the 'requestedIpAddress' is set and whether or the network is managed or not.","notes":"Request IP address.","type":"boolean","typeName":"DEFAULT"},"requestedIpAddress":{"description":"Requested IP address.","notes":"Requested IP address.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.VmDiskSpecCreateDTO":{"id":"get.dto.acropolis.VmDiskSpecCreateDTO","required":[],"properties":{"containerId":{"description":"Id of container to create disk in. If this is specified, then Container Name and UUID should not be specified.","format":"int64","notes":"Id of container to create disk in.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of container to create disk in. If this is specified, then Container ID and UUID should not be specified.","notes":"Name of container to create disk in.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of container to create disk in. If this is specified, then Container Name and ID should not be specified.","notes":"UUID of container to create disk in.","type":"string","typeName":"DEFAULT"},"size":{"description":"Size of the Virtual Machine disk to be created in bytes.","format":"int64","notes":"Size of the Virtual Machine disk to be created in bytes.","type":"integer","typeName":"DEFAULT"},"sizeMb":{"description":"Size of the Virtual Machine disk to be created in MiB.","format":"int64","notes":"Size of the Virtual Machine disk to be created in MiB.","type":"integer","typeName":"DEFAULT"}}},"get.dto.uhura.GPUConfigDTO":{"id":"get.dto.uhura.GPUConfigDTO","required":[],"properties":{"assignable":{"description":"Whether the GPU can be assigned to a Virtual Machine.","notes":"Whether the GPU can be assigned to a Virtual Machine.","type":"boolean","typeName":"DEFAULT"},"deviceId":{"description":"Device ID of the GPU resource.","format":"int32","notes":"Device ID of the GPU resource.","type":"integer","typeName":"DEFAULT"},"deviceName":{"description":"Vendor device name of the GPU resource.","notes":"Vendor device name of the GPU resource.","type":"string","typeName":"DEFAULT"},"fraction":{"description":"Fraction of the physical GPU. Only applicable for a vGPU instance.","format":"int32","notes":"Fraction of the physical GPU. Only applicable for a vGPU instance.","type":"integer","typeName":"DEFAULT"},"frameBufferSizeBytes":{"description":"GPU framebuffer size in bytes.","format":"int64","notes":"GPU framebuffer size.","type":"integer","typeName":"DEFAULT"},"gpuMode":{"description":"Current mode of the physical GPU. Not valid on vGPU resources.","enum":["UNUSED","USED_FOR_PASSTHROUGH","USED_FOR_VIRTUAL"],"notes":"Current mode of the physical GPU.","type":"string","typeName":"DEFAULT"},"gpuProfile":{"description":"Profile of the GPU.","notes":"Profile of the GPU.","type":"string","typeName":"DEFAULT"},"gpuType":{"description":"Type of the GPU resource.","enum":["PASS_THROUGH_GRAPHICS","PASS_THROUGH_COMPUTE","VIRTUAL"],"notes":"Type of the GPU resource.","type":"string","typeName":"DEFAULT"},"gpuVendor":{"description":"Vendor of the GPU resource.","enum":["NVIDIA","INTEL","AMD"],"notes":"Vendor of the GPU resource.","type":"string","typeName":"DEFAULT"},"guestDriverVersion":{"description":"Last determined guest driver version.","notes":"Last determined guest driver version.","type":"string","typeName":"DEFAULT"},"inUse":{"description":"Whether the GPU resource is in use or not.","notes":"Whether the GPU resource is in use or not.","type":"boolean","typeName":"DEFAULT"},"licenses":{"description":"List of license types associated with this GPU.","items":{"type":"string"},"notes":"List of license types.","type":"array","typeName":"DEFAULT"},"maxResolution":{"description":"Maximum resolution per display heads.","notes":"Maximum resolution per display heads.","type":"string","typeName":"DEFAULT"},"numVirtualDisplayHeads":{"description":"Number of supported virtual display heads.","format":"int32","notes":"Number of supported virtual display heads.","type":"integer","typeName":"DEFAULT"},"numaNode":{"description":"The NUMA node where the GPU belongs to.","format":"int32","notes":"The NUMA node where the GPU belongs to.","type":"integer","typeName":"DEFAULT"},"sbdf":{"description":"Unique device information for the GPU resource.","notes":"Unique device information for the GPU resource.","type":"string","typeName":"DEFAULT"},"vmUuids":{"description":"List of UUIDs of the Virtual Machines where the GPU resource is assigned.","items":{"type":"string"},"notes":"List of UUIDs of the Virtual Machines where the GPU resource is assigned.","type":"array","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/tasks","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/tasks/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get a list of tasks.","notes":"Get a list of tasks generated in the cluster. <br/><br/>By default, completed tasks are excluded. Set the includeCompeted flag to true to include completed tasks. <br/><br/>Tasks can also be filtered based on the entites, entity types and operation type.","type":"get.base.EntityCollection&lt;get.dto.acropolis.tasks.TaskDTO&gt;","nickname":"getTasks","parameters":[{"name":"entityTypes","description":"Comma separated Entity types","required":false,"allowMultiple":false,"paramType":"query","type":"string"},{"name":"entityUuids","description":"Comma separated Entity types","required":false,"allowMultiple":false,"paramType":"query","type":"string"},{"name":"operationTypeList","description":"Comma separated Operation types","required":false,"allowMultiple":false,"paramType":"query","type":"string"},{"name":"includeCompleted","description":"Include Completed Tasks","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"},{"name":"epochCutOffTime","description":"Tasks greater than cut off epoch time in microseconds will be returned. This is applicable only when include completed is set to True.","required":false,"allowMultiple":false,"paramType":"query","type":"integer"},{"name":"count","description":"Maximum number of tasks","required":false,"allowMultiple":false,"paramType":"query","type":"integer"},{"name":"includeEntityNames","description":"Include entity names","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/tasks/{taskid}","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get details of the specified task.","notes":"Get details of the specified task.","type":"get.dto.acropolis.tasks.TaskDTO","nickname":"getTask","parameters":[{"name":"taskid","description":"Id of the task","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeEntityNames","description":"Include entity names","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/tasks/{taskid}/poll","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Poll a task.","notes":"Poll a task to check if its ready. The maximum timeout that can be specified is 30 minutes, i.e. 1800 seconds.","type":"get.dto.acropolis.tasks.TaskPollResultDTO","nickname":"pollTask","parameters":[{"name":"taskid","description":"Id of the task","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"timeoutseconds","description":"Timeout seconds","required":false,"allowMultiple":false,"paramType":"query","type":"integer"},{"name":"includeEntityNames","description":"Include entity names","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"get.base.EntityCollection&lt;get.dto.acropolis.tasks.TaskDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.tasks.TaskDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.tasks.TaskDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.acropolis.tasks.EntityIdDTO":{"id":"get.dto.acropolis.tasks.EntityIdDTO","required":[],"properties":{"entityName":{"description":"Entity name.","notes":"Entity name.","type":"string","typeName":"DEFAULT"},"entityType":{"description":"Entity type.","enum":["NODE","VM","SNAPSHOT","IMAGE","VOLUME_GROUP","VIRTUAL_NETWORK","CLUSTER","MICROSEG_RULE","VM_GROUP"],"notes":"Entity type.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"The version 4 UUID of the entity","notes":"The version 4 UUID of the entity","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.tasks.MetaRequestDTO":{"id":"get.dto.acropolis.tasks.MetaRequestDTO","required":[],"properties":{"methodName":{"description":"The method name for which the task was created","notes":"The method name for which the task was created","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.tasks.MetaResponseDTO":{"id":"get.dto.acropolis.tasks.MetaResponseDTO","required":[],"properties":{"error":{"description":"An error code indicating whether the RPC was successful.","notes":"An error code indicating whether the RPC was successful.","type":"string","typeName":"DEFAULT"},"errorDetail":{"description":"An optional additional string describing the error, if the RPC was not successful.","notes":"An optional additional string describing the error, if the RPC was not successful.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.tasks.TaskDTO":{"id":"get.dto.acropolis.tasks.TaskDTO","required":[],"properties":{"completeTime":{"description":"Complete time in microseconds from epoch.","format":"int64","notes":"Complete time in microseconds from epoch.","type":"integer","typeName":"DEFAULT"},"createTime":{"description":"The request object associated with the task.","format":"int64","notes":"The request object associated with the task.","type":"integer","typeName":"DEFAULT"},"entityIds":{"description":"The list of affected entity ids","items":{"type":"string"},"notes":"The list of affected entity ids","type":"array","typeName":"DEFAULT"},"entityList":{"description":"List of entities that the task impacts.","items":{"$ref":"get.dto.acropolis.tasks.EntityIdDTO"},"notes":"List of entities that the task impacts.","type":"array","typeName":"DEFAULT"},"lastUpdatedTime":{"description":"Last time the task was updated in microseconds from epoch.","format":"int64","notes":"Last time the task was updated in microseconds from epoch.","type":"integer","typeName":"DEFAULT"},"message":{"type":"string"},"metaRequest":{"$ref":"get.dto.acropolis.tasks.MetaRequestDTO","description":"The request object associated with the task.","notes":"The request object associated with the task.","typeName":"DEFAULT"},"metaResponse":{"$ref":"get.dto.acropolis.tasks.MetaResponseDTO","description":"The response object associated with the task.","notes":"The response object associated with the task.","typeName":"DEFAULT"},"operationType":{"description":"The operation for which the task was created","enum":["SNAPSHOT_CREATE","SNAPSHOT_DELETE","VM_CREATE","VM_CLONE","VM_MIGRATE","VM_RESTORE","VM_UPDATE","VM_DELETE","VM_REGISTER","VM_SET_POWER_STATE","VM_FORCE_COMPLETE_MIGRATION","VM_FORCE_POWEROFF","VM_ATTACH_VG","VM_AFFINITY_UPDATE","DISK_CREATE","DISK_UPDATE","DISK_DELETE","NIC_CREATE","NIC_UPDATE","NIC_DELETE","ENTER_MAINTENANCE_MODE","EXIT_MAINTENANCE_MODE","IMAGE_CREATE","IMAGE_DELETE","IMAGE_UPDATE","MICROSEG_UPDATE","MICROSEG_DELETE","VOLUME_GROUP_CREATE","VOLUME_GROUP_CLONE","VOLUME_GROUP_DELETE","VOLUME_GROUP_UPDATE","VOLUME_GROUP_ATTACH_VM","VOLUME_DISK_CREATE","VOLUME_DISK_DELETE","VOLUME_DISK_UPDATE","VOLUME_GROUP_REGISTER","STRETCH_CONFIGURE","STRETCH_RECOVER","HOST_RESTART_ALL_VMS","HA_UPDATE","HA_FAILOVER","START_HA_FAILOVER","RESTART_VM_GROUP","HOST_RESTORE_VM_LOCALITY","VM_GROUP_CREATE","VM_GROUP_DELETE","VM_GROUP_UPDATE","NETWORK_CREATE","NETWORK_DELETE","NETWORK_UPDATE","PARCELS_CREATE","PARCELS_DELETE","AFFINITY_RULE_UPDATE","PARCELS_UPDATE","GET_VMS_ON_HOST","NOTIFY_POWER_TRANSITION","COMPLETE_MIGRATE_VM","SET_HOST_FAILURES","NOTIFY_FAILOVER_COMPLETE","IS_TASK_PENDING","ASSIGN_SEGMENTS","GET_ENTITY_PARCELS","AFFINITY_HA_COMPLIANCE_CHECK","RECALCULATE_RESERVATIONS","CHECK_CURRENT_NODE_FAILURES","IS_FAILOVER_IN_PROGRESS","SCHEDULE_VM","MAYBE_UPDATE_AFFINITY","GET_SEGMENT_ASSIGNMENT","GET_HIGH_PRIORITY_HOSTS","RESERVE_PER_HOST_MEMORY"],"notes":"The operation for which the task was created","type":"string","typeName":"DEFAULT"},"parentTaskUuid":{"description":"The UUID of the parent task","notes":"The UUID of the parent task","type":"string","typeName":"DEFAULT"},"percentageComplete":{"format":"int64","type":"integer"},"progressStatus":{"description":"The status of the task","enum":["QUEUED","RUNNING","SUCCEEDED","ABORTED","FAILED"],"notes":"The status of the task","type":"string","typeName":"DEFAULT"},"startTime":{"description":"Start time in microseconds from epoch.","format":"int64","notes":"Start time in microseconds from epoch.","type":"integer","typeName":"DEFAULT"},"subtaskUuidList":{"description":"The list of UUIDs of the sub-tasks","items":{"type":"string"},"notes":"The list of UUIDs of the sub-tasks","type":"array","typeName":"DEFAULT"},"uuid":{"description":"The version 4 UUID of the task.","notes":"The version 4 UUID of the task,","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.tasks.TaskPollResultDTO":{"id":"get.dto.acropolis.tasks.TaskPollResultDTO","required":[],"properties":{"isUnrecognized":{"description":"Whether the task UUID specified was not recognized.","notes":"Whether the task UUID specified was not recognized.","type":"boolean","typeName":"DEFAULT"},"taskInfo":{"$ref":"get.dto.acropolis.tasks.TaskDTO","description":"The task object if the task is ready.","notes":"The task object if the task is ready.","typeName":"DEFAULT"},"timedOut":{"description":"Whether the poll request timed out.","notes":"Whether the poll request timed out.","type":"boolean","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/vdisks","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/vdisks/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get a list of vdisks in the cluster.","notes":"Get a list of vdisks in the cluster.","type":"get.base.EntityCollection&lt;get.dto.NdfsFileDTO&gt;","nickname":"getVdisks","parameters":[{"name":"path","description":"Path of ndfs file","required":true,"allowMultiple":false,"paramType":"query","type":"string"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"get.base.EntityCollection&lt;get.dto.NdfsFileDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.NdfsFileDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.NdfsFileDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.NdfsFileDTO":{"id":"get.dto.NdfsFileDTO","required":[],"properties":{"filePath":{"type":"string"},"fileType":{"enum":["FILE","DIRECTORY","OTHER"],"type":"string"},"name":{"type":"string"},"totalSize":{"format":"int64","type":"integer"},"usedSize":{"format":"int64","type":"integer"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/vms","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/vms/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get a list of KVM managed Virtual Machines.","notes":"Get a list of KVM managed Virtual Machines. <br/><br/>Virtual Machine disk sizes and network address assignments are not included by default as fetching these are expensive operations. These can be included by setting the includeVMDiskSizes and includeAddressAssignments flags respectively.","type":"get.base.EntityCollection&lt;get.dto.acropolis.VMInfoDTO&gt;","nickname":"getVMs","parameters":[{"name":"includeVMDiskSizes","description":"Whether to include Virtual Machine disk sizes in bytes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"},{"name":"includeAddressAssignments","description":"Whether to include network address assignments","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get details of a KVM managed Virtual Machine.","notes":"Get details of a KVM managed Virtual Machine. <br/><br/>Virtual Machine disk sizes and network address assignments are not included by default as fetching these are expensive operations. These can be included by setting the includeVMDiskSizes and includeAddressAssignments flags respectively.","type":"get.dto.acropolis.VMInfoDTO","nickname":"getVM","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeVMDiskSizes","description":"Whether to include Virtual Machine disk sizes in bytes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"},{"name":"includeAddressAssignments","description":"Whether to include address assignments","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a Virtual Machine.","notes":"Delete a Virtual Machine. <br/><br/>This is an idempotent operation. If the Virtual Machine is currently powered on, it will be forcefully powered off. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteVM","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Update a Virtual Machine.","notes":"Update a Virtual Machine. <br/><br/>Field that are not set or are not specified are ignored. Note that some attributes may not be modifiable while the Virtual Machine is running. For instance, the KVM hypervisor does not support CPU or memory hot-plug. <br/><br/>The hwclockTimezone attribute specifies the VM's hardware clock timezone. Most operating systems assume the system clock is UTC, but some (like Windows) expect the local timezone. Changes to the clock timezone only take effect after a full Virtual Machine power cycle. <br/><br/>This API can be used to reclaim memory from guests using a balloon driver. It is not currently possible to return ballooned memory to a guest. The attempt to reclaim memory may fail if the balloon driver is not installed, or is unable to allocate the requested amount of memory from the guest OS. In this case, the Virtual Machine's memory reservation will be restored to its value from before the balloon attempt. <br/><br/>If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"updateVM","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Virtual Machine Update Info","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.VMUpdateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/disks/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get list of disks in a Virtual Machine.","notes":"Get list of disks in a Virtual Machine. <br/><br/> Disk size is not include by default as calculating disk size is an expensive operation. To include disk size, set the includeDiskSizes flag to true.","type":"get.base.EntityCollection&lt;get.dto.acropolis.VMDiskConfigDTO&gt;","nickname":"getDisks","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"busType","description":"Bus Type of the disk(IDE/SCSI)","required":false,"allowMultiple":false,"paramType":"query","type":"string"},{"name":"deviceIndex","description":"Device Index","required":false,"allowMultiple":false,"paramType":"query","type":"string"},{"name":"includeDiskSizes","description":"Include disk sizes in bytes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"POST","summary":"Create a disk in a Virtual Machine.","notes":"Create a disk in a Virtual Machine. <br/><br/>A disk drive may either be a regular disk drive, or a CD-ROM drive. Only CD-ROM drives may be empty. <br/><br/>By default, regular disk drives are configured on the SCSI bus, and CD-ROM drives are configured on the IDE bus. The user may override this behavior with the deviceBus attribute. By default, a disk drive is placed on the first available bus slot. The user may override this behavior with the deviceIndex attribute. <br/><br/>Disks on the SCSI bus may optionally be configured for passthrough on platforms that support iSCSI. When in passthrough mode, SCSI commands are passed directly to NDFS via iSCSI. When SCSI passthrough is disabled, the hypervisor provides a SCSI emulation layer, and treats the underlying iSCSI target as a block device. By default, SCSI passthrough is enabled for SCSI devices on supported platforms. <br/><br/>If the disk image is cloned from an existing vmdisk or NFS file, the user may specify a minimum size for the resulting clone. This can be used to expand a disk image at clone time. <br/><br/>If the VM is running, the disk is hot-added to the VM. Note that certain buses, like IDE, are not hot-pluggable. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createDisk","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Config of the disks to be created","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.VMDiskCreateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/disks/{diskaddress}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a disk from a Virtual Machine.","notes":"Delete a disk from a Virtual Machine. <br/><br/>If the VM is running, the disk is hot-removed from the VM. Note that certain buses, like IDE, are not hot-pluggable. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteDisk","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"diskaddress","description":"Address of the Disk","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"vmLogicalTimestamp","description":"Virtual Machine Logical timestamp","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Update info of a disk in a Virtual Machine.","notes":"Update info of a disk in a Virtual Machine. <br/><br/>This API results in the existing disk image to be deleted and replaced by the new image (which may be a clone of the existing image). <br/><br/>If CD-ROM drive is locked, then a request to alter its contents will be rejected. <br/><br/>The new disk drive may either be a regular disk drive, or a CD-ROM drive. Only CD-ROM drives may be empty. By default, regular disk drives are configured on the SCSI bus, and CD-ROM drives are configured on the IDE bus. The user may override this behavior with the deviceBus attribute. By default, a disk drive is placed on the first available bus slot. The user may override this behavior with the deviceIndex attribute. <br/><br/>Disks on the SCSI bus may optionally be configured for passthrough on platforms that support iSCSI. When in passthrough mode, SCSI commands are passed directly to NDFS via iSCSI. When SCSI passthrough is disabled, the hypervisor provides a SCSI emulation layer, and treats the underlying iSCSI target as a block device. By default, SCSI passthrough is enabled for SCSI devices on supported platforms. <br/><br/>If the disk image is cloned from an existing vmdisk or NFS file, the user may specify a minimum size for the resulting clone. This can be used to expand a disk image at clone time. <br/><br/>If the VM is running, the disk is hot-added to the VM. Note that certain buses, like IDE, are not hot-pluggable. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"updateDisk","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"diskaddress","description":"Address of the Disk","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Update disk for VM","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.VMDiskUpdateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/disks/{diskid}","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get info of a disk in a Virtual Machine.","notes":"Get info of a disk in a Virtual Machine. <br/><br/>Disk size is not include by default as calculating disk size is an expensive operation. To include disk  size, set the includeDiskSizes flag to true.","type":"get.dto.acropolis.VMDiskConfigDTO","nickname":"getDisk","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"diskid","description":"Id of the disk","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeDiskSizes","description":"Include disk sizes in bytes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/migrate","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Migrate a Virtual Machine.","notes":"Migrate a Virtual Machine. <br/><br/>If no host is specified, the scheduler will pick the one with the most available CPU and memory that can support the VM. Note that no such host may be available. <br/><br/>The user may abort an in-progress migration with the /vms/{vmid}/migrate-abort API. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"migrateVM","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Migrate Virtual Machine ","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.VMMigrateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/migrate_abort","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Abort migrate of a Virtual Machine.","notes":"Abort migrate of a Virtual Machine. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logicaltimestamp can be obtained from the Virtual Machine object. <br/><br/>This is an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"migrateVMAbort","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Virtual Machine Logical timestamp","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/nics/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get list of NICs in a Virtual Machine.","notes":"Get list of NICs in a Virtual Machine. <br/><br/>Address assignments are not included by default as fetching these is an expensive operation. Address assignments can be included by setting includeAddressAssignments to true.","type":"get.base.EntityCollection&lt;get.dto.acropolis.VMNicSpecDTO&gt;","nickname":"getNics","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeAddressAssignments","description":"Include address assignments","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"POST","summary":"Add a NIC to a Virtual Machine.","notes":"Add a NIC to a Virtual Machine. <br/><br/> A VM NIC must be associated with a virtual network. It is not possible to change this association. To connect a VM to a different virtual network, it is necessary to create a new NIC. <br/><br/>If the virtual network is managed (see POST /networks/), the NIC must be assigned an IPv4 address at creation time. If the network has no DHCP pool, the user must specify the IPv4 address manually. <br/><br/>If the VM is running, the NIC is hot-added to the VM. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createNic","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"NIC Config Info","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.VMNicCreateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/nics/{nicid}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a NIC from a Virtual Machine.","notes":"Delete a NIC from a Virtual Machine. <br/><br/>If the VM is running, the NIC is hot-removed from the VM. If the NIC to be removed is specified as the boot device in the boot configuration, the boot device configuration will be cleared as a side effect of removing the NIC. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteNic","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"nicid","description":"NIC identifier","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"vmLogicalTimestamp","description":"Virtual Machine Logical timestamp","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"GET","summary":"Details of a NIC in a Virtual Machine.","notes":"Details of a NIC in a Virtual Machine. <br/><br/>Address assignments are not included by default as fetching these is an expensive operation. Address assignments can be included by setting includeAddressAssignments to true.","type":"get.dto.acropolis.VMNicSpecDTO","nickname":"getNic","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"nicid","description":"Virtual Machine NIC identifier","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeAddressAssignments","description":"Include address assignments","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/power_op/off","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Power off a Virtual Machine.","notes":"Power off a Virtual Machine. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"powerOff","parameters":[{"name":"vmid","description":"Id of the VM","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Logical timestamp of the VM","required":false,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/power_op/on","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Power on a Virtual Machine.","notes":"Power on a Virtual Machine.  <br/><br/>If no host is specified, the scheduler will pick the one with the most available CPU and memory that can support the VM. Note that no such host may be available. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected  if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"powerOn","parameters":[{"name":"vmid","description":"Id of the VM","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Logical timestamp of the VM and host UUID","required":false,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.RequestValueDTO$PowerOnDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/restore","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Restore a Virtual Machine to a snapshotted state.","notes":"Restore a Virtual Machine to a snapshotted state. <br/><br/>If the VM is currently running, it will be powered poweredoff. Since Virtual Machine snapshot do not include the Virtual Machine memory image, the Virtual Machine will remain powered off after the restore is complete. <br/><br/>A Virtual Machine snapshot may no longer be compatible with the current virtual network configuration. In this case, the user may choose not to restore the Virtual Machine's network adpaters using the restoreNetworkConfig keyword argument. <br/><br/>If a UUID is specified for the restored Virtual Machine, then the operation will be idempotent. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"restoreVM","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Restore Virtual Machine ","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.VMRestoreDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/set_power_state/","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Set power state of a Virtual Machine.","notes":"Set power state of a Virtual Machine. <br/><br/>If the Virtual Machine is being powered on and no host is specified, the scheduler will pick the one with the most available CPU and memory that can support the Virtual Machine. Note that no such host may not be available.<br/><br/> If the Virtual Machine is being power cycled, a different host can be specified to start it on. <br/><br/>The logical timestamp can optionally be provided for consistency. If a logical timestamp is specified, then this operation will be rejected if the logical timestamp specified is not the value of the Virtual Machine logical timestamp. The logical timestamp can be obtained from the Virtual Machine object. <br/><br/>This is also an asynchronous operation that results in the creation of a task object. The UUID of this task object is returned as the response of this operation. This task can be monitored by using the /tasks/poll API. <br/><br/>Virtual Machine power state can be set to: ON | OFF | POWERCYCLE | RESET | PAUSE | SUSPEND | RESUME | ACPI_SHUTDOWN | ACPI_REBOOT.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"setPowerState","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Virtual Machine Power State Info","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.VMPowerStateDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/vms/{vmid}/snapshots","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Get a hierarchy of snapshots for a Virtual Machine.","notes":"Get a hierarchy of snapshots for a Virtual Machine. <br/><br/>By default, snapshot information is included. If only UUIDs of snapshots are desired, then includeSnapshots should be set to false.","type":"get.dto.acropolis.SnapshotTreeInfoDTO","nickname":"getVMSnapshots","parameters":[{"name":"vmid","description":"Id of the Virtual Machine","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeSnapshots","description":"Whether to include snapshot info","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]}],"models":{"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO":{"id":"create.dto.acropolis.RequestValueDTO$LogicalTimestampDTO","required":[],"properties":{"logicalTimestamp":{"description":"Logical timestamp that may be provided for consistency.","format":"int64","notes":"Logical timestamp provided for consistency.","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.RequestValueDTO$PowerOnDTO":{"id":"create.dto.acropolis.RequestValueDTO$PowerOnDTO","required":[],"properties":{"hostUuid":{"description":"Explicit host UUID on which to power on the VM. This parameter is only honored for kPowerOn, or kPowerCycle when change host is also requested explicitly.","notes":"Host UUID on which to power on VM","type":"string","typeName":"UUID_TYPE"},"logicalTimestamp":{"description":"Logical timestamp that may be provided for consistency.","format":"int64","notes":"Logical timestamp provided for consistency.","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskAddressDTO":{"id":"create.dto.acropolis.VMDiskAddressDTO","required":[],"properties":{"deviceBus":{"description":"The device bus for the virtual disk device.Possible values are SCSI, IDE and PCI. Along with this the deviceIndex is used to specify a vdisk address. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","enum":["SCSI","IDE","PCI","SATA","SPAPR"],"notes":"The device bus for the virtual disk device.","type":"string","typeName":"DEFAULT"},"deviceIndex":{"description":"Index of the device on the adapter type. If left unspecified, the system will allocate the next available slot on the default bus.","format":"int32","notes":"Index of the device on the adapter type.","type":"integer","typeName":"DEFAULT"},"ndfsFilepath":{"description":"NDFS path to existing virtual disk. This field will not be set when this message is used in a create mode.When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"NDFS path to existing virtual disk.","type":"string","typeName":"DEFAULT"},"vmdiskUuid":{"description":"Virtual disk identifier. This field will not be set when this message is used in a create mode. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"Virtual disk identifier.","type":"string","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"create.dto.acropolis.VMDiskCreateDTO":{"id":"create.dto.acropolis.VMDiskCreateDTO","required":[],"properties":{"disks":{"description":"List of specs for disks to add to the Virtual Machine.","items":{"$ref":"create.dto.acropolis.VMDiskDTO"},"notes":"List of disks to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"},"uuid":{"description":"UUID of the VM.","notes":"UUID of the VM.","type":"string","typeName":"UUID_TYPE"},"vmLogicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the Virtual Machine object.","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskDTO":{"id":"create.dto.acropolis.VMDiskDTO","required":[],"properties":{"diskAddress":{"$ref":"create.dto.acropolis.VMDiskAddressDTO","description":"Disk address represented by device bus type and device index.","notes":"Disk address represented by device bus type and device index.","typeName":"DEFAULT"},"isCdrom":{"description":"Whether this is a CD-ROM drive. The default value is 'false'","notes":"Whether this is a CD-ROM drive.","type":"boolean","typeName":"DEFAULT"},"isEmpty":{"description":"Whether the drive should be empty. This field only applies to CD-ROM drives, otherwise it is ignored. If this field is set to true and the drive is a CD-ROM, then the disk creation field 'vmDiskCreate' should be ignored. The default value is 'false'","notes":"Whether the CD-ROM drive should be empty.","type":"boolean","typeName":"DEFAULT"},"isScsiPassThrough":{"description":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI. The default value is true.","notes":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI.","type":"boolean","typeName":"DEFAULT"},"isThinProvisioned":{"description":"Whether the disk is thin provisioned. This field applies to only ESX managed VMs.","notes":"Whether the disk is thin provisioned.","type":"boolean","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"create.dto.acropolis.VMDiskSpecCloneDTO","description":"Specification for cloning a new disk or snapshot. Only one of 'vmCloneSpec' and 'vmCreateSpec' is required per create/update request.","notes":"Specification for cloning a new disk or snapshot.","typeName":"DEFAULT"},"vmDiskCreate":{"$ref":"create.dto.acropolis.VmDiskSpecCreateDTO","description":"Specification for creating a new disk. Only one of 'vmCreateSpec' and 'vmCloneSpec' is required per create/update request.","notes":"Specification for creating a new disk.","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskSpecCloneDTO":{"id":"create.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VMMigrateDTO":{"id":"create.dto.acropolis.VMMigrateDTO","required":["live"],"properties":{"bandwidthMbps":{"description":"Target maximum bandwidth in MiB/s to use for migration.Zero means that all available bandwidth will be used. The default value is zero.","format":"int32","notes":"Target maximum bandwidth in MiB/s to use for migration.","type":"integer","typeName":"DEFAULT"},"hostUuid":{"description":"The version 4 UUID of the host to migrate the Virtual Machine to. If no host is specified, then the scheduler will pick theone with the most available CPU and memory that can support the VM.","notes":"The version 4 UUID of the host to migrate the Virtual Machine to.","type":"string","typeName":"UUID_TYPE"},"live":{"description":"Whether the migration should live ('true') or suspended ('false'). The default value is 'true'","notes":"Whether the migration should live ('true') or suspended ('false').","type":"boolean","typeName":"DEFAULT"},"vmLogicalTimeStamp":{"format":"int64","type":"integer"},"vmid":{"description":"UUID of the VM.","notes":"UUID of the VM.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VMNicCreateDTO":{"id":"create.dto.acropolis.VMNicCreateDTO","required":["specList"],"properties":{"specList":{"description":"List of specification for NICS to add to the Virtual Machine.","items":{"$ref":"create.dto.acropolis.VMNicSpecDTO"},"notes":"List of specification for NICS to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"},"uuid":{"description":"UUID of the VM to create NIC on.","notes":"UUID of the VM to create NIC on.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VMNicSpecDTO":{"id":"create.dto.acropolis.VMNicSpecDTO","required":["networkUuid"],"properties":{"adapterType":{"description":"Type of the network adapter for ESX networks.","enum":["E1000","E1000e","PCNet32","Vmxnet","Vmxnet2","Vmxnet3","Unsupported"],"notes":"Type of the network adapter.","type":"string","typeName":"DEFAULT"},"macAddress":{"description":"The MAC address of the NIC","notes":"The MAC address of the NIC","type":"string","typeName":"MAC_ADDRESS"},"model":{"description":"Virtual hardware model.","notes":"Virtual hardware model.","type":"string","typeName":"DEFAULT"},"networkUuid":{"description":"The network to which the NIC is attached","notes":"The network to which the NIC is attached","type":"string","typeName":"UUID_TYPE"},"requestIp":{"description":"If request_ip is true\nIf 'requestedIpAddress' is set then request that IP from the network. If it's a managed network then request a dynamic IP from the network. Otherwise don't request an IP. If requestIp is false, then don't request an IP at all, regardless of whether or not the 'requestedIpAddress' is set and whether or the network is managed or not.","notes":"Request IP address.","type":"boolean","typeName":"DEFAULT"},"requestedIpAddress":{"description":"Requested IP address.","notes":"Requested IP address.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.VMPowerStateDTO":{"id":"create.dto.acropolis.VMPowerStateDTO","required":["transition"],"properties":{"hostUuid":{"description":"Explicit version 4 host UUID on which to power on the VM. This parameter is only honored for kPowerOn, or kPowerCycle when change host is also requested explicitly.","notes":"Version 4 Host UUID on which to power on VM","type":"string","typeName":"UUID_TYPE"},"transition":{"description":"The desired power state transition","enum":["ON","OFF","POWERCYCLE","RESET","PAUSE","SUSPEND","RESUME","ACPI_SHUTDOWN","ACPI_REBOOT"],"notes":"The desired power state transition","type":"string","typeName":"DEFAULT"},"vmid":{"description":"Uuid of the VM.","notes":"Uuid of the VM.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VMRestoreDTO":{"id":"create.dto.acropolis.VMRestoreDTO","required":["snapshotUuid"],"properties":{"restoreNetworkConfiguration":{"description":"Whether to reset the VM's current networking configuration. If this flag is set, the VM's current network adapters will be replaced with the network adapters specified in the snapshot. Otherwise, the VM's current networking adapters will be retained, and the network adapters specified in the snapshot will be ignored. This is set to 'true' by default.","notes":"Whether to reset the VM's current networking configuration.","type":"boolean","typeName":"DEFAULT"},"snapshotUuid":{"description":"The version 4 UUID of the snapshot from which to restore","notes":"The version 4 UUID of the snapshot from which to restore","type":"string","typeName":"UUID_TYPE"},"uuid":{"description":"UUID of the VM.","notes":"UUID of the VM.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VmDiskSpecCreateDTO":{"id":"create.dto.acropolis.VmDiskSpecCreateDTO","required":[],"properties":{"containerId":{"description":"Id of container to create disk in. If this is specified, then Container Name and UUID should not be specified.","format":"int64","notes":"Id of container to create disk in.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of container to create disk in. If this is specified, then Container ID and UUID should not be specified.","notes":"Name of container to create disk in.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of container to create disk in. If this is specified, then Container Name and ID should not be specified.","notes":"UUID of container to create disk in.","type":"string","typeName":"DEFAULT"},"size":{"description":"Size of the Virtual Machine disk to be created in bytes.","format":"int64","notes":"Size of the Virtual Machine disk to be created in bytes.","type":"integer","typeName":"DEFAULT"},"sizeMb":{"description":"Size of the Virtual Machine disk to be created in MiB.","format":"int64","notes":"Size of the Virtual Machine disk to be created in MiB.","type":"integer","typeName":"DEFAULT"}}},"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"get.base.EntityCollection&lt;get.dto.acropolis.VMDiskConfigDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.VMDiskConfigDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.VMDiskConfigDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.EntityCollection&lt;get.dto.acropolis.VMInfoDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.VMInfoDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.VMInfoDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.EntityCollection&lt;get.dto.acropolis.VMNicSpecDTO&gt;":{"id":"get.base.EntityCollection&lt;get.dto.acropolis.VMNicSpecDTO&gt;","required":[],"properties":{"entities":{"items":{"$ref":"get.dto.acropolis.VMNicSpecDTO"},"type":"array"},"errorInfo":{"$ref":"get.base.ErrorInfo"},"metadata":{"$ref":"get.base.Metadata"}}},"get.base.ErrorInfo":{"id":"get.base.ErrorInfo","required":[],"properties":{"count":{"format":"int64","type":"integer"},"entityList":{"items":{"type":"string"},"type":"array"},"message":{"type":"string"}}},"get.base.Metadata":{"id":"get.base.Metadata","required":[],"properties":{"count":{"format":"int32","type":"integer"},"endIndex":{"format":"int32","type":"integer"},"filterCriteria":{"type":"string"},"grandTotalEntities":{"format":"int32","type":"integer"},"nextCursor":{"type":"string"},"page":{"format":"int32","type":"integer"},"previousCursor":{"type":"string"},"searchString":{"type":"string"},"sortCriteria":{"type":"string"},"startIndex":{"format":"int32","type":"integer"},"totalEntities":{"format":"int32","type":"integer"}}},"get.dto.acropolis.BootConfigDTO":{"id":"get.dto.acropolis.BootConfigDTO","required":[],"properties":{"bootDeviceOrder":{"description":"The boot device order. In case boot device is not specified or the specified boot device fails, VM will attempt to boot from connected devices in this device type order.","items":{"enum":["CDROM","DISK","NIC"],"type":"string"},"notes":"Boot device order","type":"array","typeName":"DEFAULT"},"bootDeviceType":{"description":"The device from which to boot. This must refer to a valid device configured on the VM. When a boot device is removed from the VM, this field is cleared as a side effect. If no boot device is configured, the VM will have the following boot preference: hard disk, CD-ROM, NIC.","enum":["CDROM","DISK","NIC"],"notes":"Device from which to boot","type":"string","typeName":"DEFAULT"},"diskAddress":{"$ref":"get.dto.acropolis.VMDiskAddressDTO","description":"Disk address selected as boot device. At most one of this or macAddr field should be set.","notes":"Disk address selected as boot device","typeName":"DEFAULT"},"macAddr":{"description":"Mac address of the NIC selected as boot device. At most one of this or diskAddress field should be set.","notes":"Mac address of the NIC selected as boot device","type":"string","typeName":"MAC_ADDRESS"}}},"get.dto.acropolis.FileToInjectDTO":{"id":"get.dto.acropolis.FileToInjectDTO","required":[],"properties":{"destinationPath":{"description":"Destination path in the VM at which the file specified by source_path should be copied to.","notes":"Destination path in the VM at which the file specified by sourcePath should be copied to.","type":"string","typeName":"DEFAULT"},"sourcePath":{"description":"ADSF path of the source file to inject in the VM. Must be of form: adsf:///<ctr>/...","notes":"ADSF path of the source file to inject in the VM.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.SnapshotInfoDTO":{"id":"get.dto.acropolis.SnapshotInfoDTO","required":[],"properties":{"createdTime":{"description":"The epoch time in microseconds when this snapshot was created.","format":"int64","notes":"The epoch time in microseconds when this snapshot was created.","type":"integer","typeName":"DEFAULT"},"deleted":{"description":"Indicates whether the snapshot has been deleted and waiting to be garbage collected. If this is marked as true, no operations can be performed on this snapshot.","notes":"Indicates if the snapshot has been deleted.","type":"boolean","typeName":"UUID_TYPE"},"groupUuid":{"description":"UUID of the consistency group for this snapshot","notes":"UUID of the consistency group for this snapshot","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the snapshot object","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"},"snapshotName":{"description":"The snapshot name.","notes":"The snapshot name.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence.","notes":"A version 4 UUID that the client may specify for idempotence.","type":"string","typeName":"UUID_TYPE"},"vmCreateSpecification":{"$ref":"get.dto.acropolis.VMCreateDTO","description":"A specification for creating VMs from this snapshot.","notes":"A specification for creating VMs from this snapshot.","typeName":"DEFAULT"},"vmUuid":{"description":"UUID of the VM","notes":"UUID of the VM","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.SnapshotLinkDTO":{"id":"get.dto.acropolis.SnapshotLinkDTO","required":[],"properties":{"parentSnapshotUuid":{"description":"UUID of the parent Snapshot","notes":"UUID of the parent Snapshot","type":"string","typeName":"UUID_TYPE"},"snapshotInfo":{"$ref":"get.dto.acropolis.SnapshotInfoDTO","description":"Snapshot information.","notes":"Snapshot information.","typeName":"DEFAULT"},"snapshotUuid":{"description":"UUID of the Snapshot","notes":"UUID of the Snapshot","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.SnapshotTreeInfoDTO":{"id":"get.dto.acropolis.SnapshotTreeInfoDTO","required":[],"properties":{"linkList":{"items":{"$ref":"get.dto.acropolis.SnapshotLinkDTO"},"type":"array"},"logicalTimestamp":{"description":"Logical timestamp.","format":"int64","notes":"Logical timestamp.","type":"integer","typeName":"DEFAULT"},"parentSnapshotUuid":{"description":"UUID of the parent snapshot","notes":"UUID of the parent snapshot","type":"string","typeName":"UUID_TYPE"},"vmUuid":{"description":"UUID of the VM","notes":"UUID of the VM","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMConfigDTO":{"id":"get.dto.acropolis.VMConfigDTO","required":[],"properties":{"boot":{"$ref":"get.dto.acropolis.BootConfigDTO","description":"Boot configuration for the Virtual Machine. Any updates to the boot configuration will be applied during the next Virtual Machine power cycle but not reset.","notes":"Boot configuration for the Virtual Machine.","typeName":"DEFAULT"},"description":{"description":"Description for the Virtual Machine.","notes":"Description for the Virtual Machine.","type":"string","typeName":"DEFAULT"},"haPriority":{"description":"Priority for restarting in case of HA event.","format":"int64","notes":"Priority for restarting in case of HA event. Negative value indicates do not restart.","type":"integer","typeName":"DEFAULT"},"memoryMb":{"description":"RAM in megabytes assigned to the Virtual Machine.","format":"int64","notes":"RAM in megabytes assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The Virtual Machine human readable name.","notes":"The Virtual Machine human readable name.","type":"string","typeName":"DEFAULT"},"numCoresPerVcpu":{"description":"Number of cores assigned to each VCPUs.","format":"int64","notes":"Number of cores assigned to each VCPUs.","type":"integer","typeName":"DEFAULT"},"numVcpus":{"description":"Number of VCPUs assigned to the Virtual Machine.","format":"int64","notes":"Number of VCPUs assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"vmDisks":{"description":"List of disks to be added to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMDiskConfigDTO"},"notes":"List of disks to be added to the Virtual Machine.","type":"array","typeName":"DEFAULT"},"vmNics":{"description":"List of nics to be added to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMNicSpecDTO"},"notes":"List of nics to be added to the Virtual Machine.","type":"array","typeName":"DEFAULT"}}},"get.dto.acropolis.VMCreateDTO":{"id":"get.dto.acropolis.VMCreateDTO","required":[],"properties":{"bootConfig":{"$ref":"get.dto.acropolis.BootConfigDTO","description":"Boot configuration for the Virtual Machine. Any updates to the boot configuration will be applied during the next Virtual Machine power cycle but not reset.","notes":"Boot configuration for the Virtual Machine.","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of the container on which the customization config iso files should be created. Must be provided when cluster has more than one container.","notes":"UUID of the container on which the customization config iso files should be created","type":"string","typeName":"UUID_TYPE"},"description":{"description":"Description for the Virtual Machine.","notes":"Description for the Virtual Machine.","type":"string","typeName":"DEFAULT"},"haPriority":{"description":"Priority for restarting in case of HA event.","format":"int64","notes":"Priority for restarting in case of HA event. Negative value indicates do not restart.","type":"integer","typeName":"DEFAULT"},"hostId":{"description":"UUID of the host where the Virtual Machine needs to be placed. Either this or hypervisorType needs to be specified.","notes":"UUID of the host where the Virtual Machine needs to be placed.","type":"string","typeName":"UUID_TYPE"},"hypervisorType":{"description":"The hypervisor type for the Virtual Machine placement.Possible values are VMware, Hyperv and Acropolis. Either this or hostId needs to be specified.","enum":["ACROPOLIS","NULL","AHV","HYPERV","VMWARE","XEN","ESX","KVM"],"notes":"The hypervisor type for the Virtual Machine placement.","type":"string","typeName":"DEFAULT"},"memoryMb":{"description":"RAM, in megabytes assigned to the Virtual Machine.","format":"int64","notes":"RAM, in megabytes assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"memoryReservationMb":{"description":"RAM, in megabytes reserved for the Virtual Machine.","format":"int64","notes":"RAM, in megabytes reserved for the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The Virtual Machine human readable name.","notes":"The Virtual Machine human readable name.","type":"string","typeName":"DEFAULT"},"numCoresPerVcpu":{"description":"Number of cores assigned to each VCPUs.","format":"int64","notes":"Number of cores assigned to each VCPUs.","type":"integer","typeName":"DEFAULT"},"numVcpus":{"description":"Number of VCPUs assigned to the Virtual Machine.","format":"int64","notes":"Number of VCPUs assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"timezone":{"description":"The timezone for the VM's hardware clock. Default is UTC.","notes":"The timezone for the VM's hardware clock.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID that the client may specify for idempotence","notes":"A version 4 UUID that the client may specify for idempotence","type":"string","typeName":"UUID_TYPE"},"vcpuReservationHz":{"description":"CPU, in Hertz reserved for the Virtual Machine.","format":"int64","notes":"CPU, in Hertz reserved for the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"vmCustomizationConfig":{"$ref":"get.dto.acropolis.VMCustomizationConfigDTO","description":"Vm customization configuration. At boot time, this config will be replayed by VM customization tool(cloudinit/sysprep) installed in the VM to bring VM to the state defined by this config.","notes":"Vm customization configuration.","typeName":"DEFAULT"},"vmDisks":{"description":"List of disk specification to add to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMDiskDTO"},"notes":"List of disk specification to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"},"vmGpus":{"description":"List of GPUs requested for the Virtual Machine.","items":{"$ref":"get.dto.uhura.GPUConfigDTO"},"notes":"List of GPUs requested for the Virtual Machine.","type":"array","typeName":"DEFAULT"},"vmNics":{"description":"List of NIC specification to add to the Virtual Machine.","items":{"$ref":"get.dto.acropolis.VMNicSpecDTO"},"notes":"List of NIC specification to add to the Virtual Machine.","type":"array","typeName":"DEFAULT"}}},"get.dto.acropolis.VMCustomizationConfigDTO":{"id":"get.dto.acropolis.VMCustomizationConfigDTO","required":[],"properties":{"datasourceType":{"description":"The type of datasource for configuring the Linux Virtual Machine in case cloudinit config is provided. ISO based datasource supported by Uhura is ConfigDriveV2.","enum":["CONFIG_DRIVE_V2"],"notes":"The type of datasource for configuring the Linux Virtual Machine in case cloudinit config is provided.","type":"string","typeName":"DEFAULT"},"filesToInjectList":{"description":"List of details about files to inject in the VM.","items":{"$ref":"get.dto.acropolis.FileToInjectDTO"},"notes":"List of details about files to inject in the VM.","type":"array","typeName":"DEFAULT"},"freshInstall":{"description":"Indicates whether the VM to be customized is meant to be freshly installed via Windows Setup from a Windows OS DVD or whether the VM will be configured from a 'Sysprepped' image in which case the setup was already complete.","notes":"Indicates whether the VM to be customized is meant to be freshly installed or not.","type":"boolean","typeName":"DEFAULT"},"userdata":{"description":"Userdata in string format. Either Cloudinit format for customizing Linux VM or Sysprep format for customizing Windows VM. For cloudinit the userdata is usually a yaml file or shell script. For sysprep the userdata is usually a Xml representation of an unattend file in string format.Either this or userdataPath must be provided","notes":"Userdata in string format.","type":"string","typeName":"TEXT"},"userdataPath":{"description":"Userdata source path. Must begin with adsf:///<ctr>.For cloudinit usually a yaml file or shell script is provided. For sysprep usually an unattend file or answer file is provided. Either this or userdata must be provided","notes":"Userdata source path.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.VMDiskAddressDTO":{"id":"get.dto.acropolis.VMDiskAddressDTO","required":[],"properties":{"deviceBus":{"description":"The device bus for the virtual disk device.Possible values are SCSI, IDE and PCI. Along with this the deviceIndex is used to specify a vdisk address. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","enum":["SCSI","IDE","PCI","SATA","SPAPR"],"notes":"The device bus for the virtual disk device.","type":"string","typeName":"DEFAULT"},"deviceIndex":{"description":"Index of the device on the adapter type. If left unspecified, the system will allocate the next available slot on the default bus.","format":"int32","notes":"Index of the device on the adapter type.","type":"integer","typeName":"DEFAULT"},"diskLabel":{"description":"Information about attached disk. Disk label (for example, scsi0:0) where the virtual disk was attached. This indicates the location of the virtual disk within the VM.","notes":"Information about attached disk.","type":"string","typeName":"DEFAULT"},"isCdrom":{"description":"Whether this is a CD-ROM drive.","notes":"Whether this is a CD-ROM drive.","type":"boolean","typeName":"DEFAULT"},"ndfsFilepath":{"description":"NDFS path to existing virtual disk. This field will not be set when this message is used in a create mode.When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"NDFS path to existing virtual disk.","type":"string","typeName":"DEFAULT"},"vmdiskUuid":{"description":"Virtual disk identifier. This field will not be set when this message is used in a create mode. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"Virtual disk identifier.","type":"string","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"get.dto.acropolis.VMDiskConfigDTO":{"id":"get.dto.acropolis.VMDiskConfigDTO","required":[],"properties":{"addr":{"$ref":"get.dto.acropolis.VMDiskAddressDTO"},"containerId":{"format":"int64","type":"integer"},"containerUuid":{"type":"string"},"flashModeEnabled":{"description":"Flash mode status for the virtual disk.","notes":"Flash mode status for the virtual disk.","type":"boolean","typeName":"DEFAULT"},"id":{"description":"Unique identifier for the disk. To be used for identifying the disk for get, update operations","notes":"Unique identifier for the disk","type":"string","typeName":"ACRO_DISK_ID"},"isCdrom":{"type":"boolean"},"isEmpty":{"type":"boolean"},"isSCSIPassthrough":{"type":"boolean"},"sourceImage":{"type":"string"},"sourceVmDiskUuid":{"description":"The identifier of source from which the disk was cloned","notes":"The source from which the disk was cloned","type":"string","typeName":"UUID_TYPE"},"vmDiskSize":{"format":"int64","type":"integer"},"vmDiskUuid":{"description":"The VM disk identifier","notes":"The VM disk identifier","type":"string","typeName":"UUID_TYPE"},"volumeGroupUuid":{"description":"The volume group identifier","notes":"The volume group identifier","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMDiskDTO":{"id":"get.dto.acropolis.VMDiskDTO","required":[],"properties":{"diskAddress":{"$ref":"get.dto.acropolis.VMDiskAddressDTO","description":"Disk address represented by device bus type and device index.","notes":"Disk address represented by device bus type and device index.","typeName":"DEFAULT"},"isCdrom":{"description":"Whether this is a CD-ROM drive. The default value is 'false'","notes":"Whether this is a CD-ROM drive.","type":"boolean","typeName":"DEFAULT"},"isEmpty":{"description":"Whether the drive should be empty. This field only applies to CD-ROM drives, otherwise it is ignored. If this field is set to true and the drive is a CD-ROM, then the disk creation field 'vmDiskCreate' should be ignored. The default value is 'false'","notes":"Whether the CD-ROM drive should be empty.","type":"boolean","typeName":"DEFAULT"},"isScsiPassThrough":{"description":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI. The default value is true.","notes":"Whether the SCSI disk should be attached in passthrough mode to pass all SCSI commands directly to Stargate via iSCSI.","type":"boolean","typeName":"DEFAULT"},"isThinProvisioned":{"description":"Whether the disk is thin provisioned. This field applies to only ESX managed VMs.","notes":"Whether the disk is thin provisioned.","type":"boolean","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"get.dto.acropolis.VMDiskSpecCloneDTO","description":"Specification for cloning a new disk or snapshot. Only one of 'vmCloneSpec' and 'vmCreateSpec' is required per create/update request.","notes":"Specification for cloning a new disk or snapshot.","typeName":"DEFAULT"},"vmDiskCreate":{"$ref":"get.dto.acropolis.VmDiskSpecCreateDTO","description":"Specification for creating a new disk. Only one of 'vmCreateSpec' and 'vmCloneSpec' is required per create/update request.","notes":"Specification for creating a new disk.","typeName":"DEFAULT"}}},"get.dto.acropolis.VMDiskSpecCloneDTO":{"id":"get.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMInfoDTO":{"id":"get.dto.acropolis.VMInfoDTO","required":[],"properties":{"config":{"$ref":"get.dto.acropolis.VMConfigDTO","description":"The Virtual Machine configuration.","notes":"The Virtual Machine configuration.","typeName":"DEFAULT"},"hostUuid":{"description":"A version 4 UUID identifying the host on which the Virtual Machine is currently running. If Virtual Machine is powered off, then this field is empty.","notes":"A version 4 UUID identifying the host on which the Virtual Machine is currently running","type":"string","typeName":"UUID_TYPE"},"logicalTimestamp":{"description":"The Virtual Machine logical timestamp. This can be usedas input to other Virtual Machine related APIs for consistency.","format":"int64","notes":"The Virtual Machine logical timestamp.","type":"integer","typeName":"DEFAULT"},"state":{"description":"Current power state of the Virtual Machine.","enum":["UNKNOWN","OFF","POWERING_ON","ON","SHUTTING_DOWN","POWERING_OFF","PAUSING","PAUSED","SUSPENDING","SUSPENDED","RESUMING","RESETTING","MIGRATING"],"notes":"Current power state of the Virtual Machine.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"A version 4 UUID identifying the VM.","notes":"A version 4 UUID identifying the VM.","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.VMNicSpecDTO":{"id":"get.dto.acropolis.VMNicSpecDTO","required":[],"properties":{"adapterType":{"description":"Type of the network adapter for ESX networks.","enum":["E1000","E1000e","PCNet32","Vmxnet","Vmxnet2","Vmxnet3","Unsupported"],"notes":"Type of the network adapter.","type":"string","typeName":"DEFAULT"},"ipAddress":{"description":"IP address for the NIC. Includes both Acropolis assigned IP address as well as learned IP address from thirdparty networks.","notes":"IP address for the NIC.","type":"string","typeName":"DEFAULT"},"macAddress":{"description":"The MAC address of the NIC","notes":"The MAC address of the NIC","type":"string","typeName":"MAC_ADDRESS"},"model":{"description":"Virtual hardware model.","notes":"Virtual hardware model.","type":"string","typeName":"DEFAULT"},"networkUuid":{"description":"The network to which the NIC is attached","notes":"The network to which the NIC is attached","type":"string","typeName":"UUID_TYPE"},"portId":{"description":"The port id for ESX networks.","notes":"Port Id.","type":"string","typeName":"DEFAULT"},"requestIp":{"description":"If request_ip is true\nIf 'requestedIpAddress' is set then request that IP from the network. If it's a managed network then request a dynamic IP from the network. Otherwise don't request an IP. If requestIp is false, then don't request an IP at all, regardless of whether or not the 'requestedIpAddress' is set and whether or the network is managed or not.","notes":"Request IP address.","type":"boolean","typeName":"DEFAULT"},"requestedIpAddress":{"description":"Requested IP address.","notes":"Requested IP address.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.VmDiskSpecCreateDTO":{"id":"get.dto.acropolis.VmDiskSpecCreateDTO","required":[],"properties":{"containerId":{"description":"Id of container to create disk in. If this is specified, then Container Name and UUID should not be specified.","format":"int64","notes":"Id of container to create disk in.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of container to create disk in. If this is specified, then Container ID and UUID should not be specified.","notes":"Name of container to create disk in.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of container to create disk in. If this is specified, then Container Name and ID should not be specified.","notes":"UUID of container to create disk in.","type":"string","typeName":"DEFAULT"},"size":{"description":"Size of the Virtual Machine disk to be created in bytes.","format":"int64","notes":"Size of the Virtual Machine disk to be created in bytes.","type":"integer","typeName":"DEFAULT"},"sizeMb":{"description":"Size of the Virtual Machine disk to be created in MiB.","format":"int64","notes":"Size of the Virtual Machine disk to be created in MiB.","type":"integer","typeName":"DEFAULT"}}},"get.dto.uhura.GPUConfigDTO":{"id":"get.dto.uhura.GPUConfigDTO","required":[],"properties":{"assignable":{"description":"Whether the GPU can be assigned to a Virtual Machine.","notes":"Whether the GPU can be assigned to a Virtual Machine.","type":"boolean","typeName":"DEFAULT"},"deviceId":{"description":"Device ID of the GPU resource.","format":"int32","notes":"Device ID of the GPU resource.","type":"integer","typeName":"DEFAULT"},"deviceName":{"description":"Vendor device name of the GPU resource.","notes":"Vendor device name of the GPU resource.","type":"string","typeName":"DEFAULT"},"fraction":{"description":"Fraction of the physical GPU. Only applicable for a vGPU instance.","format":"int32","notes":"Fraction of the physical GPU. Only applicable for a vGPU instance.","type":"integer","typeName":"DEFAULT"},"frameBufferSizeBytes":{"description":"GPU framebuffer size in bytes.","format":"int64","notes":"GPU framebuffer size.","type":"integer","typeName":"DEFAULT"},"gpuMode":{"description":"Current mode of the physical GPU. Not valid on vGPU resources.","enum":["UNUSED","USED_FOR_PASSTHROUGH","USED_FOR_VIRTUAL"],"notes":"Current mode of the physical GPU.","type":"string","typeName":"DEFAULT"},"gpuProfile":{"description":"Profile of the GPU.","notes":"Profile of the GPU.","type":"string","typeName":"DEFAULT"},"gpuType":{"description":"Type of the GPU resource.","enum":["PASS_THROUGH_GRAPHICS","PASS_THROUGH_COMPUTE","VIRTUAL"],"notes":"Type of the GPU resource.","type":"string","typeName":"DEFAULT"},"gpuVendor":{"description":"Vendor of the GPU resource.","enum":["NVIDIA","INTEL","AMD"],"notes":"Vendor of the GPU resource.","type":"string","typeName":"DEFAULT"},"guestDriverVersion":{"description":"Last determined guest driver version.","notes":"Last determined guest driver version.","type":"string","typeName":"DEFAULT"},"inUse":{"description":"Whether the GPU resource is in use or not.","notes":"Whether the GPU resource is in use or not.","type":"boolean","typeName":"DEFAULT"},"licenses":{"description":"List of license types associated with this GPU.","items":{"type":"string"},"notes":"List of license types.","type":"array","typeName":"DEFAULT"},"maxResolution":{"description":"Maximum resolution per display heads.","notes":"Maximum resolution per display heads.","type":"string","typeName":"DEFAULT"},"numVirtualDisplayHeads":{"description":"Number of supported virtual display heads.","format":"int32","notes":"Number of supported virtual display heads.","type":"integer","typeName":"DEFAULT"},"numaNode":{"description":"The NUMA node where the GPU belongs to.","format":"int32","notes":"The NUMA node where the GPU belongs to.","type":"integer","typeName":"DEFAULT"},"sbdf":{"description":"Unique device information for the GPU resource.","notes":"Unique device information for the GPU resource.","type":"string","typeName":"DEFAULT"},"vmUuids":{"description":"List of UUIDs of the Virtual Machines where the GPU resource is assigned.","items":{"type":"string"},"notes":"List of UUIDs of the Virtual Machines where the GPU resource is assigned.","type":"array","typeName":"DEFAULT"}}},"update.dto.acropolis.BootConfigDTO":{"id":"update.dto.acropolis.BootConfigDTO","required":[],"properties":{"bootDeviceOrder":{"description":"The boot device order. In case boot device is not specified or the specified boot device fails, VM will attempt to boot from connected devices in this device type order.","items":{"enum":["CDROM","DISK","NIC"],"type":"string"},"notes":"Boot device order","type":"array","typeName":"DEFAULT"},"bootDeviceType":{"description":"The device from which to boot. This must refer to a valid device configured on the VM. When a boot device is removed from the VM, this field is cleared as a side effect. If no boot device is configured, the VM will have the following boot preference: hard disk, CD-ROM, NIC.","enum":["CDROM","DISK","NIC"],"notes":"Device from which to boot","type":"string","typeName":"DEFAULT"},"diskAddress":{"$ref":"update.dto.acropolis.VMDiskAddressDTO","description":"Disk address selected as boot device. At most one of this or macAddr field should be set.","notes":"Disk address selected as boot device","typeName":"DEFAULT"},"macAddr":{"description":"Mac address of the NIC selected as boot device. At most one of this or diskAddress field should be set.","notes":"Mac address of the NIC selected as boot device","type":"string","typeName":"MAC_ADDRESS"}}},"update.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"update.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.VMDiskAddressDTO":{"id":"update.dto.acropolis.VMDiskAddressDTO","required":[],"properties":{"deviceBus":{"description":"The device bus for the virtual disk device.Possible values are SCSI, IDE and PCI. Along with this the deviceIndex is used to specify a vdisk address. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","enum":["SCSI","IDE","PCI","SATA","SPAPR"],"notes":"The device bus for the virtual disk device.","type":"string","typeName":"DEFAULT"},"deviceIndex":{"description":"Index of the device on the adapter type. If left unspecified, the system will allocate the next available slot on the default bus.","format":"int32","notes":"Index of the device on the adapter type.","type":"integer","typeName":"DEFAULT"},"ndfsFilepath":{"description":"NDFS path to existing virtual disk. This field will not be set when this message is used in a create mode.When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"NDFS path to existing virtual disk.","type":"string","typeName":"DEFAULT"},"vmdiskUuid":{"description":"Virtual disk identifier. This field will not be set when this message is used in a create mode. When specifying a vmdisk address, then only one of the following combinations of fields must be set - (device_bus, device_index) or vmdisk_uuid or ndfs_filepath.","notes":"Virtual disk identifier.","type":"string","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"update.dto.acropolis.VMDiskSpecCloneDTO":{"id":"update.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"update.dto.acropolis.VMDiskUpdateDTO":{"id":"update.dto.acropolis.VMDiskUpdateDTO","required":[],"properties":{"diskId":{"description":"ID of the Disk.","notes":"ID of the Disk.","type":"string","typeName":"ACRO_DISK_ID"},"diskUuid":{"description":"Uuid of the Disk.","notes":"Uuid of the Disk.","type":"string","typeName":"UUID_TYPE"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume","type":"boolean","typeName":"DEFAULT"},"updateSpec":{"$ref":"update.dto.acropolis.VMDiskUpdateSpecDTO","description":"Disk specification to use for updating Virtual Machine disk.","notes":"Disk specification to use for updating Virtual Machine disk.","typeName":"DEFAULT"},"uuid":{"description":"UUID of the VM.","notes":"UUID of the VM.","type":"string","typeName":"UUID_TYPE"},"vmLogicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the Virtual Machine object","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"}}},"update.dto.acropolis.VMDiskUpdateSpecDTO":{"id":"update.dto.acropolis.VMDiskUpdateSpecDTO","required":[],"properties":{"isEmpty":{"description":"Whether the CD-ROM drive should be empty. This field only applies to CD-ROM drives, otherwise it is ignored. If this field is set to true and the drive is a CD-ROM, then 'vmDiskCreate' and 'vmDiskClone' fields will be ignored.","notes":"Whether the CD-ROM drive should be empty.","type":"boolean","typeName":"DEFAULT"},"vmDiskClone":{"$ref":"update.dto.acropolis.VMDiskSpecCloneDTO","description":"Disk specification to replace existing disk with a cloned disk or snapshot. Only one of 'vmDiskCreate' or 'vmDiskClone' should be specified.","notes":"Disk specification to replace existing disk with a cloned disk or snapshot.","typeName":"DEFAULT"},"vmDiskCreate":{"$ref":"update.dto.acropolis.VmDiskSpecCreateDTO","description":"Disk specification to replace existing disk with a new disk. Only one of 'vmDiskCreate' or 'vmDiskClone' should be specified.","notes":"Disk specification to replace existing disk with a new disk.","typeName":"DEFAULT"}}},"update.dto.acropolis.VMUpdateDTO":{"id":"update.dto.acropolis.VMUpdateDTO","required":[],"properties":{"boot":{"$ref":"update.dto.acropolis.BootConfigDTO","description":"Boot configuration for the Virtual Machine. Any updates to the boot configuration will be applied during the next Virtual Machine power cycle but not reset.","notes":"Boot configuration for the Virtual Machine.","typeName":"DEFAULT"},"description":{"description":"Description for the Virtual Machine.","notes":"Description for the Virtual Machine.","type":"string","typeName":"DEFAULT"},"haPriority":{"description":"Priority for restarting in case of HA event.","format":"int64","notes":"Priority for restarting in case of HA event. Negative value indicates do not restart.","type":"integer","typeName":"DEFAULT"},"memoryMb":{"description":"RAM in megabytes assigned to the Virtual Machine.","format":"int64","notes":"RAM in megabytes assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"name":{"description":"The Virtual Machine human readable name.","notes":"The Virtual Machine human readable name.","type":"string","typeName":"DEFAULT"},"numCoresPerVcpu":{"description":"Number of cores assigned to each VCPUs.","format":"int64","notes":"Number of cores assigned to each VCPUs.","type":"integer","typeName":"DEFAULT"},"numVcpus":{"description":"Number of VCPUs assigned to the Virtual Machine.","format":"int64","notes":"Number of VCPUs assigned to the Virtual Machine.","type":"integer","typeName":"DEFAULT"},"timezone":{"description":"The timezone for the VM's hardware clock. Any updates to the timezone will be applied during the next VM power cycle (but not reset). The default is UTC.","notes":"The timezone for the VM's hardware clock.","type":"string","typeName":"DEFAULT"},"uuid":{"description":"UUID of the VM.","notes":"UUID of the VM.","type":"string","typeName":"UUID_TYPE"},"vmLogicalTimestamp":{"description":"Logical timestamp specified for consistency. This can be obtained from the Virtual Machine object.","format":"int64","notes":"Logical timestamp specified for consistency.","type":"integer","typeName":"DEFAULT"}}},"update.dto.acropolis.VmDiskSpecCreateDTO":{"id":"update.dto.acropolis.VmDiskSpecCreateDTO","required":[],"properties":{"containerId":{"description":"Id of container to create disk in. If this is specified, then Container Name and UUID should not be specified.","format":"int64","notes":"Id of container to create disk in.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of container to create disk in. If this is specified, then Container ID and UUID should not be specified.","notes":"Name of container to create disk in.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of container to create disk in. If this is specified, then Container Name and ID should not be specified.","notes":"UUID of container to create disk in.","type":"string","typeName":"DEFAULT"}}}}}
{"apiVersion":"v0.8","swaggerVersion":"1.2","basePath":"https://any_cvm_ip:9440/api/nutanix/v0.8","resourcePath":"/volume_groups","produces":["application/json"],"consumes":["application/json"],"apis":[{"internal":false,"path":"/volume_groups/","operations":[{"deprecated":"false","internal":false,"method":"GET","summary":"Retrieve Volume Group configuration","notes":"","type":"array","items":{"$ref":"get.dto.acropolis.volumegroups.VolumeGroupConfigDTO"},"nickname":"getVolumeGroups","parameters":[{"name":"includeDiskSize","description":"Whether to include disk sizes, true by default","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"POST","summary":"Create a new Volume Group configuration","notes":"","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createVolumeGroup","parameters":[{"description":"Create a Volume Group","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupCreateDTO"}],"responseMessages":[]}]},{"internal":false,"path":"/volume_groups/{sourceVolumeGroupUuid}/clone","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Clone a new Volume Group","notes":"","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"cloneVolumeGroup","parameters":[{"name":"sourceVolumeGroupUuid","description":"UUID of the source Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Clone a Volume Group","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupCloneDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/volume_groups/{uuid}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Remove an existing Volume Group configuration","notes":"","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"removeVolumeGroup","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"logicalTimestamp","description":"The logical timestamp","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"GET","summary":"Retrieve Volume Group configuration","notes":"","type":"get.dto.acropolis.volumegroups.VolumeGroupConfigDTO","nickname":"getVolumeGroup","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"includeDiskSize","description":"Whether to include disk sizes","required":false,"allowMultiple":false,"paramType":"query","type":"boolean"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Modify an existing Volume Group configuration","notes":"","type":"update.dto.acropolis.volumegroups.VolumeGroupConfigDTO","nickname":"updateVolumeGroup","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Update Volume Group","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.volumegroups.VolumeGroupUpdateDTO"}],"responseMessages":[]}]},{"internal":false,"path":"/volume_groups/{uuid}/attach","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Attach Volume Group to Virtual Machine.","notes":"","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"attachVirtualMachine","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Virtual Machine attach configuration","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/volume_groups/{uuid}/close","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Close Volume Group for iSCSI initiators","notes":"","type":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"closeVolumeGroup","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Volume Group detach configuration","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO"}],"responseMessages":[]}]},{"internal":false,"path":"/volume_groups/{uuid}/detach","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Detach Volume Group to Virtual Machine.","notes":"","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"detachVirtualMachine","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Virtual Machine detach configuration","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/volume_groups/{uuid}/disks","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Create a Volume Disk","notes":"Creates a Volume Disk with specified configuration.","type":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"createVolumeDisk","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Create a Volume Disk","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO"}],"responseMessages":[]},{"deprecated":"false","internal":false,"method":"PUT","summary":"Updates a Volume Disk","notes":"Updates a Volume Disk with specified configuration.","type":"update.dto.acropolis.volumegroups.VolumeDiskConfigDTO","nickname":"updateVolumeDisk","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Update a Volume Disk","required":true,"allowMultiple":false,"paramType":"body","type":"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO"}],"responseMessages":[]}]},{"internal":false,"path":"/volume_groups/{uuid}/disks/{index}","operations":[{"deprecated":"false","internal":false,"method":"DELETE","summary":"Delete a Volume Disk","notes":"Delete a Volume Disk with specified configuration.","type":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","nickname":"deleteVolumeDisk","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"name":"index","description":"Volume Group index of the disk","required":true,"allowMultiple":false,"paramType":"path","type":"integer"},{"name":"logicalTimestamp","description":"The logical timestamp","required":false,"allowMultiple":false,"paramType":"query","type":"integer"}],"responseMessages":[{"code":500,"message":"Any internal exception while performing this operation"}]}]},{"internal":false,"path":"/volume_groups/{uuid}/open","operations":[{"deprecated":"false","internal":false,"method":"POST","summary":"Open Volume Group for iSCSI initiators","notes":"","type":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","nickname":"openVolumeGroup","parameters":[{"name":"uuid","description":"UUID of the Volume Group","required":true,"allowMultiple":false,"paramType":"path","type":"string"},{"description":"Volume Group attach configuration","required":true,"allowMultiple":false,"paramType":"body","type":"create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO"}],"responseMessages":[]}]}],"models":{"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;":{"id":"create.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;","required":[],"properties":{"value":{"type":"boolean"}}},"create.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"create.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.VMDiskSpecCloneDTO":{"id":"create.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.VmDiskSpecCreateDTO":{"id":"create.dto.acropolis.VmDiskSpecCreateDTO","required":[],"properties":{"containerId":{"description":"Id of container to create disk in. If this is specified, then Container Name and UUID should not be specified.","format":"int64","notes":"Id of container to create disk in.","type":"integer","typeName":"DEFAULT"},"containerName":{"description":"Name of container to create disk in. If this is specified, then Container ID and UUID should not be specified.","notes":"Name of container to create disk in.","type":"string","typeName":"DEFAULT"},"containerUuid":{"description":"UUID of container to create disk in. If this is specified, then Container Name and ID should not be specified.","notes":"UUID of container to create disk in.","type":"string","typeName":"DEFAULT"},"size":{"description":"Size of the Virtual Machine disk to be created in bytes.","format":"int64","notes":"Size of the Virtual Machine disk to be created in bytes.","type":"integer","typeName":"DEFAULT"},"sizeMb":{"description":"Size of the Virtual Machine disk to be created in MiB.","format":"int64","notes":"Size of the Virtual Machine disk to be created in MiB.","type":"integer","typeName":"DEFAULT"}}},"create.dto.acropolis.volumegroups.ClientAuthenticationDTO":{"id":"create.dto.acropolis.volumegroups.ClientAuthenticationDTO","required":[],"properties":{"authType":{"description":"Type of the authentication","enum":["CHAP","NONE"],"type":"string","typeName":"DEFAULT"},"password":{"description":"Password of the supported authentication type","type":"string","typeName":"DEFAULT"}}},"create.dto.acropolis.volumegroups.IscsiClientDTO":{"id":"create.dto.acropolis.volumegroups.IscsiClientDTO","required":["clientAddress"],"properties":{"clientAddress":{"description":"Unique identifier for the client, it can be either iqn or ip address","type":"string","typeName":"DEFAULT"},"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"create.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"uuid":{"description":"Uuid of the iscsi client","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO":{"id":"create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO","required":[],"properties":{"cloneSpec":{"$ref":"create.dto.acropolis.VMDiskSpecCloneDTO","description":"VM disk clone configuration","notes":"Either create or clone, not both.","typeName":"DEFAULT"},"createSpec":{"$ref":"create.dto.acropolis.VmDiskSpecCreateDTO","description":"VM disk create configuration","notes":"Either create or clone, not both.","typeName":"DEFAULT"},"index":{"description":"Volume Group index of the disk","format":"int32","type":"integer","typeName":"DEFAULT"},"volumeGroupUuid":{"type":"string"}}},"create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO":{"id":"create.dto.acropolis.volumegroups.VolumeGroupAttachExternalDTO","required":[],"properties":{"iscsiClientIp":{"description":"iSCSI client ip address","type":"string","typeName":"DEFAULT"},"iscsiInitiator":{"description":"iSCSI qualified name","type":"string","typeName":"DEFAULT"},"logicalTimestamp":{"description":"The logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"operation":{"enum":["ATTACH","DETACH"],"type":"string"},"uuid":{"type":"string"}}},"create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO":{"id":"create.dto.acropolis.volumegroups.VolumeGroupAttachVmDTO","required":["vmUuid"],"properties":{"index":{"description":"Volume Group index of the disk","format":"int32","type":"integer","typeName":"DEFAULT"},"logicalTimestamp":{"description":"The volume group logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"operation":{"enum":["ATTACH","DETACH"],"type":"string"},"uuid":{"type":"string"},"vmLogicalTimestamp":{"description":"The virtual machine logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"vmUuid":{"description":"Virtual machine UUID","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.volumegroups.VolumeGroupCloneDTO":{"id":"create.dto.acropolis.volumegroups.VolumeGroupCloneDTO","required":[],"properties":{"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"create.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"iscsiTarget":{"description":"iSCSI target name for the clone (optional)","type":"string","typeName":"ISCSI_TARGET"},"iscsiTargetPrefix":{"description":"iSCSI target prefix for the clone (optional)","type":"string","typeName":"ACRO_NAME"},"logicalTimestamp":{"description":"The logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"name":{"description":"Name of the clone (optional)","type":"string","typeName":"ACRO_NAME"},"uuid":{"description":"UUID of the cloned Volume Group (optional)","type":"string","typeName":"UUID_TYPE"}}},"create.dto.acropolis.volumegroups.VolumeGroupCreateDTO":{"id":"create.dto.acropolis.volumegroups.VolumeGroupCreateDTO","required":["name"],"properties":{"attachedClients":{"description":"List of the attached clients","items":{"$ref":"create.dto.acropolis.volumegroups.IscsiClientDTO"},"type":"array","typeName":"DEFAULT"},"description":{"description":"Volume Group description","type":"string","typeName":"DEFAULT"},"diskList":{"description":"Volume Group disk specification","items":{"$ref":"create.dto.acropolis.volumegroups.VolumeDiskCreateSpecDTO"},"type":"array","typeName":"DEFAULT"},"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"create.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume group","type":"boolean","typeName":"DEFAULT"},"isShared":{"description":"True or false indicating whether volume is shared across multiple iSCSI initiators","type":"boolean","typeName":"DEFAULT"},"iscsiInitiatorNameList":{"description":"iSCSI qualified name list","items":{"type":"string"},"type":"array","typeName":"DEFAULT"},"iscsiTarget":{"description":"iSCSI target name","type":"string","typeName":"ISCSI_TARGET"},"iscsiTargetPrefix":{"description":"iSCSI target prefix name","type":"string","typeName":"ACRO_NAME"},"name":{"description":"Volume Group name","type":"string","typeName":"ACRO_NAME"},"uuid":{"description":"Volume Group UUID (optional)","type":"string","typeName":"UUID_TYPE"}}},"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO":{"id":"delete.dto.acropolis.ReturnValueDTO$TaskIdDTO","required":[],"properties":{"taskUuid":{"description":"UUID of the task.","notes":"UUID of the task.","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.volumegroups.ClientAuthenticationDTO":{"id":"get.dto.acropolis.volumegroups.ClientAuthenticationDTO","required":[],"properties":{"authType":{"description":"Type of the authentication","enum":["CHAP","NONE"],"type":"string","typeName":"DEFAULT"},"password":{"description":"Password of the supported authentication type","type":"string","typeName":"DEFAULT"}}},"get.dto.acropolis.volumegroups.VolumeAttachmentDTO":{"id":"get.dto.acropolis.volumegroups.VolumeAttachmentDTO","required":[],"properties":{"clientUuid":{"description":"UUID of the iscsi client","type":"string","typeName":"UUID_TYPE"},"initiatorIpAddress":{"description":"Ip of the iscsi initiator","type":"string","typeName":"DEFAULT"},"iscsiInitiatorName":{"description":"Name of the iSCSI initiator","type":"string","typeName":"DEFAULT"},"vmUuid":{"description":"UUID of VM to which this volume is attached","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.volumegroups.VolumeDiskConfigDTO":{"id":"get.dto.acropolis.volumegroups.VolumeDiskConfigDTO","required":[],"properties":{"flashModeEnabled":{"description":"Flash mode enabled or not for the disk","type":"boolean","typeName":"DEFAULT"},"index":{"description":"Volume Group index of the disk","format":"int32","type":"integer","typeName":"DEFAULT"},"vmdiskSizeMb":{"description":"Disk size in MiB","format":"int64","type":"integer","typeName":"DEFAULT"},"vmdiskUuid":{"description":"UUID of the volume disk","type":"string","typeName":"UUID_TYPE"}}},"get.dto.acropolis.volumegroups.VolumeGroupConfigDTO":{"id":"get.dto.acropolis.volumegroups.VolumeGroupConfigDTO","required":[],"properties":{"attachmentList":{"description":"Currently attached iSCSI initiators","items":{"$ref":"get.dto.acropolis.volumegroups.VolumeAttachmentDTO"},"type":"array","typeName":"DEFAULT"},"description":{"description":"Volume group description","type":"string","typeName":"DEFAULT"},"diskList":{"description":"Ordered list of volume diskSpec","items":{"$ref":"get.dto.acropolis.volumegroups.VolumeDiskConfigDTO"},"type":"array","typeName":"DEFAULT"},"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"get.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume group","type":"boolean","typeName":"DEFAULT"},"isDeleted":{"description":"Whether the volume has been deleted","type":"boolean","typeName":"DEFAULT"},"isShared":{"description":"Whether or not this volume can be shared","type":"boolean","typeName":"DEFAULT"},"iscsiTarget":{"description":"iSCSI target name for attachment","type":"string","typeName":"DEFAULT"},"lastModifiedTimestampUsecs":{"description":"Volume group last modified timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"logicalTimestamp":{"description":"Volume group logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"name":{"description":"Volume group name","type":"string","typeName":"DEFAULT"},"uuid":{"description":"Volume group UUID","type":"string","typeName":"UUID_TYPE"}}},"update.dto.acropolis.VMDiskSpecCloneDTO":{"id":"update.dto.acropolis.VMDiskSpecCloneDTO","required":[],"properties":{"containerUuid":{"description":"The Uuid of the container in which the specified image or vmdisk is stored. If the source is a vmdisk, this field is recommended, but optional. If the source is a snapshot vmdisk, this field is required. If the source is an absolute image path, this field is prohibited. If the source is a relative image path, this field is required.","notes":"The Uuid of the container in which the specified image or vmdisk is stored.","type":"string","typeName":"UUID_TYPE"},"imagePath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"minimumSize":{"description":"The minimum size of the resulting clone in bytes. This should only be specified if 'vmDiskUUID' is specified.","format":"int64","notes":"The minimum size of the resulting clone in bytes.","type":"integer","typeName":"DEFAULT"},"minimumSizeMb":{"description":"The minimum size of the resulting clone in MiB. This should only be specified if 'vmdiskUuid' is specified.","format":"int64","notes":"The minimum size of the resulting clone in MiB.","type":"integer","typeName":"DEFAULT"},"ndfs_filepath":{"description":"Path of the image to clone from. If this is specified, then 'vmDiskUUID' should not be specified.","notes":"Path of the image to clone from.","type":"string","typeName":"DEFAULT"},"snapshotGroupId":{"description":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","notes":"UUID of the snapshot consistency group from which to clone a snapshot vmdisk.","type":"string","typeName":"UUID_TYPE"},"vmDiskUuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"},"vmdisk_uuid":{"description":"UUID of the Virtual Machine disk to clone from. If this is specified, then 'imagePath' should not be specified.","notes":"UUID of the Virtual Machine disk to clone from.","type":"string","typeName":"UUID_TYPE"}}},"update.dto.acropolis.volumegroups.ClientAuthenticationDTO":{"id":"update.dto.acropolis.volumegroups.ClientAuthenticationDTO","required":[],"properties":{"authType":{"description":"Type of the authentication","enum":["CHAP","NONE"],"type":"string","typeName":"DEFAULT"},"password":{"description":"Password of the supported authentication type","type":"string","typeName":"DEFAULT"}}},"update.dto.acropolis.volumegroups.IscsiClientDTO":{"id":"update.dto.acropolis.volumegroups.IscsiClientDTO","required":["clientAddress"],"properties":{"clientAddress":{"description":"Unique identifier for the client, it can be either iqn or ip address","type":"string","typeName":"DEFAULT"},"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"update.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"uuid":{"description":"Uuid of the iscsi client","type":"string","typeName":"UUID_TYPE"}}},"update.dto.acropolis.volumegroups.VolumeDiskConfigDTO":{"id":"update.dto.acropolis.volumegroups.VolumeDiskConfigDTO","required":[],"properties":{"flashModeEnabled":{"description":"Flash mode enabled or not for the disk","type":"boolean","typeName":"DEFAULT"}}},"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO":{"id":"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO","required":["index"],"properties":{"cloneSpec":{"$ref":"update.dto.acropolis.VMDiskSpecCloneDTO"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume","type":"boolean","typeName":"DEFAULT"},"index":{"description":"Volume Group index of the disk","format":"int32","type":"integer","typeName":"DEFAULT"},"upgradeSpec":{"$ref":"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO$UpgradeSpec"},"volumeGroupUuid":{"type":"string"}}},"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO$UpgradeSpec":{"id":"update.dto.acropolis.volumegroups.VolumeDiskUpdateDTO$UpgradeSpec","required":[],"properties":{"containerUuid":{"description":"Re-creates the empty disk on specified container. Is mutually exclusive with the preserveData flag.","type":"string","typeName":"UUID_TYPE"},"preserveData":{"description":"When set to true, re-size disk in place. Else, create a new disk by cloning from other disks or providing creation spec. True by default.","type":"boolean","typeName":"DEFAULT"},"sizeMb":{"description":"Disk size in MiB","format":"int64","type":"integer","typeName":"DEFAULT"}}},"update.dto.acropolis.volumegroups.VolumeGroupConfigDTO":{"id":"update.dto.acropolis.volumegroups.VolumeGroupConfigDTO","required":[],"properties":{"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"update.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume group","type":"boolean","typeName":"DEFAULT"}}},"update.dto.acropolis.volumegroups.VolumeGroupUpdateDTO":{"id":"update.dto.acropolis.volumegroups.VolumeGroupUpdateDTO","required":[],"properties":{"attachedClients":{"description":"List of the attached clients","items":{"$ref":"update.dto.acropolis.volumegroups.IscsiClientDTO"},"type":"array","typeName":"DEFAULT"},"description":{"description":"Volume Group description","type":"string","typeName":"DEFAULT"},"enabledAuthentications":{"description":"List of supported authentication types","items":{"$ref":"update.dto.acropolis.volumegroups.ClientAuthenticationDTO"},"type":"array","typeName":"DEFAULT"},"flashModeEnabled":{"description":"Flash mode enabled or not for the volume group","type":"boolean","typeName":"DEFAULT"},"isShared":{"description":"True or false indicating whether volume is shared across multiple iSCSI initiators","type":"boolean","typeName":"DEFAULT"},"iscsiInitiatorNameList":{"description":"iSCSI qualified name list","items":{"type":"string"},"type":"array","typeName":"DEFAULT"},"iscsiTarget":{"description":"iSCSI target name","type":"string","typeName":"ISCSI_TARGET"},"iscsiTargetPrefix":{"description":"iSCSI target prefix","type":"string","typeName":"ACRO_NAME"},"logicalTimestamp":{"description":"The logical timestamp","format":"int64","type":"integer","typeName":"DEFAULT"},"name":{"description":"Volume Group name","type":"string","typeName":"ACRO_NAME"},"uuid":{"type":"string"}}}}}




