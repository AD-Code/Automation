swagger: '2.0'
info:
  title: Nutanix Enterprise Cloud API
  #TODO description:
    #TODO - tune up this section (tables, validate this is correct, etc)
    #TODO - morph philosophy to more accurate reflect current state and declarative formatting
    #TODO - validate rule set is fully accurate (bounce off of super linter validation sets?)
  description: |
    # Introduction
    ## Philosophy
    REST API 3.0 follows an Intentful API philosophy. The fundamental idea is to move 
    programming from the user to the machine thereby lowering the skillset requirements 
    from the datacenter admin. The user needs to specify the desired end state of any entity 
    and the system is responsible to compile and execute a series of steps that will take the 
    entity from the current state to the desired state. Progress towards any desired state is 
    tracked via waits and events. We borrow ideas from the Google Kubernetes standard. 
      
    All kinds of entity and entity lists follow a homogenous specification format. This allows 
    for ease of programming where multiple kinds of entity are involved. Further, this 
    enables the user to get familiar with the API as a whole quickly. 
      
    Intentful APIs dramatically reduce the number of action verbs needed. Most changes 
    can be achieved by specifying desired state rather than via a series of action verbs that 
    specify the journey to the end state. 
      
    ## Terminology
    **Entity :** Any object that is managed via the API.<br>
    **Kind :** The kind represents the type of an entity. E.g. vm, alert<br>
    **Resource Kind :** A kind that represents a physical or virtual infrastructure resource. E.g. 
    vm, app, volume_group.<br>
    **Helper Kind :** A kind that is not an infrastructure resource but represents entities that 
    are used in conjunction with infrastructure resources. E.g. alert, event, status. <br>
    **Basic Resource Kind :** A Basic kind is a primary resource type. E.g. vm <br>
    **Related Resource Kind :** Related kinds are kinds of entities that are automatically 
    defined by the system and relate to basic kinds. E.g. vm_snapshot. <br>
    **Type :** Subcategories or subobjects within top level resource types. E.g. reference <br>
    **ResourceLimit :** A kind that represents a quota of resources of various types. <br>
    **Snapshot :** A point in time state of resources and policies of an entity. <br>
    **Backup :** An automatically created aggregation object that collects all the snapshots for 
    the same object within the same resource pool together. <br>
    **Profile :** A profile is a set of resource and policy specifications that can be directly 
    applied to an entity. <br>
    **Template :** A template is a complete specification from which valid entities can be 
    generated given certain input parameters. <br>
    **"spec" :** A section in the json representation of an entity that expresses the desired 
    state of the entity. <br>
    **"status" :** A section in the json representation of an entity that expresses the current 
    state of the entity. <br>

    ## Rules  
    * The "metadata" section has fields that relate to all kinds of entities and are 
    instantly updateable by the system. 
    * The "spec" section has everything that cannot be changed by the system without 
    user/automation intervention after initialization. 
    * The "status" section has a copy of the currently enforced version of the "spec" 
    section plus other fields that are managed/updated automatically by the system. 
    Some fields in the "status" section can be updated by the user as well. 
    * "parent_reference" is mandatory for snapshot and backup entities and present in 
    normal entities if they were created with this field populated (clone/restore 
    equivalent). 
    * Any field that represents a defined "type" has the type name as a suffix. E.g. 
    backup_factory, vm_reference.

    ## Operatations (TODO?)
    TODO: Need to deside whether we're going to put ops docs for things like page/sort/filter 
    HERE or as first class top level objects (in a tagGroup). Guessing tagGroup, but sketched 
    this out just to show what it would look like.
    ### Page
    Some docs on pagination
    ### Sort
    Some docs on sorting
    ### Filter
    Some docs on filtering
  termsOfService: 'https://www.nutanix.com/support-terms'
    #TODO - validate with DS that we're aligned fully, and proper do-dads are where they need to be
  contact:
    name: Developer Support
    url: 'https://developer.nutanix.com'
  license:
    name: Nutanix End User License Agreement
    url: 'https://www.nutanix.com/eula'
    #TODO - validate with VH that we're aligned fully, and proper do-dads are where they need to be
  version: '3.1.0'
  #x-logo:
    #TODO - figure out logo / branding - this is likely a much larger thing, but wanted to annotate here anyways
    #url: Nutanix22.png
    #backgroundColor: '#FFFFFF'
basePath: /api/nutanix/v3
schemes:
  - https
consumes:
  #TODO - grep aplos and see if these are indeed the only consumption MIME types
  - application/json
  - application/octet-stream #TODO - validate from images this is actually correct
  - application/x-www-form-urlencoded #TODO - validate oauth consumes and update here
produces:
  - application/json
paths:
  /access_control_policies/list:
    post:
      responses:
        403:
          $ref: '#/responses/403'
        503:
          $ref: '#/responses/503'
        '200':
          description: ok
          schema:
            $ref: '#/definitions/access_control_policy_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'
      description: |
        This operation gets a list of Access Control Policies, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - access_control_policy_name


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/access_control_policy_list_metadata'
      tags:
        - access_control_policies
      x-ntnx-operations:
        - view
      x-ntnx-kind: access_control_policy
      summary: Get a list of Access Control Policies
      #TODO - figure out real code sample strategy, grabbed a few randos from the petstore example
      x-code-samples:
        - lang: 'C#'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \PetStore\Entities\Pet();
            $form->setPetType("Dog");
            $form->setName("Rex");
            // set other fields
            try {
                $pet = $client->pets()->create($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
  '/access_control_policies/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/access_control_policy_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/access_control_policy_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/access_control_policy_status'
      description: This operation gets a Access Control Policy.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - access_control_policies
      x-ntnx-operations:
        - view
      x-ntnx-kind: access_control_policy
      summary: Get a Access Control Policy
  /app_blueprints/render_info:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/app_blueprint_render_info_output'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/blueprint_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/app_blueprint_render_info_input'
      tags:
        - app_blueprint
      x-doc-hide: true
      summary: Render an AppBlueprint from the given input
      x-ntnx-operations:
        - render
      x-ntnx-kind: app_blueprint
      description: |
        Helper that translates the given input spec into the equivalent AppBlueprint.
  /batch:
    post:
      description: |
        Batching allows for instructions for several operations to be sent
        using a single HTTP request. Depending on the batch parameters, the
        Nutanix v3 gateway processes each independent operation sequentially.
        Once all operations in the batch have been completed, a consolidated
        response is returned and the HTTP connection is closed. The batch API
        takes an array of logical HTTP requests represented as JSON arrays.
        Maximum size of the array should not exceed 60.
        Each request comprises the following:
        - A method (corresponding to HTTP methods such as GET, PUT, and POST)
        - A relative URL (relative_url)
        - (Optional) A body (for POST and PUT requests).
        The batch API returns an array of logical HTTP responses represented
        as JSON arrays containing the following:
        - A status code
        - (Optional) A body represented as a JSON-encoded string
      tags:
        - batch
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/batch_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
      parameters:
        - required: true
          in: body
          description: List of intent APIs
          name: intent_list
          schema:
            $ref: '#/definitions/batch_request'
      summary: Submit a list of one or more intentful REST APIs to be processed
  /clusters/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cluster_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/cluster_list_metadata'
      tags:
        - clusters
      x-ntnx-operations:
        - view
      description: |
        This operation gets a list of clusters, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - uuid


        Note: Entities that have not been created successfully are not listed.
      x-ntnx-kind: cluster
      summary: Get a list of clusters
  '/clusters/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/cluster_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/cluster_intent_input'
      tags:
        - clusters
      x-ntnx-operations:
        - update
      description: |
        This operation submits a request to update a cluster based on the input parameters.
      x-ntnx-kind: cluster
      summary: Update a cluster
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cluster_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cluster_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - clusters
      x-ntnx-operations:
        - view
      description: This operation gets a cluster.
      x-ntnx-kind: cluster
      summary: Get a cluster
  '/clusters/{uuid}/certificates/ca_certs':
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: spec
          schema:
            $ref: '#/definitions/ca_cert'
      tags:
        - clusters
      x-doc-hide: true
      summary: Add a new CA certificate
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Add a new CA certificate
  '/clusters/{uuid}/certificates/ca_certs/{ca_name}':
    delete:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          type: string
          name: ca_name
          in: path
          maxLength: 64
      tags:
        - clusters
      x-doc-hide: true
      summary: Delete the CA certificate
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: |
        Delete the CA certificate specified by certificate authority name
  '/clusters/{uuid}/certificates/client_auth':
    put:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: spec
          schema:
            $ref: '#/definitions/ca_chain_spec'
      tags:
        - clusters
      x-doc-hide: true
      summary: Replace the CA chain for client authentication
      x-ntnx-ref-keys:
        - client_auth_reference
      x-ntnx-kind: client_auth
      description: Replace the CA chain for client authentication
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: spec
          schema:
            $ref: '#/definitions/ca_chain_spec'
      tags:
        - clusters
      x-doc-hide: true
      summary: Import CA chain for client authentication
      x-ntnx-ref-keys:
        - client_auth_reference
      x-ntnx-kind: client_auth
      description: Import CA chain for client authentication
    delete:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - clusters
      x-doc-hide: true
      summary: Remove the CA chain for client authentication
      x-ntnx-ref-keys:
        - client_auth_reference
      x-ntnx-kind: client_auth
      description: Remove the CA chain for client authentication
  '/clusters/{uuid}/certificates/csrs':
    get:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/csrs_spec'
      tags:
        - clusters
      x-doc-hide: true
      summary: Download CSRs from cluster
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Download Certificate Signing Requests from cluster
  '/clusters/{uuid}/certificates/csrs/{node_ip}':
    get:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          type: string
          name: node_ip
          in: path
      tags:
        - clusters
      x-doc-hide: true
      summary: Download CSR from a discovered node
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Download Certificate Signing Request from a discovered node
  '/clusters/{uuid}/certificates/pemkey':
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - clusters
      x-doc-hide: true
      summary: Generate a 2048 bits cipher length RSA key
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Generate a 2048 bits cipher length RSA key
  '/clusters/{uuid}/certificates/pemkey/import':
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: spec
          schema:
            $ref: '#/definitions/pemkey_spec'
      tags:
        - clusters
      x-doc-hide: true
      summary: Import a new key
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Import a new key
  '/clusters/{uuid}/certificates/svm_certs/{kms_uuid}':
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - in: path
          name: kms_uuid
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          required: true
          type: string
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/certificate_spec_upload_input'
      tags:
        - clusters
      x-doc-hide: true
      summary: Add one or more certificates to a service VM
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Add one or more certificates to a service VM
  '/clusters/{uuid}/certificates/svm_certs/{node_uuid}/{kms_uuid}':
    put:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - in: path
          name: node_uuid
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          required: true
          type: string
        - in: path
          name: kms_uuid
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          required: true
          type: string
        - required: true
          in: body
          name: cert
          schema:
            $ref: '#/definitions/certificate'
      tags:
        - clusters
      x-doc-hide: true
      summary: Replace the certificate on a service VM
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Replace the certificate on a service VM
    delete:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - in: path
          name: node_uuid
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          required: true
          type: string
        - in: path
          name: kms_uuid
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          required: true
          type: string
      tags:
        - clusters
      x-doc-hide: true
      summary: Delete the certificate on a service VM
      x-ntnx-ref-keys:
        - certificate_reference
      x-ntnx-kind: certificate
      description: Delete the certificate on a service VM
  '/clusters/{uuid}/cloud_credentials/{cloud_type}':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/cloud_credentials_intent_input'
      tags:
        - clusters
      x-doc-hide: true
      summary: Add a cloud credential for accessing cloud sites
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: Add a cloud credential for accessing cloud sites
    delete:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
      tags:
        - clusters
      x-doc-hide: true
      summary: Delete all cloud credentials
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: Delete all cloud credentials
  '/clusters/{uuid}/cloud_credentials/{cloud_type}/list':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/cloud_credentials_list_metadata'
      tags:
        - clusters
      x-doc-hide: true
      summary: Get a list of cloud credentials
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: |
        This operation gets a list of cloud credentials, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - cloud_type


        Note: Entities that have not been created successfully are not listed.
  '/clusters/{uuid}/cloud_credentials/{cloud_type}/{cloud_credentials_id}':
    put:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
        - required: true
          type: integer
          name: cloud_credentials_id
          in: path
          format: int64
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/cloud_credentials_intent_input'
      tags:
        - clusters
      x-doc-hide: true
      summary: Update a cloud credentials
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: |
        This operation submits a request to update a cloud credentials based on the input parameters.
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cloud_credentials_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
        - required: true
          type: integer
          name: cloud_credentials_id
          in: path
          format: int64
      tags:
        - clusters
      x-doc-hide: true
      summary: Get a cloud credentials
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: This operation gets a cloud credentials.
    delete:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/cloud_credentials_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - pattern: (\bAWS\b|\bAZURE\b)
          required: true
          type: string
          name: cloud_type
          in: path
        - required: true
          type: integer
          name: cloud_credentials_id
          in: path
          format: int64
      tags:
        - clusters
      x-doc-hide: true
      summary: Delete a cloud credentials
      x-ntnx-ref-keys:
        - cloud_credentials_reference
      x-ntnx-kind: cloud_credentials
      description: This operation submits a request to delete a cloud credentials.
  /containers:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/container_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/container_intent_input'
      tags:
        - containers
      x-doc-hide: true
      summary: Create a Container
      x-ntnx-operations:
        - create
      x-ntnx-kind: container
      description: |
        This operation submits a request to create a Container based on the input parameters.
  /containers/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/container_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/container_list_metadata'
      tags:
        - containers
      x-doc-hide: true
      summary: Get a list of Containers
      x-ntnx-operations:
        - view
      x-ntnx-kind: container
      description: |
        This operation gets a list of Containers, allowing for sorting, filtering, and pagination.
        Note: Entities that have not been created successfully are not listed.
  '/containers/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/container_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/container_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: Intent Spec for Container.
          name: body
          schema:
            $ref: '#/definitions/container_intent_input'
      tags:
        - containers
      x-doc-hide: true
      summary: Update a Container
      x-ntnx-operations:
        - update
      x-ntnx-kind: container
      description: |
        This operation submits a request to update a Container based on the input parameters.
        Only state change of container is allowed.
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/container_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/container_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - containers
      x-doc-hide: true
      summary: Get a Container
      x-ntnx-operations:
        - view
      x-ntnx-kind: container
      description: This operation gets a Container.
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/container_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/container_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - containers
      x-doc-hide: true
      summary: Delete a Container
      x-ntnx-operations:
        - delete
      x-ntnx-kind: container
      description: This operation submits a request to delete a Container.
  /data/changed_regions:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/changed_regions'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/changed_regions_status'
        '404':
          description: |
            Not Found. Returned when the file(s) specified by the snapshot_file_path and/or the reference_snapshot_file_path does not exist.
          schema:
            $ref: '#/definitions/changed_regions_status'
        '503':
          description: Service unavailable. The system cannot currently handle the request
          schema:
            $ref: '#/definitions/changed_regions_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/changed_regions_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/changed_regions_query'
      tags:
        - data
      description: |
        This API provides for querying the metadata about the regions that are different between two snapshots of a disk in the AOS file system. (The snapshot specified by the reference parameter will be used as the basis for computing the changed regions.)
        The main use of this API is to enable incremental and differential backups.
        Since each region specifies whether the region is all zeros, reads of such zeroed regions need not have to be performed while backing up the underlying disk.
        When no reference is specified, the response includes all the allocated regions in the given disk.
      x-ntnx-kind: changed_regions
      summary: Query changed regions metadata.
  /directory_services/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/directory_service_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'
      description: |
        This operation gets a list of directory service configurations, allowing for sorting, filtering, and pagination.
        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/directory_service_list_metadata'
      tags:
        - directory_service
      x-ntnx-operations:
        - view
      x-ntnx-kind: directory_service
      summary: Get a list of directory service configurations
  '/directory_services/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/directory_service_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/directory_service_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'
      description: This operation gets a directory service configuration.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - directory_service
      x-ntnx-operations:
        - view
      x-ntnx-kind: directory_service
      summary: Get a directory service configuration
  '/directory_services/{uuid}/search':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/directory_service_search_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/directory_service_status'
      description: |
        Retrieves a user or a group available in the directory service based on
        the UUID specified.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/directory_service_search_metadata'
      tags:
        - directory_service
      x-ntnx-operations:
        - search
      x-ntnx-kind: directory_service
      summary: Search user or group in the directory service.
  /disks/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/disk_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/disk_list_metadata'
      tags:
        - disks
      x-doc-hide: true
      summary: Get a list of Disks
      x-ntnx-operations:
        - view
      x-ntnx-kind: disk
      description: |
        This operation gets a list of Disks, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - uuid


        Note: Entities that have not been created successfully are not listed.
  '/disks/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/disk_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - disks
      x-doc-hide: true
      summary: Get a Disk
      x-ntnx-operations:
        - view
      x-ntnx-kind: disk
      description: This operation gets a Disk.
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/disk_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - disks
      x-doc-hide: true
      summary: Delete a Disk
      x-ntnx-operations:
        - delete
      x-ntnx-kind: disk
      description: This operation submits a request to delete a Disk.
  /docker_registries:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      parameters:
        - required: true
          in: body
          description: Docker registry spec
          name: body
          schema:
            $ref: '#/definitions/docker_registry_intent_input'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: Create a docker registry
      x-ntnx-operations:
        - create
      x-ntnx-kind: docker_registry
      description: Create a docker registry
  /docker_registries/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/docker_registry_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/docker_registry_list_metadata'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: List all docker registries
      x-ntnx-operations:
        - view
      x-ntnx-kind: docker_registry
      description: List all docker registries
  '/docker_registries/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: Docker registry spec
          name: body
          schema:
            $ref: '#/definitions/docker_registry_intent_input'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: Update a docker registry
      x-ntnx-operations:
        - update
      x-ntnx-kind: docker_registry
      description: Update a docker registry
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/docker_registry_intent_response'
        default:
          description: Failed to retrieve docker registry
          schema:
            $ref: '#/definitions/docker_registry_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: Retrieve a Docker registry
      x-ntnx-operations:
        - view
      x-ntnx-kind: docker_registry
      description: Retrieve a docker registry
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/docker_registry_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: Deletes a Docker registry
      x-ntnx-operations:
        - delete
      x-ntnx-kind: docker_registry
      description: Deletes a Docker registry
  '/docker_registries/{uuid}/search/list':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/docker_registry_image_search_list_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/docker_registry_image_search_list_intent_response'
        default:
          description: Internal Error
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/docker_registry_image_search_list_intent_response'
      tags:
        - docker_registry
      x-doc-hide: true
      summary: Searches docker containers for specified registry
      x-ntnx-operations:
        - view
      x-ntnx-kind: docker_image
      description: Searches docker containers for specified registry
  /fanout_proxy:
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      parameters:
        - in: query
          type: string
          description: One of the availability zones name of Xi portal.
          name: az_name
        - description: One of the availability zones uuid of Xi portal.
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          in: query
          type: string
          name: az_physical_uuid
        - description: Cluster uuid of remote PC or PE cluster.
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          in: query
          type: string
          name: remote_cluster_uuid
        - required: true
          type: string
          description: HTTP method to call
          in: query
          name: method
        - required: true
          type: string
          description: URL path to call on remote cluster
          in: query
          name: url_path
        - in: query
          type: string
          description: content type for the call
          name: content_type
        - in: query
          type: string
          description: 'entity kind e.g. vm, network'
          name: kind
        - description: The UUID of the entity.
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          in: query
          type: string
          name: entity_uuid
        - description: The UUID of the tenant.
          format: UUID
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          in: query
          type: string
          name: tenant_uuid
        - in: body
          name: fanout_proxy_body
          schema:
            additionalProperties: true
      tags:
        - remote_connections
      description: |
        Proxies request to remote cluster, uses remote connection
        to call endpoint on remote cluster.
      x-doc-hide: true
      summary: Proxies request to remote cluster
  /file_store:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/file_item_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: 'File items are binaries and unlike images are not limited by the file type (e.g ISOs, or disk images).'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/file_item_intent_input'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Create a file_item
  /file_store/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/file_item_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: |
        This operation gets a list of file_items, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - uuid


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/file_item_list_metadata'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Get a list of file_items
  '/file_store/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/file_item_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: |
        This operation submits a request to update a file_item based on the input parameters.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/file_item_intent_input'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Update a file_item
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/file_item_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: This operation gets a file_item.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Get a file_item
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: This operation submits a request to delete a file_item.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Delete a file_item
  '/file_store/{uuid}/file':
    put:
      description: Upload the binary bits for a file item.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: file_item
          schema:
            format: binary
      tags:
        - file_store
      x-doc-hide: true
      summary: Upload file item contents
      x-ntnx-kind: file_item
      consumes:
        - application/octet-stream
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
    get:
      responses:
        '200':
          description: Success
          schema:
            type: string
            format: binary
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/file_item_status'
      description: Download the raw binary bits associated with a file item.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - file_store
      x-ntnx-kind: file_item
      x-doc-hide: true
      summary: Get file item Contents
  /groups:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/groups_get_entities_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/groups_get_entities_request'
      tags:
        - groups
      description: Get entities from entity db.
      x-doc-hide: true
      summary: Get Entities.
  /hosts/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/host_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/host_list_metadata'
      tags:
        - hosts
      x-ntnx-operations:
        - view
      description: |
        This operation gets a list of Hosts, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - uuid


        Note: Entities that have not been created successfully are not listed.
      x-ntnx-kind: host
      summary: Get a list of Hosts
  '/hosts/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/host_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: Intent Spec of Host.
          name: body
          schema:
            $ref: '#/definitions/host_intent_input'
      tags:
        - hosts
      x-doc-hide: true
      summary: Update a Host
      x-ntnx-operations:
        - update
      x-ntnx-kind: host
      description: |
        This operation submits a request to update a Host based on the input parameters.
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/host_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - hosts
      x-ntnx-operations:
        - view
      description: This operation gets a Host.
      x-ntnx-kind: host
      summary: Get a Host
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - hosts
      x-doc-hide: true
      summary: Delete a Host
      x-ntnx-operations:
        - delete
      x-ntnx-kind: host
      description: This operation submits a request to delete a Host.
  '/hosts/{uuid}/run_ipmi_cmd':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/host_ipmi_cmd_result'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/host_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: The arguments for the IPMI tool as a single string
          name: ipmi_args
          schema:
            $ref: '#/definitions/host_ipmi_args'
      tags:
        - ipmi_cmd
      x-doc-hide: true
      summary: Run IPMI command on the given host
      x-ntnx-operations:
        - create
      x-ntnx-kind: host
      description: Run IPMI command on the given host
  /idempotence_identifiers:
    post:
      description: |
        The idempotence_identifiers API allows users to generate an idempotent UUID with a user-provided identifier. The idempotent UUIDs can later be passed in POST requests. By default, Nutanix v3 APIs do not allow for operations to be created with user-provided UUIDs; each POST request received by the API gateway results in a UUID4 being automatically generated and returned in the response JSON.
      tags:
        - idempotence_identifiers
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/idempotence_identifiers_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      parameters:
        - required: false
          in: body
          description: An idempotence identifier object.
          name: body
          schema:
            $ref: '#/definitions/idempotence_identifiers_input'
      summary: Creates an idempotence identifier
  '/idempotence_identifiers/{client_identifier}':
    get:
      description: Get an idempotence identifier object.
      tags:
        - idempotence_identifiers
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/idempotence_identifiers_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      parameters:
        - required: true
          type: string
          name: client_identifier
          in: path
      summary: Get an idempotence identifier object.
    delete:
      description: Deletes an idempotence identifier object.
      tags:
        - idempotence_identifiers
      responses:
        '200':
          description: Success
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/idempotence_identifiers_status'
      parameters:
        - required: true
          type: string
          name: client_identifier
          in: path
      summary: Deletes an idempotence identifier object.
  /images:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/image_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: |
        Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user can be attached to a VM. An ISO image is attached as a virtual CD-ROM drive, and QCOW2 and VMDK files are attached as SCSI disks. An image has to be explicitly added to the self-service catalog before users can create VMs from it.
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/image_intent_input'
      tags:
        - images
      x-ntnx-operations:
        - create
      x-ntnx-kind: image
      summary: Create a IMAGE
  /images/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/image_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: |
        This operation gets a list of IMAGEs, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - uuid


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/image_list_metadata'
      tags:
        - images
      x-ntnx-operations:
        - view
      x-ntnx-kind: image
      summary: Get a list of IMAGEs
  '/images/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/image_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: |
        This operation submits a request to update a IMAGE based on the input parameters.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/image_intent_input'
      tags:
        - images
      x-ntnx-operations:
        - update
      x-ntnx-kind: image
      summary: Update a IMAGE
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/image_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: This operation gets a IMAGE.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - images
      x-ntnx-operations:
        - view
      x-ntnx-kind: image
      summary: Get a IMAGE
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: This operation submits a request to delete a IMAGE.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - images
      x-ntnx-operations:
        - delete
      x-ntnx-kind: image
      summary: Delete a IMAGE
  '/images/{uuid}/file':
    put:
      description: |
        Upload the binary bits of an image based on the UUID specified. Note that the image must be created first before an upload can be done. Also, once the image has been uploaded the image cannot be changed.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: image
          schema:
            format: binary
        - description: 'Checksum type (e.g SHA_1, SHA_256).'
          enum:
            - SHA_1
            - SHA_256
          type: string
          name: X-Nutanix-Checksum-Type
          in: header
        - description: Checksum bytes.
          type: string
          name: X-Nutanix-Checksum-Bytes
          in: header
      tags:
        - images
      summary: Upload Image Contents
      x-ntnx-operations:
        - update
      x-ntnx-kind: image
      consumes:
        - application/octet-stream
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
    get:
      responses:
        '200':
          description: Success
          schema:
            type: string
            format: binary
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/image_status'
      description: Downloads the image based on the UUID specified.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - images
      x-ntnx-operations:
        - view
      x-ntnx-kind: image
      summary: Get Image Contents
  /logout:
    get:
      x-ntnx-kind: user
      summary: Logs out the current user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/logout_response'
        default:
          description: Internal Error
      tags:
        - users
      description: Logs out the current user.
  /network_function_chains:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/network_function_chain_intent_input'
      tags:
        - network_function_chain
      x-doc-hide: true
      summary: Create a Network Function Chain
      x-ntnx-operations:
        - create
      x-ntnx-kind: network_function_chain
      description: |
        Given an intentful spec, creates a network function chain with associated metadata.
  /network_function_chains/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_function_chain_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/network_function_chain_list_metadata'
      tags:
        - network_function_chain
      x-doc-hide: true
      summary: Get a list of Network Function Chains
      x-ntnx-operations:
        - view
      x-ntnx-kind: network_function_chain
      description: |
        This operation gets a list of Network Function Chains, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - uuid


        Note: Entities that have not been created successfully are not listed.
  '/network_function_chains/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/network_function_chain_intent_input'
      tags:
        - network_function_chain
      x-doc-hide: true
      summary: Update a Network Function Chain
      x-ntnx-operations:
        - update
      x-ntnx-kind: network_function_chain
      description: |
        Given an intenful spec and uuid, update network function chain.
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_function_chain_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - network_function_chain
      x-doc-hide: true
      summary: Get a Network Function Chain
      x-ntnx-operations:
        - view
      x-ntnx-kind: network_function_chain
      description: 'Given a UUID, returns a network_function_chain definition.'
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_function_chain_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - network_function_chain
      x-doc-hide: true
      summary: Delete a Network Function Chain
      x-ntnx-operations:
        - delete
      x-ntnx-kind: network_function_chain
      description: Delete a network function chain given its uuid.
  /network_security_rules:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/network_security_rule_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_security_rule_status'
      parameters:
        - required: true
          in: body
          name: request
          schema:
            $ref: '#/definitions/network_security_rule_intent_input'
      tags:
        - network_security_rules
      description: |
        This operation submits a request to create a Network security rule based on the input parameters.
      x-ntnx-kind: network_security_rule
      summary: Create a Network security rule
  /network_security_rules/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_security_rule_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_security_rule_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/network_security_rule_list_metadata'
      tags:
        - network_security_rules
      description: |
        This operation gets a list of Network security rules, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - mode


        Note: Entities that have not been created successfully are not listed.
      x-ntnx-kind: network_security_rule
      summary: Get all network security rules
  '/network_security_rules/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_security_rule_intent_response'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/network_security_rule_intent_input'
      tags:
        - network_security_rules
      description: |
        This operation submits a request to update a Network security rule based on the input parameters.
      x-ntnx-kind: network_security_rule
      summary: Update a Network security rule
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/network_security_rule_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_security_rule_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - network_security_rules
      description: This operation gets a Network security rule.
      x-ntnx-kind: network_security_rule
      summary: Get a Network security rule
    delete:
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/network_security_rule_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - network_security_rules
      description: This operation submits a request to delete a Network security rule.
      x-ntnx-kind: network_security_rule
      summary: Delete a Network security rule
  /oauth/authorize:
    post:
      description: Authorization confirmation post url
      tags:
        - oauth
      responses:
        '302':
          headers:
            Location:
              type: string
          description: |
            authorization grant is provided in callback url callback url
            is in format {redirect_uri}/?code={grant_code}&state={state}
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'
      parameters:
        - required: true
          type: string
          description: Your client ID
          in: formData
          name: client_id
        - in: formData
          type: string
          description: Whitespace-separated list of scopes you application needs
          name: scope
        - required: true
          type: string
          description: Must be 'code'
          in: formData
          name: response_type
        - required: true
          type: string
          description: Must be 'yes' or 'no'
          in: formData
          name: confirm
        - in: formData
          type: string
          description: |
            This URL is used to provide user authorization if the user accepted
            access to the application or not
          name: redirect_uri
        - in: formData
          type: string
          description: state parameter to prevent cross site origin attacks
          name: state
      summary: Used to get authorization code from server
      consumes:
        - application/x-www-form-urlencoded
  /oauth/client:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
      parameters:
        - required: true
          in: body
          description: Oauth client details
          name: oauth_client
          schema:
            $ref: '#/definitions/oauth_client_input'
      tags:
        - oauth
      description: Add new Oauth Client
      x-ntnx-kind: oauth_client
      summary: This is used to register new oauth client
  /oauth/client/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_list'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/oauth_client_list_metadata'
      tags:
        - oauth
      description: Retrieves all oauth clients
      x-ntnx-kind: oauth_client
      summary: Retrieves all oauth client
  '/oauth/client/{client_id}':
    put:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        '404':
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
      parameters:
        - required: true
          type: string
          name: client_id
          in: path
        - required: true
          in: body
          description: Oauth client details
          name: oauth_client
          schema:
            $ref: '#/definitions/oauth_client_input'
      tags:
        - oauth
      description: Update Oauth client information
      x-ntnx-kind: oauth_client
      summary: Used to update existing client details
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_client_response'
        '404':
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
      parameters:
        - required: true
          type: string
          name: client_id
          in: path
      tags:
        - oauth
      description: Get Oauth client information
      x-ntnx-kind: oauth_client
      summary: Used to fetch existing oauth client details
    delete:
      responses:
        '200':
          description: Success
        '404':
          description: Client identifier does not exists
          schema:
            $ref: '#/definitions/oauth_client_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_client_status'
      parameters:
        - required: true
          type: string
          name: client_id
          in: path
      tags:
        - oauth
      description: Delete existing Oauth client information
      x-ntnx-kind: oauth_client
      summary: Delete an existing Oauth client
  /oauth/generate_token:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_generate_token_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'
      parameters:
        - required: true
          in: body
          name: oauth_generate_token_request
          schema:
            $ref: '#/definitions/oauth_generate_token_request'
      tags:
        - oauth
      description: Generates an oauth token
      x-ntnx-kind: oauth_token
      summary: |
        This is used when the user is already authenticated and would like to
        create bearer tokens for distribution
  /oauth/idp_callback:
    get:
      responses:
        '302':
          headers:
            Location:
              type: string
          description: Redirect to SSP UI.
      parameters:
        - required: true
          type: string
          name: code
          in: query
        - required: false
          type: string
          name: state
          in: query
      tags:
        - oauth
      description: Oauth2 callback from IDP to intent gateway
      x-doc-hide: true
      summary: Oauth2 callback from IDP to intent gateway
  /oauth/idp_login:
    get:
      description: Oauth2
      tags:
        - oauth
      x-doc-hide: true
      responses:
        '302':
          headers:
            Location:
              type: string
          description: Redirect to IDP Login Page
      summary: Oauth2 login to idp
  /oauth/revoke_token:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/oauth_status'
        '404':
          description: Token not found
          schema:
            $ref: '#/definitions/oauth_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'
      parameters:
        - required: true
          type: string
          name: token
          in: query
        - name: token_type_hint
          in: query
          default: access_token
          x-ntnx-enum:
            - access_token
            - refresh_token
          required: false
          type: string
      tags:
        - oauth
      description: Revokes an oauth token
      x-ntnx-kind: oauth_token
      summary: |
        Revoke a token will cause the token to be removed from system
        Any subsequent authorization calls with the token will fail
  /oauth/token:
    post:
      description: Returns an access token
      tags:
        - oauth
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/provider_oauth_token'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/oauth_status'
        '401':
          description: Authentication Failure
          schema:
            $ref: '#/definitions/oauth_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/oauth_status'
      parameters:
        - required: true
          type: string
          description: Must be authorization_code or refresh_token
          in: formData
          name: grant_type
        - required: true
          type: string
          description: Your client ID
          in: formData
          name: client_id
        - required: true
          type: string
          description: Your client secret
          in: formData
          name: client_secret
        - required: false
          type: string
          description: |
            authorization_code received in redirect_uri
            must for grant_type = authorization_code
          in: formData
          name: code
        - required: false
          type: string
          description: |
            refresh_token received with previous token
            must for grant_type = refresh_token
          in: formData
          name: refresh_token
        - required: false
          type: string
          description: |
            state parameter to prevent cross site origin attacks
            use only if passed in getting authorization
          in: formData
          name: state
        - required: false
          type: string
          description: |
            redirect uri used to get authorization
            must for grant_type = authorization_code
          in: formData
          name: redirect_uri
      consumes:
        - application/x-www-form-urlencoded
      summary: This callback is used to get token from Oauth2 provider
  /permissions/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/permission_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'
      description: |
        Get permissions. Supported filters are
        - uuid
        - name
        - kind
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/permission_list_metadata'
      tags:
        - permission
      x-ntnx-operations:
        - view
      x-ntnx-kind: permission
      summary: List the permissions.
  '/permissions/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/permission_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/permission_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/permission_status'
      description: Get a permission.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - permission
      x-ntnx-operations:
        - view
      x-ntnx-kind: permission
      summary: Get a permission.
  '/portal_services/software/{software_type}/list':
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/software_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/software_status'
      parameters:
        - name: software_type
          in: path
          x-ntnx-enum:
            - NOS
            - PRISM_CENTRAL
          required: true
          type: string
          description: Software type
        - in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/software_list_metadata'
      tags:
        - portal_services
      description: Get a list of portal software with specified type
      x-doc-hide: true
      summary: Get all available software on Nutanix Portal
  '/portal_services/software/{software_type}/{version}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/portal_software'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/software_status'
      parameters:
        - name: software_type
          in: path
          x-ntnx-enum:
            - NOS
            - PRISM_CENTRAL
          required: true
          type: string
          description: Software type
        - description: Software version
          required: true
          type: string
          name: version
          in: path
      tags:
        - portal_services
      description: Get the software info with specified type and version
      x-doc-hide: true
      summary: Get specified software information
  /portal_services/support_cases/upload:
    post:
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/support_case_upload_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/support_case_upload_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/support_case_upload_intent_input'
      tags:
        - portal_services
      x-doc-hide: true
      summary: Upload attachements for a specific support case.
      x-ntnx-operations:
        - create
      x-ntnx-kind: support_case_upload
      description: 'Given an intentful spec, trigger ncc health check and log uploads for a specified support case.'
  /prism_central:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/deployment_status'
        default:
          description: Internal Error.
          schema:
            $ref: '#/definitions/prism_central_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/prism_central'
      tags:
        - prism_central
      x-doc-hide: true
      summary: Create a Prism Central
      x-ntnx-operations:
        - create
      x-ntnx-kind: prism_central
      description: |
        This operation submits a request to create a Prism Central based on the input parameters.
  /projects/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/project_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'
      description: |
        This operation gets a list of Projects, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - uuid


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/project_list_metadata'
      tags:
        - project
      x-ntnx-operations:
        - view
      x-ntnx-kind: project
      summary: Get a list of Projects
  '/projects/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/project_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/project_status'
      description: This operation gets a Project.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - project
      x-ntnx-operations:
        - view
      x-ntnx-kind: project
      summary: Get a Project
  /remote_connections:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      description: Creates a remote connection
      parameters:
        - required: true
          in: body
          description: Remote connection details
          name: body
          schema:
            $ref: '#/definitions/remote_connection_intent_input'
      tags:
        - remote_connections
      x-ntnx-kind: remote_connection
      x-doc-hide: true
      summary: Creates a remote connection
  /remote_connections/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/remote_connection_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      description: Retrieve list of remote connections
      parameters:
        - required: false
          in: body
          description: A remote connection object
          name: get_entities_request
          schema:
            $ref: '#/definitions/remote_connection_list_metadata'
      tags:
        - remote_connections
      x-ntnx-kind: remote_connection
      x-doc-hide: true
      summary: Get list of remote connections
  '/remote_connections/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/remote_connection_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      description: Update remote connection
      parameters:
        - $ref: '#/parameters/uuid'
        - in: body
          description: Remote connection details
          name: body
          schema:
            $ref: '#/definitions/remote_connection_intent_input'
      tags:
        - remote_connections
      x-ntnx-kind: remote_connection
      x-doc-hide: true
      summary: Used to update remote connection details
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/remote_connection_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/remote_connection_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      description: Get remote connection
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - remote_connections
      x-ntnx-kind: remote_connection
      x-doc-hide: true
      summary: Used to fetch remote connection details
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/remote_connection_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/remote_connection_status'
      description: Delete existing remote connection and its information
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - remote_connections
      x-ntnx-kind: remote_connection
      x-doc-hide: true
      summary: Delete an existing remote connection
  /remote_rpc_request:
    post:
      responses:
        '200':
          description: Success
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/status'
      description: Execute Remote RPC
      parameters:
        - required: true
          in: body
          description: RPC payload.
          name: payload
          schema:
            $ref: '#/definitions/remote_rpc_request_input'
        - required: true
          type: string
          description: Name of the service whose RPC needs to be invoked.
          in: query
          name: service_name
        - required: true
          type: integer
          description: Port at which the service is running
          in: query
          name: port
        - required: false
          type: integer
          description: timeout in milliseconds.
          in: query
          name: timeout_ms
        - required: false
          type: string
          description: base url for rpc call.
          in: query
          name: base_url
      tags:
        - remote_connections
      x-doc-hide: true
      consumes:
        - application/octet-stream
      summary: Execute Remote RPC
  /roles/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/role_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'
      description: |
        Get roles. Supported filters are
        - uuid
        - name
      parameters:
        - required: true
          in: body
          name: get_entities_list_request
          schema:
            $ref: '#/definitions/role_list_metadata'
      tags:
        - role
      x-ntnx-operations:
        - view
      x-ntnx-kind: role
      summary: List the roles.
  '/roles/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/role_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/role_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/role_status'
      description: Get a role.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - role
      x-ntnx-operations:
        - view
      x-ntnx-kind: role
      summary: Get a role.
  /secrets:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/secret_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/secret_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/secret_intent_input'
      tags:
        - secrets
      description: |
        This operation submits a request to create a secret based on the input parameters.
      x-ntnx-kind: secret
      x-doc-hide: true
      summary: Create a secret
  /secrets/payload:
    get:
      responses:
        '200':
          description: retrieved the secret payload
          schema:
            $ref: '#/definitions/secret_payload'
        default:
          description: failed to retrieve the secret payload
          schema:
            $ref: '#/definitions/secret_status'
      parameters:
        - required: true
          type: string
          description: the secret name
          in: query
          name: name
      tags:
        - secrets
      description: get secret payload
      x-ntnx-kind: secret
      x-doc-hide: true
      summary: get secret payload
  /secrets/query:
    get:
      responses:
        '200':
          description: found the directory or secrets
          schema:
            $ref: '#/definitions/secret_query'
        default:
          description: failed to query the secrets
          schema:
            $ref: '#/definitions/secret_status'
      parameters:
        - required: true
          type: string
          description: The path of the secret set by the user.
          in: query
          name: object_path
        - name: object_type
          in: query
          default: SECRET
          x-ntnx-enum:
            - SECRET
            - DIRECTORY
          required: true
          type: string
          description: The object type to determine whether it is a secret or directory.
      tags:
        - secrets
      description: query secrets by path
      x-ntnx-kind: secret
      x-doc-hide: true
      summary: query secrets by path
  '/secrets/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/secret_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/secret_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/secret_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - secrets
      description: This operation gets a secret.
      x-ntnx-kind: secret
      x-doc-hide: true
      summary: Get a secret
  /ssh_user:
    post:
      description: Add SSH User to the entity
      parameters:
        - required: true
          in: body
          description: Create SSH User object
          name: ssh_user_intent
          schema:
            $ref: '#/definitions/ssh_user_intent_input'
      tags:
        - ssh_user
      x-doc-hide: true
      summary: Add SSH User to the entity
      x-ntnx-operations:
        - create
      x-ntnx-kind: ssh_user
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssh_user_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
  /ssh_user/list:
    post:
      description: Retrieves all SSH Users on the cluster
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/ssh_user_list_metadata'
      tags:
        - ssh_user
      x-doc-hide: true
      summary: Retrieves all SSH Users on the cluster
      x-ntnx-operations:
        - view
      x-ntnx-kind: ssh_user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ssh_user_list'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
  '/ssh_user/{uuid}':
    put:
      description: Update SSH User entity
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: Update SSH User
          name: ssh_user_intent
          schema:
            $ref: '#/definitions/ssh_user_intent_input'
      tags:
        - ssh_user
      x-doc-hide: true
      summary: Update SSH User entity
      x-ntnx-operations:
        - update
      x-ntnx-kind: ssh_user
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/ssh_user_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
    get:
      description: Retrieves specified SSH User
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - ssh_user
      x-doc-hide: true
      summary: Retrieves specified SSH User
      x-ntnx-operations:
        - view
      x-ntnx-kind: ssh_user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ssh_user_details'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
    delete:
      description: Unregister specified SSH User
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - ssh_user
      x-doc-hide: true
      summary: Unregister specified SSH User
      x-ntnx-operations:
        - delete
      x-ntnx-kind: ssh_user
      responses:
        '202':
          description: Request Accepted
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/ssh_user_status'
  /subnets:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/subnet_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/subnet_status'
      description: |
        This operation submits a request to create a subnet based on the input parameters.
        A subnet is a block of IP addresses.
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/subnet_intent_input'
      tags:
        - subnet
      x-ntnx-operations:
        - create
      x-ntnx-kind: subnet
      summary: Create a subnet
  /subnets/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/subnet_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/subnet_status'
      description: |
        This operation gets a list of subnets, allowing for sorting, filtering, and pagination.
        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/subnet_list_metadata'
      tags:
        - subnet
      x-ntnx-operations:
        - view
      x-ntnx-kind: subnet
      summary: Get a list of subnets
  '/subnets/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/subnet_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/subnet_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/subnet_status'
      description: |
        This operation submits a request to update a subnet based on the input parameters.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/subnet_intent_input'
      tags:
        - subnet
      x-ntnx-operations:
        - update
      x-ntnx-kind: subnet
      summary: Update a subnet
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/subnet_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/subnet_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/subnet_status'
      description: This operation gets a subnet.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - subnet
      x-ntnx-operations:
        - view
      x-ntnx-kind: subnet
      summary: Get a subnet
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/subnet_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/subnet_status'
      description: This operation submits a request to delete a subnet.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - subnet
      x-ntnx-operations:
        - delete
      x-ntnx-kind: subnet
      summary: Delete a subnet
  /tasks/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/task_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/task_status'
      description: |
        This operation gets a list of Tasks, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - creation_time

          - operation_type

          - status

          - uuid


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: false
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/task_list_metadata'
      tags:
        - tasks
      x-ntnx-kind: task
      x-doc-hide: true
      summary: Get a list of Tasks
  /tasks/poll:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/task_poll_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/task_status'
      description: Poll for completion of tasks
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/task_poll_input'
      tags:
        - tasks
      x-ntnx-kind: task
      x-doc-hide: true
      summary: Poll for completion of tasks
  '/tasks/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/task'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/task_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/task_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - tasks
      description: This operation gets a Task.
      x-ntnx-kind: task
      summary: Get a Task
  /user_groups/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_group_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'
      description: |
        This operation gets a list of User Groups, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - user_group_name


        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/user_group_list_metadata'
      tags:
        - user_groups
      x-ntnx-operations:
        - view
      x-ntnx-kind: user_group
      summary: Get a list of User Groups
  '/user_groups/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_group_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/user_group_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_group_status'
      description: |
        A user group is a grouping of users either defined locally or in a Directory service.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - user_groups
      x-ntnx-operations:
        - view
      x-ntnx-kind: user_group
      summary: Get a User Group
  /users/info:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_info'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'
      tags:
        - users
      description: |
        Gets the Access Control Policies attached to a user,
        alongwith other user-specific information.
      x-ntnx-kind: user
      x-doc-hide: true
      summary: |
        Retrieves the Access control policies and other user data
        for logged in user.
  /users/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'
      description: |
        This operation gets a list of Users, allowing for sorting, filtering, and pagination.
        Note: Entities that have not been created successfully are not listed.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/user_list_metadata'
      tags:
        - users
      x-ntnx-operations:
        - view
      x-ntnx-kind: user
      summary: Get a list of Users
  /users/me:
    get:
      x-ntnx-kind: user
      summary: Retrieves currently logged in user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'
      tags:
        - users
      description: Displays the user currently logged in.
  '/users/{uuid}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/user_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/user_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/user_status'
      description: This operation gets a User.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - users
      x-ntnx-operations:
        - view
      x-ntnx-kind: user
      summary: Get a User
  /versions:
    get:
      description: A version is the major and minor number of the API.
      tags:
        - versions
      x-doc-hide: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/versions'
      summary: Get details on the api version
  /vm_recovery_points:
    post:
      x-ntnx-permissions:
        - vm_recovery_point.create
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_input'
      tags:
        - vm_recovery_point
      x-doc-hide: true
      summary: Create kind recovery point
      x-ntnx-operations:
        - create
      x-ntnx-kind: vm_recovery_point
      description: |
        Given an intentful spec, creates a recovery point with associated
        metadata
  /vm_recovery_points/list:
    post:
      x-ntnx-permissions:
        - vm_recovery_point.view
      description: Get kind recovery points.
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/vm_recovery_point_list_metadata'
      tags:
        - vm_recovery_point
      x-doc-hide: true
      summary: Get kind recovery points
      x-ntnx-operations:
        - view
      x-ntnx-kind: vm_recovery_point
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
  '/vm_recovery_points/{uuid}':
    put:
      x-ntnx-permissions:
        - vm_recovery_point.update
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_input'
      tags:
        - vm_recovery_point
      x-doc-hide: true
      summary: Update kind recovery point
      x-ntnx-operations:
        - update
      x-ntnx-kind: vm_recovery_point
      description: |
        Given an intenful spec and recovery point uuid, update kind recovery
        point.
    get:
      x-ntnx-permissions:
        - vm_recovery_point.view
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_recovery_point_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vm_recovery_point
      x-doc-hide: true
      summary: Get kind recovery points
      x-ntnx-operations:
        - view
      x-ntnx-kind: vm_recovery_point
      description: 'Given a UUID, returns a kind recovery point definition.'
    delete:
      x-ntnx-permissions:
        - vm_recovery_point.delete
      responses:
        '200':
          description: Success
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_recovery_point_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vm_recovery_point
      x-doc-hide: true
      summary: Delete kind recovery point
      x-ntnx-operations:
        - delete
      x-ntnx-kind: vm_recovery_point
      description: Delete a kind recovery point given its uuid.
  /vm_snapshots:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_snapshot_intent_input'
      tags:
        - vm_snapshot
      x-doc-hide: true
      summary: Create VM snapshot
      x-ntnx-operations:
        - create
      x-ntnx-kind: vm_snapshot
      description: |
        Given an intentful spec, creates a snapshot with associated metadata
  /vm_snapshots/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_snapshot_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/vm_snapshot_list_metadata'
      tags:
        - vm_snapshot
      x-doc-hide: true
      summary: Get VM snapshots
      x-ntnx-operations:
        - view
      x-ntnx-kind: vm_snapshot
      description: |
        Get VM snapshots. Here is a list of supported filters
        - entity_uuid==UUID of the virtual machine
  '/vm_snapshots/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_snapshot_intent_input'
      tags:
        - vm_snapshot
      x-doc-hide: true
      summary: Update VM snapshot
      x-ntnx-operations:
        - update
      x-ntnx-kind: vm_snapshot
      description: |
        Given an intenful spec and snapshot UUID, update VM snapshot
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_snapshot_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vm_snapshot
      x-doc-hide: true
      summary: Get VM snapshot
      x-ntnx-operations:
        - view
      x-ntnx-kind: vm_snapshot
      description: 'Given a UUID, returns a VM snapshot definition'
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_snapshot_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_snapshot_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vm_snapshot
      x-doc-hide: true
      summary: Delete VM snapshot
      x-ntnx-operations:
        - delete
      x-ntnx-kind: vm_snapshot
      description: Delete a VM snapshot given its UUID
  /vms:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_intent_input'
      tags:
        - vms
      x-ntnx-operations:
        - create
      description: |
        This operation submits a request to create a VM based on the input parameters.
      x-ntnx-kind: vm
      summary: Create a VM
  /vms/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/vm_list_metadata'
      tags:
        - vms
      x-ntnx-operations:
        - view
      description: |
        This operation gets a list of VMs, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - vm_name

          - memory_size_bytes

          - num_sockets

          - num_vcpus_per_socket


        Note: Entities that have not been created successfully are not listed.
      x-ntnx-kind: vm
      summary: Get a list of VMs
  '/vms/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/vm_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/vm_intent_input'
      tags:
        - vms
      x-ntnx-operations:
        - update
        - update_power_state
      description: |
        This operation submits a request to update a VM based on the input parameters.
      x-ntnx-kind: vm
      summary: Update a VM
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/vm_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vms
      x-ntnx-operations:
        - view
      description: This operation gets a VM.
      x-ntnx-kind: vm
      summary: Get a VM
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/vm_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/vm_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - vms
      x-ntnx-operations:
        - delete
      description: This operation submits a request to delete a VM.
      x-ntnx-kind: vm
      summary: Delete a VM
  /volume_groups:
    post:
      description: This operation creates a volume group.
      parameters:
        - required: true
          in: body
          description: Volume group object.
          name: body
          schema:
            $ref: '#/definitions/volume_group_intent_input'
      tags:
        - volume_group
      x-doc-hide: true
      summary: Creates a volume group
      x-ntnx-operations:
        - create
      x-ntnx-kind: volume_group
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/volume_group_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/volume_group_status'
  /volume_groups/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/volume_group_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/volume_group_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/volume_group_list_metadata'
      tags:
        - volume_group
      x-doc-hide: true
      x-ntnx-ref-keys:
        - volume_group_reference
        - volume_group_reference_list
      summary: Retrieves all volume groups.
      x-ntnx-operations:
        - view
      x-ntnx-kind: volume_group
      description: This operation retrieves a list of all the volume groups.
  '/volume_groups/{uuid}':
    put:
      description: |
        This operation submits a request to update a volume group based on the input parameters.
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          description: Volume group object.
          name: body
          schema:
            $ref: '#/definitions/volume_group_intent_input'
      tags:
        - volume_group
      x-doc-hide: true
      summary: Updates specified volume group
      x-ntnx-operations:
        - update
      x-ntnx-kind: volume_group
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/volume_group_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/volume_group_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/volume_group_status'
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/volume_group_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/volume_group_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/volume_group_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - volume_group
      x-doc-hide: true
      x-ntnx-ref-keys:
        - volume_group_reference
      summary: Retrieves specified volume group.
      x-ntnx-operations:
        - view
      x-ntnx-kind: volume_group
      description: This operation retrieves a UUID specific volume group.
    delete:
      description: This operation deletes a volume group.
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - volume_group
      x-doc-hide: true
      summary: Deletes a volume group
      x-ntnx-operations:
        - delete
      x-ntnx-kind: volume_group
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/volume_group_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/volume_group_status'
  /webhooks:
    post:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/webhook_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/webhook_status'
      parameters:
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/webhook_intent_input'
      tags:
        - webhook
      x-ntnx-operations:
        - create
      description: |
        A webhook is an HTTP callback that provides event notification. After a webhook is created, the cluster generates an HTTP POST when specific events occur, for example a VM is created or a VM power state is changed.
      x-ntnx-kind: webhook
      summary: Create a Webhook
  /webhooks/list:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/webhook_list_intent_response'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/webhook_status'
      parameters:
        - required: true
          in: body
          name: get_entities_request
          schema:
            $ref: '#/definitions/webhook_list_metadata'
      tags:
        - webhook
      x-ntnx-operations:
        - view
      description: |
        This operation gets a list of Webhooks, allowing for sorting, filtering, and pagination.
        Supported Filters:

          - name

          - uuid


        Note: Entities that have not been created successfully are not listed.
      x-ntnx-kind: webhook
      summary: Get a list of Webhooks
  '/webhooks/{uuid}':
    put:
      responses:
        '202':
          description: Request Accepted
          schema:
            $ref: '#/definitions/webhook_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/webhook_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/webhook_status'
      parameters:
        - $ref: '#/parameters/uuid'
        - required: true
          in: body
          name: body
          schema:
            $ref: '#/definitions/webhook_intent_input'
      tags:
        - webhook
      x-ntnx-operations:
        - update
      description: 'Given an intenful spec and webhook uuid, update webhook.'
      x-ntnx-kind: webhook
      summary: Update a Webhook
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/webhook_intent_response'
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/webhook_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/webhook_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - webhook
      x-ntnx-operations:
        - view
      description: 'Given a UUID, returns a webhook definition.'
      x-ntnx-kind: webhook
      summary: Get a Webhook
    delete:
      responses:
        '202':
          description: Request Accepted
        '404':
          description: Invalid UUID provided
          schema:
            $ref: '#/definitions/webhook_status'
        default:
          description: Internal Error
          schema:
            $ref: '#/definitions/webhook_status'
      parameters:
        - $ref: '#/parameters/uuid'
      tags:
        - webhook
      x-ntnx-operations:
        - delete
      description: Delete a webhook given its uuid.
      x-ntnx-kind: webhook
      summary: Delete a Webhook
definitions:
  api_version:
    #TODO - productize this
    readOnly: true
    default: '3.1.0' #TODO - Can you $ref this out to /info/version? (or the other way around?)
    type: string
  403_status:
    #TODO - productize this
    title: 403 doggy title
    type: object
    properties:
      code:
        readOnly: true
        type: integer
        default: 403
        description: HTTP response code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        default: 'ERROR'
        type: string
      api_version:
        $ref: '#/definitions/api_version'
    description: |
      This is a 403 forbidden error, make some document here!!! No permission to access the resource.
  503_status:
    #TODO - productize this
    title: 503 doggy title
    type: object
    properties:
      code:
        readOnly: true
        type: integer
        default: 503
        description: HTTP response code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        default: 'whats_the_status_here'
        type: string
      api_version:
        $ref: '#/definitions/api_version'
    description: |
      This is a 503 service unavailable error!!
  uuid:
    #TODO - productize this
    pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
    type: string
    format: UUID
  access_control_policy_def_status:
    title: Access Control Policy status definition.
    required:
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the Access Control Policy entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Name of the Access Control Policy.
      resources:
        type: object
        properties:
          role_reference:
            description: The Role being assigned to a given user(s).
            $ref: '#/definitions/role_reference'
          user_reference_list:
            items:
              $ref: '#/definitions/user_reference'
            type: array
            description: The User(s) being assigned a given role.
          filter_list:
            x-ntnx-one-of:
              - required:
                  - context_list
            type: object
            properties:
              context_list:
                items:
                  $ref: '#/definitions/filter'
                type: array
                description: |
                  The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.
            description: |
              The list of filters, which define the entities.
        title: Access Control Policy Resources.
      description:
        type: string
        description: The description of the association of a role to a user in a given context.
    description: Access Control Policy status definition.
  access_control_policy_detail:
    title: Details of Access Control Policy.
    type: object
    properties:
      role:
        description: The Role being assigned to the user.
        $ref: '#/definitions/role'
      filter_list:
        x-ntnx-one-of:
          - required:
              - context_list
        type: object
        properties:
          context_list:
            items:
              $ref: '#/definitions/filter'
            type: array
            description: |
              The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.
        description: |
          The list of filters, which define the entities.
    description: Details of Access Control Policy.
  access_control_policy_intent_resource:
    title: access_control_policy Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/access_control_policy_def_status'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/access_control_policy_metadata'
    description: Response object for intentful operations on a access_control_policy
  access_control_policy_intent_response:
    title: access_control_policy Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/access_control_policy_def_status'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/access_control_policy_metadata'
    description: Response object for intentful operations on a access_control_policy
  access_control_policy_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/access_control_policy_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/access_control_policy_list_metadata_output'
    description: Response object for intentful operation of access_control_policys
  access_control_policy_list_metadata:
    title: Metadata for access_control_policy list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: access_control_policy
        x-ntnx-enum:
          - access_control_policy
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  access_control_policy_list_metadata_output:
    title: Metadata for access_control_policy list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: access_control_policy
        x-ntnx-enum:
          - access_control_policy
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  access_control_policy_metadata:
    title: access_control_policy metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when access_control_policy was last updated
        format: date-time
      kind:
        default: access_control_policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - access_control_policy
      uuid:
        $ref: '#/definitions/uuid'
        description: access_control_policy uuid
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when access_control_policy was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the access_control_policy
      name:
        readOnly: true
        type: string
        description: access_control_policy name
        maxLength: 64
    description: The access_control_policy kind metadata
  access_control_policy_reference:
    title: Reference to a access_control_policy
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: access_control_policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - access_control_policy
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a access_control_policy
  access_control_policy_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: access_control_policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - access_control_policy
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  account:
    title: account Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for account.
        maxLength: 1000
      resources:
        $ref: '#/definitions/account_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: account Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a account spec
  account_def_status:
    title: account Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the account.
      name:
        type: string
        description: account Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the account, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/account_resources_def_status'
      description:
        type: string
        description: A description for account.
    description: An intentful representation of a account status
  account_intent_input:
    title: account Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/account'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/account_metadata'
    description: An intentful representation of a account
  account_intent_resource:
    title: account Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/account_def_status'
      spec:
        $ref: '#/definitions/account'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/account_metadata'
    description: Response object for intentful operations on a account
  account_intent_response:
    title: account Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/account_def_status'
      spec:
        $ref: '#/definitions/account'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/account_metadata'
    description: Response object for intentful operations on a account
  account_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/account_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/account_list_metadata_output'
    description: Response object for intentful operation of accounts
  account_list_metadata:
    title: Metadata for account list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: account
        x-ntnx-enum:
          - account
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  account_list_metadata_output:
    title: Metadata for account list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: account
        x-ntnx-enum:
          - account
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  account_metadata:
    title: account metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when account was last updated
        format: date-time
      kind:
        default: account
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - account
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: account uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when account was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the account
      name:
        readOnly: true
        type: string
        description: account name
        maxLength: 64
    description: The account kind metadata
  account_reference:
    title: Reference to a account
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: account
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - account
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a account
  account_reference_upload:
    title: Reference to a account
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: account
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - account
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a account
  account_resources:
    title: Account resources
    required:
      - type
      - data
    type: object
    properties:
      type:
        type: string
      data:
        additionalProperties: true
        type: object
        description: Account data
    description: Account resources
  account_resources_def_status:
    title: Account resources
    required:
      - type
      - data
    type: object
    properties:
      type:
        type: string
      data:
        additionalProperties: true
        type: object
        description: Account data
    description: Account resources
  account_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: account
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - account
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  address:
    description: Host address.
    title: Host address.
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: IPV4 address.
      ipv6:
        pattern: '(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))'
        type: string
        description: IPV6 address.
      port:
        type: integer
        description: Port Number
        format: int32
      fqdn:
        type: string
        description: Fully qualified domain name.
    x-ntnx-one-of:
      - required:
          - ip
      - required:
          - ipv6
      - required:
          - fqdn
  api_request:
    title: API request
    required:
      - path_and_params
      - operation
    type: object
    properties:
      body:
        additionalProperties:
          type: object
        type: object
        description: The API request specification.
      operation:
        x-ntnx-enum:
          - DELETE
          - GET
          - HEAD
          - PATCH
          - POST
          - PUT
        type: string
        description: The REST method to use.
      path_and_params:
        type: string
        description: |
          The part of the API request that contains information
          such as the path and query.
    description: API request
  api_response:
    title: API response
    required:
      - path_and_params
      - api_response
      - status
    type: object
    properties:
      status:
        type: string
      api_response:
        additionalProperties:
          type: object
        type: object
      path_and_params:
        type: string
        description: |
          The part of API response that contains information such as the path
          and query.
    description: API Response
  app_action_input:
    title: Action for Application
    type: object
    properties:
      critical:
        default: false
        type: boolean
        description: action critical flag
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
        format: UUID
      runbook:
        description: |
          Action runbooks
        $ref: '#/definitions/app_runbook_input'
      attrs:
        additionalProperties: true
        type: object
        description: action attrs
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
    description: Action definition for Application
  app_action_input_upload:
    title: Action for Application
    type: object
    properties:
      critical:
        default: false
        type: boolean
        description: action critical flag
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
        format: UUID
      runbook:
        description: |
          Action runbooks
        $ref: '#/definitions/app_runbook_input_upload'
      attrs:
        additionalProperties: true
        type: object
        description: action attrs
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
    description: Action definition for Application
  app_action_response:
    title: Action for Application
    type: object
    properties:
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
        format: UUID
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      critical:
        default: false
        type: boolean
        description: action critical flag
      attrs:
        additionalProperties: true
        type: object
        description: action attrs
      runbook:
        description: |
          Action runbooks
        $ref: '#/definitions/app_runbook_response'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for action
      name:
        type: string
        description: ''
    description: Action definition for Application
  app_action_response_download:
    title: Action for Application
    type: object
    properties:
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
        format: UUID
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      critical:
        default: false
        type: boolean
        description: action critical flag
      attrs:
        additionalProperties: true
        type: object
        description: action attrs
      runbook:
        description: |
          Action runbooks
        $ref: '#/definitions/app_runbook_response_download'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for action
      name:
        type: string
        description: ''
    description: Action definition for Application
  app_blueprint_render_info_input:
    title: Render AppBlueprint input spec
    required:
      - name
      - input_type
      - input_spec
    type: object
    properties:
      input_type:
        x-ntnx-enum:
          - VM_REFERENCE
          - VM_REFERENCE_WITH_CUSTOMIZATION
        type: string
      input_spec:
        description: Spec based on the type
        title: Spec for the given entity type
        type: object
        properties:
          vm_reference_with_customization:
            $ref: '#/definitions/vm_reference_with_customization'
          vm_reference:
            $ref: '#/definitions/vm_reference'
        x-ntnx-one-of:
          - required:
              - vm_reference
          - required:
              - vm_reference_with_customization
      name:
        type: string
        description: Name of the rendered app blueprint
        maxLength: 64
      description:
        type: string
        description: A description for the rendered app blueprint
        maxLength: 1000
    description: |
      Source spec that describes an entity like a VM that should be translated into an AppBlueprint
  app_blueprint_render_info_output:
    title: Render AppBlueprint output spec
    type: object
    properties:
      blueprint_spec:
        $ref: '#/definitions/blueprint_upload'
    description: The rendered blueprint spec
  app_cost_input:
    title: Cost for Application
    required:
      - name
      - uuid
      - type
      - interval
      - value
    type: object
    properties:
      description:
        type: string
        description: ''
      interval:
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LIVE
          - STATIC
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      name:
        type: string
        description: ''
    description: Cost definition for Application
  app_cost_input_upload:
    title: Cost for Application
    required:
      - name
      - type
      - interval
      - value
    type: object
    properties:
      description:
        type: string
        description: ''
      interval:
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LIVE
          - STATIC
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      name:
        type: string
        description: ''
    description: Cost definition for Application
  app_cost_response:
    title: Cost for Application
    required:
      - name
      - uuid
      - type
      - interval
      - value
      - state
      - message_list
    type: object
    properties:
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LIVE
          - STATIC
        type: string
        description: ''
      interval:
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      state:
        type: string
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      name:
        type: string
        description: ''
    description: Cost definition for Application
  app_cost_response_download:
    title: Cost for Application
    required:
      - name
      - type
      - interval
      - value
      - state
      - message_list
    type: object
    properties:
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LIVE
          - STATIC
        type: string
        description: ''
      interval:
        x-ntnx-enum:
          - HOUR
          - WEEK
          - MONTH
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      state:
        type: string
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      name:
        type: string
        description: ''
    description: Cost definition for Application
  app_credential_input:
    title: Credential for application
    required:
      - name
      - uuid
      - type
      - username
      - secret
    type: object
    properties:
      username:
        type: string
        description: ''
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      description:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      type:
        x-ntnx-enum:
          - PASSWORD
          - KEY
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
    description: Credential for application
  app_credential_input_upload:
    title: Credential for application
    required:
      - name
      - type
      - username
      - secret
    type: object
    properties:
      username:
        type: string
        description: ''
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      description:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      type:
        x-ntnx-enum:
          - PASSWORD
          - KEY
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
    description: Credential for application
  app_credential_reference:
    title: Reference to a app_credential
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_credential
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_credential
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_credential
  app_credential_reference_upload:
    title: Reference to a app_credential
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_credential
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_credential
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_credential
  app_credential_response:
    title: Credential for Application
    required:
      - name
      - uuid
      - type
      - username
      - secret
    type: object
    properties:
      username:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - PASSWORD
          - KEY
        type: string
        description: ''
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      name:
        type: string
        description: ''
    description: Credential definition for Application
  app_credential_response_download:
    title: Credential for Application
    required:
      - name
      - type
      - username
      - secret
    type: object
    properties:
      username:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - PASSWORD
          - KEY
        type: string
        description: ''
      secret:
        additionalProperties: true
        type: object
        description: Credential secret object
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      name:
        type: string
        description: ''
    description: Credential definition for Application
  app_package_element:
    title: Package element for Application
    required:
      - name
      - uuid
      - type
      - state
    type: object
    properties:
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      type:
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
        type: string
        description: ''
      service_local_reference_list:
        items:
          $ref: '#/definitions/app_service_reference'
        type: array
        description: References of the service.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      version:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for package
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Package definition for Application
  app_package_input:
    title: Package for Application
    required:
      - name
      - uuid
      - type
    type: object
    properties:
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input'
        type: array
        description: |
          List of references to action
      service_local_reference_list:
        items:
          $ref: '#/definitions/app_service_reference'
        type: array
        description: References of the service.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      version:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_package_reference'
      type:
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
        type: string
        description: ''
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Package definition for Application
  app_package_input_upload:
    title: Package for Application
    required:
      - name
      - type
    type: object
    properties:
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input_upload'
        type: array
        description: |
          List of references to action
      service_local_reference_list:
        items:
          $ref: '#/definitions/app_service_reference_upload'
        type: array
        description: References of the service.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      version:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_package_reference_upload'
      type:
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
        type: string
        description: ''
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Package definition for Application
  app_package_reference:
    title: Reference to a app_package
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_package
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_package
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_package
  app_package_reference_upload:
    title: Reference to a app_package
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_package
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_package
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_package
  app_package_response:
    title: Package for Application
    required:
      - name
      - uuid
      - type
      - state
    type: object
    properties:
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      element_list:
        items:
          $ref: '#/definitions/app_package_element'
        type: array
        description: ''
      account_reference:
        $ref: '#/definitions/account_reference'
      service_element_local_reference_list:
        items:
          $ref: '#/definitions/app_service_element'
        type: array
        description: ''
      config_reference:
        $ref: '#/definitions/app_package_reference'
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
        type: string
        description: ''
      service_local_reference_list:
        items:
          $ref: '#/definitions/app_service_reference'
        type: array
        description: References of the service.
      state:
        type: string
        description: ''
      version:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for package
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
    description: Package definition for Application
  app_package_response_download:
    title: Package for Application
    required:
      - name
      - uuid
      - type
      - state
    type: object
    properties:
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      element_list:
        items:
          $ref: '#/definitions/app_package_element'
        type: array
        description: ''
      account_reference:
        $ref: '#/definitions/account_reference_upload'
      service_element_local_reference_list:
        items:
          $ref: '#/definitions/app_service_element'
        type: array
        description: ''
      config_reference:
        $ref: '#/definitions/app_package_reference_upload'
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      name:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - SNAPSHOT
          - ISO
          - DEB
          - RPM
          - DOCKER_IMAGE
          - CHEF_COOKBOOK
          - PUPPET_MANIFEST
          - CUSTOM
          - SUBSTRATE_IMAGE
        type: string
        description: ''
      service_local_reference_list:
        items:
          $ref: '#/definitions/app_service_reference'
        type: array
        description: References of the service.
      state:
        type: string
        description: ''
      version:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for package
      options:
        additionalProperties: true
        type: object
        description: Details based on type of the package.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
    description: Package definition for Application
  app_profile_input:
    title: App profile resource
    required:
      - name
      - uuid
    type: object
    properties:
      deployment_create_list:
        items:
          $ref: '#/definitions/blueprint_deployment_input'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input'
        type: array
        description: |
          List of references to action
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: App profile resources
  app_profile_input_upload:
    title: App profile resource
    required:
      - name
    type: object
    properties:
      deployment_create_list:
        items:
          $ref: '#/definitions/blueprint_deployment_input_upload'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input_upload'
        type: array
        description: |
          List of references to action
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: App profile resources
  app_profile_reference:
    title: Reference to a app_profile
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_profile
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_profile
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_profile
  app_profile_reference_upload:
    title: Reference to a app_profile
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_profile
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_profile
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_profile
  app_profile_response:
    title: App profile resources
    required:
      - name
      - uuid
      - state
      - message_list
      - dependency_list
    type: object
    properties:
      deployment_create_list:
        items:
          $ref: '#/definitions/blueprint_deployment_response'
        type: array
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for blueprint deployment
      dependency_list:
        items:
          $ref: '#/definitions/blueprint_dependency_list'
        type: array
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: App profile resources
  app_profile_response_download:
    title: App profile resources
    required:
      - name
      - state
      - message_list
      - dependency_list
    type: object
    properties:
      deployment_create_list:
        items:
          $ref: '#/definitions/blueprint_deployment_response_download'
        type: array
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response_download'
        type: array
        description: |
          List of references to action
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for blueprint deployment
      dependency_list:
        items:
          $ref: '#/definitions/blueprint_dependency_list'
        type: array
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response_download'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: App profile resources
  app_runbook_input:
    title: Runbook for Application
    required:
      - name
      - uuid
    type: object
    properties:
      task_definition_list:
        items:
          $ref: '#/definitions/app_task_input'
        type: array
        description: ''
      description:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      main_task_local_reference:
        $ref: '#/definitions/app_task_reference'
      name:
        type: string
        description: ''
    description: Runbook definition for Application
  app_runbook_input_upload:
    title: Runbook for Application
    required:
      - name
    type: object
    properties:
      task_definition_list:
        items:
          $ref: '#/definitions/app_task_input_upload'
        type: array
        description: ''
      description:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      main_task_local_reference:
        $ref: '#/definitions/app_task_reference_upload'
      name:
        type: string
        description: ''
    description: Runbook definition for Application
  app_runbook_response:
    title: Runbook for Application
    required:
      - name
      - uuid
      - state
      - message_list
    type: object
    properties:
      task_definition_list:
        items:
          $ref: '#/definitions/app_task_response'
        type: array
        description: ''
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      main_task_local_reference:
        $ref: '#/definitions/app_task_reference'
      name:
        type: string
        description: ''
    description: Runbook definition for Application
  app_runbook_response_download:
    title: Runbook for Application
    required:
      - name
      - state
      - message_list
    type: object
    properties:
      task_definition_list:
        items:
          $ref: '#/definitions/app_task_response_download'
        type: array
        description: ''
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response_download'
        type: array
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      main_task_local_reference:
        $ref: '#/definitions/app_task_reference_upload'
      name:
        type: string
        description: ''
    description: Runbook definition for Application
  app_service_element:
    title: Service element for Application
    required:
      - name
      - uuid
      - state
      - action_list
      - variable_list
    type: object
    properties:
      port_list:
        items:
          $ref: '#/definitions/app_service_port'
        type: array
        description: ''
      singleton:
        default: false
        type: boolean
        description: |
          If True, then this service can only be in a deployment with replica 1
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      depends_on_list:
        items:
          $ref: '#/definitions/entity_reference'
        type: array
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      tier:
        type: string
        description: Service tier name
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for service
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Service definition for Application
  app_service_input:
    title: Service for Application
    required:
      - name
      - uuid
      - variable_list
      - action_list
    type: object
    properties:
      port_list:
        items:
          $ref: '#/definitions/app_service_port'
        type: array
        description: ''
      singleton:
        default: false
        type: boolean
        description: |
          If True, then this service can only be in a deployment with replica 1
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input'
        type: array
        description: |
          List of references to service action
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      tier:
        type: string
        description: Service tier name
      depends_on_list:
        items:
          $ref: '#/definitions/entity_reference'
        type: array
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_service_reference'
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Service definition for Application
  app_service_input_upload:
    title: Service for Application
    required:
      - name
      - variable_list
      - action_list
    type: object
    properties:
      port_list:
        items:
          $ref: '#/definitions/app_service_port'
        type: array
        description: ''
      singleton:
        default: false
        type: boolean
        description: |
          If True, then this service can only be in a deployment with replica 1
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input_upload'
        type: array
        description: |
          List of references to service action
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      tier:
        type: string
        description: Service tier name
      depends_on_list:
        items:
          $ref: '#/definitions/entity_reference'
        type: array
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_service_reference_upload'
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Service definition for Application
  app_service_port:
    title: Port for Application Service.
    required:
      - target_port
      - protocol
    type: object
    properties:
      target_port:
        type: string
        description: ''
      protocol:
        type: string
        description: ''
      endpoint_name:
        type: string
        description: ''
    description: Port for Application Service.
  app_service_reference:
    title: Reference to a app_service
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_service
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_service
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_service
  app_service_reference_upload:
    title: Reference to a app_service
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_service
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_service
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_service
  app_service_response:
    title: Service for Application
    required:
      - name
      - uuid
      - state
      - action_list
      - variable_list
    type: object
    properties:
      port_list:
        items:
          $ref: '#/definitions/app_service_port'
        type: array
        description: ''
      singleton:
        default: false
        type: boolean
        description: |
          If True, then this service can only be in a deployment with replica 1
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
      element_list:
        items:
          $ref: '#/definitions/app_service_element'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      tier:
        type: string
        description: Service tier name
      state:
        type: string
        description: ''
      depends_on_list:
        items:
          $ref: '#/definitions/entity_reference'
        type: array
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_service_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for service
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Service definition for Application
  app_service_response_download:
    title: Service for Application
    required:
      - name
      - uuid
      - state
      - action_list
      - variable_list
    type: object
    properties:
      port_list:
        items:
          $ref: '#/definitions/app_service_port'
        type: array
        description: ''
      singleton:
        default: false
        type: boolean
        description: |
          If True, then this service can only be in a deployment with replica 1
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
      element_list:
        items:
          $ref: '#/definitions/app_service_element'
        type: array
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      tier:
        type: string
        description: Service tier name
      state:
        type: string
        description: ''
      depends_on_list:
        items:
          $ref: '#/definitions/entity_reference'
        type: array
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      config_reference:
        $ref: '#/definitions/app_service_reference_upload'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for service
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Service definition for Application
  app_substrate_element:
    title: Substrate element for Application
    required:
      - uuid
      - name
      - type
      - variable_list
      - action_list
      - state
    type: object
    properties:
      instance_name:
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      create_spec:
        additionalProperties: true
        type: object
        description: Spec of the substrate
      instance_power_state:
        type: string
        description: ''
      platform_data:
        type: string
        description: ''
      instance_address:
        type: string
        description: ''
      name:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      instance_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      os_type:
        type: string
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: List of variables
    description: Substrate element definition for Application
  app_substrate_input:
    title: Substrate definition
    required:
      - uuid
      - name
      - type
      - variable_list
      - action_list
    type: object
    properties:
      instance_name:
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input'
        type: array
        description: |
          List of references to action
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      config_reference:
        $ref: '#/definitions/app_substrate_reference'
      create_spec:
        additionalProperties: true
        type: object
        description: Spec of the substrate
      instance_power_state:
        type: string
        description: ''
      platform_data:
        type: string
        description: ''
      instance_address:
        type: string
        description: ''
      name:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      instance_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      os_type:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: List of variables
    description: Substrate definition
  app_substrate_input_upload:
    title: Substrate definition
    required:
      - name
      - type
      - variable_list
      - action_list
    type: object
    properties:
      instance_name:
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input_upload'
        type: array
        description: |
          List of references to action
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe_upload'
      config_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      create_spec:
        additionalProperties: true
        type: object
        description: Spec of the substrate
      instance_power_state:
        type: string
        description: ''
      platform_data:
        type: string
        description: ''
      instance_address:
        type: string
        description: ''
      name:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      instance_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      os_type:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: List of variables
    description: Substrate definition
  app_substrate_readiness_probe:
    title: Readiness probe for substrate
    type: object
    properties:
      connection_type:
        x-ntnx-enum:
          - SSH
          - POWERSHELL
        type: string
        description: ''
      timeout_secs:
        type: string
        description: ''
      address:
        type: string
        description: ''
      login_credential_local_reference:
        $ref: '#/definitions/app_credential_reference'
      connection_port:
        default: 22
        type: integer
        description: ''
      disable_readiness_probe:
        type: boolean
        description: ''
    description: Readiness probe for substrate
  app_substrate_readiness_probe_upload:
    title: Readiness probe for substrate
    type: object
    properties:
      connection_type:
        x-ntnx-enum:
          - SSH
          - POWERSHELL
        type: string
        description: ''
      timeout_secs:
        type: string
        description: ''
      address:
        type: string
        description: ''
      login_credential_local_reference:
        $ref: '#/definitions/app_credential_reference_upload'
      connection_port:
        default: 22
        type: integer
        description: ''
      disable_readiness_probe:
        type: boolean
        description: ''
    description: Readiness probe for substrate
  app_substrate_reference:
    title: Reference to a app_substrate
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_substrate
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_substrate
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_substrate
  app_substrate_reference_upload:
    title: Reference to a app_substrate
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_substrate
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_substrate
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_substrate
  app_substrate_response:
    title: Deployment Sustrate Definition for Application.
    required:
      - uuid
      - name
      - type
      - variable_list
      - action_list
      - state
    type: object
    properties:
      instance_name:
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      element_list:
        items:
          $ref: '#/definitions/app_substrate_element'
        type: array
        description: ''
      account_reference:
        $ref: '#/definitions/account_reference'
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      config_reference:
        $ref: '#/definitions/app_substrate_reference'
      create_spec:
        additionalProperties: true
        type: object
        description: Spec of the substrate
      instance_power_state:
        type: string
        description: ''
      platform_data:
        type: string
        description: ''
      instance_address:
        type: string
        description: ''
      name:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      instance_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      os_type:
        type: string
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: List of variables
    description: Substrate info for deployment
  app_substrate_response_download:
    title: Deployment Sustrate Definition for Application.
    required:
      - uuid
      - name
      - type
      - variable_list
      - action_list
      - state
    type: object
    properties:
      instance_name:
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      element_list:
        items:
          $ref: '#/definitions/app_substrate_element'
        type: array
        description: ''
      account_reference:
        $ref: '#/definitions/account_reference_upload'
      readiness_probe:
        $ref: '#/definitions/app_substrate_readiness_probe'
      config_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      create_spec:
        additionalProperties: true
        type: object
        description: Spec of the substrate
      instance_power_state:
        type: string
        description: ''
      platform_data:
        type: string
        description: ''
      instance_address:
        type: string
        description: ''
      name:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - VM
          - AHV_VM
          - AWS_VM
          - EXISTING_VM
          - BARE_METAL
          - GENERIC
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      instance_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      state:
        type: string
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      os_type:
        type: string
        description: ''
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: List of variables
    description: Substrate info for deployment
  app_task_input:
    title: Task for Application
    required:
      - name
      - uuid
      - type
    type: object
    properties:
      target_any_local_reference:
        $ref: '#/definitions/entity_reference'
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      child_tasks_local_reference_list:
        items:
          $ref: '#/definitions/app_task_reference'
        type: array
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        type: string
        description: task timeout
      type:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Task definition for Application
  app_task_input_upload:
    title: Task for Application
    required:
      - name
      - type
    type: object
    properties:
      target_any_local_reference:
        $ref: '#/definitions/entity_reference'
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      child_tasks_local_reference_list:
        items:
          $ref: '#/definitions/app_task_reference_upload'
        type: array
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        type: string
        description: task timeout
      type:
        type: string
        description: ''
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Task definition for Application
  app_task_reference:
    title: Reference to a app_task
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: app_task
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_task
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_task
  app_task_reference_upload:
    title: Reference to a app_task
    required:
      - kind
      - name
    type: object
    properties:
      kind:
        default: app_task
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - app_task
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a app_task
  app_task_response:
    title: Task for Application
    required:
      - name
      - uuid
      - type
      - state
      - message_list
    type: object
    properties:
      target_any_local_reference:
        $ref: '#/definitions/entity_reference'
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      child_tasks_local_reference_list:
        items:
          $ref: '#/definitions/app_task_reference'
        type: array
        description: ''
      state:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        type: string
        description: task timeout
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Task definition for Application
  app_task_response_download:
    title: Task for Application
    required:
      - name
      - type
      - state
      - message_list
    type: object
    properties:
      target_any_local_reference:
        $ref: '#/definitions/entity_reference'
      description:
        type: string
        description: ''
      type:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      child_tasks_local_reference_list:
        items:
          $ref: '#/definitions/app_task_reference_upload'
        type: array
        description: ''
      state:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: Task attrs for application of type object
      timeout_secs:
        type: string
        description: task timeout
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response_download'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Task definition for Application
  app_variable_input:
    title: Variable definition for application.
    required:
      - name
      - uuid
    type: object
    properties:
      val_type:
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
        type: string
        description: ''
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      label:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      type:
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
        type: string
        description: ''
      name:
        type: string
        description: ''
    description: Variable definition for application.
  app_variable_input_upload:
    title: Variable definition for application.
    required:
      - name
    type: object
    properties:
      val_type:
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
        type: string
        description: ''
      description:
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      label:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      type:
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
        type: string
        description: ''
      name:
        type: string
        description: ''
    description: Variable definition for application.
  app_variable_response:
    title: Variable definition for application.
    required:
      - name
      - uuid
      - state
      - message_list
    type: object
    properties:
      val_type:
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
        type: string
        description: ''
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      label:
        type: string
        description: ''
      state:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for variable
      name:
        type: string
        description: ''
    description: Variable definition for application.
  app_variable_response_download:
    title: Variable definition for application.
    required:
      - name
      - state
      - message_list
    type: object
    properties:
      val_type:
        x-ntnx-enum:
          - STRING
          - INT
          - LIST
          - DICT
        type: string
        description: ''
      description:
        type: string
        description: ''
      type:
        x-ntnx-enum:
          - LOCAL
          - SECRET
          - EXTERNAL_STORE
        type: string
        description: ''
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      value:
        type: string
        description: ''
      label:
        type: string
        description: ''
      state:
        type: string
        description: ''
      attrs:
        additionalProperties: true
        type: object
        description: ''
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for variable
      name:
        type: string
        description: ''
    description: Variable definition for application.
  attachment_reference:
    description: Attached iSCSI initiators.
    title: Attached iSCSI initiators
    type: object
    properties:
      vm_reference:
        $ref: '#/definitions/reference'
      iscsi_initiator_name:
        type: string
        description: |
          Name of the iSCSI initiator of the workload outside Nutanix cluster.
        maxLength: 64
    x-ntnx-one-of:
      - required:
          - vm_reference
      - required:
          - iscsi_initiator_name
  attribute:
    title: Directory service search attributes response
    type: object
    properties:
      value_list:
        items:
          type: string
        type: array
        description: Value of the attribute.
      name:
        type: string
        description: Name of the attribute.
    description: The attributes for the directory service.
  availability_zone_reference:
    title: Reference to a availability_zone
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: availability_zone
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - availability_zone
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a availability_zone
  aws_credentials:
    title: AWS Credentials
    required:
      - access_key
      - secret_key
    type: object
    properties:
      access_key:
        type: string
      secret_key:
        type: string
    description: Credentials to access AWS
  backup_policy:
    additionalProperties: true
    title: Entity Backup Policy.
    type: object
    properties:
      consistency_group_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Consistency group to which this entity belongs to.
      default_snapshot_type:
        description: Default snapshot type.
        $ref: '#/definitions/snapshot_type'
      snapshot_policy_list:
        items:
          $ref: '#/definitions/snapshot_policy'
        type: array
        description: |
          An array of snapshot policies which describe where and how to
          backup the kind.
    description: Describes how and where to backup the entity.
  basic_credential:
    title: Basic Credentials to connect with remote endpoint
    type: object
    properties:
      username:
        type: string
        description: |
          username of authorized user on remote cluster,
          must for BASIC auth_type
      password:
        type: string
        description: |
          password of authorized user on remote cluster,
          must for BASIC auth_type
    description: Basic Credentials to connect with remote endpoint
  batch_list_metadata:
    title: Metadata for batch list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: batch
        x-ntnx-enum:
          - batch
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  batch_list_metadata_output:
    title: Metadata for batch list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: batch
        x-ntnx-enum:
          - batch
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  batch_metadata:
    title: batch metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when batch was last updated
        format: date-time
      kind:
        default: batch
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - batch
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: batch uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when batch was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the batch
      name:
        readOnly: true
        type: string
        description: batch name
        maxLength: 64
    description: The batch kind metadata
  batch_reference:
    title: Reference to a batch
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: batch
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - batch
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a batch
  batch_request:
    title: Batch request
    required:
      - api_version
      - api_request_list
    type: object
    properties:
      execution_order:
        default: SEQUENTIAL
        x-ntnx-enum:
          - SEQUENTIAL
        type: string
        description: |
          The order of execution of the APIs in the batch.
      action_on_failure:
        default: CONTINUE
        x-ntnx-enum:
          - CONTINUE
          - ABORT
        type: string
        description: |
          If the specified parameter is CONTINUE, the remaining APIs in the batch
          continue to be executed.
      api_request_list:
        items:
          $ref: '#/definitions/api_request'
        type: array
        description: A list of API requests in the batch.
      api_version:
        readOnly: true
        type: string
        description: The current API version.
    description: Request for batch operations.
  batch_response:
    title: Batch api success response
    type: object
    properties:
      api_response_list:
        items:
          $ref: '#/definitions/api_response'
        type: array
    description: List of responses for the API requests in the batch.
  batch_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: batch
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - batch
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  block:
    title: Host block information
    type: object
    properties:
      block_serial_number:
        type: string
        description: Rackable unit serial number.
      block_model:
        type: string
        description: Rackable unit model name.
    description: Host block config info.
  blueprint:
    title: blueprint Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for blueprint.
        maxLength: 1000
      resources:
        $ref: '#/definitions/blueprint_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: blueprint Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a blueprint spec
  blueprint_def_status:
    title: blueprint Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the blueprint.
      name:
        type: string
        description: blueprint Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the blueprint, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/blueprint_resources_def_status'
      description:
        type: string
        description: A description for blueprint.
    description: An intentful representation of a blueprint status
  blueprint_dependency_list:
    title: Depends on Definition for Application.
    required:
      - getter_resource_kind
      - getter_resource_name
      - setter_resource_attr
      - setter_resource_kind
      - setter_resource_name
      - action_resource_kind
      - action_resource_name
      - action_name
    type: object
    properties:
      getter_resource_kind:
        type: string
        description: ''
      from_resource_kind:
        type: string
        description: ''
      setter_resource_kind:
        type: string
        description: ''
      setter_resource_name:
        type: string
        description: ''
      action_name:
        type: string
        description: ''
      action_resource_name:
        type: string
        description: ''
      getter_resource_name:
        type: string
        description: ''
      setter_resource_attr:
        type: string
        description: ''
      action_resource_kind:
        type: string
        description: ''
    description: Depends on definition for Application.
  blueprint_deployment_input:
    title: Deployment definition for Application.
    required:
      - name
      - uuid
      - substrate_local_reference
      - min_replicas
      - max_replicas
    type: object
    properties:
      percent_fault_tolerance:
        type: integer
        description: ''
        format: int64
      fault_domain_scope:
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input'
        type: array
        description: List of references to action
      package_local_reference_list:
        items:
          $ref: '#/definitions/app_package_reference'
        type: array
        description: List of references for the packages
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      max_replicas:
        default: '1'
        type: string
        description: Maximum replicas for the deployment.
      num_fault_tolerance:
        type: integer
        description: ''
        format: int64
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference'
      min_replicas:
        default: '1'
        type: string
        description: Minimum replicas for the deployment.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Deployment definition for Application.
  blueprint_deployment_input_upload:
    title: Deployment definition for Application.
    required:
      - name
      - substrate_local_reference
      - min_replicas
      - max_replicas
    type: object
    properties:
      percent_fault_tolerance:
        type: integer
        description: ''
        format: int64
      fault_domain_scope:
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_input_upload'
        type: array
        description: List of references to action
      package_local_reference_list:
        items:
          $ref: '#/definitions/app_package_reference_upload'
        type: array
        description: List of references for the packages
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      max_replicas:
        default: '1'
        type: string
        description: Maximum replicas for the deployment.
      num_fault_tolerance:
        type: integer
        description: ''
        format: int64
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      min_replicas:
        default: '1'
        type: string
        description: Minimum replicas for the deployment.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input_upload'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Deployment definition for Application.
  blueprint_deployment_response:
    title: Deployment Definition for Application.
    required:
      - name
      - uuid
      - substrate_local_reference
      - min_replicas
      - max_replicas
      - state
      - message_list
    type: object
    properties:
      percent_fault_tolerance:
        type: integer
        description: ''
        format: int64
      fault_domain_scope:
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response'
        type: array
        description: |
          List of references to action
      package_local_reference_list:
        items:
          $ref: '#/definitions/app_package_reference'
        type: array
        description: List of references for the packages
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      min_replicas:
        default: '1'
        type: string
        description: Minimum replicas for the deployment.
      state:
        type: string
        description: ''
      max_replicas:
        default: '1'
        type: string
        description: Maximum replicas for the deployment.
      num_fault_tolerance:
        type: integer
        description: ''
        format: int64
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for blueprint deployment
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Deployment definition for Application.
  blueprint_deployment_response_download:
    title: Deployment Definition for Application.
    required:
      - name
      - substrate_local_reference
      - min_replicas
      - max_replicas
      - state
      - message_list
    type: object
    properties:
      percent_fault_tolerance:
        type: integer
        description: ''
        format: int64
      fault_domain_scope:
        x-ntnx-enum:
          - HOST
          - CLUSTER
          - AZ
        type: string
        description: ''
      description:
        type: string
        description: ''
      action_list:
        items:
          $ref: '#/definitions/app_action_response_download'
        type: array
        description: |
          List of references to action
      package_local_reference_list:
        items:
          $ref: '#/definitions/app_package_reference_upload'
        type: array
        description: List of references for the packages
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ''
        format: UUID
      min_replicas:
        default: '1'
        type: string
        description: Minimum replicas for the deployment.
      state:
        type: string
        description: ''
      max_replicas:
        default: '1'
        type: string
        description: Maximum replicas for the deployment.
      num_fault_tolerance:
        type: integer
        description: ''
        format: int64
      editables:
        additionalProperties: true
        type: object
        description: |
          Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.
      substrate_local_reference:
        $ref: '#/definitions/app_substrate_reference_upload'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for blueprint deployment
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response_download'
        type: array
        description: ''
      name:
        type: string
        description: ''
    description: Deployment definition for Application.
  blueprint_download_def_status:
    title: App blueprint download status
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
      name:
        type: string
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/blueprint_download_resources_def_status'
      description:
        type: string
    description: App blueprint download status
  blueprint_download_intent_response:
    title: blueprint Intent Response
    required:
      - api_version
      - metadata
      - spec
      - status
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_download_def_status'
      spec:
        $ref: '#/definitions/blueprint_upload'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response object for intentful operations on a blueprint
  blueprint_download_resources_def_status:
    title: Status of the Blueprint.
    type: object
    properties:
      service_definition_list:
        items:
          $ref: '#/definitions/app_service_response_download'
        type: array
        description: Service definitions for Blueprint.
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_response_download'
        type: array
        description: Substrate definitions for Blueprint.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_response_download'
        type: array
        description: Credential definitions for Blueprint.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for app blueprint
      app_profile_list:
        items:
          $ref: '#/definitions/app_profile_response_download'
        type: array
        description: App profile definitions for Blueprint.
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference_upload'
      package_definition_list:
        items:
          $ref: '#/definitions/app_package_response_download'
        type: array
        description: Package definitions for Blueprint.
      state:
        type: string
        description: ''
      client_attrs:
        additionalProperties: true
        type: object
        description: Data needed for clients.
      is_cloned:
        default: false
        type: boolean
        description: Cloned or original blueprint
    description: Status of the Blueprint.
  blueprint_intent_input:
    title: blueprint Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/blueprint'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: An intentful representation of a blueprint
  blueprint_intent_input_aP:
    title: blueprint Intent Entity
    required:
      - api_version
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/blueprint'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: An intentful representation of a blueprint
  blueprint_intent_resource:
    title: blueprint Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_def_status'
      spec:
        $ref: '#/definitions/blueprint'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response object for intentful operations on a blueprint
  blueprint_intent_response:
    title: blueprint Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_def_status'
      spec:
        $ref: '#/definitions/blueprint'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response object for intentful operations on a blueprint
  blueprint_launch_input:
    title: Launch Blueprint request.
    required:
      - api_version
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/blueprint_launch_spec'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Launch Blueprint request.
  blueprint_launch_response:
    title: Response containing the application uuid and create action runlog uuid
    required:
      - api_version
      - metadata
      - status
      - spec
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_launch_response_status'
      spec:
        $ref: '#/definitions/blueprint_launch_spec'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response containing the application uuid and create action and runlog uuid
  blueprint_launch_response_status:
    title: Status of the Blueprint launch.
    type: object
    properties:
      request_id:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Request id to track the launch process
        format: UUID
    description: Status of the Blueprint launch.
  blueprint_launch_spec:
    title: Spec for Blueprint launch.
    type: object
    properties:
      application_name:
        type: string
        description: Application name by which the application need to be created.
      app_profile_reference:
        $ref: '#/definitions/app_profile_reference'
      description:
        type: string
        description: description for blueprint launch
        maxLength: 5000
      resources:
        description: Runtime updated blueprint spec.
        $ref: '#/definitions/blueprint_resources'
    description: Spec for Blueprint launch.
  blueprint_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/blueprint_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_list_metadata_output'
    description: Response object for intentful operation of blueprints
  blueprint_list_metadata:
    title: Metadata for blueprint list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: blueprint
        x-ntnx-enum:
          - blueprint
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  blueprint_list_metadata_output:
    title: Metadata for blueprint list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: blueprint
        x-ntnx-enum:
          - blueprint
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  blueprint_marketplace_launch_input:
    title: Launch Marketplace Blueprint request.
    required:
      - api_version
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/blueprint_marketplace_launch_spec'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Launch Blueprint request.
  blueprint_marketplace_launch_response:
    title: Response containing the uuid of the newly created app blueprint object
    required:
      - api_version
      - metadata
      - status
      - spec
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_marketplace_launch_response_status'
      spec:
        $ref: '#/definitions/blueprint_marketplace_launch_spec'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response containing the uuid of the newly created app blueprint object
  blueprint_marketplace_launch_response_status:
    title: Status of the Blueprint.
    type: object
    properties:
      app_blueprint_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: AppBlueprint uuid.
        format: UUID
      description:
        type: string
        description: Description for the marketplace item
      resources:
        $ref: '#/definitions/blueprint_resources_def_status'
    description: Status of the Blueprint.
  blueprint_marketplace_launch_spec:
    title: Spec for Blueprint launch.
    required:
      - resources
      - app_blueprint_name
    type: object
    properties:
      app_blueprint_name:
        type: string
        description: Name of the app blueprint to be created.
      description:
        type: string
        description: Description for the marketplace item
      resources:
        description: Blueprint spec of the marketplace blueprint.
        $ref: '#/definitions/blueprint_upload_resources'
      environment_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Environment uuid.
        format: UUID
    description: Spec for Blueprint launch.
  blueprint_metadata:
    title: blueprint metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when blueprint was last updated
        format: date-time
      kind:
        default: blueprint
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - blueprint
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: blueprint uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when blueprint was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the blueprint
      name:
        readOnly: true
        type: string
        description: blueprint name
        maxLength: 64
    description: The blueprint kind metadata
  blueprint_pending_launches_list_response:
    title: Response containing all the pending bp launches
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/blueprint_pending_launches_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_list_metadata_output'
    description: Response containing all the bp launch requests which have not completed
  blueprint_pending_launches_resource:
    title: blueprint launches in progress response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/blueprint_pending_launches_status'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: Response object for the launches in progress for app blueprints
  blueprint_pending_launches_response:
    title: Response containing the state of the launch
    required:
      - state
      - milestone
      - bp_name
      - app_name
    type: object
    properties:
      application_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: application uuid present after the status moves to success
        format: UUID
      state:
        type: string
        description: 'state of launch which can be pending, running, success, failure'
      blueprint_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: blueprint uuid
        format: UUID
      app_name:
        type: string
        description: name of the application
      milestone:
        type: string
        description: gives more granularity in status
      bp_name:
        type: string
        description: name of the blueprint
      details:
        type: string
        description: additional details about the status of launch
    description: 'Response containing status, milestone reached and application uuid'
  blueprint_pending_launches_status:
    title: Status of the launch
    type: object
    properties:
      application_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: application uuid present after the status moves to success
        format: UUID
      app_name:
        type: string
        description: name of the application
      state:
        type: string
        description: Status of the launch
      blueprint_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: blueprint uuid
        format: UUID
      details:
        type: string
        description: additional details about the status of launch
      milestone:
        type: string
        description: gives more granularity in status
      bp_name:
        type: string
        description: name of the blueprint
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for app blueprint
    description: 'Response containing state, milestone reached and application uuid'
  blueprint_reference:
    title: Reference to a blueprint
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: blueprint
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - blueprint
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a blueprint
  blueprint_resources:
    title: Resources for Blueprint.
    type: object
    properties:
      service_definition_list:
        items:
          $ref: '#/definitions/app_service_input'
        type: array
        description: Service definitions for Blueprint.
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_input'
        type: array
        description: Substrate definitions for Blueprint.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_input'
        type: array
        description: Credential definitions for Blueprint.
      package_definition_list:
        items:
          $ref: '#/definitions/app_package_input'
        type: array
        description: Package definitions for Blueprint.
      app_profile_list:
        items:
          $ref: '#/definitions/app_profile_input'
        type: array
        description: App profile definitions for Blueprint.
      client_attrs:
        additionalProperties: true
        type: object
        description: Data needed for clients.
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference'
    description: Resources for Blueprint.
  blueprint_resources_def_status:
    title: Status of the Blueprint.
    type: object
    properties:
      service_definition_list:
        items:
          $ref: '#/definitions/app_service_response'
        type: array
        description: Service definitions for Blueprint.
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_response'
        type: array
        description: Substrate definitions for Blueprint.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_response'
        type: array
        description: Credential definitions for Blueprint.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: Message list for app blueprint
      app_profile_list:
        items:
          $ref: '#/definitions/app_profile_response'
        type: array
        description: App profile definitions for Blueprint.
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference'
      package_definition_list:
        items:
          $ref: '#/definitions/app_package_response'
        type: array
        description: Package definitions for Blueprint.
      state:
        type: string
        description: ''
      client_attrs:
        additionalProperties: true
        type: object
        description: Data needed for clients.
      is_cloned:
        default: false
        type: boolean
        description: Cloned or original blueprint
    description: Status of the Blueprint.
  blueprint_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: blueprint
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - blueprint
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  blueprint_upload:
    title: App blueprint upload kind
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        maxLength: 1000
      resources:
        $ref: '#/definitions/blueprint_upload_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: App blueprint upload kind
  blueprint_upload_intent_input_aP:
    title: blueprint Intent Entity
    required:
      - api_version
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/blueprint_upload'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/blueprint_metadata'
    description: An intentful representation of a blueprint
  blueprint_upload_output:
    title: Upload AppBlueprint output
    type: object
    properties:
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: uuid of the newly created AppBlueprint
        format: UUID
    description: The UUID of the newly created AppBlueprint
  blueprint_upload_resources:
    title: Resources for Blueprint.
    type: object
    properties:
      service_definition_list:
        items:
          $ref: '#/definitions/app_service_input_upload'
        type: array
        description: Service definitions for Blueprint.
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_input_upload'
        type: array
        description: Substrate definitions for Blueprint.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_input_upload'
        type: array
        description: Credential definitions for Blueprint.
      package_definition_list:
        items:
          $ref: '#/definitions/app_package_input_upload'
        type: array
        description: Package definitions for Blueprint.
      app_profile_list:
        items:
          $ref: '#/definitions/app_profile_input_upload'
        type: array
        description: App profile definitions for Blueprint.
      client_attrs:
        additionalProperties: true
        type: object
        description: Data needed for clients.
      default_credential_local_reference:
        $ref: '#/definitions/app_credential_reference_upload'
    description: Resources for Blueprint.
  build_info:
    title: Cluster build details
    required:
      - build_type
      - version
      - commit_id
      - short_commit_id
    type: object
    properties:
      commit_id:
        type: string
        description: Last Git commit id which the build is based on.
      version:
        type: string
        description: Numeric version. e.g. "5.5"
      short_commit_id:
        type: string
        description: First 6 characters of the last Git commit id.
      full_version:
        type: string
        description: Full version name.
      commit_date:
        type: string
        description: Date/time of the last commit.
        format: date-time
      build_type:
        type: string
        description: 'Build type, one of {dbg, opt, release}.'
    description: Cluster build details.
  ca_cert:
    title: CA certificate info
    required:
      - ca_name
      - certificate
    type: object
    properties:
      ca_name:
        type: string
        description: Name of the certificate authority.
      certificate:
        type: string
        description: Certificate content.
        format: byte
    description: CA certificate info.
  ca_chain_spec:
    title: CA chain spec
    required:
      - name
      - ca_chain
    type: object
    properties:
      ca_chain:
        type: string
        description: Content of CA chain
        format: byte
      name:
        type: string
        description: The name of the CA Chain file
        maxLength: 64
    description: CA chain spec
  category_filter:
    title: A category filter
    required:
      - params
    type: object
    properties:
      type:
        default: CATEGORIES_MATCH_ANY
        x-ntnx-enum:
          - CATEGORIES_MATCH_ALL
          - CATEGORIES_MATCH_ANY
        type: string
        description: The type of the filter being used.
      kind_list:
        items:
          type: string
        type: array
        description: List of kinds associated with this filter.
      params:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
        description: A list of category key and list of values.
    description: A category filter.
  category_key:
    title: Category Key definition.
    required:
      - name
    type: object
    properties:
      name:
        type: string
        description: Name of the category.
        maxLength: 64
      api_version:
        type: string
        description: API version.
      description:
        type: string
        description: Description of the category.
        maxLength: 1000
    description: Category key definition.
  category_key_list_response:
    title: Category key list response.
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/category_key_status'
        type: array
      api_version:
        type: string
        description: Api Version.
      metadata:
        $ref: '#/definitions/category_list_metadata'
    description: Category key list response.
  category_key_status:
    title: Category Key Definition.
    required:
      - name
    type: object
    properties:
      description:
        type: string
        description: Description of the category.
        maxLength: 1000
      name:
        type: string
        description: Name of the category.
        maxLength: 64
      api_version:
        type: string
        description: API version.
      system_defined:
        readOnly: true
        type: boolean
        description: Specifying whether its a system defined category.
    description: Category Key Definition.
  category_list_metadata:
    title: Metadata for category list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: category
        x-ntnx-enum:
          - category
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  category_list_metadata_output:
    title: Metadata for category list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: category
        x-ntnx-enum:
          - category
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  category_metadata:
    title: category metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when category was last updated
        format: date-time
      kind:
        default: category
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - category
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: category uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when category was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the category
      name:
        readOnly: true
        type: string
        description: category name
        maxLength: 64
    description: The category kind metadata
  category_query_input:
    title: Category Query Input
    type: object
    properties:
      usage_type:
        $ref: '#/definitions/category_query_usage_type'
      group_member_offset:
        type: integer
        description: The offset into the total member set to return per group.
        format: int64
      group_member_count:
        type: integer
        description: The maximum number of members to return per group.
        format: int64
      category_filter:
        $ref: '#/definitions/category_filter'
      api_version:
        type: string
        description: API version.
    description: Categories query input object.
  category_query_response:
    title: Category Query Response
    type: object
    properties:
      results:
        items:
          type: object
          properties:
            filtered_entity_count:
              type: integer
              description: Total number of filtered results.
              format: int64
            kind:
              type: string
              description: The entity kind.
            entity_any_reference_list:
              items:
                $ref: '#/definitions/entity_reference'
              type: array
              description: List of entity references.
            total_entity_count:
              type: integer
              description: Total number of the matched results.
              format: int64
        type: array
      api_version:
        type: string
        description: API version.
      metadata:
        type: object
        description: Response metadata.
        properties:
          total_matches:
            type: integer
            description: Total number of matched results.
            format: int64
          usage_type:
            $ref: '#/definitions/category_query_usage_type'
          group_member_offset:
            type: integer
            description: |
              The offset into the total records set to return per group.
            format: int64
          group_member_count:
            type: integer
            description: The maximum number of records to return per group.
            format: int64
    description: Categories query response object.
  category_query_usage_type:
    x-ntnx-enum:
      - USED_IN
      - APPLIED_TO
    type: string
    description: |
      USED_IN - to get policies in which specified categories are used.
      APPLIED_TO - to get entities attached to specified categories.
    title: Query Usage Type
  category_reference:
    title: Reference to a category
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: category
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - category
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a category
  category_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: category
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - category
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  category_value:
    title: Category Value definition.
    type: object
    properties:
      api_version:
        type: string
        description: API version.
      value:
        type: string
        description: Value for the category.
        maxLength: 64
      description:
        type: string
        description: Description of the category value.
        maxLength: 1000
    description: Category value definition.
  category_value_list_response:
    title: Category value list response.
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/category_value_status'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/category_list_metadata'
    description: Category Value list response.
  category_value_status:
    title: Category Value Definition.
    type: object
    properties:
      description:
        type: string
        description: Description of the category value.
        maxLength: 1000
      api_version:
        type: string
        description: API version.
      name:
        readOnly: true
        type: string
        description: The name of the category.
        maxLength: 64
      value:
        type: string
        description: The value of the category.
        maxLength: 64
      system_defined:
        readOnly: true
        type: boolean
        description: Specifying whether its a system defined category.
    description: Category value definition.
  certificate:
    title: Certificate content
    required:
      - content
    type: object
    properties:
      content:
        type: string
        description: Certificate content
        format: byte
    description: Certificate content
  certificate_spec:
    title: Certificate info
    required:
      - certificate
    type: object
    properties:
      name:
        type: string
        description: Certificate file name
        maxLength: 64
      certificate:
        type: string
        description: Certificate content
        format: byte
    description: Certificate info
  certificate_spec_upload_input:
    title: Input spec for certificate upload
    required:
      - spec_list
    type: object
    properties:
      spec_list:
        items:
          $ref: '#/definitions/certificate_spec'
        type: array
        description: List of certificate specs
    description: Input spec for certificate upload.
  certification_signing_info:
    title: Customer information in Certificate Signing Request
    type: object
    properties:
      city:
        type: string
        description: The Town or City where customer's business is located.
      state:
        type: string
        description: |
          The Province, Region, County or State where customer business is
          is located.
      country_code:
        type: string
        description: |
          Two-letter ISO code for Country where customer's organization is
          located.
      common_name:
        type: string
        description: Common name of the organization or host server
      organization:
        type: string
        description: Name of the customer business.
      email_address:
        type: string
        description: Email address of the certificate administrator.
      common_name_suffix:
        type: string
        description: |
          Common name is by default <node_uuid>.nutanix.com, but if a customer
          wants something instead of nutanix.com they can specify it here.
    description: |
      Customer information used in Certificate Signing Request for
      creating digital certificates.
  changed_regions:
    title: Changed regions
    type: object
    properties:
      next_offset:
        type: integer
        description: |
          The offset from where the client must continue the request. This field will not be set when there are no more changed regions to be returned. Note that the next_offset can be outside the endOffset specified by the client in the request. This helps clients reach the next changed offset faster.
        format: int64
      region_list:
        items:
          $ref: '#/definitions/region'
        type: array
        description: |
          List of regions describing the change for the interval [start_offset, next_offset).
      file_size:
        type: integer
        description: Size of the file specified by snapshot_file_path.
        format: int64
    description: |
      Returns information about all the regions that have changed in the interval: [start_offset, next_offset].
  changed_regions_list_metadata:
    title: Metadata for changed_regions list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: changed_regions
        x-ntnx-enum:
          - changed_regions
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  changed_regions_list_metadata_output:
    title: Metadata for changed_regions list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: changed_regions
        x-ntnx-enum:
          - changed_regions
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  changed_regions_metadata:
    title: changed_regions metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when changed_regions was last updated
        format: date-time
      kind:
        default: changed_regions
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - changed_regions
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: changed_regions uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when changed_regions was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the changed_regions
      name:
        readOnly: true
        type: string
        description: changed_regions name
        maxLength: 64
    description: The changed_regions kind metadata
  changed_regions_query:
    title: Changed Regions Query
    required:
      - snapshot_file_path
    type: object
    properties:
      end_offset:
        minimum: 0
        type: integer
        description: |
          The absolute offset in bytes up to which to query for the changed regions. Note that the interval specified by the start_offset together with the end_offset is right half-open. If the end_offset is not specified, the portion from the start_offset till the end of the file will be included in the query.
        format: int64
      snapshot_file_path:
        type: string
        description: |
          Absolute path of a file within a snapshot of an entity such as a virtual machine, a volume group or a protection domain.
      start_offset:
        default: 0
        minimum: 0
        type: integer
        description: |
          The absolute offset in bytes from where to query for the changed regions.
        format: int64
      reference_snapshot_file_path:
        type: string
        description: |
          Absolute path of a file within a snapshot that must be used as the reference in the computation of the changed regions. If this path is not specified, then the changed regions will not be computed. Instead, the sparse and the non-sparse regions of the file specified in snapshot_file_path will be returned.
    description: |
      Instances of this type are used to specify the input for the changed regions query.
  changed_regions_reference:
    title: Reference to a changed_regions
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: changed_regions
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - changed_regions
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a changed_regions
  changed_regions_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: changed_regions
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - changed_regions
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  checksum:
    title: Image checksum
    required:
      - checksum_algorithm
      - checksum_value
    properties:
      checksum_algorithm:
        $ref: '#/definitions/checksum_algorithm'
      checksum_value:
        type: string
        format: bytes
    description: Image checksum
  checksum_algorithm:
    x-ntnx-enum:
      - SHA_256
      - SHA_1
    type: string
    description: The type of checksum calculated for the image
    title: Checksum algorithm
  citrix_connector_config_details:
    title: Citrix Connector details.
    type: object
    properties:
      citrix_vm_reference_list:
        items:
          $ref: '#/definitions/vm_reference'
        type: array
        description: Reference to the list of vm ids registered with citrix cloud.
      client_secret:
        type: string
        description: The client secret for the Citrix Cloud.
      customer_id:
        type: string
        description: The customer id registered with Citrix Cloud.
      client_id:
        type: string
        description: The client id for the Citrix Cloud.
      resource_location:
        $ref: '#/definitions/citrix_resource_location'
    description: Citrix Connector details.
  citrix_connector_config_details_spec:
    title: Citrix Connector details.
    type: object
    properties:
      citrix_vm_reference_list:
        items:
          $ref: '#/definitions/vm_reference'
        type: array
        description: Reference to the list of vm ids registered with citrix cloud.
      client_secret:
        type: string
        description: The client secret for the Citrix Cloud.
      customer_id:
        type: string
        description: The customer id registered with Citrix Cloud.
        maxLength: 200
      client_id:
        type: string
        description: The client id for the Citrix Cloud.
        maxLength: 200
      resource_location:
        $ref: '#/definitions/citrix_resource_location_spec'
    description: Citrix Connector details.
  citrix_resource_location:
    title: Citrix Resource Location.
    type: object
    properties:
      id:
        type: string
        description: The resource location id.
      name:
        type: string
        description: The resource location name.
    description: Resource Location on Citrix Cloud.
  citrix_resource_location_spec:
    title: Citrix Resource Location.
    type: object
    properties:
      id:
        type: string
        description: The resource location id.
        maxLength: 200
      name:
        type: string
        description: The resource location name.
        maxLength: 200
    description: Resource Location on Citrix Cloud.
  client_auth:
    title: Client authentication config
    required:
      - status
    type: object
    properties:
      status:
        default: DISABLED
        x-ntnx-enum:
          - ENABLED
          - DISABLED
        type: string
        description: Status of client authentication.
      ca_chain:
        readOnly: true
        type: string
        description: Content of CA chain certificate.
        format: byte
      name:
        readOnly: true
        type: string
        description: Name of CA chain file.
        maxLength: 64
    description: Client authentication config.
  cloud_credentials:
    title: Cloud Credentials Spec
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: User friendly name for the credentials.
        maxLength: 64
      resources:
        $ref: '#/definitions/cloud_credentials_resources'
    description: Cloud credentials spec
  cloud_credentials_def_status:
    title: Cloud credentials Configuration
    required:
      - id
      - name
      - resources
    type: object
    properties:
      state:
        readOnly: true
        type: string
        description: The state of the entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      id:
        type: integer
        description: ID to uniquely identify cloud credentials
        format: int64
      resources:
        $ref: '#/definitions/cloud_credentials_resources'
      name:
        type: string
        description: Credentials name.
    description: Cloud credentials configuration
  cloud_credentials_intent_input:
    title: cloud_credentials Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/cloud_credentials'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'
    description: An intentful representation of a cloud_credentials
  cloud_credentials_intent_resource:
    title: cloud_credentials Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/cloud_credentials_def_status'
      spec:
        $ref: '#/definitions/cloud_credentials'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'
    description: Response object for intentful operations on a cloud_credentials
  cloud_credentials_intent_response:
    title: cloud_credentials Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/cloud_credentials_def_status'
      spec:
        $ref: '#/definitions/cloud_credentials'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cloud_credentials_metadata'
    description: Response object for intentful operations on a cloud_credentials
  cloud_credentials_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/cloud_credentials_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cloud_credentials_list_metadata_output'
    description: Response object for intentful operation of cloud_credentialss
  cloud_credentials_list_metadata:
    title: Metadata for cloud_credentials list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: cloud_credentials
        x-ntnx-enum:
          - cloud_credentials
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  cloud_credentials_list_metadata_output:
    title: Metadata for cloud_credentials list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: cloud_credentials
        x-ntnx-enum:
          - cloud_credentials
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  cloud_credentials_metadata:
    title: cloud_credentials metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when cloud_credentials was last updated
        format: date-time
      kind:
        default: cloud_credentials
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cloud_credentials
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: cloud_credentials uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when cloud_credentials was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the cloud_credentials
      name:
        readOnly: true
        type: string
        description: cloud_credentials name
        maxLength: 64
    description: The cloud_credentials kind metadata
  cloud_credentials_reference:
    title: Reference to a cloud_credentials
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: cloud_credentials
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cloud_credentials
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a cloud_credentials
  cloud_credentials_resources:
    description: Cloud credentials resources
    title: Cloud Credentials resources
    discriminator: cloud_type
    required:
      - cloud_type
    type: object
    properties:
      is_default:
        type: boolean
        description: Indicates if it is the default credentials
      key_id:
        type: string
        description: |
          Access key for AWS, or subscription id for Azure
      cloud_type:
        $ref: '#/definitions/cloud_type'
      secure_id:
        type: string
        description: |
          Secret key for AWS, or full file path of the Azure client certificate
          file(<file_name>.pem)
  cloud_credentials_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: cloud_credentials
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cloud_credentials
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  cloud_type:
    x-ntnx-enum:
      - AWS
      - AZURE
    type: string
    description: Cloud site type
    title: Cloud Site Type
  cluster:
    title: Cluster Definition
    type: object
    properties:
      name:
        type: string
        description: Cluster Name.
      resources:
        type: object
        description: Cluster resources.
        properties:
          config:
            $ref: '#/definitions/cluster_config_spec'
          network:
            $ref: '#/definitions/cluster_network'
          runtime_status_list:
            items:
              x-ntnx-enum:
                - UPGRADE_QUEUED
                - UPGRADE_CANCELLED
                - UPGRADE_SCHEDULED
                - SSP_CONFIG_MIGRATED
              type: string
            type: array
            description: Cluster onging operations.
    description: Cluster Definition.
  cluster_analysis:
    title: Cluster Analysis Statistics
    type: object
    properties:
      vm_efficiency_map:
        additionalProperties:
          type: string
        readOnly: true
        type: object
        description: |
          Map of cluster efficiency which includes numbers of inefficient
          vms. The value is populated by analytics on PC.
    description: Cluster analysis related values.
  cluster_config:
    title: Cluster Configuration
    type: object
    properties:
      gpu_driver_version:
        type: string
        description: GPU driver version.
      client_auth:
        $ref: '#/definitions/client_auth'
      software_map:
        additionalProperties:
          $ref: '#/definitions/cluster_software'
        type: object
        description: |
          Map of software on the cluster with software type as the
          key.
      encryption_status:
        $ref: '#/definitions/encryption_status'
      ssl_key:
        readOnly: true
        $ref: '#/definitions/ssl_key'
      service_list:
        readOnly: true
        $ref: '#/definitions/cluster_service_list'
      certification_signing_info:
        $ref: '#/definitions/certification_signing_info'
      redundancy_factor:
        type: integer
        description: Cluster supported redundancy factor.
        format: int32
      external_configurations:
        description: External Connector Configurations.
        $ref: '#/definitions/external_configurations'
      ca_certificate_list:
        items:
          $ref: '#/definitions/ca_cert'
        readOnly: true
        type: array
        description: List of cluster trusted CA certificates.
      enabled_feature_list:
        items:
          x-ntnx-enum:
            - LOCK_DOWN_ENABLED
            - PASSWORD_REMOTE_LOGIN_ENABLED
            - SHADOW_CLONES_ENABLED
            - COMMON_CRITERIA_MODE_ENABLED
            - SSP_CONFIGURED
            - ACS_ENABLED
            - NETWORK_FLOW_STATS_COLLECTOR_ENABLED
          type: string
        type: array
        description: Array of enabled features.
      is_available:
        readOnly: true
        type: boolean
        description: Indicates if cluster is available to contact.
      timezone:
        type: string
        description: Zone name used in value of TZ environment variable.
      cluster_arch:
        readOnly: true
        type: string
        x-ntnx-enum:
          - X86_64
          - PPC64LE
        description: Cluster architecture.
      management_server_list:
        items:
          $ref: '#/definitions/cluster_management_server'
        readOnly: true
        type: array
        description: List of cluster management servers.
      authorized_public_key_list:
        items:
          $ref: '#/definitions/public_key'
        type: array
        description: List of valid ssh keys for the cluster.
      supported_information_verbosity:
        default: BASIC_PLUS_CORE_DUMP
        x-ntnx-enum:
          - NOTHING
          - BASIC
          - BASIC_PLUS_CORE_DUMP
          - ALL
        type: string
        description: |
          Verbosity level settings for populating support information.
          - 'Nothing': Send nothing
          - 'Basic': Send basic information - skip core dump and hypervisor
                     stats information
          - 'BasicPlusCoreDump': Send basic and core dump information
          - 'All': Send all information
      build:
        readOnly: true
        $ref: '#/definitions/build_info'
      operation_mode:
        $ref: '#/definitions/cluster_operation_mode'
    description: Cluster Configuration.
  cluster_config_spec:
    title: Cluster Configuration
    type: object
    properties:
      gpu_driver_version:
        type: string
        description: GPU driver version.
      client_auth:
        $ref: '#/definitions/client_auth'
      authorized_public_key_list:
        items:
          $ref: '#/definitions/public_key'
        type: array
        description: List of valid ssh keys for the cluster.
      software_map:
        additionalProperties:
          $ref: '#/definitions/cluster_software'
        type: object
        description: |
          Map of software on the cluster with software type as the
          key.
      encryption_status:
        $ref: '#/definitions/encryption_status'
      supported_information_verbosity:
        default: BASIC_PLUS_CORE_DUMP
        x-ntnx-enum:
          - NOTHING
          - BASIC
          - BASIC_PLUS_CORE_DUMP
          - ALL
        type: string
        description: |
          Verbosity level settings for populating support information.
          - 'Nothing': Send nothing
          - 'Basic': Send basic information - skip core dump and hypervisor
                     stats information
          - 'BasicPlusCoreDump': Send basic and core dump information
          - 'All': Send all information
      certification_signing_info:
        $ref: '#/definitions/certification_signing_info'
      redundancy_factor:
        type: integer
        description: Cluster supported redundancy factor. Default is 2.
        format: int32
      external_configurations:
        description: External Connector Configurations.
        $ref: '#/definitions/external_configurations_spec'
      enabled_feature_list:
        items:
          x-ntnx-enum:
            - LOCK_DOWN_ENABLED
            - PASSWORD_REMOTE_LOGIN_ENABLED
            - SHADOW_CLONES_ENABLED
            - COMMON_CRITERIA_MODE_ENABLED
            - SSP_CONFIGURED
            - ACS_ENABLED
            - NETWORK_FLOW_STATS_COLLECTOR_ENABLED
          type: string
        type: array
        description: Array of enabled features.
      timezone:
        type: string
        description: Zone name used in value of TZ environment variable.
      operation_mode:
        $ref: '#/definitions/cluster_operation_mode'
    description: Cluster Configuration.
  cluster_def_status:
    title: Cluster Status
    required:
      - resources
    type: object
    properties:
      state:
        readOnly: true
        type: string
        description: The state of the cluster entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Cluster Name.
      resources:
        required:
          - config
          - network
        type: object
        description: Cluster resources.
        properties:
          nodes:
            $ref: '#/definitions/cluster_nodes'
          config:
            $ref: '#/definitions/cluster_config'
          network:
            $ref: '#/definitions/cluster_network'
          runtime_status_list:
            items:
              x-ntnx-enum:
                - UPGRADE_QUEUED
                - UPGRADE_CANCELLED
                - UPGRADE_IN_PROGRESS
                - UPGRADE_SCHEDULED
                - HAVE_SELF_ENCRYPTING_DRIVE
                - SSP_CONFIG_OWNER
              type: string
            type: array
            description: Cluster current attributes and onging operations.
    description: |
      Cluster status definition.  A Nutanix cluster is comprised of three or
      more Nutanix nodes. Each node in the cluster contains memory, CPU, RAM,
      and storage (SSD/HDD). Each node in the cluster runs standard hypervisor
      such as VMware vSphere, Microsoft Hyper-V, or AHV. A Controller VM (CVM)
      runs on each node in the cluster. The CVM enables each node to share
      local storage from all nodes in the cluster.
  cluster_domain_server:
    title: Domain Server
    required:
      - name
    type: object
    properties:
      nameserver:
        type: string
        description: |
          The IP of the nameserver that can resolve the domain name. Must set
          when joining the domain.
      name:
        type: string
        description: |
          Joined domain name. In 'put' request, empty name will unjoin the
          cluster from current domain.
      domain_credentials:
        $ref: '#/definitions/credentials'
    description: |
      Cluster domain server. Only applied to the cluster with all Hyper-V hosts.
  cluster_intent_input:
    title: cluster Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/cluster'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/cluster_metadata'
    description: An intentful representation of a cluster
  cluster_intent_resource:
    title: cluster Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/cluster_def_status'
      spec:
        $ref: '#/definitions/cluster'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cluster_metadata'
    description: Response object for intentful operations on a cluster
  cluster_intent_response:
    title: cluster Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/cluster_def_status'
      spec:
        $ref: '#/definitions/cluster'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cluster_metadata'
    description: Response object for intentful operations on a cluster
  cluster_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/cluster_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/cluster_list_metadata_output'
    description: Response object for intentful operation of clusters
  cluster_list_metadata:
    title: Metadata for cluster list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: cluster
        x-ntnx-enum:
          - cluster
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  cluster_list_metadata_output:
    title: Metadata for cluster list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: cluster
        x-ntnx-enum:
          - cluster
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  cluster_management_server:
    title: Cluster Management Server
    required:
      - ip
      - type
    type: object
    properties:
      drs_enabled:
        type: boolean
        description: Denotes if DRS is enabled or not.
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
      type:
        x-ntnx-enum:
          - VCENTER
        type: string
      status_list:
        items:
          x-ntnx-enum:
            - REGISTERED
            - IN_USE
          type: string
        type: array
        description: |
          Array of management server status: - 'REGISTERED': Indicates whether the server is registered with
                          Nutanix or not.
          - 'IN_USE': Indicates whether any host is managed by this server or
                      not.
    description: Cluster Management server information.
  cluster_metadata:
    title: cluster metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when cluster was last updated
        format: date-time
      kind:
        default: cluster
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cluster
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: cluster uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when cluster was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the cluster
      name:
        readOnly: true
        type: string
        description: cluster name
        maxLength: 64
    description: The cluster kind metadata
  cluster_network:
    title: Cluster Network Configuration
    type: object
    properties:
      http_proxy_whitelist:
        items:
          $ref: '#/definitions/http_proxy_whitelist'
        type: array
        description: HTTP proxy whitelist.
      masquerading_port:
        type: integer
        description: |
          Port used together with masquerading_ip to connect to the cluster.
        format: int32
      masquerading_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: |
          The cluster NAT'd or proxy IP which maps to the cluster local IP.
      external_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: The local IP of cluster visible externally.
      http_proxy_list:
        items:
          $ref: '#/definitions/cluster_network_entity'
        type: array
        description: List of proxies to connect to the service centers.
      smtp_server:
        $ref: '#/definitions/smtp_server'
      ntp_server_ip_list:
        items:
          type: string
        type: array
        description: The list of IP addresses or FQDNs of the NTP servers.
      external_subnet:
        default: 172.16.0.0/255.240.0.0
        type: string
        description: |
          External subnet for cross server communication. The format is
          IP/netmask.
      external_data_services_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: |
          The cluster IP address that provides external entities access to
          various cluster data services.
      domain_server:
        $ref: '#/definitions/cluster_domain_server'
      name_server_ip_list:
        items:
          pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
          type: string
        type: array
        description: The list of IP addresses of the name servers.
      nfs_subnet_whitelist:
        items:
          type: string
        type: array
        description: |
          Comma separated list of subnets (of the form 'a.b.c.d/l.m.n.o') that
          are allowed to send NFS requests to this container. If not specified,
          the global NFS whitelist will be looked up for access permission.
          The internal subnet is always automatically considered part of the
          whitelist, even if the field below does not explicitly specify it.
          Similarly, all the hypervisor IPs are considered part of the
          whitelist. Finally, to permit debugging, all of the SVMs local IPs
          are considered to be implicitly part of the whitelist.
      internal_subnet:
        default: 192.168.5.0/255.255.255.0
        type: string
        description: |
          The internal subnet is local to every server - its not visible
          outside.iSCSI requests generated internally within the appliance
          (by user VMs or VMFS) are sent to the internal subnet. The format is
          IP/netmask.
    description: Cluster network.
  cluster_network_entity:
    title: Cluster Network Entity
    required:
      - address
    type: object
    properties:
      credentials:
        $ref: '#/definitions/credentials'
      address:
        $ref: '#/definitions/address'
      proxy_type_list:
        items:
          default: HTTP
          x-ntnx-enum:
            - HTTP
            - HTTPS
            - SOCKS
          type: string
        type: array
    description: Cluster network entity.
  cluster_nodes:
    title: Cluster Nodes
    type: object
    properties:
      hypervisor_server_list:
        items:
          $ref: '#/definitions/hypervisor_server'
        readOnly: true
        type: array
    description: Node info for this cluster.
  cluster_operation_mode:
    x-ntnx-enum:
      - NORMAL
      - READ_ONLY
      - STAND_ALONE
      - SWITCH_TO_TWO_NODE
      - OVERRIDE
    type: string
    description: |
      Cluster operation mode. - 'NORMAL': Cluster is operating normally. - 'READ_ONLY': Cluster is operating in read only mode. - 'STAND_ALONE': Only one node is operational in the cluster. This is
                       valid only for single node or two node clusters.
      - 'SWITCH_TO_TWO_NODE': Cluster is moving from single node to two node
                              cluster.
      - 'OVERRIDE': Valid only for single node cluster. If the user wants to
                    run vms on a single node cluster in read only mode, he
                    can set the cluster peration mode to override. Writes
                    will be allowed in override mode.
    title: Cluster operation mode
  cluster_reference:
    title: Reference to a cluster
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: cluster
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cluster
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a cluster
  cluster_service_list:
    items:
      default: AOS
      x-ntnx-enum:
        - AOS
        - PRISM_CENTRAL
        - CLOUD_DATA_GATEWAY
        - AFS
        - WITNESS
        - XI_PORTAL
      type: string
    type: array
    description: |
      Array of enabled cluster services. For example, a cluster can function
      as both AOS and cloud data gateway.
      - 'AOS': Regular Prism Element
      - 'PRISM_CENTRAL': Prism Central
      - 'CLOUD_DATA_GATEWAY': Cloud backup and DR gateway
      - 'AFS': Cluster for file server
      - 'WITNESS' : Witness cluster
      - 'XI_PORTAL': Xi cluster
    title: List of Cluster Services
  cluster_software:
    title: Cluster software
    required:
      - software_type
      - version
    properties:
      status:
        default: INSTALLED
        x-ntnx-enum:
          - INSTALLED
          - UPGRADING
          - DOWNLOADED
        type: string
        description: Current software status.
      version:
        type: string
      software_type:
        $ref: '#/definitions/software_type'
    description: Cluster software.
  cluster_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: cluster
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - cluster
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  contact_information:
    title: Contact Information object.
    type: object
    properties:
      phone_number:
        type: string
        description: Phone Number of the contact.
      email_address:
        pattern: '(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)'
        type: string
        description: Email address of the contact.
      name:
        type: string
        description: Name of the contact.
    description: Contact information object.
  container:
    title: Container Entity
    required:
      - resources
    type: object
    properties:
      name:
        type: string
        description: Container name.
        maxLength: 64
      resources:
        $ref: '#/definitions/container_resources'
    description: Container Entity Definition.
  container_def_status:
    title: Container Status Definition
    required:
      - resources
      - name
    type: object
    properties:
      state:
        readOnly: true
        type: string
        description: State of the container.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Container name.
      resources:
        $ref: '#/definitions/container_resources_def_status'
    description: Container Status Definition.
  container_intent_input:
    title: container Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/container'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/container_metadata'
    description: An intentful representation of a container
  container_intent_resource:
    title: container Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/container_def_status'
      spec:
        $ref: '#/definitions/container'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/container_metadata'
    description: Response object for intentful operations on a container
  container_intent_response:
    title: container Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/container_def_status'
      spec:
        $ref: '#/definitions/container'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/container_metadata'
    description: Response object for intentful operations on a container
  container_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/container_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/container_list_metadata_output'
    description: Response object for intentful operation of containers
  container_list_metadata:
    title: Metadata for container list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: container
        x-ntnx-enum:
          - container
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  container_list_metadata_output:
    title: Metadata for container list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: container
        x-ntnx-enum:
          - container
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  container_metadata:
    title: container metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when container was last updated
        format: date-time
      kind:
        default: container
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - container
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: container uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when container was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the container
      name:
        readOnly: true
        type: string
        description: container name
        maxLength: 64
    description: The container kind metadata
  container_options:
    title: Container options
    type: object
    properties:
      network_port_bindings:
        additionalProperties:
          $ref: '#/definitions/network_port_bindings'
        description: |
          Map of port bindings, key is container port and value is a list of host side network port binding.
      volume_mount_map:
        additionalProperties:
          type: string
        description: Map of Volume Group name to mount path.
      container_runtime:
        x-ntnx-enum:
          - DOCKER
        type: string
        description: Name of container runtime.
      container_additional_options:
        type: string
        description: Additional options to be used for container.
      num_cpu_shares:
        default: 1024
        minimum: 1
        type: integer
        description: Number of cpu shares.
        format: int32
      environments:
        additionalProperties:
          type: string
        description: Map of environment variable names and values.
      command:
        type: string
        description: Command to be executed in the container.
      restart_policy:
        type: string
        description: Container restart policy.
      memory_mib:
        default: 1024
        type: integer
        description: Memory in MiBs.
        format: int32
    description: Container options required to run the container.
  container_options_status:
    title: Container options
    type: object
    properties:
      network_port_bindings:
        additionalProperties:
          $ref: '#/definitions/network_port_bindings_status'
        description: 'List of port mappings, key is container port binding, value is host port binding'
      volume_mount_map:
        additionalProperties:
          type: string
        description: Map of Volume Group name to mount path.
      container_runtime:
        x-ntnx-enum:
          - DOCKER
        type: string
        description: Name of container runtime.
      container_additional_options:
        type: string
        description: Additional options to be used for container.
      num_cpu_shares:
        type: integer
        description: Number of cpu shares.
        format: int32
      environments:
        additionalProperties:
          type: string
        description: Map of environment variable names and values.
      command:
        type: string
        description: Command to be executed for the container.
      restart_policy:
        type: string
        description: Container restart policy.
      memory_mib:
        type: integer
        description: Memory in MiBs.
        format: int32
    description: Container options in use by the container
  container_reference:
    title: Reference to a container
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: container
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - container
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a container
  container_resources:
    title: Container Resources
    required:
      - image_name
    type: object
    properties:
      container_state:
        x-ntnx-enum:
          - IMAGE_DOWNLOADED
          - CREATED
          - RUNNING
          - STOPPED
          - KILLED
          - REMOVED
          - DELETED
          - PAUSED
        type: string
        description: Desired state of the container.
      container_options:
        description: Various options for container.
        $ref: '#/definitions/container_options'
      registry_reference:
        description: Reference to container registry.
        $ref: '#/definitions/docker_registry_reference'
      subnet_reference_list:
        items:
          $ref: '#/definitions/subnet_reference'
        type: array
        description: Networks associated with this container.
      volume_reference_list:
        items:
          $ref: '#/definitions/volume_group_reference'
        type: array
        description: Referenced volumes associated with this container.
      image_name:
        type: string
        description: Image name to be used for container.
        maxLength: 64
      volume_list:
        items:
          $ref: '#/definitions/volume_group'
        type: array
        description: Volumes associated with this container.
    description: Container Resources Definition.
  container_resources_def_status:
    title: Container Resources Status Definition
    required:
      - image_name
    type: object
    properties:
      registry_reference:
        description: Reference to container registry.
        $ref: '#/definitions/docker_registry_reference'
      image_name:
        type: string
        description: Image name used for container.
      volume_list:
        items:
          $ref: '#/definitions/volume_group_def_status'
        type: array
        description: Volumes associated with this container.
      container_state:
        x-ntnx-enum:
          - QUEUED
          - IMAGE_DOWNLOADED
          - CREATED
          - RUNNING
          - STOPPED
          - KILLED
          - REMOVED
          - DELETED
          - PAUSED
          - FAILED
        type: string
        description: Current state of the Container.
      runtime_name:
        type: string
        description: Name of container given by runtime.
      container_options:
        description: Various options for container.
        $ref: '#/definitions/container_options_status'
      subnet_reference_list:
        items:
          $ref: '#/definitions/subnet_reference'
        type: array
        description: Networks associated with this container.
      volume_reference_list:
        items:
          $ref: '#/definitions/volume_group_reference'
        type: array
        description: Referenced Volumes associated with this container.
    description: Container Resources Status Definition.
  container_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: container
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - container
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  controller_vm:
    title: Host Controller VM Info
    required:
      - ip
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Controller VM IP address.
      oplog_usage:
        $ref: '#/definitions/oplog_usage'
    description: Host controller vm information.
  credentials:
    title: Credentials to login server
    required:
      - username
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    description: Credentials to login server
  csrs_spec:
    title: Spec for CSRs download
    type: object
    properties:
      node_uuid_list:
        items:
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          type: string
          format: UUID
        type: array
    description: |
      Spec for CSRs download. If node uuid list is empty, all cluster nodes will
      be assumed.
  custom_generic_key_value_pair:
    additionalProperties:
      type: string
    type: object
    description: Generic key value pair used for custom attributes
    title: Generic key value pair
  customization_spec_list_metadata:
    title: Metadata for customization_spec list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: customization_spec
        x-ntnx-enum:
          - customization_spec
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  customization_spec_list_metadata_output:
    title: Metadata for customization_spec list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: customization_spec
        x-ntnx-enum:
          - customization_spec
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  customization_spec_metadata:
    title: customization_spec metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when customization_spec was last updated
        format: date-time
      kind:
        default: customization_spec
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - customization_spec
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: customization_spec uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when customization_spec was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the customization_spec
      name:
        readOnly: true
        type: string
        description: customization_spec name
        maxLength: 64
    description: The customization_spec kind metadata
  customization_spec_reference:
    title: Reference to a customization_spec
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: customization_spec
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - customization_spec
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a customization_spec
  customization_spec_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: customization_spec
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - customization_spec
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  datacenter_component:
    title: Hardware component
    type: object
    properties:
      rack_unit_height:
        minimum: 1
        type: integer
        description: rack unit height
        format: int32
      management_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: management IP address
      rack_unit_position:
        minimum: 0
        type: integer
        description: rack unit position
        format: int32
      management_mac_address:
        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
        type: string
        description: management mac address
      installation_time:
        type: string
        description: installation date time
        format: date-time
    description: |
      Common properties for node or a network device in datacenters
  deployment_status:
    title: Prism central deployment status
    required:
      - task_uuid
      - resources
    type: object
    properties:
      task_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Task UUID.
        format: UUID
      resources:
        $ref: '#/definitions/prism_central'
    description: Prism central deployment status definition.
  description_item:
    title: Description item of upgrade notification
    type: object
    properties:
      affected_release_list:
        items:
          type: string
        type: array
        description: Earlier releases to which the notification applies.
      message:
        type: string
      severity_level:
        type: string
    description: Description item of upgrade notification
  dhcp_options:
    title: DHCP options
    type: object
    properties:
      domain_name_server_list:
        items:
          pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
          type: string
        type: array
      boot_file_name:
        type: string
      domain_search_list:
        items:
          type: string
        type: array
      domain_name:
        type: string
      tftp_server_name:
        type: string
    description: Spec for defining DHCP options.
  directory_service:
    title: Directory service
    required:
      - resources
      - name
    type: object
    properties:
      name:
        type: string
        description: The name of the directory service.
        maxLength: 64
      resources:
        title: Directory service resources
        required:
          - url
          - domain_name
          - directory_type
          - service_account
        type: object
        properties:
          open_ldap_configuration:
            description: Configuration for OpenLDAP.
            $ref: '#/definitions/open_ldap_configuration'
          admin_group_reference_list:
            items:
              $ref: '#/definitions/user_group_reference'
            type: array
            description: |
              List of admin user groups available in the directory service.
          service_account:
            $ref: '#/definitions/service_account'
          url:
            type: string
            description: URL of the directory.
            maxLength: 2000
          directory_type:
            x-ntnx-enum:
              - ACTIVE_DIRECTORY
              - OPEN_LDAP
            type: string
            description: Type of the directory service.
          admin_user_reference_list:
            items:
              $ref: '#/definitions/user_reference'
            type: array
            description: |
              The list of admin users available in the directory service.
          domain_name:
            type: string
            description: The domain name of the directory service.
        description: The details of the directory service.
    description: The configuration details of the directory service.
  directory_service_def_status:
    title: Directory service
    required:
      - resources
      - name
    type: object
    properties:
      state:
        type: string
        description: The state of the directory service configuration.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Name of the directory service.
      resources:
        title: Directory service resources
        required:
          - url
          - domain_name
          - directory_type
          - service_account
        type: object
        properties:
          open_ldap_configuration:
            description: Configuration for OpenLDAP.
            $ref: '#/definitions/open_ldap_configuration_def_status'
          admin_group_reference_list:
            items:
              $ref: '#/definitions/user_group_reference'
            type: array
            description: |
              List of admin user groups available in the directory service.
          service_account:
            description: |
              Validates and connects to the directory service with the given
              credentials.
            $ref: '#/definitions/service_account'
          url:
            type: string
            description: URL of the directory.
          directory_type:
            x-ntnx-enum:
              - ACTIVE_DIRECTORY
              - OPEN_LDAP
            type: string
            description: Type of the directory service.
          admin_user_reference_list:
            items:
              $ref: '#/definitions/user_reference'
            type: array
            description: |
              The list of admin users available in the directory service.
          domain_name:
            type: string
            description: The domain name of the directory service.
        description: The configuration details of the directory service.
    description: Details of the directory service.
  directory_service_intent_input:
    title: directory_service Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/directory_service'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/directory_service_metadata'
    description: An intentful representation of a directory_service
  directory_service_intent_resource:
    title: directory_service Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/directory_service_def_status'
      spec:
        $ref: '#/definitions/directory_service'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/directory_service_metadata'
    description: Response object for intentful operations on a directory_service
  directory_service_intent_response:
    title: directory_service Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/directory_service_def_status'
      spec:
        $ref: '#/definitions/directory_service'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/directory_service_metadata'
    description: Response object for intentful operations on a directory_service
  directory_service_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/directory_service_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/directory_service_list_metadata_output'
    description: Response object for intentful operation of directory_services
  directory_service_list_metadata:
    title: Metadata for directory_service list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: directory_service
        x-ntnx-enum:
          - directory_service
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  directory_service_list_metadata_output:
    title: Metadata for directory_service list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: directory_service
        x-ntnx-enum:
          - directory_service
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  directory_service_metadata:
    title: directory_service metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when directory_service was last updated
        format: date-time
      kind:
        default: directory_service
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - directory_service
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: directory_service uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when directory_service was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the directory_service
      name:
        readOnly: true
        type: string
        description: directory_service name
        maxLength: 64
    description: The directory_service kind metadata
  directory_service_reference:
    title: Reference to a directory_service
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: directory_service
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - directory_service
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a directory_service
  directory_service_search_metadata:
    title: Directory service search metadata
    required:
      - query
    type: object
    properties:
      query:
        type: string
        description: The search string.
      searched_attribute_list:
        items:
          type: string
        type: array
        description: |
          The attributes for search operation. If not specified, search is
          performed with the common name.
      returned_attribute_list:
        items:
          type: string
        type: array
        description: |
          The attributes the search operation returns. If not available, a list
          of default attributes is returned.
    description: The parameters to search for directory service.
  directory_service_search_response:
    title: Directory service search response
    type: object
    properties:
      search_result_list:
        items:
          $ref: '#/definitions/entity'
        type: array
      domain_name:
        type: string
        description: The domain name of the directory service.
      api_version:
        type: string
        description: The current API version.
      metadata:
        $ref: '#/definitions/directory_service_search_metadata'
    description: The response returned for directory service search operation.
  directory_service_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: directory_service
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - directory_service
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  directory_service_user:
    title: Directory Service user Definition.
    type: object
    properties:
      user_principal_name:
        type: string
        description: |
          The UserPrincipalName of the user from the directory service.
        maxLength: 104
      directory_service_reference:
        description: |
          Directory service reference if the user type is directory service.
        $ref: '#/definitions/directory_service_reference'
    description: A Directory Service user.
  directory_service_user_group_input:
    title: A Directory Service user group.
    type: object
    properties:
      distinguished_name:
        type: string
        description: The Distinguished name for the user group.
        maxLength: 255
    description: A Directory Service user group.
  directory_service_user_group_status:
    title: A Directory Service user group.
    type: object
    properties:
      distinguished_name:
        type: string
        description: The Distinguished name for the user group.
      directory_service_reference:
        description: The directory service that this user group belongs to.
        $ref: '#/definitions/directory_service_reference'
    description: A Directory Service user group.
  disk:
    type: object
    description: Disk specification.
    title: Disk specification.
  disk_address:
    title: Disk Address
    required:
      - adapter_type
      - device_index
    type: object
    properties:
      device_index:
        type: integer
      adapter_type:
        x-ntnx-enum:
          - SCSI
          - IDE
          - PCI
          - SATA
          - SPAPR
        type: string
    description: Disk Address.
  disk_def_status:
    title: Disk object
    required:
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the disk.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the disk, if in an error state.'
      resources:
        type: object
        description: Disk resources.
        properties:
          host_reference:
            $ref: '#/definitions/reference'
          enabled_features_list:
            items:
              x-ntnx-enum:
                - CAN_ADD_AS_NEW_DISK
                - CAN_ADD_AS_OLD_DISK
                - BOOT_DISK
                - ONLY_BOOT_DISK
                - SELF_ENCRYPTING_ENABLED
                - PASSWORD_PROTECTED
              type: string
            type: array
            description: |
              Disk feature flags
              - 'CanAddAsNewDisk': Flag to indicate if this disk can be added as
                 new disk.
              - 'CanAddAsOldDisk': Flag to indicate if the disk can be added as
                 old disk.
              - 'BootDisk': Flag to indicate if its a boot disk.
              - 'OnlyBootDisk': Flag to indicate if the disk is boot only and
                 no disk operation to be run on it.
              - 'SelfEncryptingEnabled': Flag to indicate if the disk has self
                 encryption enabled.
              - 'PasswordProtected': Flag to indicate if the disk is password
                 protected.
          vendor:
            type: string
            description: Disk vendor.
          mount_path:
            type: string
            description: Mount path.
          storage_pool_uuid:
            pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
            type: string
            description: Storage pool uuid.
            format: UUID
          slot_number:
            type: integer
            description: Disk location in a node.
            format: int32
          serial_number:
            type: string
            description: Disk serial number.
          storage_tier_type:
            x-ntnx-enum:
              - PCIE_SSD
              - SATA_SSD
              - HDD
            type: string
            description: Storage tier type.
          size_bytes:
            type: integer
            description: Disk size in bytes.
            format: int64
          state_list:
            $ref: '#/definitions/disk_state_list'
          model:
            type: string
            description: Disk model.
          firmware_version:
            type: string
            description: Firmware version.
    description: Disk object.
  disk_intent_input:
    title: disk Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/disk'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/disk_metadata'
    description: An intentful representation of a disk
  disk_intent_resource:
    title: disk Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/disk_def_status'
      spec:
        $ref: '#/definitions/disk'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/disk_metadata'
    description: Response object for intentful operations on a disk
  disk_intent_response:
    title: disk Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/disk_def_status'
      spec:
        $ref: '#/definitions/disk'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/disk_metadata'
    description: Response object for intentful operations on a disk
  disk_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/disk_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/disk_list_metadata_output'
    description: Response object for intentful operation of disks
  disk_list_metadata:
    title: Metadata for disk list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: disk
        x-ntnx-enum:
          - disk
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  disk_list_metadata_output:
    title: Metadata for disk list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: disk
        x-ntnx-enum:
          - disk
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  disk_metadata:
    title: disk metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when disk was last updated
        format: date-time
      kind:
        default: disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - disk
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: disk uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when disk was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the disk
      name:
        readOnly: true
        type: string
        description: disk name
        maxLength: 64
    description: The disk kind metadata
  disk_reference:
    title: Reference to a disk
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - disk
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a disk
  disk_state_list:
    items:
      x-ntnx-enum:
        - DATA_MIGRATION_INITIATED
        - MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE
        - READY_TO_DETACH
        - DATA_MIGRATED
        - MARKED_FOR_REMOVAL
        - ONLINE
        - BAD
        - MOUNTED
        - UNDER_DIAGNOSIS
      type: string
    type: array
    description: |
      Array of disk states
      - 'DataMigrationInitiated': Data Migration Initiated.
      - 'MarkedForRemovalButNotDetachable': Marked for removal, data
         migration is in progress.
      - 'ReadyToDetach': Flag to indicate the disk is detachable.
      - 'DataMigrated': Flag to indicate if data migration is completed for
         this disk.
      - 'MarkedForRemoval': Flag to indicate if the disk is marked for
         removal.
      - 'Online': Flag to indicate if the disk is online.
      - 'Bad': Flag to indicate if the disk is bad.
      - 'Mounted': Flag to indicate if the disk is mounted.
      - 'UnderDiagnosis': Flag to indicate if the disk is under diagnosis.
    title: Disk State List
  disk_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - disk
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  docker_registry:
    title: Docker Registry spec
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Name of the docker registry
      resources:
        $ref: '#/definitions/docker_registry_resources'
    description: Docker registry spec
  docker_registry_def_status:
    title: Docker Registry
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Name of the docker registry
      resources:
        $ref: '#/definitions/docker_registry_resources'
    description: Docker registry
  docker_registry_image_search_list_intent_response:
    title: Docker registry image search results response
    required:
      - metadata
      - api_version
    type: object
    properties:
      metadata:
        $ref: '#/definitions/docker_registry_list_metadata'
      api_version:
        type: string
      entity_list:
        items:
          $ref: '#/definitions/docker_registry_image_status'
        readOnly: true
        type: array
    description: Docker registry image search results response
  docker_registry_image_status:
    title: Docker registry image search result
    required:
      - name
      - is_official
      - owner
      - tag_list
    type: object
    properties:
      owner:
        type: string
        description: Owner user name
      description:
        type: string
        description: Repository description
        maxLength: 1000
      is_official:
        type: boolean
        description: Whether it is an official Docker Hub image
      name:
        type: string
        description: Repository name
        maxLength: 64
      tag_list:
        items:
          $ref: '#/definitions/docker_registry_image_tag'
        type: array
    description: Docker registry image search result
  docker_registry_image_tag:
    title: Docker Hub tagged image
    required:
      - name
      - size_mib
      - modified_date
    type: object
    properties:
      modified_date:
        type: string
        description: Last modified date in RFC 3339
        format: date-time
      name:
        type: string
        description: Image tag name
        maxLength: 64
      size_mib:
        type: integer
        description: Size of the image in MiB
        format: int64
    description: Docker Hub tagged image
  docker_registry_intent_input:
    title: docker_registry Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/docker_registry'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/docker_registry_metadata'
    description: An intentful representation of a docker_registry
  docker_registry_intent_resource:
    title: docker_registry Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/docker_registry_def_status'
      spec:
        $ref: '#/definitions/docker_registry'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/docker_registry_metadata'
    description: Response object for intentful operations on a docker_registry
  docker_registry_intent_response:
    title: docker_registry Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/docker_registry_def_status'
      spec:
        $ref: '#/definitions/docker_registry'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/docker_registry_metadata'
    description: Response object for intentful operations on a docker_registry
  docker_registry_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/docker_registry_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/docker_registry_list_metadata_output'
    description: Response object for intentful operation of docker_registrys
  docker_registry_list_metadata:
    title: Metadata for docker_registry list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: docker_registry
        x-ntnx-enum:
          - docker_registry
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  docker_registry_list_metadata_output:
    title: Metadata for docker_registry list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: docker_registry
        x-ntnx-enum:
          - docker_registry
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  docker_registry_metadata:
    title: docker_registry metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when docker_registry was last updated
        format: date-time
      kind:
        default: docker_registry
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - docker_registry
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: docker_registry uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when docker_registry was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the docker_registry
      name:
        readOnly: true
        type: string
        description: docker_registry name
        maxLength: 64
    description: The docker_registry kind metadata
  docker_registry_reference:
    title: Reference to a docker_registry
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: docker_registry
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - docker_registry
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a docker_registry
  docker_registry_resources:
    title: Docker Registry Resources
    required:
      - username
      - url
      - password
    type: object
    properties:
      username:
        type: string
        description: User name of the docker registry
        maxLength: 64
      is_enabled:
        type: boolean
        description: |
          Flag to indicate whether the docker registry is enabled or not.
          If unset, defaults to False.
      certificate:
        type: string
        description: Certificate required for the private docker registry
      url:
        type: string
        description: URL of the docker registry
      password:
        type: string
        description: Password of the user for the docker registry
      is_system_default:
        readOnly: true
        type: boolean
        description: |
          Flag to indicate whether the docker registry is a system default
    description: Docker registry resources
  docker_registry_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: docker_registry
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - docker_registry
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  encryption_status:
    default: NOT_SUPPORTED
    x-ntnx-enum:
      - NOT_SUPPORTED
      - DISABLED
      - ENABLED
    type: string
    description: Cluster encryption status.
    title: Cluster encryption status
  entity:
    title: Directory service search response
    type: object
    properties:
      type:
        type: string
        description: User or group in the directory service.
      name:
        type: string
        description: The name of the entity in canonical format.
        maxLength: 64
      attribute_list:
        items:
          $ref: '#/definitions/attribute'
        type: array
    description: The response returned for directory service search operation.
  entity_filter_expression:
    title: Entity Filter Expression.
    required:
      - left_hand_side
      - operator
      - right_hand_side
    type: object
    properties:
      operator:
        x-ntnx-enum:
          - IN
          - NOT_IN
        type: string
        description: The operator in the filter expression.
      left_hand_side:
        x-ntnx-one-of:
          - required:
              - entity_type
        type: object
        properties:
          entity_type:
            type: string
            description: |
              The representation of the possible value of an LHS, in this case it is an entity type.A certain entity type e.g. VM Note. To express all entity types, use ALL
            maxLength: 64
        description: The LHS of the filter expression - the entity type.
      right_hand_side:
        description: The Right hand side(RHS) of a filter expression.
        $ref: '#/definitions/right_hand_side'
    description: |
      Entity Filter Expression is a combination of LHS-Operator-RHS. This filter expression helps express the Filter on actual entities. Example1 - To express All VMs
        left_hand_side = VM
        operator = IN
        right_hand_side = ALL
      Example2 - To express Not VM1 or VM2
        left_hand_side =  VM
        operator = NOT_IN
        right_hand_side = ["VM1", "VM2"]
  entity_reference:
    title: Entity Reference.
    type: object
    properties:
      kind:
        type: string
        description: Kind of the reference.
      type:
        x-ntnx-enum:
          - CATEGORIES_MATCH_ALL
          - CATEGORIES_MATCH_ANY
        type: string
        description: The type of filter being used.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the entity.
        format: UUID
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the entity.
      name:
        type: string
        description: Name of the entity.
        maxLength: 64
    description: Reference to an entity.
  environment:
    title: environment Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for environment.
        maxLength: 1000
      resources:
        $ref: '#/definitions/environment_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: environment Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a environment spec
  environment_def_status:
    title: environment Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the environment.
      name:
        type: string
        description: environment Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the environment, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/environment_resources_def_status'
      description:
        type: string
        description: A description for environment.
    description: An intentful representation of a environment status
  environment_intent_input:
    title: environment Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/environment'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/environment_metadata'
    description: An intentful representation of a environment
  environment_intent_resource:
    title: environment Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/environment_def_status'
      spec:
        $ref: '#/definitions/environment'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/environment_metadata'
    description: Response object for intentful operations on a environment
  environment_intent_response:
    title: environment Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/environment_def_status'
      spec:
        $ref: '#/definitions/environment'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/environment_metadata'
    description: Response object for intentful operations on a environment
  environment_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/environment_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/environment_list_metadata_output'
    description: Response object for intentful operation of environments
  environment_list_metadata:
    title: Metadata for environment list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: environment
        x-ntnx-enum:
          - environment
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  environment_list_metadata_output:
    title: Metadata for environment list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: environment
        x-ntnx-enum:
          - environment
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  environment_metadata:
    title: environment metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when environment was last updated
        format: date-time
      kind:
        default: environment
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - environment
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: environment uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when environment was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the environment
      name:
        readOnly: true
        type: string
        description: environment name
        maxLength: 64
    description: The environment kind metadata
  environment_reference:
    title: Reference to a environment
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: environment
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - environment
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a environment
  environment_resources:
    title: Resources for Environment.
    type: object
    properties:
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_input'
        type: array
        description: Substrate definitions for Environment.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_input'
        type: array
        description: Credential definitions for Environment.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_input'
        type: array
        description: List of variables
    description: Resources for Environment.
  environment_resources_def_status:
    title: Status of the environment
    type: object
    properties:
      project_reference:
        description: The project the environment is in.
        $ref: '#/definitions/project_reference'
      substrate_definition_list:
        items:
          $ref: '#/definitions/app_substrate_response'
        type: array
        description: Substrate definitions for Environment.
      credential_definition_list:
        items:
          $ref: '#/definitions/app_credential_response'
        type: array
        description: Credential definitions for Environment.
      variable_list:
        items:
          $ref: '#/definitions/app_variable_response'
        type: array
        description: List of variables
    description: Status of the environment
  environment_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: environment
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - environment
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  external_configurations:
    title: External Connector Configurations.
    type: object
    properties:
      citrix_connector_config:
        $ref: '#/definitions/citrix_connector_config_details'
    description: External configurations for the connectors.
  external_configurations_spec:
    title: External Connector Configurations.
    type: object
    properties:
      citrix_connector_config:
        $ref: '#/definitions/citrix_connector_config_details_spec'
    description: External configurations for the connectors.
  failover_cluster:
    title: Hyper-v failover cluster
    required:
      - domain_credential
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: IP address of the failover cluster.
      name:
        type: string
        description: Name of the failover cluster.
      domain_credential:
        $ref: '#/definitions/credentials'
    description: Hyper-V failover cluster.
  file_item:
    title: file_item Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for file_item.
        maxLength: 1000
      resources:
        $ref: '#/definitions/file_item_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: file_item Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a file_item spec
  file_item_def_status:
    title: file_item Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the file_item.
      name:
        type: string
        description: file_item Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the file_item, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/file_item_resources_def_status'
      description:
        type: string
        description: A description for file_item.
    description: An intentful representation of a file_item status
  file_item_intent_input:
    title: file_item Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/file_item'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/file_item_metadata'
    description: An intentful representation of a file_item
  file_item_intent_resource:
    title: file_item Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/file_item_def_status'
      spec:
        $ref: '#/definitions/file_item'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/file_item_metadata'
    description: Response object for intentful operations on a file_item
  file_item_intent_response:
    title: file_item Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/file_item_def_status'
      spec:
        $ref: '#/definitions/file_item'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/file_item_metadata'
    description: Response object for intentful operations on a file_item
  file_item_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/file_item_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/file_item_list_metadata_output'
    description: Response object for intentful operation of file_items
  file_item_list_metadata:
    title: Metadata for file_item list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: file_item
        x-ntnx-enum:
          - file_item
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  file_item_list_metadata_output:
    title: Metadata for file_item list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: file_item
        x-ntnx-enum:
          - file_item
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  file_item_metadata:
    title: file_item metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when file_item was last updated
        format: date-time
      kind:
        default: file_item
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - file_item
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: file_item uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when file_item was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the file_item
      name:
        readOnly: true
        type: string
        description: file_item name
        maxLength: 64
    description: The file_item kind metadata
  file_item_reference:
    title: Reference to a file_item
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: file_item
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - file_item
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a file_item
  file_item_resources:
    title: File item spec object
    type: object
    properties:
      checksum:
        description: 'Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.'
        $ref: '#/definitions/checksum'
      source_uri:
        type: string
        description: URI that points at the file to create the file_item from.
      source_auth:
        description: Authentication object needed to fetch the source.
        $ref: '#/definitions/source_auth'
    description: File item spec object
  file_item_resources_def_status:
    title: File item object
    type: object
    properties:
      retrieval_uri_list:
        items:
          type: string
        type: array
        description: List of URIs where the raw file_item data can be accessed.
      checksum:
        description: 'Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.'
        $ref: '#/definitions/checksum'
      source_uri:
        type: string
        description: URI that points at the file to create the file_item from.
      source_auth:
        description: Authentication object needed to fetch the source.
        $ref: '#/definitions/source_auth'
      size_bytes:
        type: integer
        format: long
    description: File item object
  file_item_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: file_item
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - file_item
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  filter:
    title: Filter.
    required:
      - entity_filter_expression_list
    type: object
    properties:
      entity_filter_expression_list:
        items:
          $ref: '#/definitions/entity_filter_expression'
        type: array
        description: A list of Entity filter expressions.
      scope_filter_expression_list:
        items:
          $ref: '#/definitions/scope_filter_expression'
        type: array
        description: A list of Scope filter expressions.
    description: |
      A filter defines the selection criteria for entities. It consists of two lists of filter expressions. The filter expressions can be of two types, Scope or Entity. The expressions in both these lists are combined with a logical AND.
  generic_key_value_pair:
    additionalProperties:
      type: string
    type: object
    description: Generic key value pair used for custom attributes.
    title: Generic key value pair.
  groups_aggregation_function:
    x-ntnx-enum:
      - SUM
      - AVG
      - MIN
      - MAX
      - LAST
      - COUNT
      - BUCKETS
    type: string
    description: |
      Downsampling function to take time series data and resolve to one value for aggregation purposes.
    title: Entities Request Aggregation Function
  groups_attribute_type:
    x-ntnx-enum:
      - CONTINUOUS
      - DISCRETE
    type: string
    description: |
      The type of an attribute being used for grouping - may be continuous or discrete.
    title: Attribute Type
  groups_bucket_summary_map:
    additionalProperties:
      type: integer
      format: int64
    type: object
    description: Group Bucket Summary Map.
    title: Group Buckets Summary Map
  groups_entity:
    title: Entity
    type: object
    properties:
      entity_id:
        type: string
      data:
        items:
          $ref: '#/definitions/groups_field_data'
        type: array
    description: An Individual Entity.
  groups_field_data:
    title: Group Summary Data
    type: object
    properties:
      buckets:
        $ref: '#/definitions/groups_bucket_summary_map'
      values:
        items:
          $ref: '#/definitions/groups_timevalue_pair'
        type: array
      name:
        type: string
        maxLength: 64
    description: Group Summary Data.
  groups_get_entities_request:
    title: Get Entities Request
    required:
      - entity_type
    type: object
    properties:
      number_of_intervals_for_latest_data:
        type: integer
        description: |
          When retrieving latest values, how far back to look as a multiple of the downsampling interval for the metric.
        format: int32
      filter_criteria:
        type: string
        description: |
          FIQL filter criteria that will be used to filter the returned data.
      group_sort_attribute:
        type: string
        description: |
          The name of the attribute that will be used to sort groups.
      group_attributes:
        items:
          $ref: '#/definitions/groups_requested_attribute'
        type: array
      number_of_buckets:
        type: integer
        description: 'For grouping, how many groups to return.'
        format: int32
      entity_ids:
        items:
          type: string
        type: array
        description: A set of entities that the request will be scoped to.
      group_count:
        type: integer
        description: The maximum number of groups to return in the result.
        format: int64
      group_member_attributes:
        items:
          $ref: '#/definitions/groups_requested_attribute'
        type: array
      group_member_sort_attribute:
        type: string
        description: |
          The name of the attribute that will be used to sort group members.
      bucket_boundary:
        type: integer
        description: 'For grouping, the boundary to snap to when grouping.'
        format: int32
      group_offset:
        type: integer
        description: The offset into the total set of groups to return.
        format: int64
      interval_end_ms:
        default: 0
        type: integer
        description: |
          For a time-series query, the end of the interval since the epoch in ms. Default is latest value only.
        format: int64
      downsampling_interval:
        type: integer
        description: |
          Downsampling interval to apply to query if override is desired.
        format: int32
      interval_start_ms:
        default: 0
        type: integer
        description: |
          For a time-series query, the start of the interval since the epoch in ms. Default is latest value only.
        format: int64
      entity_type:
        type: string
        description: The entity type that will be requested.
      grouping_attribute_type:
        $ref: '#/definitions/groups_attribute_type'
      group_member_offset:
        type: integer
        description: The offset into the total member set to return per group.
        format: int64
      group_member_count:
        type: integer
        description: The maximum number of members to return per group.
        format: int64
      grouping_attribute:
        type: string
        description: |
          Attribute that will be used to perform a group-by if needed.
      group_member_sort_downsampling_function:
        $ref: '#/definitions/groups_sort_downsampling_function'
      group_member_sort_order:
        $ref: '#/definitions/groups_sort_order'
      query_name:
        type: string
        description: A custom name to use for tagging the query when debugging.
      group_sort_order:
        $ref: '#/definitions/groups_sort_order'
      group_sort_downsample_function:
        $ref: '#/definitions/groups_sort_downsampling_function'
    description: Get Entities Request.
  groups_get_entities_response:
    title: Get Entities Response
    type: object
    properties:
      filtered_entity_count:
        type: integer
        format: int64
      group_results:
        items:
          $ref: '#/definitions/groups_group_result'
        type: array
      entity_type:
        type: string
      filtered_group_count:
        type: integer
        format: int64
      total_entity_count:
        type: integer
        format: int64
      total_group_count:
        type: integer
        format: int64
    description: Get Entities Response.
  groups_group_result:
    title: Group Result
    type: object
    properties:
      entity_results:
        items:
          $ref: '#/definitions/groups_entity'
        type: array
      group_by_column_value:
        type: string
      total_entity_count:
        type: integer
        format: int64
      group_summaries:
        $ref: '#/definitions/groups_group_summary_map'
    description: Group Result.
  groups_group_summary_map:
    additionalProperties:
      $ref: '#/definitions/groups_field_data'
    type: object
    description: Group Summary Info Map.
    title: Group Summary Map
  groups_requested_attribute:
    title: Entities Request Attribute
    required:
      - attribute
    type: object
    properties:
      attribute:
        type: string
      operation:
        $ref: '#/definitions/groups_aggregation_function'
      ancestor_entity_type:
        type: string
    description: |
      An attribute that has been requested to be returned in the response.
  groups_sort_downsampling_function:
    x-ntnx-enum:
      - MAX
      - MIN
      - FIRST
      - LAST
      - LATEST
    type: string
    description: |
      Downsampling function to take time series data and resolve to one value for sorting purposes.
    title: Entities Request Downsampling Function
  groups_sort_order:
    x-ntnx-enum:
      - ASCENDING
      - DESCENDING
    type: string
    description: Sort order for entities and entity groups.
    title: Entities Request Sort Order
  groups_timevalue_pair:
    title: Time-Value Pair
    type: object
    properties:
      values:
        items:
          type: string
        type: array
      time:
        type: integer
        format: int64
    description: Time-Value Pair Data.
  guest_customization:
    x-ntnx-one-of:
      - required:
          - sysprep
      - required:
          - cloud_init
    title: Guest Customization Configuration for creation/modification request
    additionalProperties:
      type: string
    type: object
    properties:
      cloud_init:
        x-ntnx-one-of:
          - required:
              - user_data
          - required:
              - custom_key_values
        type: object
        properties:
          meta_data:
            type: string
            description: |
              The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.
            maxLength: 32000
          user_data:
            type: string
            description: |
              The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.
            maxLength: 32000
          custom_key_values:
            $ref: '#/definitions/custom_generic_key_value_pair'
        description: |
          If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.
      is_overridable:
        default: false
        type: boolean
        description: Flag to allow override of customization by deployer.
      sysprep:
        x-ntnx-one-of:
          - required:
              - unattend_xml
          - required:
              - custom_key_values
        type: object
        properties:
          install_type:
            default: PREPARED
            x-ntnx-enum:
              - FRESH
              - PREPARED
            type: string
            description: |
              Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is "PREPARED".
          unattend_xml:
            type: string
            description: |
              This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.
            maxLength: 32000
          custom_key_values:
            $ref: '#/definitions/custom_generic_key_value_pair'
        description: |
          If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.
    description: |
      VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if "override_script" is set to "True" then the deployer can upload their own custom script.
  guest_customization_status:
    x-ntnx-one-of:
      - required:
          - sysprep
      - required:
          - cloud_init
    title: Guest Customization Configuration for creation/modification request
    additionalProperties:
      type: string
    type: object
    properties:
      cloud_init:
        x-ntnx-one-of:
          - required:
              - user_data
          - required:
              - custom_key_values
        type: object
        properties:
          meta_data:
            type: string
            description: |
              The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.
          user_data:
            type: string
            description: |
              The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.
          custom_key_values:
            $ref: '#/definitions/custom_generic_key_value_pair'
        description: |
          If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.
      is_overridable:
        type: boolean
        description: Flag to allow override of customization by deployer.
      sysprep:
        x-ntnx-one-of:
          - required:
              - unattend_xml
          - required:
              - custom_key_values
        type: object
        properties:
          install_type:
            default: PREPARED
            x-ntnx-enum:
              - FRESH
              - PREPARED
            type: string
            description: |
              Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is "PREPARED".
          unattend_xml:
            type: string
            description: |
              This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.
          custom_key_values:
            $ref: '#/definitions/custom_generic_key_value_pair'
        description: |
          If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.
    description: |
      VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if "override_script" is set to "True" then the deployer can upload their own custom script.
  guest_tools_spec:
    title: Guest Tools information
    type: object
    properties:
      nutanix_guest_tools:
        description: Nutanix Guest Tools information
        $ref: '#/definitions/nutanix_guest_tools_spec'
    description: Information regarding guest tools.
  guest_tools_status:
    title: Guest Tools information
    type: object
    properties:
      nutanix_guest_tools:
        description: Nutanix Guest Tools information
        $ref: '#/definitions/nutanix_guest_tools_status'
    description: Information regarding guest tools.
  host:
    title: Host Input definition
    required:
      - resources
    type: object
    properties:
      name:
        type: string
        description: Host Name.
        maxLength: 64
      resources:
        type: object
        description: Host resources.
        properties:
          windows_domain:
            $ref: '#/definitions/windows_domain'
          failover_cluster:
            $ref: '#/definitions/failover_cluster'
    description: Host Definition.
  host_def_status:
    title: Host Status
    required:
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Host Name.
      resources:
        title: Host Resources
        type: object
        properties:
          gpu_driver_version:
            type: string
            description: Host GPU driver version.
          failover_cluster:
            $ref: '#/definitions/failover_cluster'
          ipmi:
            $ref: '#/definitions/ipmi'
          cpu_model:
            type: string
            description: Host CPU model.
          host_nics_id_list:
            items:
              type: string
            type: array
            description: Host NICs.
          num_cpu_sockets:
            type: integer
            description: Number of CPU sockets.
            format: int64
          windows_domain:
            $ref: '#/definitions/windows_domain'
          gpu_list:
            items:
              $ref: '#/definitions/host_gpu'
            type: array
            description: List of GPUs on the host.
          serial_number:
            type: string
            description: Node serial number.
          cpu_capacity_hz:
            type: integer
            description: Host CPU capacity.
            format: int64
          memory_capacity_mib:
            type: integer
            description: Host memory capacity in MiB.
            format: int64
          host_disks_reference_list:
            items:
              $ref: '#/definitions/disk_reference'
            type: array
          monitoring_state:
            x-ntnx-enum:
              - MONITORED
              - NOT_MONITORED
            type: string
            description: Host monitoring status.
          hypervisor:
            $ref: '#/definitions/hypervisor'
          num_cpu_cores:
            type: integer
            description: Number of CPU cores on Host.
            format: int64
          controller_vm:
            $ref: '#/definitions/controller_vm'
          block:
            $ref: '#/definitions/block'
        description: Host resources.
      cluster_reference:
        $ref: '#/definitions/reference'
    description: Host Status definition.
  host_gpu:
    title: Host GPU
    type: object
    properties:
      status:
        x-ntnx-enum:
          - UNUSED
          - USED_FOR_PASSTHROUGH
          - USED_FOR_VIRTUAL
        type: string
        description: Current status of the physical GPU.
      vendor:
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD
        type: string
        description: The vendor of the GPU.
      num_virtual_display_heads:
        type: integer
        description: Number of supported virtual display heads.
        format: int32
      assignable:
        type: boolean
        description: Whether this vGPU instance can be allocated to a VM.
      license_list:
        items:
          type: string
        type: array
        description: List of license types associated with this GPU.
      num_vgpus_allocated:
        type: integer
        description: |
          The number of vGPU instances allocated for this physical GPU resource.
        format: int32
      pci_address:
        type: string
        description: 'GPU {segment:bus:device:function} (sbdf) address.'
      name:
        type: string
        description: Name of the host GPU.
      frame_buffer_size_mib:
        type: integer
        description: GPU frame buffer size in MiB.
        format: int64
      index:
        type: integer
        description: The index of the vGPU within physical GPU resource.
        format: int32
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the GPU.
        format: UUID
      numa_node:
        type: integer
        description: NUMA node this GPU belongs to.
        format: int32
      max_resolution:
        type: string
        description: Maximum resolution per display head.
      consumer_reference:
        $ref: '#/definitions/reference'
      mode:
        x-ntnx-enum:
          - PASSTHROUGH_GRAPHICS
          - PASSTHROUGH_COMPUTE
          - VIRTUAL
        type: string
        description: The type of this GPU.
      fraction:
        type: integer
        description: Fraction of the physical GPU.
        format: int32
      guest_driver_version:
        type: string
        description: Last determined guest driver version.
      device_id:
        type: integer
        description: The device ID of the GPU.
        format: int32
    description: Host GPU.
  host_intent_input:
    title: host Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/host'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/host_metadata'
    description: An intentful representation of a host
  host_intent_resource:
    title: host Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/host_def_status'
      spec:
        $ref: '#/definitions/host'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/host_metadata'
    description: Response object for intentful operations on a host
  host_intent_response:
    title: host Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/host_def_status'
      spec:
        $ref: '#/definitions/host'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/host_metadata'
    description: Response object for intentful operations on a host
  host_ipmi_args:
    title: IPMI Args
    required:
      - args
    type: object
    properties:
      args:
        type: string
        description: IPMI arguments
    description: Arguments to the IPMI command
  host_ipmi_cmd_result:
    title: IPMI Command
    type: object
    properties:
      result:
        type: string
        description: Result of the command
    description: IPMI Command
  host_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/host_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/host_list_metadata_output'
    description: Response object for intentful operation of hosts
  host_list_metadata:
    title: Metadata for host list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: host
        x-ntnx-enum:
          - host
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  host_list_metadata_output:
    title: Metadata for host list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: host
        x-ntnx-enum:
          - host
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  host_metadata:
    title: host metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when host was last updated
        format: date-time
      kind:
        default: host
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - host
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: host uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when host was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the host
      name:
        readOnly: true
        type: string
        description: host name
        maxLength: 64
    description: The host kind metadata
  host_reference:
    title: Reference to a host
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: host
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - host
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a host
  host_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: host
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - host
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  http_proxy_whitelist:
    title: HTTP Proxy Whitelist
    required:
      - target
      - target_type
    type: object
    properties:
      target:
        type: string
      target_type:
        x-ntnx-enum:
          - IPV4_ADDRESS
          - IPV4_NETWORK_MASK
          - DOMAIN_NAME_SUFFIX
          - HOST_NAME
        type: string
    description: HTTP Proxy Whitelist.
  hypervisor:
    title: Hypervisor Info
    required:
      - ip
    type: object
    properties:
      num_vms:
        type: integer
        description: Num of VMs running on this Host.
        format: int64
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Hypervisor IP.
      hypervisor_full_name:
        type: string
        description: Full name of hypervisor running on Host.
    description: Host Hypervisor information.
  hypervisor_server:
    title: Hypervisor Server
    required:
      - ip
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
      version:
        type: string
      type:
        x-ntnx-enum:
          - VMWARE
          - XEN
          - AHV
          - HYPERV
        type: string
    description: Hypervisor server information.
  idempotence_identifiers_input:
    title: Idempotence object
    required:
      - client_identifier
      - count
    type: object
    properties:
      client_identifier:
        type: string
        description: The client identifier string.
      count:
        default: 1
        type: integer
        description: The number of idempotence identifiers provided.
    description: Resources for the idempotence identifier kind.
  idempotence_identifiers_list_metadata:
    title: Metadata for idempotence_identifiers list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: idempotence_identifiers
        x-ntnx-enum:
          - idempotence_identifiers
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  idempotence_identifiers_list_metadata_output:
    title: Metadata for idempotence_identifiers list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: idempotence_identifiers
        x-ntnx-enum:
          - idempotence_identifiers
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  idempotence_identifiers_metadata:
    title: idempotence_identifiers metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when idempotence_identifiers was last updated
        format: date-time
      kind:
        default: idempotence_identifiers
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - idempotence_identifiers
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: idempotence_identifiers uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when idempotence_identifiers was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the idempotence_identifiers
      name:
        readOnly: true
        type: string
        description: idempotence_identifiers name
        maxLength: 64
    description: The idempotence_identifiers kind metadata
  idempotence_identifiers_reference:
    title: Reference to a idempotence_identifiers
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: idempotence_identifiers
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - idempotence_identifiers
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a idempotence_identifiers
  idempotence_identifiers_response:
    title: Idempotence identifier status definition.
    required:
      - client_identifier
      - count
      - uuid_list
    type: object
    properties:
      client_identifier:
        type: string
        description: The client identifier string.
      count:
        default: 1
        type: integer
        description: The number of idempotence identifiers provided.
      uuid_list:
        items:
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          type: string
          description: UUID to identify the relationship <to be updated>
          format: UUID
        type: array
    description: Idempotence identifier status definition.
  idempotence_identifiers_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: idempotence_identifiers
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - idempotence_identifiers
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  image:
    title: image Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: image Name.
        maxLength: 64
      resources:
        $ref: '#/definitions/image_resources'
      description:
        type: string
        description: A description for image.
        maxLength: 1000
    description: An intentful representation of a image spec
  image_architecture:
    x-ntnx-enum:
      - X86_64
      - PPC64
      - PPC64LE
    type: string
    description: The supported CPU architecture for a disk image.
    title: Image architecture
  image_def_status:
    title: image Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the image.
      name:
        type: string
        description: image Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the image, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/image_resources_def_status'
      description:
        type: string
        description: A description for image.
    description: An intentful representation of a image status
  image_intent_input:
    title: image Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/image'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/image_metadata'
    description: An intentful representation of a image
  image_intent_resource:
    title: image Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/image_def_status'
      spec:
        $ref: '#/definitions/image'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/image_metadata'
    description: Response object for intentful operations on a image
  image_intent_response:
    title: image Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/image_def_status'
      spec:
        $ref: '#/definitions/image'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/image_metadata'
    description: Response object for intentful operations on a image
  image_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/image_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/image_list_metadata_output'
    description: Response object for intentful operation of images
  image_list_metadata:
    title: Metadata for image list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: image
        x-ntnx-enum:
          - image
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  image_list_metadata_output:
    title: Metadata for image list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: image
        x-ntnx-enum:
          - image
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  image_metadata:
    title: image metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when image was last updated
        format: date-time
      kind:
        default: image
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - image
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: image uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when image was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the image
      name:
        readOnly: true
        type: string
        description: image name
        maxLength: 64
    description: The image kind metadata
  image_reference:
    title: Reference to a image
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: image
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - image
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a image
  image_resources:
    title: Image spec resources
    type: object
    properties:
      image_type:
        $ref: '#/definitions/image_type'
      checksum:
        description: |
          Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.
        $ref: '#/definitions/checksum'
      source_uri:
        type: string
        description: |
          The source URI points at the location of a the source image which is used to create/update image.
      version:
        description: The image version
        $ref: '#/definitions/image_version_resources'
      architecture:
        description: |
          Indicates the CPU architecture that the image is compatible with. If this is not specified for an image this will default to the CPU architecture type of the cluster.
        $ref: '#/definitions/image_architecture'
    description: Describes the image spec resources object.
  image_resources_def_status:
    title: Image status resources
    type: object
    properties:
      retrieval_uri_list:
        items:
          type: string
        type: array
        description: |
          List of URIs where the raw image data can be accessed.
      version:
        description: The image version
        $ref: '#/definitions/image_version_status'
      architecture:
        $ref: '#/definitions/image_architecture'
      size_bytes:
        type: integer
        description: The size of the image in bytes.
        format: long
      image_type:
        $ref: '#/definitions/image_type'
      checksum:
        description: |
          Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.
        $ref: '#/definitions/checksum'
      source_uri:
        type: string
        description: |
          The source URI points at the location of a the source image which is used to create/update image.
    description: Describes the image status resources object.
  image_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: image
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - image
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  image_type:
    x-ntnx-enum:
      - DISK_IMAGE
      - ISO_IMAGE
    type: string
    description: The type of image.
    title: Image type
  image_version_resources:
    title: Image version
    required:
      - product_name
      - product_version
    type: object
    properties:
      product_version:
        type: string
        description: Version string for the disk image.
        maxLength: 64
      product_name:
        type: string
        description: |
          Name of the producer/distribution of the image. For example windows or red hat.
        maxLength: 64
    description: |
      The image version, which is composed of a product name and product version.
  image_version_status:
    title: Image version
    required:
      - product_name
      - product_version
    type: object
    properties:
      product_version:
        type: string
        description: Version string for the disk image.
      product_name:
        type: string
        description: |
          Name of the producer/distribution of the image. For example windows or red hat.
    description: |
      The image version, which is composed of a product name and product version.
  ip_address:
    title: IP Address
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Address string.
      type:
        x-ntnx-enum:
          - ASSIGNED
          - LEARNED
        type: string
        description: |
          Address type. It can only be "ASSIGNED" in the spec. If no type is
          specified in the spec, the default type is set to "ASSIGNED".
    description: An IP address.
  ip_config:
    title: IP config
    type: object
    properties:
      pool_list:
        items:
          $ref: '#/definitions/ip_pool'
        type: array
      default_gateway_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Default gateway IP address.
      prefix_length:
        type: integer
        format: int32
      subnet_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Subnet IP address.
      dhcp_options:
        $ref: '#/definitions/dhcp_options'
      dhcp_server_address:
        $ref: '#/definitions/address'
    description: IP config.
  ip_pool:
    title: IP pool
    type: object
    properties:
      range:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: |
          Range of IPs (example: 10.0.0.9 10.0.0.19).
    description: IP pool.
  ip_subnet:
    title: IP subnet.
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: IPV4 address.
      prefix_length:
        type: integer
        format: int32
    description: IP subnet provided as an address and prefix length.
  ipmi:
    title: Host IPMI info
    required:
      - ip
    type: object
    properties:
      ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: IPMI IP address.
    description: Host IPMI info.
  log_collector_support_case_upload:
    title: Log Collector object.
    type: object
    properties:
      start_time:
        type: string
        description: |
          Start time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        format: date-time
      end_time:
        type: string
        description: |
          End time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        format: date-time
      anonymize_output:
        type: boolean
        description: Flag for anonymized log collection.
      num_hours:
        type: integer
        description: Number of hours for which log has to be collected. Starts from current time - no_of_hours till current time.
        format: int32
    description: Log Collector object.
  logout_response:
    title: Logout response
    type: object
    properties:
      external_logout_url_list:
        items:
          type: string
        type: array
        description: List of addition logout urls which should be called by UI
    description: Response from logout object
  marketplace_item_render_input:
    title: Render marketplace item input spec
    required:
      - name
      - input_type
      - input_spec
    type: object
    properties:
      input_type:
        x-ntnx-enum:
          - VM_REFERENCE
          - VM_REFERENCE_WITH_CUSTOMIZATION
          - IMAGE_REFERENCE
        type: string
      input_spec:
        description: Spec based on the type
        title: Spec for the given entity type
        type: object
        properties:
          vm_reference_with_customization:
            $ref: '#/definitions/vm_reference_with_customization'
          vm_reference:
            $ref: '#/definitions/vm_reference'
          image_reference:
            $ref: '#/definitions/image_reference'
        x-ntnx-one-of:
          - required:
              - vm_reference
          - required:
              - vm_reference_with_customization
          - required:
              - image_reference
      name:
        type: string
        description: Name of the rendered marketplace item
        maxLength: 64
      description:
        type: string
        description: A description for the rendered marketplace item
        maxLength: 1000
    description: |
      Source spec that describes an entity like a VM, Image that should be translated into an marketplace item
  marketplace_item_render_output:
    title: Render marketplace item output
    type: object
    properties:
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: uuid of the newly created Marketplace item
        format: UUID
    description: The UUID of the newly created Marketplace item
  message_resource:
    title: Message.
    required:
      - message
      - reason
    type: object
    properties:
      message:
        type: string
        description: 'If state is ERROR, a message describing the error.'
      reason:
        x-ntnx-enum:
          - ACCESS_DENIED
          - ACCESS_FORBIDDEN
          - ACTION_NOT_SUPPORTED
          - AUTHENTICATION_REQUIRED
          - BEARER_TOKEN_EXPIRED
          - BEARER_TOKEN_BAD_SIGNATURE
          - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
          - CATEGORY_NAME_VALUE_MISMATCH
          - CONFIGURATION_INCOMPLETE
          - CONCURRENT_REQUESTS_NOT_ALLOWED
          - DEFAULT_PROJECT_UNAVAILABLE
          - DESERIALIZATION_FAILED
          - DIRECTORY_SERVICE_CONNECTION_FAILED
          - ENTITY_ALREADY_EXISTS
          - ENTITY_DELETION_FAILED
          - ENTITY_IS_READONLY
          - ENTITY_NAME_UUID_MISMATCH
          - ENTITY_NOT_CONFIGURED
          - ENTITY_NOT_FOUND
          - ENTITY_SAVE_ERROR
          - ENTITY_UPDATE_FAILED
          - IDEMPOTENCE_UUID_CREATION_FAILED
          - IDP_NOT_REACHABLE
          - INTERNAL_ERROR
          - INVALID_ARGUMENT
          - INVALID_AZ_NAME
          - INVALID_CONTENT_TYPE
          - INVALID_DATA_FORMAT
          - INVALID_PORTAL_CONFIGURATION
          - INVALID_REQUEST
          - INVALID_UUID
          - INVALID_OWNER_REFERENCE
          - INTERNAL_AZ_PROXY_SETUP_ERROR
          - INTERNAL_ERROR_REMOTE_REQUEST
          - INTERNAL_ROLE_ACCESS_DENIED
          - INCORRECT_EVENTS_FILTER
          - MISSING_ATTRIBUTE
          - MISSING_CURRENT_USER_METADATA
          - NAME_NOT_IN_DOMAIN
          - NO_RESPONSE_RECEIVED_FROM_PORTAL
          - PE_NOT_PAIRED_WITH_PC
          - PC_NOT_PAIRED_WITH_XI_PORTAL
          - REFERENCE_ERROR
          - RESERVED_ROLE_ACCESS_DENIED
          - REQUEST_NOT_SUPPORTED
          - REMOTE_CLUSTER_IP_FETCH_FAILED
          - REMOTE_CLUSTER_NOT_CONNECTED
          - REMOTE_CONNECTION_EXISTS
          - REMOTE_CONNECTION_NOT_FOUND
          - REPORT_CONFIG_NOT_FOUND
          - REPORTING_RESOURCE_NOT_FOUND
          - REPORTING_INTERNAL_ERROR
          - SERVICE_UNAVAILABLE
          - SEARCH_RESULT_PROCESSING_ERROR
          - TOO_MANY_REQUESTS
          - UNCONFIGURED_API_KEY
          - UNCONFIGURED_PORTAL_CONNECTION
          - UNSPECIFIED_EVENTS_FILTER
          - UNSUPPORTED_AZ_PROXY_API
          - UNSUPPORTED_MEDIA_TYPE_ERROR
          - UNSUPPORTED_API_VERSION
          - UPLOAD_TO_S3_FAILED
          - VALIDATION_ERROR
          - INVALID_SSL_CERTIFICATE
          - ERROR_ATTACHING_FILE_TO_CASE
          - SPEC_UPDATE_ERROR
          - SPEC_INCOMPATIBLE_ERROR
        type: string
        description: 'If state is ERROR, a machine-readable snake-cased string.'
      details:
        additionalProperties:
          type: string
        readOnly: true
        type: object
        description: Custom key-value details relevant to the status.
    description: message.
  ncc_checks_support_case_upload:
    title: NCC checks object.
    type: object
    properties:
      ncc_check_list:
        items:
          type: string
        type: array
        description: List of ncc checks to run.
      should_send_email:
        type: boolean
        description: Flag specifying whether an email is to be sent.
    description: Input for execution of NCC checks.
  network_config:
    title: Network Configuration for PC VM.
    type: object
    properties:
      subnet_mask:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Subnet mask IP address.
      network_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Network uuid.
        format: UUID
      default_gateway:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: Gateway IP address.
    description: Network Configuration for PC VM.
  network_function_chain:
    title: network function chain Input Definition
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Network function chain name.
        maxLength: 64
      resources:
        $ref: '#/definitions/network_function_chain_resource'
      cluster_reference:
        description: UUID of cluster that hosts the network function chain.
        $ref: '#/definitions/cluster_reference'
    description: network function chain Input Definition.
  network_function_chain_def_status:
    title: Network function chain status definition
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Network function chain name.
      resources:
        $ref: '#/definitions/network_function_chain_resource'
      cluster_reference:
        description: UUID of cluster that hosts the network function chain.
        $ref: '#/definitions/cluster_reference'
    description: Network function chain status definition.
  network_function_chain_intent_input:
    title: network_function_chain Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/network_function_chain'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'
    description: An intentful representation of a network_function_chain
  network_function_chain_intent_resource:
    title: network_function_chain Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/network_function_chain_def_status'
      spec:
        $ref: '#/definitions/network_function_chain'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'
    description: Response object for intentful operations on a network_function_chain
  network_function_chain_intent_response:
    title: network_function_chain Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/network_function_chain_def_status'
      spec:
        $ref: '#/definitions/network_function_chain'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_function_chain_metadata'
    description: Response object for intentful operations on a network_function_chain
  network_function_chain_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/network_function_chain_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_function_chain_list_metadata_output'
    description: Response object for intentful operation of network_function_chains
  network_function_chain_list_metadata:
    title: Metadata for network_function_chain list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: network_function_chain
        x-ntnx-enum:
          - network_function_chain
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  network_function_chain_list_metadata_output:
    title: Metadata for network_function_chain list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: network_function_chain
        x-ntnx-enum:
          - network_function_chain
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  network_function_chain_metadata:
    title: network_function_chain metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_function_chain was last updated
        format: date-time
      kind:
        default: network_function_chain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function_chain
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: network_function_chain uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_function_chain was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the network_function_chain
      name:
        readOnly: true
        type: string
        description: network_function_chain name
        maxLength: 64
    description: The network_function_chain kind metadata
  network_function_chain_reference:
    title: Reference to a network_function_chain
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: network_function_chain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function_chain
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a network_function_chain
  network_function_chain_resource:
    title: network function chain resource definition
    type: object
    properties:
      network_function_list:
        items:
          $ref: '#/definitions/network_function_resource'
        type: array
        description: Referenced network functions in the chain.
    description: network function chain resource definition.
  network_function_chain_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: network_function_chain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function_chain
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  network_function_list_metadata:
    title: Metadata for network_function list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: network_function
        x-ntnx-enum:
          - network_function
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  network_function_list_metadata_output:
    title: Metadata for network_function list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: network_function
        x-ntnx-enum:
          - network_function
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  network_function_metadata:
    title: network_function metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_function was last updated
        format: date-time
      kind:
        default: network_function
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: network_function uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_function was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the network_function
      name:
        readOnly: true
        type: string
        description: network_function name
        maxLength: 64
    description: The network_function kind metadata
  network_function_reference:
    title: Reference to a network_function
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: network_function
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a network_function
  network_function_resource:
    title: Network function resource definition
    required:
      - network_function_type
      - category_filter
    type: object
    properties:
      network_function_type:
        x-ntnx-enum:
          - INLINE
          - TAP
        type: string
        description: The type of the network function.
      category_filter:
        description: Category filter for this network function.
        $ref: '#/definitions/category_filter'
    description: network function resource definition.
  network_function_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: network_function
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_function
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  network_port_bindings:
    additionalProperties: false
    items:
      type: object
      properties:
        host_port:
          type: string
          description: Port number of host
        network_uuid:
          type: string
          description: Uuid of network
    type: array
    description: Port binding
    title: Port binding
  network_port_bindings_status:
    additionalProperties: false
    items:
      type: object
      properties:
        host_port:
          type: string
          description: Port number of host
        network_uuid:
          type: string
          description: Uuid of network
        ip_addr:
          type: string
          description: Ip address of container.
    type: array
    description: Port binding status
    title: Port binding status
  network_rule:
    title: Network rule
    type: object
    properties:
      protocol:
        x-ntnx-enum:
          - ALL
          - ICMP
          - TCP
          - UDP
        type: string
        description: Select a protocol to allow.  Multiple protocols can be allowed by repeating network_rule object.  If a protocol is not configured in the network_rule object then it is allowed.
      ip_subnet:
        $ref: '#/definitions/ip_subnet'
      tcp_port_range_list:
        items:
          $ref: '#/definitions/port_range'
        type: array
        description: List of TCP ports that are allowed by this rule.
      udp_port_range_list:
        items:
          $ref: '#/definitions/port_range'
        type: array
        description: List of UDP ports that are allowed by this rule.
      peer_specification_type:
        x-ntnx-enum:
          - ALL
          - FILTER
          - IP_SUBNET
        type: string
        description: The set of categories that matching VMs need to have.
      filter:
        description: The set of categories that matching VMs need to have.
        $ref: '#/definitions/category_filter'
      icmp_type_code_list:
        items:
          type: object
          properties:
            code:
              type: integer
              format: int32
            type:
              type: integer
              format: int32
        type: array
        description: List of ICMP types and codes allowed by this rule.
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
      expiration_time:
        type: string
        description: Timestamp of expiration time.
        maxLength: 64
    description: Network rule
  network_security_rule:
    title: Network security rule
    required:
      - name
      - resources
    properties:
      name:
        type: string
        maxLength: 64
      resources:
        $ref: '#/definitions/network_security_rule_resources'
      description:
        type: string
        maxLength: 1000
    description: Network security rule
  network_security_rule_def_status:
    description: Network security rule status
    title: Network security rule status
    type: object
    properties:
      app_rule:
        title: App rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of deployment of the rule.
          outbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
        description: |
          These rules govern what flows are allowed. Target group is a required attribute.  Empty inbound_allow_list will not anything into target group. Empty outbound_allow_list will allow everything from target group.
      quarantine_rule:
        title: Quarantine rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of deployment of the rule.
          outbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
        description: |
          These rules are used for quarantining suspected VMs. Target group is a required attribute.  Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.
      isolation_rule:
        title: Isolation rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of action.
          first_entity_filter:
            description: The set of categories that matching VMs need to have.
            $ref: '#/definitions/category_filter'
          second_entity_filter:
            description: The set of categories that matching VMs need to have.
            $ref: '#/definitions/category_filter'
        description: These rules are used for environmental isolation.
    x-ntnx-one-of:
      - required:
          - app_rule
      - required:
          - isolation_rule
      - required:
          - quarantine_rule
  network_security_rule_intent_input:
    title: network_security_rule Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/network_security_rule'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'
    description: An intentful representation of a network_security_rule
  network_security_rule_intent_resource:
    title: network_security_rule Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/network_security_rule_def_status'
      spec:
        $ref: '#/definitions/network_security_rule'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'
    description: Response object for intentful operations on a network_security_rule
  network_security_rule_intent_response:
    title: network_security_rule Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/network_security_rule_def_status'
      spec:
        $ref: '#/definitions/network_security_rule'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_security_rule_metadata'
    description: Response object for intentful operations on a network_security_rule
  network_security_rule_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/network_security_rule_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/network_security_rule_list_metadata_output'
    description: Response object for intentful operation of network_security_rules
  network_security_rule_list_metadata:
    title: Metadata for network_security_rule list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: network_security_rule
        x-ntnx-enum:
          - network_security_rule
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  network_security_rule_list_metadata_output:
    title: Metadata for network_security_rule list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: network_security_rule
        x-ntnx-enum:
          - network_security_rule
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  network_security_rule_metadata:
    title: network_security_rule metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_security_rule was last updated
        format: date-time
      kind:
        default: network_security_rule
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_security_rule
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: network_security_rule uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when network_security_rule was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the network_security_rule
      name:
        readOnly: true
        type: string
        description: network_security_rule name
        maxLength: 64
    description: The network_security_rule kind metadata
  network_security_rule_reference:
    title: Reference to a network_security_rule
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: network_security_rule
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_security_rule
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a network_security_rule
  network_security_rule_resources:
    description: Network security rule resources
    title: Network security rule resources
    type: object
    properties:
      app_rule:
        title: App rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of deployment of the rule.
          outbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
        description: |
          These rules govern what flows are allowed. Target group is a required attribute.  Empty inbound_allow_list will not anything into target group. Empty outbound_allow_list will allow everything from target group.
      quarantine_rule:
        title: Quarantine rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of action.
          outbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
          target_group:
            $ref: '#/definitions/target_group'
          inbound_allow_list:
            items:
              $ref: '#/definitions/network_rule'
            type: array
        description: |
          These rules are used for quarantining suspected VMs. Target group is a required attribute.  Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.
      isolation_rule:
        title: Isolation rule
        type: object
        properties:
          action:
            x-ntnx-enum:
              - APPLY
              - MONITOR
            type: string
            description: Type of action.
          first_entity_filter:
            description: The set of categories that matching VMs need to have.
            $ref: '#/definitions/category_filter'
          second_entity_filter:
            description: The set of categories that matching VMs need to have.
            $ref: '#/definitions/category_filter'
        description: These rules are used for environmental isolation.
    x-ntnx-one-of:
      - required:
          - app_rule
      - required:
          - isolation_rule
      - required:
          - quarantine_rule
  network_security_rule_resources_status:
    title: Network security rule resources status
    type: object
    properties:
      state:
        readOnly: true
        type: string
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      name:
        type: string
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      resources:
        $ref: '#/definitions/network_security_rule_resources'
      description:
        type: string
    description: Network security rule resources status
  network_security_rule_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: network_security_rule
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - network_security_rule
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  nutanix_guest_tools_spec:
    title: Nutanix Guest Tools information
    type: object
    properties:
      iso_mount_state:
        x-ntnx-enum:
          - MOUNTED
          - UNMOUNTED
        type: string
        description: |
          Desired mount state of Nutanix Guest Tools ISO.
      state:
        x-ntnx-enum:
          - ENABLED
          - DISABLED
        type: string
        description: Nutanix Guest Tools is enabled or not.
      enabled_capability_list:
        items:
          x-ntnx-enum:
            - SELF_SERVICE_RESTORE
            - VSS_SNAPSHOT
          type: string
        type: array
        description: Application names that are enabled.
    description: Information regarding Nutanix Guest Tools.
  nutanix_guest_tools_status:
    title: Nutanix Guest Tools status
    type: object
    properties:
      available_version:
        type: string
        description: Version of Nutanix Guest Tools available on the cluster.
      iso_mount_state:
        x-ntnx-enum:
          - MOUNTED
          - UNMOUNTED
        type: string
        description: |
          Desired mount state of Nutanix Guest Tools ISO.
      state:
        x-ntnx-enum:
          - ENABLED
          - DISABLED
        type: string
        description: Nutanix Guest Tools is enabled or not.
      version:
        type: string
        description: Version of Nutanix Guest Tools installed on the VM.
      guest_os_version:
        type: string
        description: Version of the operating system on the VM.
      enabled_capability_list:
        items:
          x-ntnx-enum:
            - SELF_SERVICE_RESTORE
            - VSS_SNAPSHOT
          type: string
        type: array
        description: Application names that are enabled.
      vss_snapshot_capable:
        type: boolean
        description: |
          Whether the VM is configured to take VSS snapshots through NGT.
      is_reachable:
        type: boolean
        description: Communication from VM to CVM is active or not.
      vm_mobility_drivers_installed:
        type: boolean
        description: Whether VM mobility drivers are installed in the VM.
    description: Information regarding Nutanix Guest Tools.
  oauth_client_input:
    title: Oauth client
    required:
      - client_name
      - client_description
      - redirect_uris
      - default_scopes
    type: object
    properties:
      client_name:
        type: string
        description: client name of the Oauth Client
        maxLength: 64
      redirect_uris:
        items:
          type: string
          description: entry for redirect URIs
        type: array
      client_description:
        type: string
        description: client description of the Oauth Client
        maxLength: 1000
      default_scopes:
        items:
          type: string
          description: entry for default scopes
        type: array
    description: Oauth client information
  oauth_client_list:
    title: Oauth Client list
    required:
      - metadata
      - entities
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/oauth_client_response'
        type: array
      metadata:
        $ref: '#/definitions/oauth_client_list_metadata'
    description: Oauth Client list
  oauth_client_list_metadata:
    title: Metadata for oauth_client list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: oauth_client
        x-ntnx-enum:
          - oauth_client
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  oauth_client_list_metadata_output:
    title: Metadata for oauth_client list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: oauth_client
        x-ntnx-enum:
          - oauth_client
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  oauth_client_metadata:
    title: oauth_client metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when oauth_client was last updated
        format: date-time
      kind:
        default: oauth_client
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth_client
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: oauth_client uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when oauth_client was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the oauth_client
      name:
        readOnly: true
        type: string
        description: oauth_client name
        maxLength: 64
    description: The oauth_client kind metadata
  oauth_client_reference:
    title: Reference to a oauth_client
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: oauth_client
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth_client
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a oauth_client
  oauth_client_response:
    title: Oauth Client response
    required:
      - client_id
      - client_secret
      - client_name
      - client_description
      - redirect_uris
      - default_scopes
    type: object
    properties:
      redirect_uris:
        items:
          type: string
          description: entry for redirect URIs
        type: array
      client_id:
        type: string
        description: client id of the Oauth Client
      client_secret:
        type: string
        description: client secret of the Oauth Client
      client_name:
        type: string
        description: client name of the Oauth Client
        maxLength: 64
      client_description:
        type: string
        description: client description of the Oauth Client
        maxLength: 1000
      default_scopes:
        items:
          type: string
          description: entry for default scopes
        type: array
    description: Oauth client information
  oauth_client_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: oauth_client
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth_client
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  oauth_generate_token_request:
    title: Oauth token generate request
    required:
      - client_name
      - client_description
      - scopes
    type: object
    properties:
      scopes:
        items:
          type: string
          description: entry for default scopes
        type: array
      client_name:
        type: string
        description: client name of the Oauth Client
        maxLength: 64
      client_description:
        type: string
        description: client description of the Oauth Client
        maxLength: 1000
      expires_in:
        type: integer
        description: Token expiration time in seconds
        format: int64
    description: Oauth token generate request
  oauth_generate_token_response:
    title: Oauth token generate response
    required:
      - client_id
      - client_secret
      - oauth_token
    type: object
    properties:
      client_secret:
        type: string
        description: client secret of the Oauth Client
      oauth_token:
        $ref: '#/definitions/oauth_token'
      client_id:
        type: string
        description: client id of the Oauth Client
    description: Oauth token generate response
  oauth_list_metadata:
    title: Metadata for oauth list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: oauth
        x-ntnx-enum:
          - oauth
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  oauth_list_metadata_output:
    title: Metadata for oauth list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: oauth
        x-ntnx-enum:
          - oauth
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  oauth_metadata:
    title: oauth metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when oauth was last updated
        format: date-time
      kind:
        default: oauth
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: oauth uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when oauth was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the oauth
      name:
        readOnly: true
        type: string
        description: oauth name
        maxLength: 64
    description: The oauth kind metadata
  oauth_reference:
    title: Reference to a oauth
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: oauth
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a oauth
  oauth_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: oauth
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - oauth
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  oauth_token:
    title: Oauth token
    required:
      - access_token
      - token_type
      - expires_in
      - refresh_token
      - scopes
    type: object
    properties:
      access_token:
        type: string
        description: access_token to be used for accessing gateway
      token_type:
        readOnly: true
        type: string
        description: Only value possible is "bearer".
      expires_in:
        type: integer
        description: Token expiration time in seconds
        format: int64
      refresh_token:
        type: string
        description: refresh_token which can used to get new token
      scopes:
        items:
          type: string
          description: scope which the token grants
        type: array
    description: Oauth token information
  open_ldap_configuration:
    title: OpenLDAP Configuration.
    required:
      - user_configuration
      - user_group_configuration
    type: object
    properties:
      user_configuration:
        required:
          - user_object_class
          - user_search_base
          - username_attribute
        type: object
        properties:
          user_search_base:
            type: string
            description: The base DN for user search.
            maxLength: 200
          user_object_class:
            type: string
            description: |
              The object class in the OpenLDAP system that corresponds to users.
            maxLength: 64
          username_attribute:
            type: string
            description: |
              Unique identifier for each user which can be used in authentication.
            maxLength: 64
      user_group_configuration:
        required:
          - group_object_class
          - group_search_base
          - group_member_attribute
          - group_member_attribute_value
        type: object
        properties:
          group_search_base:
            type: string
            description: |
              The base DN for group search.
            maxLength: 200
          group_member_attribute:
            type: string
            description: |
              The attribute in a group that associates users to the group.
            maxLength: 64
          group_object_class:
            type: string
            description: |
              The object class in the OpenLDAP system that corresponds to groups.
            maxLength: 64
          group_member_attribute_value:
            type: string
            description: |
              The user attribute value that will be used in group entity to associate user to the group.
            maxLength: 64
    description: Configuration for OpenLDAP directory service.
  open_ldap_configuration_def_status:
    title: OpenLDAP Configuration.
    required:
      - user_configuration
      - user_group_configuration
    type: object
    properties:
      user_configuration:
        required:
          - user_object_class
          - user_search_base
          - username_attribute
        type: object
        properties:
          user_search_base:
            type: string
            description: The base DN for user search.
          user_object_class:
            type: string
            description: |
              The object class in the OpenLDAP system that corresponds to users.
          username_attribute:
            type: string
            description: |
              Unique identifier for each user which can be used in authentication.
      user_group_configuration:
        required:
          - group_object_class
          - group_search_base
          - group_member_attribute
          - group_member_attribute_value
        type: object
        properties:
          group_search_base:
            type: string
            description: |
              The base DN for group search.
          group_member_attribute:
            type: string
            description: |
              The attribute in a group that associates users to the group.
          group_object_class:
            type: string
            description: |
              The object class in the OpenLDAP system that corresponds to groups.
          group_member_attribute_value:
            type: string
            description: |
              The user attribute value that will be used in group entity to associate user to the group.
    description: Configuration for OpenLDAP directory service.
  oplog_usage:
    title: Host oplog disk usage stats
    type: object
    properties:
      oplog_disk_pct:
        type: number
        description: Oplog disk size used in percentage.
        format: float
      oplog_disk_size:
        type: integer
        description: Size of oplog disk in bytes.
        format: int64
    description: oplog disk usage.
  pc_vm:
    title: Prism central VM configuration
    required:
      - vm_name
      - container_uuid
      - num_sockets
      - memory_size_bytes
      - data_disk_size_bytes
      - nic_list
    type: object
    properties:
      vm_name:
        type: string
        description: VM name.
        maxLength: 64
      data_disk_size_bytes:
        type: integer
        description: Data disk size in bytes.
        format: int64
      dns_server_ip_list:
        items:
          pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
          type: string
        type: array
        description: Array of DNS IP addresses.
      container_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Container uuid.
        format: UUID
      nic_list:
        items:
          $ref: '#/definitions/pc_vm_nic_configuration'
        type: array
      num_sockets:
        type: integer
        description: Number of sockets allocated per VM.
        format: int64
      memory_size_bytes:
        type: integer
        description: Memory in bytes.
        format: int64
    description: Prism central VM configuration.
  pc_vm_nic_configuration:
    title: Virtual Machine NIC
    type: object
    properties:
      network_configuration:
        $ref: '#/definitions/network_config'
      ip_list:
        items:
          pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
          type: string
        type: array
        description: Network IP address.
    description: Virtual Machine NIC.
  pemkey_spec:
    title: SSL key
    required:
      - type
      - key
      - cert
    type: object
    properties:
      ca_chain:
        type: string
        format: byte
      type:
        $ref: '#/definitions/ssl_key_type'
      cert:
        type: string
        format: byte
      key:
        type: string
        format: byte
      name:
        type: string
        maxLength: 64
    description: SSL key
  permission:
    title: Permission
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Permission name.
        maxLength: 64
      resources:
        $ref: '#/definitions/permission_resources'
      description:
        type: string
        description: A description or user annotation for the permission.
        maxLength: 1000
    description: |
      Permission Input Definition. The permission consists of a name and defines the following what-operation-can-be-performed-on-which-fields-a-given-kind. The fields are defined in a list with type - allowed and disallowed.
  permission_def_status:
    title: Permission Status Definition.
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the permission entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Permission name.
      resources:
        $ref: '#/definitions/permission_resources'
      description:
        type: string
        description: Human readable description of the permission.
    description: Permission Status Definition.
  permission_intent_input:
    title: permission Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/permission'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/permission_metadata'
    description: An intentful representation of a permission
  permission_intent_resource:
    title: permission Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/permission_def_status'
      spec:
        $ref: '#/definitions/permission'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/permission_metadata'
    description: Response object for intentful operations on a permission
  permission_intent_response:
    title: permission Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/permission_def_status'
      spec:
        $ref: '#/definitions/permission'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/permission_metadata'
    description: Response object for intentful operations on a permission
  permission_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/permission_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/permission_list_metadata_output'
    description: Response object for intentful operation of permissions
  permission_list_metadata:
    title: Metadata for permission list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: permission
        x-ntnx-enum:
          - permission
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  permission_list_metadata_output:
    title: Metadata for permission list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: permission
        x-ntnx-enum:
          - permission
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  permission_metadata:
    title: permission metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when permission was last updated
        format: date-time
      kind:
        default: permission
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - permission
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: permission uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when permission was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the permission
      name:
        readOnly: true
        type: string
        description: permission name
        maxLength: 64
    description: The permission kind metadata
  permission_reference:
    title: Reference to a permission
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: permission
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - permission
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a permission
  permission_resources:
    title: Permission entity resources.
    required:
      - operation
      - kind
    type: object
    properties:
      fields:
        title: The fields that can be allowed or disallowed during an operation.
        required:
          - field_mode
          - field_name_list
        type: object
        properties:
          field_mode:
            x-ntnx-enum:
              - ALLOWED
              - DISALLOWED
              - NONE
            type: string
            description: Allow or disallow the fields mentioned.
          field_name_list:
            items:
              type: string
            type: array
            description: The list of fields.
        description: |
          The fields that can/cannot be accessed during the specified operation. field_name_list will be a list of fields. e.g. if field_mode = disallowed, field_name_list = ["xyz"] then the list of allowed fields is ALL fields minus xyz
      operation:
        type: string
        description: The operation that is being performed on a given kind.
      kind:
        type: string
        description: The kind on which the operation is being performed.
    description: Permission resources definition.
  permission_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: permission
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - permission
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  policies:
    items:
      type: object
      properties:
        policy:
          type: object
          description: Policy object which will be interpreted by the provider
        type:
          type: string
          description: The policy type
    type: array
    description: |
      Settings that modify the behavior of the entity. They will be interpreted
      by built in or the third party providers
    title: Policies
  policy_list_metadata:
    title: Metadata for policy list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: policy
        x-ntnx-enum:
          - policy
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  policy_list_metadata_output:
    title: Metadata for policy list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: policy
        x-ntnx-enum:
          - policy
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  policy_metadata:
    title: policy metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when policy was last updated
        format: date-time
      kind:
        default: policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - policy
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: policy uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when policy was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the policy
      name:
        readOnly: true
        type: string
        description: policy name
        maxLength: 64
    description: The policy kind metadata
  policy_reference:
    title: Reference to a policy
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - policy
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a policy
  policy_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: policy
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - policy
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  port_range:
    title: TCP/UDP ports.
    type: object
    properties:
      end_port:
        type: integer
        format: int32
      start_port:
        type: integer
        format: int32
    description: Range of TCP/UDP ports.
  portal_software:
    title: Software information
    type: object
    properties:
      release_note_url:
        type: string
        description: |
          URL to point to the support portal release note of this software.
          Currently only set and used for NOS releases
      upgrade_notification:
        $ref: '#/definitions/upgrade_notification'
      release_date:
        type: string
        description: |
          Release date of this software in RFC3339 format.
        format: date-time
      md5sum:
        type: string
        description: MD5 checksum of the software file
      compatible_version_list:
        items:
          type: string
        type: array
        description: |
          List of software versions that this version can be upgraded from
      version:
        type: string
        description: Software version string
      compatible_pe_version_list:
        items:
          type: string
        type: array
        description: List of Prism Element compatible versions
      software_type:
        $ref: '#/definitions/software_type'
      size_bytes:
        type: integer
        description: Total size of the software file in bytes
        format: int64
    description: Software information from Nutanix Portal
  postal_address:
    title: Postal address
    type: object
    properties:
      country:
        type: string
        description: Country name
        maxLength: 100
      state:
        type: string
        description: State name
        maxLength: 100
      street:
        type: string
        description: Street name and number
        maxLength: 100
      zip_code:
        type: string
        description: Zip code
        maxLength: 20
      city:
        type: string
        description: City name
        maxLength: 100
    description: Postal address
  prism_central:
    title: Prism Central
    required:
      - resources
    type: object
    properties:
      resources:
        required:
          - version
          - pc_vm_list
        type: object
        description: Prism central deployment resources.
        properties:
          version:
            type: string
            description: The desired version of Prism Central.
          virtual_ip:
            pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
            type: string
            description: |
              The desired virtual IP address of Prism Central cluster.
          pc_vm_list:
            items:
              $ref: '#/definitions/pc_vm'
            type: array
          should_auto_register:
            default: false
            type: boolean
            description: |
              Indicates if the new prism central should be automatically register to the cluster.
    description: Prism central deployment definition.
  prism_central_list_metadata:
    title: Metadata for prism_central list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: prism_central
        x-ntnx-enum:
          - prism_central
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  prism_central_list_metadata_output:
    title: Metadata for prism_central list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: prism_central
        x-ntnx-enum:
          - prism_central
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  prism_central_metadata:
    title: prism_central metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when prism_central was last updated
        format: date-time
      kind:
        default: prism_central
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - prism_central
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: prism_central uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when prism_central was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the prism_central
      name:
        readOnly: true
        type: string
        description: prism_central name
        maxLength: 64
    description: The prism_central kind metadata
  prism_central_reference:
    title: Reference to a prism_central
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: prism_central
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - prism_central
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a prism_central
  prism_central_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: prism_central
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - prism_central
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  project:
    title: Project resource spec
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Project name.
        maxLength: 64
      resources:
        type: object
        properties:
          resource_domain:
            $ref: '#/definitions/resource_domain_spec'
          account_reference_list:
            items:
              $ref: '#/definitions/account_reference'
            type: array
            description: List of accounts associated with the project.
          environment_reference_list:
            items:
              $ref: '#/definitions/environment_reference'
            type: array
            description: List of environments associated with the project.
          subnet_reference_list:
            items:
              $ref: '#/definitions/subnet_reference'
            type: array
            description: List of subnets for the project.
          external_user_group_reference_list:
            items:
              $ref: '#/definitions/user_group_reference'
            type: array
            description: |
              List of directory service user groups. These groups are not
              managed by Nutanix.
          default_subnet_reference:
            description: Optional default subnet if one is specified
            $ref: '#/definitions/subnet_reference'
          user_reference_list:
            items:
              $ref: '#/definitions/user_reference'
            type: array
            description: List of users in the project.
        title: Project Resources
      description:
        type: string
        description: Project description.
        maxLength: 1000
    description: A Project resource.
  project_def_status:
    title: Project Resource Status
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the project entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Project name.
      resources:
        type: object
        properties:
          resource_domain:
            $ref: '#/definitions/resource_domain_resources_status'
          account_reference_list:
            items:
              $ref: '#/definitions/account_reference'
            type: array
            description: List of accounts associated with the project.
          environment_reference_list:
            items:
              $ref: '#/definitions/environment_reference'
            type: array
            description: List of environments associated with the project.
          default_subnet_reference:
            description: Optional default subnet if one is specified
            $ref: '#/definitions/subnet_reference'
          user_reference_list:
            items:
              $ref: '#/definitions/user_reference'
            type: array
            description: |
              List of users added directly to the project.
          is_default:
            type: boolean
            description: |
              Indicates if it is the default project. A default project is
              managed by the system and cannot be renamed or removed.
          external_user_group_reference_list:
            items:
              $ref: '#/definitions/user_group_reference'
            type: array
            description: |
              List of directory service groups reference. These
              groups are not managed by Nutanix.
          subnet_reference_list:
            items:
              $ref: '#/definitions/subnet_reference'
            type: array
            description: List of subnets for the project.
        title: Project Resources
      description:
        type: string
        description: Project description.
    description: A Project resource.
  project_intent_input:
    title: project Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/project'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/project_metadata'
    description: An intentful representation of a project
  project_intent_resource:
    title: project Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/project_def_status'
      spec:
        $ref: '#/definitions/project'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/project_metadata'
    description: Response object for intentful operations on a project
  project_intent_response:
    title: project Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/project_def_status'
      spec:
        $ref: '#/definitions/project'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/project_metadata'
    description: Response object for intentful operations on a project
  project_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/project_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/project_list_metadata_output'
    description: Response object for intentful operation of projects
  project_list_metadata:
    title: Metadata for project list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: project
        x-ntnx-enum:
          - project
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  project_list_metadata_output:
    title: Metadata for project list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: project
        x-ntnx-enum:
          - project
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  project_metadata:
    title: project metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when project was last updated
        format: date-time
      kind:
        default: project
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - project
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: project uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when project was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the project
      name:
        readOnly: true
        type: string
        description: project name
        maxLength: 64
    description: The project kind metadata
  project_reference:
    title: Reference to a project
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: project
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - project
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a project
  project_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: project
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - project
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  provider_oauth_token:
    title: Oauth token from Oauth2 provider
    required:
      - access_token
      - token_type
      - expires_in
      - refresh_token
      - scope
    type: object
    properties:
      access_token:
        type: string
        description: access_token to be used for accessing gateway
      token_type:
        readOnly: true
        type: string
        description: Only value possible is "bearer".
      expires_in:
        type: integer
        description: Token expiration time in seconds
        format: int64
      refresh_token:
        type: string
        description: Refresh_token which can used to get new token
      scope:
        type: string
        description: Scope string with individual scopes separated by space
    description: Oauth token from Oauth2 provider
  providers:
    additionalProperties:
      type: object
    type: object
    description: |
      Providers should be supplied as "<scope>:<provider>" style keys. Values
      will be interpreted by the provider if supplied
    title: Providers
  public_key:
    title: Public Key
    required:
      - name
      - key
    type: object
    properties:
      name:
        type: string
        maxLength: 64
      key:
        type: string
    description: Public Key
  reference:
    title: Reference
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
      name:
        readOnly: true
        type: string
    description: Reference to a kind
  region:
    title: Region
    type: object
    properties:
      length:
        type: integer
        description: The length of the region in bytes.
        format: int64
      type:
        x-ntnx-enum:
          - ZEROED
          - REGULAR
        type: string
        description: The type of the region.
      offset:
        type: integer
        description: The byte offset indicating the start of the region.
        format: int64
    description: |
      A region is a contiguous set of offsets.
  remote_connection:
    title: Remote connection information
    required:
      - name
      - description
      - resources
    type: object
    properties:
      name:
        type: string
        description: Remote connection name.
        maxLength: 64
      resources:
        $ref: '#/definitions/remote_connection_resources'
      description:
        type: string
        description: Remote connection description
        maxLength: 1000
    description: Remote connection information.
  remote_connection_credential:
    title: Credential to connect with remote endpoint
    type: object
    properties:
      auth_type:
        x-ntnx-enum:
          - BASIC
          - BEARER
        type: string
        description: Type of credentials to use
      bearer_token:
        type: string
        description: |
          token to use with bearer authorization, must for BEARER auth_type
      basic_credential:
        $ref: '#/definitions/basic_credential'
    description: Credentials to connect with remote endpoint
  remote_connection_def_status:
    title: Remote connection status definition
    required:
      - name
      - description
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the remote connection entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Remote connection name
      resources:
        $ref: '#/definitions/remote_connection_resources'
      description:
        type: string
        description: Remote connection description
    description: Remote connection status definition
  remote_connection_info:
    title: Connection info
    type: object
    properties:
      node_address_list:
        items:
          $ref: '#/definitions/address'
        type: array
      token:
        $ref: '#/definitions/remote_connection_token'
      peer_remote_connection_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Connection uuid for remote Peer
        format: UUID
      cluster_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of cluster
        format: UUID
      cluster_function:
        x-ntnx-enum:
          - ACCESS_GRANT_SYSTEM
          - AOS
          - JUMP_BOX
          - PRISM_CENTRAL
          - XI_PORTAL
        type: string
        description: cluster function string
      additional_capabilities:
        items:
          x-ntnx-enum:
            - SEED_REMOTE_AZ
          type: string
          description: Additional capabilities to enable. Set by Initiator.
        type: array
    description: Connection information
  remote_connection_intent_input:
    title: remote_connection Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/remote_connection'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/remote_connection_metadata'
    description: An intentful representation of a remote_connection
  remote_connection_intent_resource:
    title: remote_connection Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/remote_connection_def_status'
      spec:
        $ref: '#/definitions/remote_connection'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/remote_connection_metadata'
    description: Response object for intentful operations on a remote_connection
  remote_connection_intent_response:
    title: remote_connection Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/remote_connection_def_status'
      spec:
        $ref: '#/definitions/remote_connection'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/remote_connection_metadata'
    description: Response object for intentful operations on a remote_connection
  remote_connection_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/remote_connection_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/remote_connection_list_metadata_output'
    description: Response object for intentful operation of remote_connections
  remote_connection_list_metadata:
    title: Metadata for remote_connection list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: remote_connection
        x-ntnx-enum:
          - remote_connection
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  remote_connection_list_metadata_output:
    title: Metadata for remote_connection list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: remote_connection
        x-ntnx-enum:
          - remote_connection
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  remote_connection_metadata:
    title: remote_connection metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when remote_connection was last updated
        format: date-time
      kind:
        default: remote_connection
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - remote_connection
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: remote_connection uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when remote_connection was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the remote_connection
      name:
        readOnly: true
        type: string
        description: remote_connection name
        maxLength: 64
    description: The remote_connection kind metadata
  remote_connection_reference:
    title: Reference to a remote_connection
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: remote_connection
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - remote_connection
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a remote_connection
  remote_connection_resources:
    title: Remote connection resources
    type: object
    properties:
      local_connection_info:
        $ref: '#/definitions/remote_connection_info'
      role:
        default: INITIATOR
        x-ntnx-enum:
          - INITIATOR
          - ACCEPTOR
        type: string
        description: Role of the cluster in remote connection
      remote_address:
        $ref: '#/definitions/address'
      remote_connection_info:
        $ref: '#/definitions/remote_connection_info'
      remote_credential:
        $ref: '#/definitions/remote_connection_credential'
    description: Remote connection resources
  remote_connection_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: remote_connection
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - remote_connection
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  remote_connection_token:
    title: Token info
    type: object
    properties:
      access_token:
        type: string
        description: Access token
      client_secret:
        type: string
        description: Client Secret
      refresh_token_endpoint:
        type: string
        description: Refresh token endpoint
      refresh_token:
        type: string
        description: Refresh token
      client_id:
        type: string
        description: Client Id
    description: Token information for communicating with remote peer
  remote_rpc_request_input:
    title: Request spec for performing remote RPC execution
    required:
      - rpc_payload
    properties:
      rpc_payload:
        type: string
        description: Argument to be passed to the RPC in bytes.
        format: bytes
    description: Request spec for performing remote RPC execution.
  resource_charge_list_metadata:
    title: Metadata for resource_charge list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: resource_charge
        x-ntnx-enum:
          - resource_charge
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  resource_charge_list_metadata_output:
    title: Metadata for resource_charge list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: resource_charge
        x-ntnx-enum:
          - resource_charge
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  resource_charge_metadata:
    title: resource_charge metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when resource_charge was last updated
        format: date-time
      kind:
        default: resource_charge
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_charge
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: resource_charge uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when resource_charge was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the resource_charge
      name:
        readOnly: true
        type: string
        description: resource_charge name
        maxLength: 64
    description: The resource_charge kind metadata
  resource_charge_reference:
    title: Reference to a resource_charge
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: resource_charge
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_charge
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a resource_charge
  resource_charge_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: resource_charge
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_charge
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  resource_domain_list_metadata:
    title: Metadata for resource_domain list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: resource_domain
        x-ntnx-enum:
          - resource_domain
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  resource_domain_list_metadata_output:
    title: Metadata for resource_domain list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: resource_domain
        x-ntnx-enum:
          - resource_domain
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  resource_domain_metadata:
    title: resource_domain metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when resource_domain was last updated
        format: date-time
      kind:
        default: resource_domain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_domain
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: resource_domain uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when resource_domain was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the resource_domain
      name:
        readOnly: true
        type: string
        description: resource_domain name
        maxLength: 64
    description: The resource_domain kind metadata
  resource_domain_reference:
    title: Reference to a resource_domain
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: resource_domain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_domain
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a resource_domain
  resource_domain_resources_status:
    title: Resource Domain Status
    required:
      - resources
    properties:
      resources:
        items:
          $ref: '#/definitions/resource_utilization_status'
        type: array
        description: The utilization/limit for resource types
    description: The status for a resource domain (limits and values)
  resource_domain_spec:
    title: Resource Domain Spec
    properties:
      resources:
        items:
          $ref: '#/definitions/resource_utilization_spec'
        type: array
        description: The utilization limits for resource types
    description: Resource domain specification (limits)
  resource_domain_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: resource_domain
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - resource_domain
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  resource_utilization_spec:
    title: Resource Utilization Specification
    required:
      - resource_type
    properties:
      limit:
        type: integer
        description: The resource consumption limit
      resource_type:
        x-ntnx-enum:
          - STORAGE
          - MEMORY
          - VCPUS
          - VMS
        type: string
        description: 'The type of resource (i.e. storage, CPUs)'
    description: specify the limits and units for a resource type
  resource_utilization_status:
    title: Resource Utilization Status
    required:
      - resource_type
      - units
      - value
    properties:
      units:
        type: string
        description: The units of the resource type
      limit:
        type: integer
        description: The resource consumption limit (unspecified is unlimited)
      resource_type:
        type: string
        description: 'The type of resource (for example storage, CPUs)'
      value:
        type: integer
        description: The amount of resource consumed
    description: stores resource utilization and limits for a domain
  right_hand_side:
    description: The right hand side of an expression.
    title: The right hand side (RHS) of an expression.
    type: object
    properties:
      collection:
        x-ntnx-enum:
          - ALL
          - SELF_OWNED
        type: string
        description: |
          A representative term for supported groupings of entities. ALL = All the entities of a given kind. SELF_OWNED = The entities of a given kind, that are owned by the user.
      categories:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
        description: |
          The category values represented as a dictionary of key -> list of values. e.g.{"env":["env1", "env2"]}
      uuid_list:
        items:
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          type: string
          format: UUID
        type: array
        description: The explicit list of UUIDs for the given kind.
    x-ntnx-one-of:
      - required:
          - collection
      - required:
          - categories
      - required:
          - uuid_list
  role:
    title: Role.
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Role name.
        maxLength: 64
      resources:
        type: object
        properties:
          permission_reference_list:
            items:
              $ref: '#/definitions/permission_reference'
            type: array
            description: List of permission references.
        title: Role Resources.
      description:
        type: string
        description: A description or user annotation for the role.
        maxLength: 1000
    description: Role Input Definition.
  role_def_status:
    title: Role status definition.
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the role entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Role name.
        maxLength: 64
      resources:
        type: object
        properties:
          permission_reference_list:
            items:
              $ref: '#/definitions/permission_reference'
            type: array
            description: List of permission entities.
        title: Role Resources.
      description:
        type: string
        description: A description or user annotation for the role.
        maxLength: 1000
    description: Role status definition.
  role_intent_input:
    title: role Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/role'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/role_metadata'
    description: An intentful representation of a role
  role_intent_resource:
    title: role Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/role_def_status'
      spec:
        $ref: '#/definitions/role'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/role_metadata'
    description: Response object for intentful operations on a role
  role_intent_response:
    title: role Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/role_def_status'
      spec:
        $ref: '#/definitions/role'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/role_metadata'
    description: Response object for intentful operations on a role
  role_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/role_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/role_list_metadata_output'
    description: Response object for intentful operation of roles
  role_list_metadata:
    title: Metadata for role list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: role
        x-ntnx-enum:
          - role
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  role_list_metadata_output:
    title: Metadata for role list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: role
        x-ntnx-enum:
          - role
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  role_metadata:
    title: role metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when role was last updated
        format: date-time
      kind:
        default: role
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - role
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: role uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when role was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the role
      name:
        readOnly: true
        type: string
        description: role name
        maxLength: 64
    description: The role kind metadata
  role_reference:
    title: Reference to a role
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: role
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - role
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a role
  role_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: role
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - role
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  schedule:
    title: Schedule definition.
    required:
      - interval_type
      - interval_multiple
    type: object
    properties:
      interval_multiple:
        type: integer
        description: Multiple of interval_type.
        format: int32
      duration_secs:
        type: integer
        description: |
          Duration of the event. If set, an event of duration duration_usecs
          will repeat as per the recurrence defined in interval_type.
        format: int64
      end_time:
        type: string
        description: |
          End time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        format: date-time
      start_time:
        type: string
        description: |
          Start time of the schedule.
          The time should be specified in this manner.
          date-fullyear(4digit) "-" date-month(2digit) "-" date-mday(2digit) "T" time-hour(2digit)
          ":" time-minute(2digit) ":" time-second(2digit) [.] "Z"  or
          ("+" / "-") time-hour(2digit) ":" time-minute(2digit)
          Examples
          - 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          - 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour
            of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).
            Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.
        format: date-time
      interval_type:
        x-ntnx-enum:
          - ONCE
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        type: string
        description: |
          Type of schedule interval. For schedule once, the interval_type is set
          to Once. ONCE is for aperiodic schedules.
      is_suspended:
        type: boolean
        description: Whether the schedule is suspended.
      day_of_week:
        items:
          x-ntnx-enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        type: array
        description: |
          For schedule on weekly basis,like every Monday and Friday 10:00. To use this field, it is
          required that start_time (datetime) is set, and the interval_type is set to weekly or
          NONE.  If interval_type is set to NONE, then, only schedule for Monday and Friday once, in
          this example.
    description: Defines the schedule parameters.
  scope_filter_expression:
    title: Scope Filter Expression.
    required:
      - left_hand_side
      - operator
      - right_hand_side
    type: object
    properties:
      operator:
        x-ntnx-enum:
          - IN
          - IN_ALL
          - NOT_IN
        type: string
        description: The operator of the filter expression.
      left_hand_side:
        x-ntnx-enum:
          - CATEGORY
          - PROJECT
        type: string
        description: The LHS of the filter expression - the scope type.
      right_hand_side:
        description: The Right hand side(RHS) of the scope filter expression.
        $ref: '#/definitions/right_hand_side'
    description: |
      The Scope filter expression is a combination of LHS-Operator-RHS. This type of filter expression helps express the "Context" part of a Filter. Example1 - To express a context = Belonging to Project P1 or Project P2
        left_hand_side = PROJECT
        operator = IN
        right_hand_side = ["P1", "P2"]
      Example2 - To express Belonging to 2 categories
        left_hand_side = CATEGORY
        operator = IN_ALL
        right_hand_side = ["location:nyc", "env:prod"]
  secret:
    title: Secret Entity
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: The secret name
        maxLength: 64
      resources:
        $ref: '#/definitions/secret_resources'
    description: Secret Entity Definition
  secret_def_status:
    title: Secret Entity
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: The secret name
        maxLength: 64
      resources:
        $ref: '#/definitions/secret_details'
    description: Secret Entity Definition
  secret_details:
    title: Secret details
    type: object
    properties:
      payload_type:
        default: SYMMETRIC
        x-ntnx-enum:
          - SYMMETRIC
          - PUBLIC
          - PRIVATE
          - PASSPHRASE
          - CERTIFICATE
          - OPAQUE
        type: string
        description: Used to indicate the type of secret being stored.
      user_metadata:
        type: string
        description: Metadata provided by a user or system for informational purposes.
        maxLength: 64
      path:
        type: string
        description: The secret path
        maxLength: 255
      object_type:
        default: SECRET
        x-ntnx-enum:
          - SECRET
          - DIRECTORY
        type: string
        description: The object type to determine whether it is a secret or directory.
      payload_content_encoding:
        default: BASE64
        x-ntnx-enum:
          - BASE64
        type: string
        description: |
          The encoding used for the payload to be able to include it in the JSON request. Currently only base64 is supported, required if payload is encoded.
      payload:
        type: string
        description: |
          The secret’s data to be stored. payload_content_type must also be supplied if payload is included.
        maxLength: 10000
      expiration:
        type: string
        description: |
          UTC date and time in RFC-3339 format when secret expires.
        format: date-time
    description: Secret details
  secret_intent_input:
    title: secret Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/secret'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/secret_metadata'
    description: An intentful representation of a secret
  secret_intent_resource:
    title: secret Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/secret_def_status'
      spec:
        $ref: '#/definitions/secret'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/secret_metadata'
    description: Response object for intentful operations on a secret
  secret_intent_response:
    title: secret Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/secret_def_status'
      spec:
        $ref: '#/definitions/secret'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/secret_metadata'
    description: Response object for intentful operations on a secret
  secret_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/secret_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/secret_list_metadata_output'
    description: Response object for intentful operation of secrets
  secret_list_metadata:
    title: Metadata for secret list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: secret
        x-ntnx-enum:
          - secret
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  secret_list_metadata_output:
    title: Metadata for secret list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: secret
        x-ntnx-enum:
          - secret
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  secret_metadata:
    title: secret metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when secret was last updated
        format: date-time
      kind:
        default: secret
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - secret
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: secret uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when secret was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the secret
      name:
        readOnly: true
        type: string
        description: secret name
        maxLength: 64
    description: The secret kind metadata
  secret_payload:
    title: secret payload result
    type: object
    properties:
      payload:
        type: string
        description: secret payload
        maxLength: 10000
    description: secret payload result
  secret_query:
    title: secret query result
    type: object
    properties:
      dir_names:
        items:
          type: string
          description: directory name
        type: array
        description: directories under the query name
      secret:
        $ref: '#/definitions/secret_def_status'
      secret_names:
        items:
          type: string
          description: secret name
        type: array
        description: directories under the query name
    description: secret query result
  secret_reference:
    title: Reference to a secret
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: secret
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - secret
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a secret
  secret_resources:
    title: Secret details
    type: object
    properties:
      payload_type:
        default: SYMMETRIC
        x-ntnx-enum:
          - SYMMETRIC
          - PUBLIC
          - PRIVATE
          - PASSPHRASE
          - CERTIFICATE
          - OPAQUE
        type: string
        description: Used to indicate the type of secret being stored.
      usage:
        type: string
        description: The secret usage
        maxLength: 64
      path:
        type: string
        description: The secret path
        maxLength: 255
      object_type:
        default: SECRET
        x-ntnx-enum:
          - SECRET
          - DIRECTORY
        type: string
        description: The object type to determine whether it is a secret or directory.
      payload_content_encoding:
        default: BASE64
        x-ntnx-enum:
          - BASE64
        type: string
        description: |
          The encoding used for the payload to be able to include it in the JSON request. Currently only base64 is supported, required if payload is encoded.
      payload:
        type: string
        description: |
          The secret’s data to be stored. payload_content_type must also be supplied if payload is included.
        maxLength: 10000
      expiration:
        type: string
        description: |
          UTC date and time in RFC-3339 format when secret expires.
        format: date-time
    description: Secret details
  secret_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: secret
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - secret
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  service_account:
    title: Directory service service-account
    required:
      - username
      - password
    type: object
    properties:
      username:
        type: string
        description: The username to connect to the directory service.
      password:
        type: string
        description: The password to authenticate the request.
    description: Credentials to connect to the directory service.
  smtp_server:
    title: SMTP server
    required:
      - email_address
      - server
    type: object
    properties:
      email_address:
        type: string
      type:
        default: PLAIN
        x-ntnx-enum:
          - PLAIN
          - STARTTLS
          - SSL
        type: string
      server:
        $ref: '#/definitions/cluster_network_entity'
    description: SMTP Server.
  snapshot_policy:
    title: Snapshot policy
    required:
      - snapshot_schedule_list
    type: object
    properties:
      replication_target:
        required:
          - availability_zone_reference
        type: object
        description: Replication target
        properties:
          cluster_reference:
            description: UUID of cluster to which we will be replicating
            $ref: '#/definitions/cluster_reference'
          availability_zone_reference:
            $ref: '#/definitions/availability_zone_reference'
      snapshot_schedule_list:
        items:
          type: object
          properties:
            remote_retention_quantity:
              type: integer
              description: |
                The following describes the snapshot retention quantity
                for a given replication target.
              format: int32
            snapshot_type:
              $ref: '#/definitions/snapshot_type'
            local_retention_quantity:
              type: integer
              description: |
                The following describes the local snapshot retention
                quantity corresponding to the schedule.
              format: int32
            schedule:
              $ref: '#/definitions/schedule'
        required:
          - schedule
          - local_retention_quantity
        type: array
        description: List of snapshot schedules
    description: Describes how and where to backup the kind.
  snapshot_type:
    x-ntnx-enum:
      - CRASH_CONSISTENT
      - APPLICATION_CONSISTENT
    type: string
    description: |
      Crash consistent or Application Consistent snapshot
    title: Snapshot type
  software_list_intent_response:
    title: List of software
    required:
      - metadata
      - entities
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/portal_software'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/software_list_metadata_output'
    description: Available software on Nutanix portal
  software_list_metadata:
    title: Metadata for software list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: software
        x-ntnx-enum:
          - software
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  software_list_metadata_output:
    title: Metadata for software list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: software
        x-ntnx-enum:
          - software
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  software_metadata:
    title: software metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when software was last updated
        format: date-time
      kind:
        default: software
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - software
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: software uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when software was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the software
      name:
        readOnly: true
        type: string
        description: software name
        maxLength: 64
    description: The software kind metadata
  software_reference:
    title: Reference to a software
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: software
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - software
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a software
  software_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: software
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - software
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  software_type:
    x-ntnx-enum:
      - NOS
      - NCC
      - PRISM_CENTRAL
    type: string
    description: Software type
    title: Software type
  sort_order:
    x-ntnx-enum:
      - ASCENDING
      - DESCENDING
    type: string
    description: The sort order in which results are returned
    title: Sort order
  source_auth:
    title: File item source authentication object.
    type: object
    properties:
      aws_auth:
        description: |
          Access credentials for Amazon AWS (access key and secret key).
        $ref: '#/definitions/aws_credentials'
      basic_auth:
        description: Basic authentication credentials used to access the source for the file item.
        $ref: '#/definitions/credentials'
    description: File item source authentication object.
  ssh_user:
    title: SSH User Entity
    required:
      - resources
    type: object
    properties:
      resources:
        $ref: '#/definitions/ssh_user_request_details'
    description: SSH User Entity
  ssh_user_def_status:
    title: SSH User Entity
    required:
      - resources
    type: object
    properties:
      resources:
        $ref: '#/definitions/ssh_user_details'
    description: SSH User Entity
  ssh_user_details:
    title: SSH User details
    required:
      - username
      - user_uuid
      - entity_list
      - access_request_uuid
    type: object
    properties:
      username:
        type: string
        description: SSH User name
      user_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: SSH User UUID
        format: UUID
      access_request_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the access request requesting SSH access
        format: UUID
      entity_list:
        items:
          type: object
          properties:
            entity_ip:
              type: string
              description: Entity IP Address
            entity_uuid:
              pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
              type: string
              description: Entity UUID
            entity_type:
              x-ntnx-enum:
                - CVM
                - HYPERVISOR
              type: string
              description: Entity IP Address
        type: array
        description: List of IP addresses to the entity which the user requested access to
    description: SSH User details
  ssh_user_intent_input:
    title: ssh_user Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/ssh_user'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/ssh_user_metadata'
    description: An intentful representation of a ssh_user
  ssh_user_intent_resource:
    title: ssh_user Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/ssh_user_def_status'
      spec:
        $ref: '#/definitions/ssh_user'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/ssh_user_metadata'
    description: Response object for intentful operations on a ssh_user
  ssh_user_intent_response:
    title: ssh_user Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/ssh_user_def_status'
      spec:
        $ref: '#/definitions/ssh_user'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/ssh_user_metadata'
    description: Response object for intentful operations on a ssh_user
  ssh_user_list:
    title: SSH User list
    required:
      - metadata
      - entities
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/ssh_user_details'
        type: array
      metadata:
        $ref: '#/definitions/ssh_user_list_metadata'
    description: SSH User list
  ssh_user_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/ssh_user_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/ssh_user_list_metadata_output'
    description: Response object for intentful operation of ssh_users
  ssh_user_list_metadata:
    title: Metadata for ssh_user list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: ssh_user
        x-ntnx-enum:
          - ssh_user
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  ssh_user_list_metadata_output:
    title: Metadata for ssh_user list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: ssh_user
        x-ntnx-enum:
          - ssh_user
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  ssh_user_metadata:
    title: ssh_user metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when ssh_user was last updated
        format: date-time
      kind:
        default: ssh_user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - ssh_user
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: ssh_user uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when ssh_user was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the ssh_user
      name:
        readOnly: true
        type: string
        description: ssh_user name
        maxLength: 64
    description: The ssh_user kind metadata
  ssh_user_reference:
    title: Reference to a ssh_user
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: ssh_user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - ssh_user
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a ssh_user
  ssh_user_request_details:
    title: SSH User Request details
    required:
      - username
      - user_uuid
      - user_key
      - user_key_name
      - entity_list
      - access_request_uuid
    type: object
    properties:
      username:
        type: string
        description: SSH User name
      access_request_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the access request requesting SSH access
        format: UUID
      entity_list:
        items:
          required:
            - entity_ip
            - entity_type
          type: object
          properties:
            entity_ip:
              type: string
              description: Entity IP Address
            entity_uuid:
              pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
              type: string
              description: Entity UUID
            entity_type:
              x-ntnx-enum:
                - CVM
                - HYPERVISOR
              type: string
              description: Entity type
        type: array
        description: List containing entity IP and entity type for each entity
      user_key_name:
        type: string
        description: Name for the user key to add
      user_key:
        type: string
        description: key to add for the user
      user_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: SSH User UUID
        format: UUID
      user_unix_id:
        type: integer
        description: Linux UID for user
    description: SSH User Request details
  ssh_user_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: ssh_user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - ssh_user
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  ssl_key:
    title: SSL certificate
    required:
      - key_type
    type: object
    properties:
      key_type:
        $ref: '#/definitions/ssl_key_type'
      key_name:
        type: string
      signing_info:
        $ref: '#/definitions/certification_signing_info'
      expire_datetime:
        type: string
        description: UTC date and time in RFC-3339 format when the key expires
        format: date-time
    description: SSL certificate.
  ssl_key_type:
    x-ntnx-enum:
      - RSA_2048
      - ECDSA_256
      - ECDSA_384
      - JKS
      - PKCS12
      - RSA_PUBLIC
      - KRB_KEYTAB
      - NONE
    type: string
    description: |
      SSL key type. Key types with RSA_2048, ECDSA_256 and ECDSA_384 are
      supported for key generation and importing.
    title: SSL key type
  status:
    title: Response Kind
    type: object
    properties:
      status:
        readOnly: true
        type: string
        description: Only value possible is "failure".
      kind:
        readOnly: true
        type: string
        description: The entitys kind. i.e. "status".
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      details:
        additionalProperties:
          type: string
        readOnly: true
        type: object
        description: Custom key-value details relevant to the status.
      message:
        readOnly: true
        type: string
        description: A sentence explaining the reason for the status.
      reason:
        readOnly: true
        type: string
        description: One snake case word.
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  subnet:
    title: subnet Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for subnet.
        maxLength: 1000
      resources:
        $ref: '#/definitions/subnet_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: subnet Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a subnet spec
  subnet_def_status:
    title: subnet Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the subnet.
      name:
        type: string
        description: subnet Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the subnet, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/subnet_resources_def_status'
      description:
        type: string
        description: A description for subnet.
    description: An intentful representation of a subnet status
  subnet_intent_input:
    title: subnet Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/subnet'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/subnet_metadata'
    description: An intentful representation of a subnet
  subnet_intent_resource:
    title: subnet Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/subnet_def_status'
      spec:
        $ref: '#/definitions/subnet'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/subnet_metadata'
    description: Response object for intentful operations on a subnet
  subnet_intent_response:
    title: subnet Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/subnet_def_status'
      spec:
        $ref: '#/definitions/subnet'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/subnet_metadata'
    description: Response object for intentful operations on a subnet
  subnet_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/subnet_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/subnet_list_metadata_output'
    description: Response object for intentful operation of subnets
  subnet_list_metadata:
    title: Metadata for subnet list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: subnet
        x-ntnx-enum:
          - subnet
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  subnet_list_metadata_output:
    title: Metadata for subnet list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: subnet
        x-ntnx-enum:
          - subnet
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  subnet_metadata:
    title: subnet metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when subnet was last updated
        format: date-time
      kind:
        default: subnet
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - subnet
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: subnet uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when subnet was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the subnet
      name:
        readOnly: true
        type: string
        description: subnet name
        maxLength: 64
    description: The subnet kind metadata
  subnet_reference:
    title: Reference to a subnet
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: subnet
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - subnet
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a subnet
  subnet_resources:
    title: Subnet creation/modification spec
    required:
      - subnet_type
    type: object
    properties:
      vswitch_name:
        type: string
        maxLength: 64
      subnet_type:
        x-ntnx-enum:
          - VLAN
        type: string
      ip_config:
        $ref: '#/definitions/ip_config'
      vlan_id:
        type: integer
        format: int32
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
    description: Subnet creation/modification spec.
  subnet_resources_def_status:
    title: Subnet creation/modification status
    type: object
    properties:
      vswitch_name:
        type: string
      subnet_type:
        x-ntnx-enum:
          - VLAN
        type: string
      ip_config:
        $ref: '#/definitions/ip_config'
      vlan_id:
        minimum: 0
        type: integer
        format: int32
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
    description: Subnet creation/modification status.
  subnet_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: subnet
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - subnet
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  support_case_upload:
    title: Support Case Upload Spec.
    required:
      - resources
    type: object
    properties:
      resources:
        title: Support Case Upload Resources.
        type: object
        properties:
          portal_request_params:
            $ref: '#/definitions/generic_key_value_pair'
          log_collector:
            $ref: '#/definitions/log_collector_support_case_upload'
          ncc_checks:
            $ref: '#/definitions/ncc_checks_support_case_upload'
          case_number:
            type: string
            description: |
              Support Case Number. This is the pretty version of case as visible to the user. Example "00151752"
        description: Support Case upload resource definition.
    description: Support Case upload spec.
  support_case_upload_def_status:
    title: Support Case Upload Status.
    required:
      - resources
    type: object
    properties:
      resources:
        title: Support Case Upload.
        type: object
        properties:
          portal_request_params:
            $ref: '#/definitions/generic_key_value_pair'
          log_collector:
            $ref: '#/definitions/log_collector_support_case_upload'
          ncc_checks:
            $ref: '#/definitions/ncc_checks_support_case_upload'
          case_number:
            type: string
            description: |
              Support Case Number. This is the pretty version of case as visible to the user. Example "00151752"
        description: Definition of support case.
    description: Support Case upload status.
  support_case_upload_intent_input:
    title: support_case_upload Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/support_case_upload'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/support_case_upload_metadata'
    description: An intentful representation of a support_case_upload
  support_case_upload_intent_response:
    title: support_case_upload Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/support_case_upload_def_status'
      spec:
        $ref: '#/definitions/support_case_upload'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/support_case_upload_metadata'
    description: Response object for intentful operations on a support_case_upload
  support_case_upload_list_metadata:
    title: Metadata for support_case_upload list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: support_case_upload
        x-ntnx-enum:
          - support_case_upload
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  support_case_upload_list_metadata_output:
    title: Metadata for support_case_upload list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: support_case_upload
        x-ntnx-enum:
          - support_case_upload
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  support_case_upload_metadata:
    title: support_case_upload metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when support_case_upload was last updated
        format: date-time
      kind:
        default: support_case_upload
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - support_case_upload
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: support_case_upload uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when support_case_upload was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the support_case_upload
      name:
        readOnly: true
        type: string
        description: support_case_upload name
        maxLength: 64
    description: The support_case_upload kind metadata
  support_case_upload_reference:
    title: Reference to a support_case_upload
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: support_case_upload
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - support_case_upload
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a support_case_upload
  support_case_upload_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: support_case_upload
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - support_case_upload
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  target_group:
    title: Target group
    type: object
    properties:
      filter:
        description: The set of categories that matching VMs need to have.
        $ref: '#/definitions/category_filter'
      default_internal_policy:
        x-ntnx-enum:
          - ALLOW_ALL
          - DENY_ALL
        type: string
        description: Default policy for communication within target group.
      peer_specification_type:
        x-ntnx-enum:
          - FILTER
        type: string
        description: Way to identify the object for which rule is applied.
    description: Target group
  task:
    title: Task resources
    type: object
    properties:
      status:
        x-ntnx-enum:
          - QUEUED
          - RUNNING
          - SUCCEEDED
          - ABORTED
          - SUSPENDED
          - FAILED
        type: string
        description: Task status
      last_update_time:
        type: string
        description: |
          UTC date and time in RFC-3339 format when task was last updated
        format: date-time
      logical_timestamp:
        type: integer
        description: The logical timestamp
        format: int64
      start_time:
        type: string
        description: |
          UTC date and time in RFC-3339 format when Task execution started
        format: date-time
      creation_time:
        type: string
        description: |
          UTC date and time in RFC-3339 format when task was created
        format: date-time
      completion_time:
        type: string
        description: |
          UTC date and time in RFC-3339 format when Task execution completed
        format: date-time
      percentage_complete:
        type: integer
        description: The completion percentage for the task
        format: int32
      parent_task_reference:
        description: Reference to the parent task
        $ref: '#/definitions/task_reference'
      error_detail:
        type: string
        description: |
          In case of task failure this field will provide the error description
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the task.
        format: UUID
      entity_reference_list:
        items:
          $ref: '#/definitions/reference'
        type: array
      subtask_reference_list:
        items:
          $ref: '#/definitions/task_reference'
        type: array
        description: Reference to the sub-tasks
      progress_message:
        type: string
        description: Description of what currently the task is doing
      operation_type:
        type: string
        description: Type of the operation tracked by the task
      error_code:
        type: string
        description: |
          In case of task failure this field will provide the error code
      cluster_reference:
        description: Reference to the cluster the task is being executed on
        $ref: '#/definitions/cluster_reference'
      api_version:
        type: string
        description: API version
    description: Task details
  task_list_intent_response:
    title: Task entity list
    required:
      - api_version
      - metadata
      - entities
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/task'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/task_list_metadata_output'
    description: Task entity list.
  task_list_metadata:
    title: Metadata for task list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: task
        x-ntnx-enum:
          - task
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  task_list_metadata_output:
    title: Metadata for task list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: task
        x-ntnx-enum:
          - task
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  task_metadata:
    title: task metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when task was last updated
        format: date-time
      kind:
        default: task
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - task
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: task uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when task was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the task
      name:
        readOnly: true
        type: string
        description: task name
        maxLength: 64
    description: The task kind metadata
  task_poll_input:
    title: Input for the task poll
    required:
      - poll_timeout_seconds
      - task_uuid_list
    type: object
    properties:
      poll_timeout_seconds:
        format: int32
        minimum: 0
        type: integer
        description: Poll timeout in seconds
        maximum: 30
      task_uuid_list:
        items:
          pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
          type: string
          format: UUID
        type: array
        description: List of task UUIDs to poll on
        title: List of task UUIDs to poll on
    description: Input for a task poll
  task_poll_response:
    title: Response from a task poll request
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/task'
        type: array
      has_poll_timed_out:
        type: boolean
        description: Did the poll timeout before all polled tasks completed
    description: Response from a task poll request
  task_reference:
    title: Reference to a task
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: task
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - task
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a task
  task_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: task
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - task
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  upgrade_notification:
    title: Pre upgrade notification
    type: object
    properties:
      proceed_message:
        type: string
      cancel_message:
        type: string
      description_item_list:
        items:
          $ref: '#/definitions/description_item'
        type: array
        description: Description items of the notification
      title:
        type: string
        description: Title of the notification
    description: Pre upgrade notification
  user:
    title: User.
    required:
      - resources
    type: object
    properties:
      resources:
        $ref: '#/definitions/user_input_resource'
    description: User Input Definition.
  user_def_status:
    title: User status definition.
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Name of the User.
      resources:
        $ref: '#/definitions/user_status_resource'
    description: User status definition.
  user_group:
    title: user group.
    type: object
    properties:
      resources:
        $ref: '#/definitions/user_group_input_resource'
    description: User Group Input Definition.
  user_group_def_status:
    title: user group status definition.
    required:
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      resources:
        $ref: '#/definitions/user_group_output_resource'
    description: User group status definition.
  user_group_input_resource:
    description: User Group Resource Definition
    title: user group resource definition.
    type: object
    properties:
      directory_service_user_group:
        $ref: '#/definitions/directory_service_user_group_input'
    x-ntnx-one-of:
      - required:
          - directory_service_user_group
  user_group_intent_input:
    title: user_group Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/user_group'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/user_group_metadata'
    description: An intentful representation of a user_group
  user_group_intent_resource:
    title: user_group Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/user_group_def_status'
      spec:
        $ref: '#/definitions/user_group'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_group_metadata'
    description: Response object for intentful operations on a user_group
  user_group_intent_response:
    title: user_group Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/user_group_def_status'
      spec:
        $ref: '#/definitions/user_group'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_group_metadata'
    description: Response object for intentful operations on a user_group
  user_group_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/user_group_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_group_list_metadata_output'
    description: Response object for intentful operation of user_groups
  user_group_list_metadata:
    title: Metadata for user_group list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: user_group
        x-ntnx-enum:
          - user_group
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  user_group_list_metadata_output:
    title: Metadata for user_group list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: user_group
        x-ntnx-enum:
          - user_group
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  user_group_metadata:
    title: user_group metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when user_group was last updated
        format: date-time
      kind:
        default: user_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user_group
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: user_group uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when user_group was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the user_group
      name:
        readOnly: true
        type: string
        description: user_group name
        maxLength: 64
    description: The user_group kind metadata
  user_group_output_resource:
    title: user group resource definition.
    required:
      - display_name
    type: object
    properties:
      projects_reference_list:
        items:
          $ref: '#/definitions/project_reference'
        type: array
        description: A list of projects the user group is part of.
      directory_service_user_group:
        $ref: '#/definitions/directory_service_user_group_status'
      access_control_policy_reference_list:
        items:
          $ref: '#/definitions/access_control_policy_reference'
        type: array
        description: List of ACP references.
      display_name:
        type: string
        description: The display name for the user group.
      user_group_type:
        x-ntnx-enum:
          - DIRECTORY_SERVICE
        type: string
    description: User Group Resource Definition.
  user_group_reference:
    title: Reference to a user_group
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: user_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user_group
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a user_group
  user_group_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: user_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user_group
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  user_info:
    title: Access Control Policy and User status definition.
    type: object
    properties:
      access_control_policy_list:
        items:
          $ref: '#/definitions/access_control_policy_detail'
        type: array
        description: The list of Access Control Policies
      user_legacy_name:
        type: string
        description: The legacy name of the logged in user
    description: Access Control Policy and User status definition.
  user_input_resource:
    description: User Resource Definition.
    title: User Resource Definition.
    type: object
    properties:
      directory_service_user:
        $ref: '#/definitions/directory_service_user'
    x-ntnx-one-of:
      - required:
          - directory_service_user
  user_intent_input:
    title: user Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/user'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/user_metadata'
    description: An intentful representation of a user
  user_intent_resource:
    title: user Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/user_def_status'
      spec:
        $ref: '#/definitions/user'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_metadata'
    description: Response object for intentful operations on a user
  user_intent_response:
    title: user Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/user_def_status'
      spec:
        $ref: '#/definitions/user'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_metadata'
    description: Response object for intentful operations on a user
  user_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/user_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/user_list_metadata_output'
    description: Response object for intentful operation of users
  user_list_metadata:
    title: Metadata for user list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: user
        x-ntnx-enum:
          - user
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  user_list_metadata_output:
    title: Metadata for user list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: user
        x-ntnx-enum:
          - user
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  user_metadata:
    title: user metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when user was last updated
        format: date-time
      kind:
        default: user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: user uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when user was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the user
      name:
        readOnly: true
        type: string
        description: user name
        maxLength: 64
    description: The user kind metadata
  user_reference:
    title: Reference to a user
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a user
  user_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: user
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - user
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  user_status_resource:
    title: User Resource Definition.
    type: object
    properties:
      projects_reference_list:
        items:
          $ref: '#/definitions/project_reference'
        type: array
        description: A list of projects the user is part of.
      access_control_policy_reference_list:
        items:
          $ref: '#/definitions/access_control_policy_reference'
        type: array
        description: List of ACP references.
      display_name:
        type: string
        description: |
          The display name of the user (common name) provided by the directory service.
      user_type:
        x-ntnx-enum:
          - LOCAL
          - DIRECTORY_SERVICE
        type: string
      directory_service_user:
        $ref: '#/definitions/directory_service_user'
    description: User Resource Definition.
  versions:
    title: Versions
    required:
      - major_version
      - minor_version
    type: object
    properties:
      major_version:
        type: string
        description: The major number of the API
        format: integer
      minor_version:
        type: string
        description: The minor number of the API
        format: integer
    description: Supported API Versions
  virtual_network_reference:
    title: Reference to a virtual_network
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: virtual_network
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - virtual_network
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a virtual_network
  vm:
    title: vm Intent Spec with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      description:
        type: string
        description: A description for vm.
        maxLength: 1000
      resources:
        $ref: '#/definitions/vm_resources'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      name:
        type: string
        description: vm Name.
        maxLength: 64
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
    description: An intentful representation of a vm spec
  vm_boot_config:
    title: VM Boot configuration
    type: object
    properties:
      boot_device_order_list:
        items:
          x-ntnx-enum:
            - CDROM
            - DISK
            - NETWORK
          type: string
        type: array
        description: |
          Indicates the order of device types in which VM should try to boot from. If boot device order is not provided the system will decide appropriate boot device order.
      boot_device:
        description: |
          Indicates which device a VM should boot from. Boot device takes precdence over boot device order. If both are given then specified boot device will be primary boot device and remaining devices will be assigned boot order according to boot device order field.
        $ref: '#/definitions/vm_boot_device'
    description: |
      Indicates which device a VM should boot from.
  vm_boot_device:
    description: |
      Indicates which device a VM should boot from. One of disk_address or mac_address should be provided.
    title: VM Boot device
    type: object
    properties:
      disk_address:
        description: Address of disk to boot from.
        $ref: '#/definitions/disk_address'
      mac_address:
        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
        type: string
        description: MAC address of nic to boot from.
    x-ntnx-one-of:
      - required:
          - disk_address
      - required:
          - mac_address
  vm_def_status:
    title: vm Intent Status with placement specified
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the vm.
      name:
        type: string
        description: vm Name.
      availability_zone_reference:
        $ref: '#/definitions/availability_zone_reference'
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the vm, if in an error state.'
      cluster_reference:
        $ref: '#/definitions/cluster_reference'
      resources:
        $ref: '#/definitions/vm_resources_def_status'
      description:
        type: string
        description: A description for vm.
    description: An intentful representation of a vm status
  vm_disk:
    title: VirtualMachine Disk (VM Disk)
    type: object
    properties:
      volume_group_reference:
        $ref: '#/definitions/reference'
      device_properties:
        type: object
        properties:
          disk_address:
            $ref: '#/definitions/disk_address'
          device_type:
            default: DISK
            x-ntnx-enum:
              - DISK
              - CDROM
              - VOLUME_GROUP
            type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          The device ID which is used to uniquely identify this particular disk.
        format: UUID
      data_source_reference:
        $ref: '#/definitions/reference'
      disk_size_mib:
        minimum: 1
        type: integer
        description: |
          Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB -  when that field is present.
        format: int32
      disk_size_bytes:
        minimum: 1
        type: integer
        description: Size of the disk in Bytes.
        format: int64
    description: VirtualMachine Disk (VM Disk).
  vm_disk_list_metadata:
    title: Metadata for vm_disk list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm_disk
        x-ntnx-enum:
          - vm_disk
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_disk_list_metadata_output:
    title: Metadata for vm_disk list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm_disk
        x-ntnx-enum:
          - vm_disk
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_disk_metadata:
    title: vm_disk metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_disk was last updated
        format: date-time
      kind:
        default: vm_disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_disk
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm_disk uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_disk was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm_disk
      name:
        readOnly: true
        type: string
        description: vm_disk name
        maxLength: 64
    description: The vm_disk kind metadata
  vm_disk_reference:
    title: Reference to a vm_disk
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm_disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_disk
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm_disk
  vm_disk_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm_disk
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_disk
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_gpu:
    title: VirtualMachine GPU
    type: object
    properties:
      vendor:
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD
        type: string
        description: The vendor of the GPU.
      mode:
        x-ntnx-enum:
          - PASSTHROUGH_GRAPHICS
          - PASSTHROUGH_COMPUTE
          - VIRTUAL
        type: string
        description: The mode of this GPU.
      device_id:
        type: integer
        description: The device ID of the GPU.
        format: int32
    description: Graphics resource information for the Virtual Machine.
  vm_gpu_list_metadata:
    title: Metadata for vm_gpu list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm_gpu
        x-ntnx-enum:
          - vm_gpu
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_gpu_list_metadata_output:
    title: Metadata for vm_gpu list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm_gpu
        x-ntnx-enum:
          - vm_gpu
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_gpu_metadata:
    title: vm_gpu metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_gpu was last updated
        format: date-time
      kind:
        default: vm_gpu
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_gpu
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm_gpu uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_gpu was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm_gpu
      name:
        readOnly: true
        type: string
        description: vm_gpu name
        maxLength: 64
    description: The vm_gpu kind metadata
  vm_gpu_output_status:
    title: Virtual Machine GPU status
    type: object
    properties:
      frame_buffer_size_mib:
        type: integer
        description: GPU frame buffer size in MiB.
        format: int64
      vendor:
        x-ntnx-enum:
          - NVIDIA
          - INTEL
          - AMD
        type: string
        description: The vendor of the GPU.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: UUID of the GPU.
        format: UUID
      num_virtual_display_heads:
        type: integer
        description: Number of supported virtual display heads.
        format: int32
      pci_address:
        type: string
        description: |
          GPU {segment:bus:device:function} (sbdf) address if assigned.
      mode:
        x-ntnx-enum:
          - PASSTHROUGH_GRAPHICS
          - PASSTHROUGH_COMPUTE
          - VIRTUAL
        type: string
        description: The mode of this GPU
      fraction:
        type: integer
        description: Fraction of the physical GPU assigned.
        format: int32
      guest_driver_version:
        type: string
        description: Last determined guest driver version.
      device_id:
        type: integer
        description: The device ID of the GPU.
        format: int32
      name:
        type: string
        description: Name of the GPU resource.
    description: Graphics resource status information for the Virtual Machine.
  vm_gpu_reference:
    title: Reference to a vm_gpu
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm_gpu
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_gpu
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm_gpu
  vm_gpu_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm_gpu
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_gpu
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_guest_power_state_transition_config:
    title: Power State Transition Config
    type: object
    properties:
      should_fail_on_script_failure:
        type: boolean
        description: Indicates whether to abort ngt shutdown/reboot if script fails.
      enable_script_exec:
        type: boolean
        description: Indicates whether to execute set script before ngt shutdown/reboot.
    description: Extra configs related to power state transition.
  vm_intent_input:
    title: vm Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/vm'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/vm_metadata'
    description: An intentful representation of a vm
  vm_intent_resource:
    title: vm Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_def_status'
      spec:
        $ref: '#/definitions/vm'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_metadata'
    description: Response object for intentful operations on a vm
  vm_intent_response:
    title: vm Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_def_status'
      spec:
        $ref: '#/definitions/vm'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_metadata'
    description: Response object for intentful operations on a vm
  vm_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/vm_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_list_metadata_output'
    description: Response object for intentful operation of vms
  vm_list_metadata:
    title: Metadata for vm list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm
        x-ntnx-enum:
          - vm
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_list_metadata_output:
    title: Metadata for vm list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm
        x-ntnx-enum:
          - vm
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_metadata:
    title: vm metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: UTC date and time in RFC-3339 format when vm was last updated
        format: date-time
      kind:
        default: vm
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm
      name:
        readOnly: true
        type: string
        description: vm name
        maxLength: 64
    description: The vm kind metadata
  vm_nic:
    title: Virtual Machine NIC
    type: object
    properties:
      nic_type:
        x-ntnx-enum:
          - NORMAL_NIC
          - DIRECT_NIC
          - NETWORK_FUNCTION_NIC
        type: string
        description: The type of this NIC. Defaults to NORMAL_NIC.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.
        format: UUID
      ip_endpoint_list:
        items:
          $ref: '#/definitions/ip_address'
        type: array
        description: |
          IP endpoints for the adapter. Currently, IPv4 addresses are
          supported.
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
      network_function_nic_type:
        x-ntnx-enum:
          - INGRESS
          - EGRESS
          - TAP
        type: string
        description: |
          The type of this Network function NIC. Defaults to INGRESS.
      mac_address:
        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
        type: string
        description: The MAC address for the adapter.
      subnet_reference:
        $ref: '#/definitions/subnet_reference'
      model:
        x-ntnx-enum:
          - VIRTIO
          - E1000
        type: string
        description: The model of this NIC.
    description: Virtual Machine NIC.
  vm_nic_list_metadata:
    title: Metadata for vm_nic list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm_nic
        x-ntnx-enum:
          - vm_nic
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_nic_list_metadata_output:
    title: Metadata for vm_nic list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm_nic
        x-ntnx-enum:
          - vm_nic
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_nic_metadata:
    title: vm_nic metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_nic was last updated
        format: date-time
      kind:
        default: vm_nic
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_nic
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm_nic uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_nic was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm_nic
      name:
        readOnly: true
        type: string
        description: vm_nic name
        maxLength: 64
    description: The vm_nic kind metadata
  vm_nic_output_status:
    title: Virtual Machine NIC Status
    type: object
    properties:
      nic_type:
        x-ntnx-enum:
          - NORMAL_NIC
          - DIRECT_NIC
          - NETWORK_FUNCTION_NIC
        type: string
        description: The type of this NIC. Defaults to NORMAL_NIC.
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.
        format: UUID
      ip_endpoint_list:
        items:
          $ref: '#/definitions/ip_address'
        type: array
        description: |
          IP endpoints for the adapter. Currently, IPv4 addresses are supported.
      network_function_chain_reference:
        $ref: '#/definitions/network_function_chain_reference'
      floating_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: The Floating IP associated with the vnic.
      network_function_nic_type:
        x-ntnx-enum:
          - INGRESS
          - EGRESS
          - TAP
        type: string
        description: |
          The type of this Network function NIC. Defaults to INGRESS.
      mac_address:
        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
        type: string
        description: The MAC address for the adapter.
      subnet_reference:
        $ref: '#/definitions/subnet_reference'
      model:
        x-ntnx-enum:
          - VIRTIO
          - E1000
        type: string
        description: The model of this NIC.
    description: Virtual Machine NIC Status.
  vm_nic_reference:
    title: Reference to a vm_nic
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm_nic
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_nic
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm_nic
  vm_nic_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm_nic
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_nic
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_power_state_mechanism:
    title: VM Power State Mechanism
    type: object
    properties:
      guest_transition_config:
        $ref: '#/definitions/vm_guest_power_state_transition_config'
      mechanism:
        x-ntnx-enum:
          - ACPI
          - GUEST
          - HARD
        type: string
        description: Power state mechanism (ACPI/GUEST/HARD).
    description: |
      Indicates the mechanism guiding the VM power state transition. Currently used for the transition to "OFF" state.
  vm_recovery_point:
    title: vm recovery point input definitions
    type: object
    properties:
      name:
        type: string
        description: Name of the recovery point.
        maxLength: 64
      availability_zone_reference:
        description: |
          Reference to the availability zone where this recovery point is
          located
        $ref: '#/definitions/availability_zone_reference'
      recovery_point_type:
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
        type: string
        description: Crash consistent or Application Consistent recovery point
      creation_time:
        type: string
        description: |
          The time when the the recovery point is created. This is in internet
          date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
          this represents 20 minutes and 50.52 seconds after the 23rd hour of
          April 12th, 1985 in UTC.
        format: date-time
      expiration_time:
        type: string
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). For
          example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
          50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
          set, then the recovery point never expires.
        format: date-time
      resources:
        type: object
        properties:
          source_availability_zone_reference:
            description: |
              Reference to the availability zone where the source recovery
              point exists. This need to be set to copy a recovery from some
              other location.
            $ref: '#/definitions/availability_zone_reference'
          parent_vm_reference:
            description: |
              Reference to vm that this recovery point is a snapshot of.
            $ref: '#/definitions/vm_reference'
          source_cluster_reference:
            description: |
              Reference to the cluster in the source availability zone.
            $ref: '#/definitions/cluster_reference'
          vm_recovery_point_location_agnostic_uuid:
            pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
            type: string
            description: |
              Location agnostic UUID of the recovery point. If a recovery
              point is replicated to a different clusters, then all the
              instances of same recovery point will share this UUID.
        title: Recovery point resources
      cluster_reference:
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        $ref: '#/definitions/cluster_reference'
    description: The input object that defines a vm recovery point.
  vm_recovery_point_def_status:
    title: vm recovery point output definitions
    type: object
    properties:
      consistency_group_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          This field is same for all the entities (irrespective of kind) that
          were snapshotted together.
      name:
        type: string
        description: Name of the recovery point.
      recovery_point_type:
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
        type: string
        description: Crash consistent or Application Consistent recovery point
      creation_time:
        type: string
        description: |
          The time when the the recovery point is created. This is in internet
          date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
          this represents 20 minutes and 50.52 seconds after the 23rd hour of
          April 12th, 1985 in UTC.
      state:
        type: string
        description: The state of the vm recovery point.
      availability_zone_reference:
        description: |
          Reference to the availability zone where this recovery point is
          located.
        $ref: '#/definitions/availability_zone_reference'
      expiration_time:
        type: string
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). For
          example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
          50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
          set, then the recovery point never expires.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the {kind}}, if in an error state.'
      cluster_reference:
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        $ref: '#/definitions/cluster_reference'
      resources:
        type: object
        properties:
          source_availability_zone_reference:
            description: |
              Reference to the availability zone where the source recovery
              point exists. This need to be set to copy a recovery from some
              other location.
            $ref: '#/definitions/availability_zone_reference'
          parent_vm_reference:
            description: |
              Reference to vm that this recovery point is a snapshot of.
            $ref: '#/definitions/vm_reference'
          vm_spec:
            description: |
              Spec of the vm at the time of snapshot.
            $ref: '#/definitions/vm'
          source_cluster_reference:
            description: |
              Reference to the cluster in the source availability zone. This
              need to be set to copy a recovery from some other location.
            $ref: '#/definitions/cluster_reference'
          vm_recovery_point_location_agnostic_uuid:
            pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
            type: string
            description: |
              Location agnostic UUID of the recovery point. If a recovery
              point is replicated to a different clusters, then all the
              instances of same recovery point will share this UUID.
            format: UUID
        title: Recovery point resources
    description: The output object that defines a vm recovery point
  vm_recovery_point_intent_input:
    title: vm_recovery_point Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/vm_recovery_point'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'
    description: An intentful representation of a vm_recovery_point
  vm_recovery_point_intent_resource:
    title: vm_recovery_point Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_recovery_point_def_status'
      spec:
        $ref: '#/definitions/vm_recovery_point'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'
    description: Response object for intentful operations on a vm_recovery_point
  vm_recovery_point_intent_response:
    title: vm_recovery_point Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_recovery_point_def_status'
      spec:
        $ref: '#/definitions/vm_recovery_point'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_recovery_point_metadata'
    description: Response object for intentful operations on a vm_recovery_point
  vm_recovery_point_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/vm_recovery_point_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_recovery_point_list_metadata_output'
    description: Response object for intentful operation of vm_recovery_points
  vm_recovery_point_list_metadata:
    title: Metadata for vm_recovery_point list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm_recovery_point
        x-ntnx-enum:
          - vm_recovery_point
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_recovery_point_list_metadata_output:
    title: Metadata for vm_recovery_point list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm_recovery_point
        x-ntnx-enum:
          - vm_recovery_point
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_recovery_point_metadata:
    title: vm_recovery_point metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_recovery_point was last updated
        format: date-time
      kind:
        default: vm_recovery_point
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_recovery_point
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm_recovery_point uuid
        format: UUID
      project_reference:
        description: The project the vm_recovery_point is in.
        $ref: '#/definitions/project_reference'
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_recovery_point was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm_recovery_point
      name:
        readOnly: true
        type: string
        description: vm_recovery_point name
        maxLength: 64
    description: The vm_recovery_point kind metadata
  vm_recovery_point_reference:
    title: Reference to a vm_recovery_point
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm_recovery_point
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_recovery_point
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm_recovery_point
  vm_recovery_point_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm_recovery_point
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_recovery_point
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_reference:
    title: Reference to a vm
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm
  vm_reference_with_customization:
    title: Reference to a VM along with customization spec
    required:
      - vm_reference
      - vm_customization
    type: object
    properties:
      vm_customization:
        $ref: '#/definitions/guest_customization'
      vm_reference:
        $ref: '#/definitions/vm_reference'
    description: |
      Spec that describes a VM reference along with its customization config.
  vm_resources:
    title: VM Resources
    type: object
    properties:
      power_state:
        x-ntnx-enum:
          - 'ON'
          - 'OFF'
        type: string
        description: The current or desired power state of the VM.
      num_vcpus_per_socket:
        minimum: 1
        type: integer
        description: Number of vCPUs per socket.
        format: int32
      num_sockets:
        minimum: 1
        type: integer
        description: Number of vCPU sockets.
        format: int32
      gpu_list:
        items:
          $ref: '#/definitions/vm_gpu'
        type: array
        description: GPUs attached to the VM.
      memory_size_mib:
        minimum: 1
        type: integer
        description: Memory size in MiB.
        format: int32
      boot_config:
        description: Indicates which device the VM should boot from.
        $ref: '#/definitions/vm_boot_config'
      hardware_clock_timezone:
        type: string
        description: |
          VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).
        maxLength: 64
      guest_customization:
        $ref: '#/definitions/guest_customization'
      power_state_mechanism:
        $ref: '#/definitions/vm_power_state_mechanism'
      vga_console_enabled:
        type: boolean
        description: Indicates whether VGA console should be enabled or not.
      disk_list:
        items:
          $ref: '#/definitions/vm_disk'
        type: array
        description: Disks attached to the VM.
      vnuma_config:
        description: Information regarding vNUMA configuration.
        $ref: '#/definitions/vm_vnuma_config'
      nic_list:
        items:
          $ref: '#/definitions/vm_nic'
        type: array
        description: NICs attached to the VM.
      guest_os_id:
        type: string
        description: |
          Guest OS Identifier. For ESX, refer to VMware documentation link (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html) for the list of guest OS identifiers.
        maxLength: 64
      guest_tools:
        description: Information regarding guest tools.
        $ref: '#/definitions/guest_tools_spec'
      parent_reference:
        description: |
          Reference to an entity that the VM should be cloned from.
        $ref: '#/definitions/reference'
    description: VM Resources Definition.
  vm_resources_def_status:
    title: VM Resources Status Definition
    type: object
    properties:
      power_state:
        x-ntnx-enum:
          - 'ON'
          - 'OFF'
          - PAUSED
          - UNKNOWN
        type: string
        description: Current power state of the VM.
      num_vcpus_per_socket:
        type: integer
        description: Number of vCPUs per socket.
        format: int32
      num_sockets:
        type: integer
        description: Number of vCPU sockets.
        format: int32
      gpu_list:
        items:
          $ref: '#/definitions/vm_gpu_output_status'
        type: array
        description: GPUs attached to the VM.
      memory_size_mib:
        type: integer
        description: Memory size in MiB.
        format: int32
      boot_config:
        description: Indicates which device the VM should boot from.
        $ref: '#/definitions/vm_boot_config'
      hardware_clock_timezone:
        type: string
        description: |
          VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).
      guest_customization:
        $ref: '#/definitions/guest_customization_status'
      power_state_mechanism:
        $ref: '#/definitions/vm_power_state_mechanism'
      vga_console_enabled:
        type: boolean
        description: Indicates whether VGA console has been enabled or not.
      disk_list:
        items:
          $ref: '#/definitions/vm_disk'
        type: array
        description: Disks attached to the VM.
      vnuma_config:
        description: Information regarding vNUMA configuration.
        $ref: '#/definitions/vm_vnuma_config'
      nic_list:
        items:
          $ref: '#/definitions/vm_nic_output_status'
        type: array
        description: NICs attached to the VM.
      host_reference:
        $ref: '#/definitions/reference'
      guest_os_id:
        type: string
        description: |
          Guest OS Identifier. For ESX, refer to VMware documentation link (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html) for the list of guest OS identifiers.
      guest_tools:
        description: Information regarding guest tools.
        $ref: '#/definitions/guest_tools_status'
      hypervisor_type:
        x-ntnx-enum:
          - ESX
          - HyperV
          - AHV
        type: string
        description: |
          The hypervisor type for the hypervisor the VM is hosted on.
      parent_reference:
        description: |
          Reference to an entity that the VM cloned from.
        $ref: '#/definitions/reference'
    description: VM Resources Status Definition.
  vm_snapshot:
    title: VM snapshot input definitions
    type: object
    properties:
      expiration_time_msecs:
        type: integer
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
      resources:
        type: object
        properties:
          entity_uuid:
            pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
            type: string
            description: |
              UUID of the base entity for which snapshot need to be taken
            format: UUID
        title: Snapshot Resources
      snapshot_type:
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
        type: string
        description: Crash consistent or Application Consistent snapshot
      replication_target_list:
        items:
          type: object
          properties:
            cluster_reference:
              description: UUID of cluster in the availability zone.
              $ref: '#/definitions/cluster_reference'
            availability_zone_reference:
              $ref: '#/definitions/availability_zone_reference'
        type: array
        description: |
          This describes a list replication targets where this snapshot exists
          or needs to be replicated to. This is to support the replication and
          retrieve of the snapshot.
      name:
        type: string
        description: Name of the snapshot
        maxLength: 64
    description: The input object that defines a VM snapshot
  vm_snapshot_def_status:
    title: VM snapshot output definitions
    required:
      - snapshot_file_list
    type: object
    properties:
      consistency_group_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          This field is same for all the entities (irrespective of kind) that
          were snapshotted together.
      location_agnostic_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: |
          If a snapshot is replicated to a different clusters, then all the
          instances of same snapshot will share this UUID.
      name:
        type: string
        description: Name of the snapshot
      replication_target_list:
        items:
          type: object
          properties:
            cluster_reference:
              description: UUID of cluster in the availability zone.
              $ref: '#/definitions/cluster_reference'
            availability_zone_reference:
              $ref: '#/definitions/availability_zone_reference'
        type: array
        description: |
          This describes a list replication targets where this snapshot exists
          or needs to be replicated to. This is to support the replication and
          retrieve of the snapshot.
      state:
        type: string
        description: The state of the VM snapshot.
      snapshot_type:
        x-ntnx-enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
        type: string
        description: Crash consistent or Application Consistent snapshot
      snapshot_file_list:
        items:
          type: object
          properties:
            file_path:
              type: string
              description: |
                Pathname of the file that participated in the snapshot.
            snapshot_file_path:
              type: string
              description: Pathname of the snapshot of the file.
        type: array
        description: |
          Describes the files that are included in the snapshot.
      expiration_time_msecs:
        type: integer
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
        description: 'Any error messages for the {kind}}, if in an error state.'
      resources:
        type: object
        properties:
          entity_uuid:
            pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
            type: string
            description: |
              UUID of the base entity for which snapshot need to be taken
            format: UUID
        title: Snapshot Resources
    description: The output object that defines a VM snapshot
  vm_snapshot_intent_input:
    title: vm_snapshot Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/vm_snapshot'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'
    description: An intentful representation of a vm_snapshot
  vm_snapshot_intent_resource:
    title: vm_snapshot Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_snapshot_def_status'
      spec:
        $ref: '#/definitions/vm_snapshot'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'
    description: Response object for intentful operations on a vm_snapshot
  vm_snapshot_intent_response:
    title: vm_snapshot Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/vm_snapshot_def_status'
      spec:
        $ref: '#/definitions/vm_snapshot'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_snapshot_metadata'
    description: Response object for intentful operations on a vm_snapshot
  vm_snapshot_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/vm_snapshot_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/vm_snapshot_list_metadata_output'
    description: Response object for intentful operation of vm_snapshots
  vm_snapshot_list_metadata:
    title: Metadata for vm_snapshot list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: vm_snapshot
        x-ntnx-enum:
          - vm_snapshot
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  vm_snapshot_list_metadata_output:
    title: Metadata for vm_snapshot list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: vm_snapshot
        x-ntnx-enum:
          - vm_snapshot
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  vm_snapshot_metadata:
    title: vm_snapshot metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_snapshot was last updated
        format: date-time
      kind:
        default: vm_snapshot
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_snapshot
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: vm_snapshot uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when vm_snapshot was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the vm_snapshot
      name:
        readOnly: true
        type: string
        description: vm_snapshot name
        maxLength: 64
    description: The vm_snapshot kind metadata
  vm_snapshot_reference:
    title: Reference to a vm_snapshot
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: vm_snapshot
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_snapshot
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a vm_snapshot
  vm_snapshot_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm_snapshot
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm_snapshot
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: vm
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - vm
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  vm_vnuma_config:
    title: VM vNUMA configuration
    type: object
    properties:
      num_vnuma_nodes:
        type: integer
        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
        format: int64
    description: |
      Indicates how VM vNUMA should be configured
  volume_disk_resource:
    title: Volume disk configuration
    type: object
    properties:
      index:
        minimum: 0
        type: integer
        description: Index of the volume disk in the group.
      data_source_reference:
        $ref: '#/definitions/reference'
      disk_size_mib:
        type: integer
        description: Size of the disk in MiB.
        format: int64
      disk_size_bytes:
        type: integer
        description: Size of the disk in Bytes.
        format: int64
      storage_container_uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: Container UUID on which to create the disk.
        format: UUID
    description: Volume disk configuration.
  volume_group:
    title: Volume group object
    required:
      - resources
      - name
    type: object
    properties:
      name:
        type: string
        description: Volume group name.
        maxLength: 64
      resources:
        $ref: '#/definitions/volume_group_resources'
      description:
        type: string
        description: Volume group description.
        maxLength: 1000
    description: Volume group input spec.
  volume_group_def_status:
    title: Volume group configuration
    required:
      - resources
      - name
    type: object
    properties:
      state:
        type: string
        description: The state of the volume group entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Volume group name.
      resources:
        $ref: '#/definitions/volume_group_resources'
      description:
        type: string
        description: Volume group description.
    description: Volume group configuration.
  volume_group_intent_input:
    title: volume_group Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/volume_group'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/volume_group_metadata'
    description: An intentful representation of a volume_group
  volume_group_intent_resource:
    title: volume_group Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/volume_group_def_status'
      spec:
        $ref: '#/definitions/volume_group'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/volume_group_metadata'
    description: Response object for intentful operations on a volume_group
  volume_group_intent_response:
    title: volume_group Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/volume_group_def_status'
      spec:
        $ref: '#/definitions/volume_group'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/volume_group_metadata'
    description: Response object for intentful operations on a volume_group
  volume_group_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/volume_group_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/volume_group_list_metadata_output'
    description: Response object for intentful operation of volume_groups
  volume_group_list_metadata:
    title: Metadata for volume_group list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: volume_group
        x-ntnx-enum:
          - volume_group
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  volume_group_list_metadata_output:
    title: Metadata for volume_group list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: volume_group
        x-ntnx-enum:
          - volume_group
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  volume_group_metadata:
    title: volume_group metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when volume_group was last updated
        format: date-time
      kind:
        default: volume_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - volume_group
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: volume_group uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when volume_group was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the volume_group
      name:
        readOnly: true
        type: string
        description: volume_group name
        maxLength: 64
    description: The volume_group kind metadata
  volume_group_reference:
    title: Reference to a volume_group
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: volume_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - volume_group
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a volume_group
  volume_group_resources:
    title: Volume group resources
    type: object
    properties:
      flash_mode:
        x-ntnx-enum:
          - ENABLED
          - DISABLED
        type: string
        description: |
          Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.
      iscsi_target_name:
        readOnly: true
        type: string
        description: iSCSI target full name
        maxLength: 256
      file_system_type:
        x-ntnx-enum:
          - EXT4
        type: string
        description: File system to be used for volume
      size_bytes:
        readOnly: true
        type: integer
        description: The total size of the Volume Group in bytes
        format: int64
      sharing_status:
        x-ntnx-enum:
          - SHARED
          - NOT_SHARED
        type: string
        description: |
          Whether the volume group can be shared across multiple iSCSI initiators.
      attachment_list:
        items:
          $ref: '#/definitions/attachment_reference'
        type: array
        description: VMs attached to volume group.
      disk_list:
        items:
          $ref: '#/definitions/volume_disk_resource'
        type: array
        description: Volume group disk specification.
      size_mib:
        readOnly: true
        type: integer
        description: The total size of the Volume Group in mib
        format: int64
      iscsi_target_prefix:
        type: string
        description: iSCSI target prefix-name.
        maxLength: 64
    description: Volume group resources.
  volume_group_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: volume_group
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - volume_group
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  webhook:
    title: Webhook input definition
    required:
      - name
      - resources
    type: object
    properties:
      name:
        type: string
        description: Webhook name.
        maxLength: 64
      resources:
        $ref: '#/definitions/webhook_resources'
      description:
        type: string
        description: A description or user annotation for the webhook.
        maxLength: 1000
    description: Webhook input definition.
  webhook_def_status:
    title: Webhook status definition
    required:
      - name
      - resources
    type: object
    properties:
      state:
        type: string
        description: The state of the entity.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        type: array
      name:
        type: string
        description: Webhook name.
      resources:
        $ref: '#/definitions/webhook_resources'
      description:
        type: string
        description: A description or user annotation for the webhook.
    description: Webhook status definition.
  webhook_event_type:
    x-ntnx-enum:
      - VM.CREATE
      - VM.DELETE
      - VM.ON
      - VM.OFF
      - VM.UPDATE
      - VM.MIGRATE
      - VM.NIC_PLUG
      - VM.NIC_UNPLUG
      - SUBNET.CREATE
      - SUBNET.DELETE
      - SUBNET.UPDATE
    type: string
    description: Webhook event type.
    title: Webhook event type
  webhook_intent_input:
    title: webhook Intent Entity
    required:
      - metadata
      - spec
    type: object
    properties:
      spec:
        $ref: '#/definitions/webhook'
      api_version:
        default: 3.1.0
        type: string
      metadata:
        $ref: '#/definitions/webhook_metadata'
    description: An intentful representation of a webhook
  webhook_intent_resource:
    title: webhook Intent Response
    required:
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/webhook_def_status'
      spec:
        $ref: '#/definitions/webhook'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/webhook_metadata'
    description: Response object for intentful operations on a webhook
  webhook_intent_response:
    title: webhook Intent Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      status:
        $ref: '#/definitions/webhook_def_status'
      spec:
        $ref: '#/definitions/webhook'
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/webhook_metadata'
    description: Response object for intentful operations on a webhook
  webhook_list_intent_response:
    title: Entity Intent List Response
    required:
      - api_version
      - metadata
    type: object
    properties:
      entities:
        items:
          $ref: '#/definitions/webhook_intent_resource'
        type: array
      api_version:
        type: string
      metadata:
        $ref: '#/definitions/webhook_list_metadata_output'
    description: Response object for intentful operation of webhooks
  webhook_list_metadata:
    title: Metadata for webhook list
    type: object
    properties:
      filter:
        type: string
        description: The filter in FIQL syntax used for the results.
      kind:
        default: webhook
        x-ntnx-enum:
          - webhook
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        minimum: 0
        type: integer
        description: Offset from the start of the entity list
        format: int32
      length:
        minimum: 1
        type: integer
        description: The number of records to retrieve relative to the offset
        format: int32
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block as input
  webhook_list_metadata_output:
    title: Metadata for webhook list output
    type: object
    properties:
      filter:
        type: string
        description: The filter used for the results
      kind:
        default: webhook
        x-ntnx-enum:
          - webhook
        type: string
        description: The kind name
      sort_order:
        $ref: '#/definitions/sort_order'
      offset:
        type: integer
        description: Offset from the start of the entity list
      total_matches:
        type: integer
        description: Total matches found
      length:
        type: integer
        description: The number of records retrieved relative to the offset
      sort_attribute:
        type: string
        description: The attribute to perform sort on
    description: |
      All api calls that return a list will have this metadata block
  webhook_metadata:
    title: webhook metadata
    required:
      - kind
    type: object
    properties:
      last_update_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when webhook was last updated
        format: date-time
      kind:
        default: webhook
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - webhook
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        description: webhook uuid
        format: UUID
      spec_version:
        type: integer
        description: Version number of the latest spec.
      creation_time:
        readOnly: true
        type: string
        description: |
          UTC date and time in RFC-3339 format when webhook was created
        format: date-time
      spec_hash:
        type: string
        description: |
          Hash of the spec. This will be returned from server.
      owner_reference:
        $ref: '#/definitions/user_reference'
      categories:
        additionalProperties:
          type: string
        type: object
        description: Categories for the webhook
      name:
        readOnly: true
        type: string
        description: webhook name
        maxLength: 64
    description: The webhook kind metadata
  webhook_post_data:
    title: Data sent in the webhook
    required:
      - version
      - entity_reference
      - event_type
      - data
    type: object
    properties:
      entity_reference:
        description: The entity reference.
        $ref: '#/definitions/reference'
      data:
        additionalProperties: true
        readOnly: true
        type: object
        description: The entity object.
      version:
        default: '1.0'
        type: string
        description: The version of the webhook data.
      event_type:
        description: Event type
        $ref: '#/definitions/webhook_event_type'
    description: Data sent in the webhook.
  webhook_reference:
    title: Reference to a webhook
    required:
      - kind
      - uuid
    type: object
    properties:
      kind:
        default: webhook
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - webhook
      name:
        readOnly: true
        type: string
      uuid:
        pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        type: string
        format: UUID
    description: The reference to a webhook
  webhook_resources:
    title: Webhook resources
    required:
      - post_url
      - events_filter_list
    type: object
    properties:
      post_url:
        type: string
        description: URL for the webhook.
      credentials:
        type: object
        description: |
          Credentials required for successful post to the webhook URL.
        properties:
          username:
            type: string
            description: Username to be used in basic auth.
          password:
            type: string
            description: Password to be used in basic auth.
      events_filter_list:
        items:
          $ref: '#/definitions/webhook_event_type'
        type: array
        description: List of events subscribed to by the webhook.
    description: Webhook resources.
  webhook_status:
    title: Response Kind
    type: object
    properties:
      kind:
        default: webhook
        readOnly: true
        type: string
        description: The kind name
        x-ntnx-enum:
          - webhook
      code:
        readOnly: true
        type: integer
        description: The HTTP error code.
      message_list:
        items:
          $ref: '#/definitions/message_resource'
        readOnly: true
        type: array
      state:
        readOnly: true
        type: string
      api_version:
        readOnly: true
        type: string
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
  windows_domain:
    title: Hyper-v Domain
    required:
      - domain_credential
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the node to be renamed to during domain-join. If not given,a new name will be automatically assigned.
      name_server_ip:
        pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
        type: string
        description: |
          The ip of name server that can resolve the domain name. Required during joining domain.
      organization_unit_path:
        type: string
        description: Path to organization unit in the domain.
      name_prefix:
        type: string
        description: The name prefix in the domain in case of CPS deployment.
      domain_name:
        type: string
        description: Full name of domain.
      domain_credential:
        $ref: '#/definitions/credentials'
    description: Hyper-V node domain.
parameters:
  #TODO - add more parameters for all uuid based validations
  uuid:
    in: path
    description: The UUID of the entity.
    format: UUID
    pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
    required: true
    type: string
    name: uuid
    #TODO - Can you $ref the pattern back to a signal definition?
responses:
  #TODO - productize this
  #TODO - headers can't be $ref'd, so we should macro-ize these during the build process to prevent skew
  403: 
    #TODO - productize this
    description: test
    schema:
      $ref: '#/definitions/403_status'
    headers:
      keep-alive: 
        description: something about keep alives should be important!!!
        type: string
        minimum: 5
        maximum: 100
      x-ntnx-env:
        description: Type of nutanix environment you're executing against (need to flesh out the env variables (xi/ags/etc))
        type: string
        enum:
        - PE
        - PC
    examples:
      application/json:
        name: Puma
        type: Dog
        color: Black
        gender: Female
        breed: Mixed
  503: 
    #TODO - productize this
    description: test
    schema:
      $ref: '#/definitions/503_status'
    headers:
      keep-alive: 
        description: something about keep alives should be important!!!
        type: string
        minimum: 5
        maximum: 100
      Retry-After:
        description: if you get a 503, retry after X seconds, usually 10 seconds?
        type: integer
        default: 10
      x-ntnx-env:
        description: Type of nutanix environment you're executing against (need to flesh out the env variables (xi/ags/etc))
        type: string
        enum:
        - PE
        - PC
    examples:
      application/json:
        name: Puma
        type: Dog
        color: Black
        gender: Female
        breed: Mixed
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
tags:
  #TODO - productize this
  - name: access_control_policies
    description: LOCK IT DOWN GOOSE!
  - name: app_blueprint
    description: why do we have this API exposed thru PE? 
  - name: authentication
    description: AuthN up on the corner
  - name: batch
    description: Batching so hard, might as well be a main frame
  - name: clusters
    description: honey bunches of data
  - name: containers
    description: containers, containers, containers, developers, developers, developers
  - name: data
    description: GIMME THE DATA, GOOSE!
  - name: directory_service
    description: ldap says what?
  - name: disks
    description: yahoo, a disk admin!
  - name: docker_registry
    description: counting down to this getting ripped out in 3, 2, 1
  - name: file_store
    description: like images, but not!
  - name: groups
    description: groups are like groups, but not at all like groups
  - name: hosts
    description: host mcHoster
  - name: idempotence_identifiers
    description: only programmers understand what this one does lol
  - name: images
    description: Like instagram, but for ISOs
  - name: ipmi_cmd
    description: yep, we built an API for IPMI
  - name: network_function_chain
    description: but, does it wobble to and fro?
  - name: network_security_rules
    description: GIMME THE FLOW, GOOSE!
  - name: oauth
    description: oauth2 say wut???
  - name: permission
    description: Always ask for forgiveness instead of permissions
  - name: portal_services
    description: connect to the portal, goose!
  - name: prism_central
    description: something about prism central internal APIs
  - name: project
    description: what about projects
  - name: remote_connections
    description: Like RDP, but for DR
  - name: role
    description: Aint pay no tolls, aint get no roles
  - name: secrets
    description: API exclusively reserved for tattle tales
  - name: ssh_user
    description: do you even SSH, bro?
  - name: subnet
    description: tomatoes tomates, subnets and potatoes
  - name: tasks
    description: task master makes the job go quickly
  - name: user_groups
    description: and the users fight in groups
  - name: users
    description: I FIGHT FOR THE USERS!
  - name: versions
    description: a version API? Who'd a thunk it?
  - name: vm_recovery_point
    description: recovery points? wow, novel!
  - name: vm_snapshot
    description: something about snaps
  - name: vms
    description: why should I care about VMs?
  - name: volume_group
    description: talk to me about VG's, goose?
  - name: webhook
    description: something about webhooks, possibly spiderman related
  - name: Pagination
    description: Document pagination policies here!!! This can take markdown
    x-traitTag: true
  - name: Sorting
    description: Document SORTING policies here!!! This can take markdown
    x-traitTag: true
  - name: Filtering
    description: Document FILTERING policies here!!! This can take markdown
    x-traitTag: true
externalDocs:
  #TODO - productize this
  description: Nutanix Online Product Documentation
  url: 'https://portal.nutanix.com'
x-tagGroups:
  #TODO - productize this
  - name: Operations
    tags: 
      - Pagination
      - Sorting
      - Filtering
  - name: virtual machines
    tags:
      - vms
      - subnet
  - name: images
    tags:
      - images
      - file_store
  - name: backup
    tags:
      - remote_connections
      - vm_recovery_point
      - vm_snapshot
  - name: flow
    tags:
      - network_function_chain
      - network_security_rules
  - name: infrastructure
    tags:
      - clusters
      - hosts
      - ipmi_cmd
      - secrets
      - webhook
  - name: storage
    tags:
      - volume_group
  - name: nutanix
    tags:
      - access_control_policies
      - authentication
      - directory_service
      - groups
      - idempotence_identifiers
      - permission
      - ssh_user
      - users
      - user_groups
      - tasks
      - versions
  - name: hidden
    tags:
      - app_blueprint #previously in calm section, this shouldnt be exposed on PE AFAIK
      - project #previously in calm section, this shouldnt be exposed on PE AFAIK
      - role #previously in calm section, this shouldnt be exposed on PE AFAIK 
      - batch
      - containers
      - data
      - disks
      - docker_registry
      - oauth
      - portal_services
      - prism_central