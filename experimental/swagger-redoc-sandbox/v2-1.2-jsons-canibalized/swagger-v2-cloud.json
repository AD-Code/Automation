{
    "apiVersion": "v2.0",
    "swaggerVersion": "1.2",
    "basePath": "https://any_cvm_ip:9440/PrismGateway/services/rest/v2.0",
    "resourcePath": "/cloud",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "apis": [
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/credentials",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "DELETE",
                    "summary": "Remove all cloud credentials.",
                    "notes": "Remove all cloud credentials for accessing cloud sites.",
                    "type": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "removeAllCredentials",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get cloud credentials.",
                    "notes": "Get cloud credentials for accessing cloud sites.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;",
                    "nickname": "getCredentials",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of cloud credentials to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filter_criteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sort_criteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                },
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Add a cloud credential.",
                    "notes": "Add a cloud credential for accessing cloud sites.",
                    "type": "create.dto.dr.CloudCredentialsDTO",
                    "nickname": "addCredentials",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "description": "An instance of CloudCredentialsDTO",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.dr.CloudCredentialsDTO"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/credentials/{name}",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "DELETE",
                    "summary": "Remove a cloud credential.",
                    "notes": "Remove a cloud credential for accessing cloud sites.",
                    "type": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
                    "nickname": "removeCredentials",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "description": "Name of the credential",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/cvms",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get a list of CVMs.",
                    "notes": "Get a list of CVMs that installed.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;",
                    "nickname": "getCvms",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "region",
                            "description": "Region",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "credential_name",
                            "description": "Name of the credential",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of cloud cvms to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filter_criteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sort_criteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/default-credentials",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Set a default cloud credential to use.",
                    "notes": "Set a default cloud credential for accessing cloud sites.",
                    "type": "create.dto.dr.CloudCredentialsDTO",
                    "nickname": "setDefaultCredentials",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "description": "Name of the credential",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.PrimitiveDTO&lt;java.lang.String&gt;"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/deploy_remote_site",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "POST",
                    "summary": "Deploy a cloud CVM and create a remote site.",
                    "notes": "Deploy a cloud CVM and create a remote site.",
                    "type": "create.dto.dr.RemoteSiteDTO",
                    "nickname": "deployRemoteSite",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "description": "An instance of DeployCloudRemoteSiteRequestDTO",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "body",
                            "type": "create.dto.dr.DeployCloudRemoteSiteRequestDTO"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/images",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get a list of CVM images.",
                    "notes": "Get a list of CVM images that can be installed.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;",
                    "nickname": "getCvmImages",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "credential_name",
                            "description": "Name of the credential",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "region",
                            "description": "Region of the cvm image",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of cloud images to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filter_criteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sort_criteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "list_local_only",
                            "description": "Is list local, to be specified only for Azure cloud type",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        },
        {
            "internal": false,
            "path": "/cloud/{cloud_type}/subnets",
            "operations": [
                {
                    "deprecated": "false",
                    "internal": false,
                    "method": "GET",
                    "summary": "Get a list of subnets.",
                    "notes": "Get a list of subnets.",
                    "type": "get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;",
                    "nickname": "getSubnets",
                    "parameters": [
                        {
                            "name": "cloud_type",
                            "description": "Cloud type",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "path",
                            "type": "string"
                        },
                        {
                            "name": "region",
                            "description": "Region",
                            "required": true,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "credential_name",
                            "description": "Name of the credential",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "count",
                            "description": "Maximum number of subnets to retrieve",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "integer"
                        },
                        {
                            "name": "filter_criteria",
                            "description": "Filter criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        },
                        {
                            "name": "sort_criteria",
                            "description": "Sort criteria",
                            "required": false,
                            "allowMultiple": false,
                            "paramType": "query",
                            "type": "string"
                        }
                    ],
                    "responseMessages": []
                }
            ]
        }
    ],
    "models": {
        "create.dto.PrimitiveDTO&lt;java.lang.String&gt;": {
            "id": "create.dto.PrimitiveDTO&lt;java.lang.String&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "create.dto.alerts.AlertSummaryDTO": {
            "id": "create.dto.alerts.AlertSummaryDTO",
            "required": [],
            "properties": {
                "alert_summaries": {
                    "$ref": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;"
                },
                "count": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "create.dto.dr.AwsCredentialDTO": {
            "id": "create.dto.dr.AwsCredentialDTO",
            "required": [
                "access_key",
                "secret_key"
            ],
            "properties": {
                "access_key": {
                    "description": "The AWS access key.",
                    "notes": "The AWS access key.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "secret_key": {
                    "description": "The AWS secret key.",
                    "notes": "The AWS secret key.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.AzureCredentialDTO": {
            "id": "create.dto.dr.AzureCredentialDTO",
            "required": [],
            "properties": {
                "secure_file_i_d": {
                    "description": "The Azure secure file ID.",
                    "notes": "The Azure secure file ID.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "subscription_i_d": {
                    "description": "The Azure subscription ID.",
                    "notes": "The Azure subscription ID.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO": {
            "id": "create.dto.dr.BandwidthPolicyDTO",
            "description": "This DTO describes bandwidth throttling policies for different time schedules",
            "required": [
                "policy_name"
            ],
            "properties": {
                "bandwidth_configurations": {
                    "description": "List of the policy configurations.",
                    "items": {
                        "$ref": "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "default_bandwidth_limit": {
                    "description": "Default bandwidth limit",
                    "format": "int32",
                    "notes": "This bandwidth is used in the time which is not covered by any of the existing schedule. Because every schedule will be having their own bandwidth limit defined.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "policy_name": {
                    "description": "Name of the bandwidth Throttling policy.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration": {
            "id": "create.dto.dr.BandwidthPolicyDTO$BandwidthScheduleConfiguration",
            "required": [],
            "properties": {
                "bandwidth_limit": {
                    "description": "Bandwidth limit for the policy.",
                    "format": "int32",
                    "notes": "At the time of policy consideration this bandwidth limit will be used to limit the bandwidth used.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "days_selected": {
                    "description": "Days selected in a week.",
                    "format": "int32",
                    "notes": "This field describes the selected days of the week for this policy configuration.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "end_time": {
                    "description": "End time of the policy",
                    "format": "int64",
                    "notes": "End time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                },
                "start_time": {
                    "description": "Start time of the policy",
                    "format": "int64",
                    "notes": "Start time of the policy in milliseconds.",
                    "type": "integer",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.CloudCredentialsDTO": {
            "id": "create.dto.dr.CloudCredentialsDTO",
            "required": [],
            "properties": {
                "aws_credential": {
                    "$ref": "create.dto.dr.AwsCredentialDTO",
                    "description": "AWS Credentials.",
                    "notes": "AWS Credentials.",
                    "typeName": "DEFAULT"
                },
                "azure_credential": {
                    "$ref": "create.dto.dr.AzureCredentialDTO",
                    "description": "Azure Credentials.",
                    "notes": "Azure Credentials.",
                    "typeName": "DEFAULT"
                },
                "credential_i_d": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the Cloud credentials.",
                    "notes": "Name of the Cloud credentials.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "use_as_default": {
                    "type": "boolean"
                }
            }
        },
        "create.dto.dr.DeployCloudRemoteSiteRequestDTO": {
            "id": "create.dto.dr.DeployCloudRemoteSiteRequestDTO",
            "required": [
                "local_remote_site_name",
                "region",
                "local_storage_container_names",
                "connectivity_type"
            ],
            "properties": {
                "c_e_r_e_b_r_o__s_s_h__p_o_r_t__l_o_w_e_r__b_o_u_n_d": {
                    "format": "int32",
                    "type": "integer"
                },
                "c_e_r_e_b_r_o__s_s_h__p_o_r_t__u_p_p_e_r__b_o_u_n_d": {
                    "format": "int32",
                    "type": "integer"
                },
                "connectivity_type": {
                    "enum": [
                        "VPN",
                        "SSH_TUNNEL"
                    ],
                    "notes": "Platform type of the AWS remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "local_remote_site_name": {
                    "notes": "Name of the remote site to be created",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "local_storage_container_names": {
                    "items": {
                        "type": "string"
                    },
                    "notes": "Name of the local storage containers to be backed-up to the deployed CVM",
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "region": {
                    "notes": "AWS region to deploy the CVM",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "skip_instance_type_validation": {
                    "description": "Flag to skip instance type validation",
                    "type": "boolean",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.L2NetworkMappingDTO": {
            "id": "create.dto.dr.L2NetworkMappingDTO",
            "required": [],
            "properties": {
                "dest_hypervisor_type": {
                    "type": "string"
                },
                "dest_network_name": {
                    "type": "string"
                },
                "src_hypervisor_type": {
                    "type": "string"
                },
                "src_network_name": {
                    "type": "string"
                }
            }
        },
        "create.dto.dr.NetworkMappingDTO": {
            "id": "create.dto.dr.NetworkMappingDTO",
            "description": "This DTO describes network mapping from source to destination cluster based on network uuids ",
            "required": [],
            "properties": {
                "l2_network_mappings": {
                    "description": "List of L2NetworkMappingDTOs which contains name and hypervisor type of the mapped networks",
                    "items": {
                        "$ref": "create.dto.dr.L2NetworkMappingDTO"
                    },
                    "type": "array",
                    "typeName": "DEFAULT"
                },
                "uuid": {
                    "description": "Network mapping identifier for this remote site",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.RemoteSiteDTO": {
            "id": "create.dto.dr.RemoteSiteDTO",
            "description": "remote-site",
            "required": [],
            "properties": {
                "alert_summary": {
                    "$ref": "create.dto.alerts.AlertSummaryDTO"
                },
                "bandwidth_policy": {
                    "$ref": "create.dto.dr.BandwidthPolicyDTO"
                },
                "bandwidth_policy_enabled": {
                    "type": "boolean"
                },
                "capabilities": {
                    "items": {
                        "enum": [
                            "BACKUP",
                            "DISASTER_RECOVERY",
                            "METRO_AVAILABILITY",
                            "SUPPORT_DEDUPED_EXTENTS",
                            "SUPPORT_VSPHERE",
                            "SUPPORT_HYPERV",
                            "SUPPORT_KVM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_type": {
                    "description": "Cloud type",
                    "enum": [
                        "AWS",
                        "AZURE"
                    ],
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cluster_external_data_services_i_p_address": {
                    "type": "string"
                },
                "cluster_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "cluster_incarnation_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "compression_enabled": {
                    "type": "boolean"
                },
                "credential_name": {
                    "description": "Credential Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "cvm_name": {
                    "description": "CVM Name",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "health_summary": {
                    "$ref": "create.dto.health.check.HealthSummaryDTO"
                },
                "latency_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "marked_for_removal": {
                    "type": "boolean"
                },
                "max_bps": {
                    "format": "int32",
                    "type": "integer"
                },
                "metro_ready": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "network_mapping": {
                    "$ref": "create.dto.dr.NetworkMappingDTO"
                },
                "proxy_enabled": {
                    "type": "boolean"
                },
                "region": {
                    "description": "Region",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "remote_ip_ports": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
                    "description": "Dictionary having IP address as key and Port as value",
                    "typeName": "DEFAULT"
                },
                "remote_v_store_info": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;"
                },
                "replication_links": {
                    "items": {
                        "$ref": "create.dto.dr.ReplicationLinkDTO"
                    },
                    "type": "array"
                },
                "ssh_enabled": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "status": {
                    "enum": [
                        "HANDSHAKING",
                        "UNREACHABLE",
                        "STRETCH_UNHEALTHY",
                        "RELATIONSHIP_NOT_ESTABLISHED",
                        "RELATIONSHIP_ESTABLISHED",
                        "DEPLOYING"
                    ],
                    "type": "string"
                },
                "usage_stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                },
                "uuid": {
                    "description": "Uuid of the remote site.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "vstore_name_map": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
                    "description": "Dictionary having map of local vStore to remote vStore",
                    "typeName": "DEFAULT"
                }
            }
        },
        "create.dto.dr.ReplicationLinkDTO": {
            "id": "create.dto.dr.ReplicationLinkDTO",
            "required": [],
            "properties": {
                "current_replicating_snapshot_id": {
                    "type": "string"
                },
                "current_replicating_snapshot_total_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "current_replicating_snapshot_transmitted_bytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_replication_end_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_replication_start_time_in_usecs": {
                    "format": "int64",
                    "type": "integer"
                },
                "last_successful_replication_snapshot_id": {
                    "type": "string"
                },
                "protection_domain_name": {
                    "type": "string"
                },
                "remote_site_name": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.lang.String&gt;"
                }
            }
        },
        "create.dto.health.check.EntityTypeHealthCheckSummaryDTO": {
            "id": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO",
            "required": [],
            "properties": {
                "checks_in_error": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;"
                },
                "detailed_check_summary": {
                    "$ref": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;"
                },
                "entity_type": {
                    "enum": [
                        "CLUSTER",
                        "HARDWARE",
                        "STORAGE",
                        "BACKUP",
                        "DR",
                        "LICENSE",
                        "DISK",
                        "STORAGE_TIER",
                        "HOST",
                        "NODE",
                        "MANAGEMENT_SERVER",
                        "MANAGEMENT_SERVER_INFO",
                        "VM",
                        "SERVICE_VM",
                        "VDISK",
                        "VIRTUAL_DISK",
                        "STORAGE_POOL",
                        "CONTAINER",
                        "STORAGE_CONTAINER",
                        "VZONE",
                        "SNAPSHOT",
                        "FAST_CLONE",
                        "RSYSLOG_SERVER",
                        "KEY_MANAGEMENT_SERVER",
                        "CERTIFICATE",
                        "HTTP_PROXY",
                        "SNMP_TRAP",
                        "SNMP_USER",
                        "REMOTE_SITE",
                        "CLOUD_CREDENTIALS",
                        "PROTECTION_DOMAIN",
                        "CONSISTENCY_GROUP",
                        "REPLICATION",
                        "REPLICATION_LINK",
                        "SYNC_REPLICATION",
                        "VSTORE",
                        "NETWORK_SWITCH_INTERFACE",
                        "NETWORK_SWITCH",
                        "VIRTUAL_NIC",
                        "VMKERNEL_NIC",
                        "HOST_NIC",
                        "NIC_TEAM",
                        "VIRTUAL_NETWORK",
                        "VIRTUAL_SWITCH",
                        "HOST_GPU",
                        "VIRTUAL_GPU",
                        "TAG",
                        "COMMENT",
                        "TASK",
                        "IMAGE",
                        "IMAGE_INFO",
                        "ISCSI_CLIENT",
                        "VOLUME_GROUP",
                        "VOLUME_DISK",
                        "VM_DISK",
                        "FILE_SERVER",
                        "FS_PARTNER_SERVER",
                        "CVM",
                        "NVM",
                        "FILE_SERVER_SHARE",
                        "ALERT_CAUSE",
                        "ALERT_CHECK_SCHEMA",
                        "ALERT_CHECK_SCHEMA_OVERRIDE",
                        "INTER_CLUSTER_DATA_TRANSFER_INDICATOR",
                        "RACKABLE_UNIT",
                        "DIRECTORY_CONFIG",
                        "HEALTH_CHECK",
                        "NETWORK_SNMP_PROFILE",
                        "ALERT",
                        "SCHEDULE",
                        "BANDWIDTH_POLICY",
                        "FILE_GROUP",
                        "NETWORK_MAPPING",
                        "PROGRESS_MONITOR",
                        "LCM_ENTITY",
                        "LCM_AVAILABLE_VERSION",
                        "CAPACITY_SCENARIO",
                        "NCC_ERROR_CODES",
                        "RESOURCE_CONSUMPTION",
                        "REPORT_CONFIG",
                        "REPORT_INSTANCE",
                        "COMMON_REPORT_CONFIG",
                        "REMOTE_CONNECTION"
                    ],
                    "type": "string"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "health_summary": {
                    "$ref": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;"
                }
            }
        },
        "create.dto.health.check.HealthSummaryDTO": {
            "id": "create.dto.health.check.HealthSummaryDTO",
            "required": [],
            "properties": {
                "entity_type_summaries": {
                    "items": {
                        "$ref": "create.dto.health.check.EntityTypeHealthCheckSummaryDTO"
                    },
                    "type": "array"
                },
                "health_check_summaries": {
                    "$ref": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;"
                },
                "health_status": {
                    "enum": [
                        "Critical",
                        "Warning",
                        "Good",
                        "Unknown",
                        "Error"
                    ],
                    "type": "string"
                }
            }
        },
        "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;": {
            "id": "delete.dto.PrimitiveDTO&lt;java.lang.Boolean&gt;",
            "required": [],
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.dr.CloudCredentialsDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.dr.CloudCredentialsDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.dr.CloudCvmDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.dr.CloudCvmDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.dr.CloudCvmImageDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.dr.CloudCvmImageDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;": {
            "id": "get.base.EntityCollection&lt;get.dto.dr.SubnetDTO&gt;",
            "required": [],
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "get.dto.dr.SubnetDTO"
                    },
                    "type": "array"
                },
                "error_info": {
                    "$ref": "get.base.ErrorInfo"
                },
                "metadata": {
                    "$ref": "get.base.Metadata"
                }
            }
        },
        "get.base.ErrorInfo": {
            "id": "get.base.ErrorInfo",
            "required": [],
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "entity_list": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "get.base.Metadata": {
            "id": "get.base.Metadata",
            "required": [],
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "end_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "filter_criteria": {
                    "type": "string"
                },
                "grand_total_entities": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                },
                "page": {
                    "format": "int32",
                    "type": "integer"
                },
                "previous_cursor": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "sort_criteria": {
                    "type": "string"
                },
                "start_index": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_entities": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "get.dto.dr.AwsCredentialDTO": {
            "id": "get.dto.dr.AwsCredentialDTO",
            "required": [],
            "properties": {
                "access_key": {
                    "description": "The AWS access key.",
                    "notes": "The AWS access key.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "secret_key": {
                    "description": "The AWS secret key.",
                    "notes": "The AWS secret key.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.AzureCredentialDTO": {
            "id": "get.dto.dr.AzureCredentialDTO",
            "required": [],
            "properties": {
                "secure_file_i_d": {
                    "description": "The Azure secure file ID.",
                    "notes": "The Azure secure file ID.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "subscription_i_d": {
                    "description": "The Azure subscription ID.",
                    "notes": "The Azure subscription ID.",
                    "type": "string",
                    "typeName": "DEFAULT"
                }
            }
        },
        "get.dto.dr.CloudCredentialsDTO": {
            "id": "get.dto.dr.CloudCredentialsDTO",
            "required": [],
            "properties": {
                "aws_credential": {
                    "$ref": "get.dto.dr.AwsCredentialDTO",
                    "description": "AWS Credentials.",
                    "notes": "AWS Credentials.",
                    "typeName": "DEFAULT"
                },
                "azure_credential": {
                    "$ref": "get.dto.dr.AzureCredentialDTO",
                    "description": "Azure Credentials.",
                    "notes": "Azure Credentials.",
                    "typeName": "DEFAULT"
                },
                "credential_i_d": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the Cloud credentials.",
                    "notes": "Name of the Cloud credentials.",
                    "type": "string",
                    "typeName": "DEFAULT"
                },
                "use_as_default": {
                    "type": "boolean"
                }
            }
        },
        "get.dto.dr.CloudCvmDTO": {
            "id": "get.dto.dr.CloudCvmDTO",
            "required": [],
            "properties": {
                "name": {
                    "type": "string"
                },
                "private_ip": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "STARTING",
                        "STARTED",
                        "RUNNING",
                        "STOPPING",
                        "STOPPED",
                        "TERMINATED"
                    ],
                    "type": "string"
                },
                "subnet_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.CloudCvmImageDTO": {
            "id": "get.dto.dr.CloudCvmImageDTO",
            "required": [],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "get.dto.dr.SubnetDTO": {
            "id": "get.dto.dr.SubnetDTO",
            "required": [],
            "properties": {
                "availability_zone": {
                    "type": "string"
                },
                "available_ip_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "default_avail_zone": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "subnet_cidr": {
                    "type": "string"
                },
                "subnet_id": {
                    "type": "string"
                },
                "vpc_id": {
                    "type": "string"
                },
                "vpn_state": {
                    "enum": [
                        "AVAILABLE",
                        "IMPAIRED",
                        "UNAVAILABLE",
                        "UNKNOWN"
                    ],
                    "type": "string"
                }
            }
        },
        "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;": {
            "id": "java.util.Map&lt;create.dto.alerts.AlertDTO$AlertSeverity, create.base.EntityCollection&lt;create.dto.alerts.AlertDTO&gt;&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.dr.RemoteSiteDTO$VStoreInfo&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckErrorsDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;": {
            "id": "java.util.Map&lt;java.lang.String, create.dto.health.check.HealthCheckSummaryDTO&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.Integer&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.lang.String&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.lang.String&gt;",
            "required": [],
            "properties": {}
        },
        "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;": {
            "id": "java.util.Map&lt;java.lang.String, java.util.Map&lt;create.dto.health.check.HealthStatus, java.lang.Integer&gt;&gt;",
            "required": [],
            "properties": {}
        }
    }
}